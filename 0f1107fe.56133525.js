(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{138:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return O}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=r.a.createContext({}),c=function(e){var t=r.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,i=b(e,["components","mdxType","originalType","parentName"]),p=c(a),m=n,O=p["".concat(s,".").concat(m)]||p[m]||u[m]||l;return a?r.a.createElement(O,o(o({ref:t},i),{},{components:a})):r.a.createElement(O,o({ref:t},i))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,s=new Array(l);s[0]=m;var o={};for(var b in t)hasOwnProperty.call(t,b)&&(o[b]=t[b]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var i=2;i<l;i++)s[i]=a[i];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},69:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return c}));var n=a(2),r=a(6),l=(a(0),a(138)),s={id:"ubuntu-step-by-step",title:"Step by Step Installation"},o={unversionedId:"installation/ubuntu-step-by-step",id:"installation/ubuntu-step-by-step",isDocsHomePage:!1,title:"Step by Step Installation",description:"First steps: Setting up a server with Ubuntu 18.04",source:"@site/docs/installation/ubuntu-step-by-step.mdx",slug:"/installation/ubuntu-step-by-step",permalink:"/installation/ubuntu-step-by-step",editUrl:"https://github.com/erxes/erxes/edit/develop/docs/docs/installation/ubuntu-step-by-step.mdx",version:"current",lastUpdatedBy:"davidkartuzinski",lastUpdatedAt:1602708299,sidebar:"docs",previous:{title:"Quick Start Installation",permalink:"/installation/ubuntu-quickstart"},next:{title:"Troubleshooting Ubuntu Installation",permalink:"/installation/ubuntu-troubleshooting"}},b=[{value:"First steps: Setting up a server with Ubuntu 18.04",id:"first-steps-setting-up-a-server-with-ubuntu-1804",children:[{value:"Configure your DNS Records to point at your server",id:"configure-your-dns-records-to-point-at-your-server",children:[]}]},{value:"Log into server as root and create erxes user",id:"log-into-server-as-root-and-create-erxes-user",children:[]},{value:"Set-up a basic firewall for SSH, nginx 80 and port 443",id:"set-up-a-basic-firewall-for-ssh-nginx-80-and-port-443",children:[{value:"Basic Firewall - Port 22",id:"basic-firewall---port-22",children:[]},{value:"HTTP &amp; HTTPS - Port 80 &amp; Port 443",id:"http--https---port-80--port-443",children:[]}]},{value:"Allow the &quot;erxes&quot; user to <strong>SSH</strong> into server",id:"allow-the-erxes-user-to-ssh-into-server",children:[]},{value:"Log in to your server as the &quot;erxes&quot; user.",id:"log-in-to-your-server-as-the-erxes-user",children:[]},{value:"Nvm install",id:"nvm-install",children:[]},{value:"Install Node.js with nvm",id:"install-nodejs-with-nvm",children:[]},{value:"Yarn install",id:"yarn-install",children:[]},{value:"Install MongoDB",id:"install-mongodb",children:[{value:"Deploy a MongoDB Replica Set",id:"deploy-a-mongodb-replica-set",children:[]}]},{value:"Install Redis",id:"install-redis",children:[]},{value:"Install RabbitMQ and dependencies",id:"install-rabbitmq-and-dependencies",children:[{value:"Install Erlang 22.x",id:"install-erlang-22x",children:[]},{value:"Update all packages",id:"update-all-packages",children:[]},{value:"Install RabbitMQ",id:"install-rabbitmq",children:[]}]},{value:"Install Elasticsearch",id:"install-elasticsearch",children:[]},{value:"Install and configure NGINX",id:"install-and-configure-nginx",children:[]},{value:"Configure NGINX",id:"configure-nginx",children:[{value:"Configure NGINX",id:"configure-nginx-1",children:[]}]},{value:"Install Let&#39;s Encrypt using Certbot",id:"install-lets-encrypt-using-certbot",children:[]},{value:"Install erxes",id:"install-erxes",children:[{value:"Download, extract and install each of the erxes components",id:"download-extract-and-install-each-of-the-erxes-components",children:[]}]},{value:"Install PM2",id:"install-pm2",children:[{value:"Configure PM2 <code>ecosystem.config.js</code>",id:"configure-pm2-ecosystemconfigjs",children:[]},{value:"Configure frontend environment variables",id:"configure-frontend-environment-variables",children:[]}]},{value:"export MongoDB URL",id:"export-mongodb-url",children:[]},{value:"Congratulations, time to log in",id:"congratulations-time-to-log-in",children:[]}],i={rightToc:b};function c(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"first-steps-setting-up-a-server-with-ubuntu-1804"},"First steps: Setting up a server with Ubuntu 18.04"),Object(l.b)("p",null,"You must have an account with your hosting provider prior to doing these steps."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Choose a server size that corresponds with the ",Object(l.b)("strong",{parentName:"li"},"minimum")," requirements for these ",Object(l.b)("strong",{parentName:"li"},"Step by Step")," instructions:",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Ubuntu 18.04")," installed and running"),Object(l.b)("li",{parentName:"ul"},"2 CPUs"),Object(l.b)("li",{parentName:"ul"},"4GB RAM"),Object(l.b)("li",{parentName:"ul"},"ability to to SSH into the server"),Object(l.b)("li",{parentName:"ul"},"If you're using a ",Object(l.b)("strong",{parentName:"li"},"subdomain"),", then the ",Object(l.b)("strong",{parentName:"li"},"subdomain")," must be created with your hosting provider hosting your main domain's website or app. The DNS needs to be pointed to your server. (See below)")))),Object(l.b)("h3",{id:"configure-your-dns-records-to-point-at-your-server"},"Configure your DNS Records to point at your server"),Object(l.b)("p",null,"Your server will have an ",Object(l.b)("strong",{parentName:"p"},"ip address"),". You will need to point your domain name to your new server."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"If you are using a ",Object(l.b)("strong",{parentName:"li"},"subdomain"),", you will need to follow the instructions of updating the `A Records' of the hosting company for your website."),Object(l.b)("li",{parentName:"ul"},"If you are NOT using a ",Object(l.b)("strong",{parentName:"li"},"subdomain"),", then you will need to follow the instructions of your domain name registrar.")),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(l.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Example with a domain called, example.com")),Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"If your domain name is ",Object(l.b)("strong",{parentName:"p"},"example.com"),", and the ",Object(l.b)("strong",{parentName:"p"},"ip address")," assigned to your server is ",Object(l.b)("strong",{parentName:"p"},"44.123.32.12"),", then you will have two ",Object(l.b)("inlineCode",{parentName:"p"},"A records")," that look like this:"),Object(l.b)("table",{parentName:"div"},Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Value"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"http://www.example.com"}),"www.example.com")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"points to 44.123.32.12")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"example.com"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"points to 44.123.32.12")))))),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(l.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Example with a subdomain called, erxes.example.com")),Object(l.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},'You first need to create a subdomain. For example, "erxes.example.com". Then you need to edit the ',Object(l.b)("strong",{parentName:"p"},"DNS"),"."),Object(l.b)("p",{parentName:"div"},"If your domain name is ",Object(l.b)("strong",{parentName:"p"},"erxes.example.com"),", and the ",Object(l.b)("strong",{parentName:"p"},"ip address")," assigned to your server is ",Object(l.b)("strong",{parentName:"p"},"44.123.32.12"),", then you will have a two ",Object(l.b)("inlineCode",{parentName:"p"},"A records")," that look like this:"),Object(l.b)("table",{parentName:"div"},Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Value"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"erxes.example.com"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"points to 44.123.32.12")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"http://www.erxes.example.com"}),"www.erxes.example.com")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"points to 44.123.32.12")))),Object(l.b)("p",{parentName:"div"},Object(l.b)("strong",{parentName:"p"},"Note:"),' You do not need to create a subdomain called "erxes.example.com", you can use another name of your choice such as "admin.example.com".'))),Object(l.b)("h2",{id:"log-into-server-as-root-and-create-erxes-user"},"Log into server as root and create erxes user"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Open the terminal or command prompt on your computer. You will need your ",Object(l.b)("strong",{parentName:"li"},"IP address"),". (In this example, ",Object(l.b)("strong",{parentName:"li"},"44.123.32.12"),"). Type ",Object(l.b)("inlineCode",{parentName:"li"},"yes"),", when asked if you want to continue connecting.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# example ssh root@44.123.32.12\nssh root@your-ip-address\n")),Object(l.b)("p",null,"(",Object(l.b)("strong",{parentName:"p"},"Note"),": Some people get an error, ",Object(l.b)("strong",{parentName:"p"},"WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!"),", please see the solution ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/installation/ubuntu-troubleshooting"}),"here"),".)"),Object(l.b)("p",null,"You don't want to use the ",Object(l.b)("strong",{parentName:"p"},"root")," user to administer your server. So everything will be done by a user called, ",Object(l.b)("strong",{parentName:"p"},"erxes"),". To accomplish this, run the following commands:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},'Add a user called "erxes". When prompted, enter in a ',Object(l.b)("strong",{parentName:"li"},"unique")," password. You will need to keep this password available, as later operations will require using it. (Finish adding the user simply by pressing the ",Object(l.b)("inlineCode",{parentName:"li"},"enter")," or ",Object(l.b)("inlineCode",{parentName:"li"},"return")," key through the questions.)")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"adduser erxes\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Grant the ",Object(l.b)("strong",{parentName:"li"},"erxes")," user adminstrative rights.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"usermod -aG sudo erxes\n")),Object(l.b)("p",null,"Your next step as ",Object(l.b)("strong",{parentName:"p"},"root")," user, is to set-up a basic firewall for your server."),Object(l.b)("h2",{id:"set-up-a-basic-firewall-for-ssh-nginx-80-and-port-443"},"Set-up a basic firewall for SSH, nginx 80 and port 443"),Object(l.b)("h3",{id:"basic-firewall---port-22"},"Basic Firewall - Port 22"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Allow OpenSSH with ",Object(l.b)("strong",{parentName:"li"},"ufw"),". OpenSSH will use ",Object(l.b)("strong",{parentName:"li"},"port 22"),".")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"ufw allow OpenSSH\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Enable ",Object(l.b)("strong",{parentName:"li"},"ufw"),' and allow the "disrupt existing ssh connections". Type ',Object(l.b)("inlineCode",{parentName:"li"},"y"),' when asked, "',Object(l.b)("strong",{parentName:"li"},"Command may disrupt existing ssh connections. Proceed with operation (y|n)?"),'"')),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"ufw enable\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Check the ",Object(l.b)("strong",{parentName:"li"},"ufw")," status")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"ufw status\n")),Object(l.b)("p",null,"You should have an output like below:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"Status: active\n\nTo                         Action      From\n--                         ------      ----\nOpenSSH                    ALLOW       Anywhere\nOpenSSH (v6)               ALLOW       Anywhere (v6)\n")),Object(l.b)("h3",{id:"http--https---port-80--port-443"},"HTTP & HTTPS - Port 80 & Port 443"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Allow ",Object(l.b)("strong",{parentName:"li"},"HTTP")," (port 80) and ",Object(l.b)("strong",{parentName:"li"},"HTTPS")," (port 443) with ",Object(l.b)("strong",{parentName:"li"},"ufw"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"ufw allow proto tcp from any to any port 80,443\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Check the ufw status")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"ufw status\n")),Object(l.b)("p",null,"You should have an output like below:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"Status: active\n\nTo                         Action      From\n--                         ------      ----\nOpenSSH                    ALLOW       Anywhere\n80,443/tcp                 ALLOW       Anywhere\nOpenSSH (v6)               ALLOW       Anywhere (v6)\n80,443/tcp (v6)            ALLOW       Anywhere (v6)\n")),Object(l.b)("h2",{id:"allow-the-erxes-user-to-ssh-into-server"},'Allow the "erxes" user to ',Object(l.b)("strong",{parentName:"h2"},"SSH")," into server"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"open the ",Object(l.b)("inlineCode",{parentName:"li"},"sshd_config")," file to edit")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"nano /etc/ssh/ssh_config\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Scroll down until you see ",Object(l.b)("inlineCode",{parentName:"li"},"PasswordAuthentication"),". Change it from ",Object(l.b)("inlineCode",{parentName:"li"},"PasswordAuthentication no")," to ",Object(l.b)("inlineCode",{parentName:"li"},"PasswordAuthentication yes"),". ",Object(l.b)("strong",{parentName:"li"},"NOTE"),": Some servers have this line commented out with a ",Object(l.b)("inlineCode",{parentName:"li"},"#"),", like ",Object(l.b)("inlineCode",{parentName:"li"},"# PasswordAuthentication no"),". You will need to uncomment it by deleting the ",Object(l.b)("inlineCode",{parentName:"li"},"#"),".")),Object(l.b)("p",null,"The line should look like this:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"PasswordAuthentication yes\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Save and exit with ",Object(l.b)("inlineCode",{parentName:"p"},"ctrl + x")," and then ",Object(l.b)("inlineCode",{parentName:"p"},"y")," to accept the changes.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Reload the SSH config file"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo service sshd reload\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Exit from server, so that you can log back in as the ",Object(l.b)("strong",{parentName:"li"},"erxes")," user")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"exit\n")),Object(l.b)("p",null,'You have created a new user called, "erxes" and you set-up a basic firewall to protect your server against malicious attacks.'),Object(l.b)("p",null,"Please continue with the following steps to log in to your server as the ",Object(l.b)("strong",{parentName:"p"},"erxes")," user."),Object(l.b)("h2",{id:"log-in-to-your-server-as-the-erxes-user"},'Log in to your server as the "erxes" user.'),Object(l.b)("p",null,"Before you can log into your new server, we need to ",Object(l.b)("strong",{parentName:"p"},"add the SSH key")," to your ",Object(l.b)("strong",{parentName:"p"},"local")," computer."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"NOTE:")," You need to use the ",Object(l.b)("strong",{parentName:"p"},"IP address")," of your server."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Run the following command and ",Object(l.b)("strong",{parentName:"li"},"create a new password"),".")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"#ssh-copy-id erxes@44.123.32.12 <--- This is an example. Use your ip address\nssh-copy-id erxes@your-IP-address\n")),Object(l.b)("p",null,"Now you can log into your server as the ",Object(l.b)("strong",{parentName:"p"},"erxes")," user."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Log back into the server as the ",Object(l.b)("strong",{parentName:"li"},"erxes")," user. You will need your IP address. (In this example, ",Object(l.b)("strong",{parentName:"li"},"44.123.32.12"),"). Enter your previously created password, if prompted.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# example ssh erxes@44.123.32.12 <--- This is an example. Use your ip address\nssh erxes@your-ip-address\n")),Object(l.b)("p",null,"In the following sections, you will install software dependencies that are needed to run ",Object(l.b)("strong",{parentName:"p"},"erxes"),"."),Object(l.b)("h2",{id:"nvm-install"},"Nvm install"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Node Version Manage (nvm)")," is a tool that allows you to download and install ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://nodejs.org/"}),"Node.js"),". You can read more about the installation process here: ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://gist.github.com/d2s/372b5943bce17b964a79"}),"How to install NVM")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install ",Object(l.b)("strong",{parentName:"li"},"nvm")," and initialize by reloading the shell configuration.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash\nsource ~/.bashrc\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Verify ",Object(l.b)("strong",{parentName:"li"},"nvm")," is installed by running:")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"nvm --version\n")),Object(l.b)("p",null,"You should get a similar output as below:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"0.35.3\n# your version of nvm may be different\n")),Object(l.b)("p",null,"You are ready to continue with installing ",Object(l.b)("strong",{parentName:"p"},"Node.js"),"."),Object(l.b)("h2",{id:"install-nodejs-with-nvm"},"Install Node.js with nvm"),Object(l.b)("p",null,"You can read more about installing ",Object(l.b)("strong",{parentName:"p"},"Node.js")," with ",Object(l.b)("strong",{parentName:"p"},"nvm")," here: ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://gist.github.com/d2s/372b5943bce17b964a79#install-nodejs-with-nvm"}),"How to install Node.js with NVM")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install ",Object(l.b)("strong",{parentName:"li"},"Node.js"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"nvm install --lts\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Check to see if ",Object(l.b)("strong",{parentName:"li"},"Node.js")," is installed correctly.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"node -v\n")),Object(l.b)("p",null,"You should get a similar output as below:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"v12.18.3\n# your version of node.js may be different\n")),Object(l.b)("p",null,"With ",Object(l.b)("strong",{parentName:"p"},"Node.js")," installed, you can continue with installing ",Object(l.b)("strong",{parentName:"p"},"Yarn"),"."),Object(l.b)("h2",{id:"yarn-install"},"Yarn install"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Yarn")," is a package manager. The alternative is ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.npmjs.com/"}),"npm"),". We recommend ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://yarnpkg.com/"}),"yarn"),". For additional ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://classic.yarnpkg.com/en/docs/install/#debian-stable"}),"yarn installation instructions, read this"),"."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install ",Object(l.b)("strong",{parentName:"li"},"yarn"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\nsudo apt update && sudo apt install --no-install-recommends yarn\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Check to see if ",Object(l.b)("strong",{parentName:"li"},"yarn")," is installed correctly")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"yarn --version\n")),Object(l.b)("p",null,"You should get a similar output as below:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"1.22.4\n# your version of yarn may be different\n")),Object(l.b)("p",null,"As long as you received a version response to ",Object(l.b)("inlineCode",{parentName:"p"},"yarn --version"),", then you can continue and install ",Object(l.b)("strong",{parentName:"p"},"MongoDB"),"."),Object(l.b)("h2",{id:"install-mongodb"},"Install MongoDB"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"MongoDB")," is a robust and general purpose document-based database. For additional ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/"}),"MongoDB installation instructions, read this"),"."),Object(l.b)("p",null,"Erxes supports MongoDB version 3.6+ is supported. Previous versions are not supported."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install ",Object(l.b)("strong",{parentName:"li"},"MongoDB"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -\necho "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list\nsudo apt-get update\nsudo apt-get install -y mongodb-org\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Start and enable ",Object(l.b)("strong",{parentName:"li"},"MongoDB"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo systemctl start mongod\nsudo systemctl enable mongod\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Check to see if ",Object(l.b)("strong",{parentName:"li"},"MongoDB")," is installed correctly")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"mongod --version\n")),Object(l.b)("p",null,"As long as you received a version response to ",Object(l.b)("inlineCode",{parentName:"p"},"mongod --version"),", then you can continue below."),Object(l.b)("h3",{id:"deploy-a-mongodb-replica-set"},"Deploy a MongoDB Replica Set"),Object(l.b)("p",null,"MongoDB ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.mongodb.com/manual/reference/glossary/#term-replica-set"}),"replica sets")," add an extra layer of redundancy and help with load balancing. They are a group of ",Object(l.b)("strong",{parentName:"p"},"mongod processes")," that maintain matching data sets. You can read about ",Object(l.b)("strong",{parentName:"p"},"replication")," ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.mongodb.com/manual/replication/"}),"here"),"."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Stop the ",Object(l.b)("strong",{parentName:"li"},"mongod")," processes")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo systemctl stop mongod\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Open ",Object(l.b)("strong",{parentName:"li"},"mongod.conf"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo nano /etc/mongod.conf\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Enable the ",Object(l.b)("strong",{parentName:"li"},"replicaset")," settings, by searching for ",Object(l.b)("inlineCode",{parentName:"li"},"#replication"),". Remove the ",Object(l.b)("inlineCode",{parentName:"li"},"#")," to activate it and edit to include the set name, as follows:")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'replication:\n  replSetName: "rs0"\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Save and Exit with ",Object(l.b)("inlineCode",{parentName:"p"},"ctrl + x")," and then ",Object(l.b)("inlineCode",{parentName:"p"},"y")," to accept the changes.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Restart mongob"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo systemctl start mongod\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Connect to mongo shell")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"mongo\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Initialize replicaSet")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"rs.initiate()\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"You should have an output similar to below. Verify ",Object(l.b)("strong",{parentName:"li"},"SECONDARY")," changes to ",Object(l.b)("strong",{parentName:"li"},"Primary")," by pressing enter several times.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'{\n    "info2" : "no configuration specified. Using a default configuration for the set",\n    "me" : "127.0.0.1:27017",\n    "ok" : 1,\n    "$clusterTime" : {\n        "clusterTime" : Timestamp(1594140533, 1),\n        "signature" : {\n            "hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),\n            "keyId" : NumberLong(0)\n        }\n    },\n    "operationTime" : Timestamp(1594140533, 1)\n}\n\nrs0:SECONDARY>\nrs0:PRIMARY> # <----- This is what you are looking for\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"press ",Object(l.b)("inlineCode",{parentName:"li"},"ctrl-c")," to quit mongo")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"rs0:PRIMARY>\nbye\n")),Object(l.b)("p",null,"If you were able to return to the command line prompt. Then you may continue with the installation of ",Object(l.b)("strong",{parentName:"p"},"Redis"),"."),Object(l.b)("h2",{id:"install-redis"},"Install Redis"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Redis")," is an in memory quick-response database. For additional ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-redis-on-ubuntu-18-04"}),"Redis installation instructions, read this"),"."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install ",Object(l.b)("strong",{parentName:"li"},"redis"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo apt-get install -y redis-server\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Check to see if ",Object(l.b)("strong",{parentName:"li"},"redis")," is installed correctly.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo systemctl status redis\n")),Object(l.b)("p",null,"You should get an output similar to this"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"\u25cf redis-server.service - Advanced key-value store\n   Loaded: loaded (/lib/systemd/system/redis-server.service; enabled; vendor preset: enabled)\n   Active: active (running) since Wed 2020-07-08 20:39:33 UTC; 10s ago\n     Docs: http://redis.io/documentation,\n           man:redis-server(1)\n Main PID: 15778 (redis-server)\n    Tasks: 4 (limit: 4915)\n   CGroup: /system.slice/redis-server.service\n           \u2514\u250015778 /usr/bin/redis-server 127.0.0.1:6379\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Type ",Object(l.b)("inlineCode",{parentName:"li"},"ctrl + c")," to quit")),Object(l.b)("p",null,"Providing you got ",Object(l.b)("strong",{parentName:"p"},"Active: active (running)")," output for ",Object(l.b)("strong",{parentName:"p"},"Redis")," you may now continue with the next steps."),Object(l.b)("h2",{id:"install-rabbitmq-and-dependencies"},"Install RabbitMQ and dependencies"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"RabbitMQ")," is a message broker. It is used to relay messages to and from two other applications. For additional ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.rabbitmq.com/install-debian.html#apt-packagecloud"}),"RabbitMQ installation instructions, read this"),"."),Object(l.b)("h3",{id:"install-erlang-22x"},"Install Erlang 22.x"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Erlang")," is the programming language that ",Object(l.b)("strong",{parentName:"p"},"RabbitMQ")," is written in. It must be installed when you install ",Object(l.b)("strong",{parentName:"p"},"RabbitMQ"),". For additional information about ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.rabbitmq.com/install-debian.html#apt-bintray-erlang"}),"installing Erlang, read this"),"."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install ",Object(l.b)("strong",{parentName:"li"},"Erlang"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"curl -fsSL https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc | sudo apt-key add -\nsudo apt-get install apt-transport-https\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Create the ",Object(l.b)("inlineCode",{parentName:"li"},"bintray.erlang.list")," file and write to the ",Object(l.b)("inlineCode",{parentName:"li"},"/etc/apt/sources.list.d")," directory.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo touch /etc/apt/sources.list.d/bintray.erlang.list\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Open the ",Object(l.b)("inlineCode",{parentName:"li"},"bintray.erlang.list")," file.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo nano /etc/apt/sources.list.d/bintray.erlang.list\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Now copy the following text to the open ",Object(l.b)("inlineCode",{parentName:"li"},"bintray.erlang.list")," file")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-txt"}),"# This repository provides Erlang packages produced by the RabbitMQ team\n# See below for supported distribution and component values\ndeb https://dl.bintray.com/rabbitmq-erlang/debian bionic erlang-22.x\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Save and exit with ",Object(l.b)("inlineCode",{parentName:"p"},"ctrl + x")," and then ",Object(l.b)("inlineCode",{parentName:"p"},"y")," to accept the changes.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Verify that you have properly added the above text to the proper file."))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo cat /etc/apt/sources.list.d/bintray.erlang.list\n")),Object(l.b)("p",null,"The output should match the above pasted text."),Object(l.b)("h3",{id:"update-all-packages"},"Update all packages"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Update and list of ",Object(l.b)("inlineCode",{parentName:"li"},"apt")," sources")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo apt-get update\n")),Object(l.b)("p",null,"Metapackages such as erlang and erlang-nox must only be used with apt version pinning. They do not pin their dependency versions. The following steps are recommended."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install ",Object(l.b)("strong",{parentName:"li"},"Erlang")," packages.")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"NOTE:")," COPY THE ENTIRE CODE BLOCK AS ONE COMMAND."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo apt-get install -y erlang-base \\\n    erlang-asn1 erlang-crypto erlang-eldap erlang-ftp erlang-inets \\\n    erlang-mnesia erlang-os-mon erlang-parsetools erlang-public-key \\\n    erlang-runtime-tools erlang-snmp erlang-ssl \\\n    erlang-syntax-tools erlang-tftp erlang-tools erlang-xmerl\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Verify ",Object(l.b)("strong",{parentName:"li"},"Erlang")," installation")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"erl\n")),Object(l.b)("p",null,"You should get an output similar to the following:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"Erlang/OTP 22 [erts-10.7.2.1] [source] [64-bit] [smp:4:4] [ds:4:4:10] [async-threads:1]\n\nEshell V10.7.2.1  (abort with ^G)\n1>    # halt(). to exit\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"type ",Object(l.b)("inlineCode",{parentName:"li"},"halt().")," to exit from ",Object(l.b)("strong",{parentName:"li"},"Erlang")," in the terminal.")),Object(l.b)("p",null,"You have now installed the ",Object(l.b)("strong",{parentName:"p"},"dependencies")," for ",Object(l.b)("strong",{parentName:"p"},"RabbitMQ"),". Continue with the following steps."),Object(l.b)("h3",{id:"install-rabbitmq"},"Install RabbitMQ"),Object(l.b)("p",null,"The following steps will install RabbitMQ."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install ",Object(l.b)("strong",{parentName:"li"},"RabbitMQ")," by importing a signing key from ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://packagecloud.io/rabbitmq"}),"PackageCloud"),", add the PackageCloud repo, and ",Object(l.b)("strong",{parentName:"li"},"install rabbitmq-server"),".")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'wget -O - "https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey" | sudo apt-key add -\ncurl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.deb.sh | sudo bash\nsudo apt-get install -y rabbitmq-server\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Enable and start the ",Object(l.b)("strong",{parentName:"li"},"RabbitMQ")," server")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo systemctl enable rabbitmq-server\nsudo systemctl start rabbitmq-server\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Verify ",Object(l.b)("strong",{parentName:"li"},"RabbitMQ")," is properly installed and running.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo service rabbitmq-server status\n")),Object(l.b)("p",null,"You should see similar output to the following:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'\u25cf rabbitmq-server.service - RabbitMQ broker\n   Loaded: loaded (/lib/systemd/system/rabbitmq-server.service; enabled; vendor preset: enabled)\n   Active: active (running) since Wed 2020-07-08 21:11:16 UTC; 1min 21s ago\n Main PID: 18883 (beam.smp)\n   Status: "Initialized"\n    Tasks: 91 (limit: 4915)\n   CGroup: /system.slice/rabbitmq-server.service\n           \u251c\u250018883 /usr/lib/erlang/erts-10.7.2.1/bin/beam.smp -W w -K true -A 64 -MBas ageffcbf -MHas\n           \u251c\u250019000 erl_child_setup 32768\n           \u251c\u250019030 /usr/lib/erlang/erts-10.7.2.1/bin/epmd -daemon\n           \u251c\u250019058 inet_gethost 4\n           \u2514\u250019059 inet_gethost 4\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"You can exit with ",Object(l.b)("inlineCode",{parentName:"li"},"ctrl + c"))),Object(l.b)("p",null,"If you see output similar to the above, then you are ready to continue and go onto installing ",Object(l.b)("strong",{parentName:"p"},"Elasticsearch"),"."),Object(l.b)("h2",{id:"install-elasticsearch"},"Install Elasticsearch"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Elasticsearch")," is a search feature that allows you to search for data in real time. For additional ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html"}),"Elasticsearch installation instructions, read this"),"."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install ",Object(l.b)("strong",{parentName:"li"},"Elasticsearch"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -\necho "deb https://artifacts.elastic.co/packages/7.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list\nsudo apt-get update && sudo apt-get install elasticsearch\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Enable ",Object(l.b)("strong",{parentName:"li"},"Elasticsearch")," with the following commands")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo /bin/systemctl daemon-reload\nsudo /bin/systemctl enable elasticsearch.service\nsudo systemctl start elasticsearch.service\n\n# can take a minute\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Verify ",Object(l.b)("strong",{parentName:"li"},"Elasticsearch")," is installed by testing the response")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"curl localhost:9200\n")),Object(l.b)("p",null,"You should get output similar to this:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "name": "localhost",\n  "cluster_name": "elasticsearch",\n  "cluster_uuid": "CUntMmpoRTiLfCU_nTCeJg",\n  "version": {\n    "number": "7.8.0",\n    "build_flavor": "default",\n    "build_type": "deb",\n    "build_hash": "757314695644ea9a1dc2fecd26d1a43856725e65",\n    "build_date": "2020-06-14T19:35:50.234439Z",\n    "build_snapshot": false,\n    "lucene_version": "8.5.1",\n    "minimum_wire_compatibility_version": "6.8.0",\n    "minimum_index_compatibility_version": "6.0.0-beta1"\n  },\n  "tagline": "You Know, for Search"\n}\n')),Object(l.b)("p",null,"If the ",Object(l.b)("inlineCode",{parentName:"p"},"curl")," command outputted simlar output as above, then you are ready to configure your ",Object(l.b)("strong",{parentName:"p"},"NGINX")," proxy server."),Object(l.b)("h2",{id:"install-and-configure-nginx"},"Install and configure NGINX"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"NGINX")," is a very powerful web server. It is often used as a proxy server for emails. For additional ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.nginx.com/resources/wiki/start/topics/tutorials/install/"}),"NGINX installation instructions, read this"),"."),Object(l.b)("p",null,"NGINX is installed from the stable repo ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://launchpad.net/~nginx/+archive/ubuntu/stable"}),"https://launchpad.net/~nginx/+archive/ubuntu/stable"),"."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Add the ",Object(l.b)("strong",{parentName:"li"},"PPA")," for ",Object(l.b)("strong",{parentName:"li"},"NGINX"),". Press ",Object(l.b)("inlineCode",{parentName:"li"},"enter")," when prompted to continue.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo add-apt-repository ppa:nginx/stable\nsudo apt-get update\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install ",Object(l.b)("strong",{parentName:"li"},"NGINX")," with the following commands.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo apt-get install -y nginx\n")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"NGINX")," started by default when you installed it. But it is recommended to ",Object(l.b)("inlineCode",{parentName:"p"},"enable")," and ",Object(l.b)("inlineCode",{parentName:"p"},"start")," anyway."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Enable and start ",Object(l.b)("strong",{parentName:"li"},"NGINX"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo systemctl enable nginx\nsudo systemctl start nginx\n")),Object(l.b)("h2",{id:"configure-nginx"},"Configure NGINX"),Object(l.b)("p",null,"The next step is to configure ",Object(l.b)("strong",{parentName:"p"},"NGINX")," so that it allows traffic through ",Object(l.b)("inlineCode",{parentName:"p"},"Ports 80 and 443"),"."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Ensure the ",Object(l.b)("inlineCode",{parentName:"li"},"ufw")," firewall knows about the available applications.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo ufw app list\n")),Object(l.b)("p",null,"You are expecting the following output:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"Available applications:\n  Nginx Full\n  Nginx HTTP\n  Nginx HTTPS\n  OpenSSH\n")),Object(l.b)("p",null,"The output should look something like the ",Object(l.b)("inlineCode",{parentName:"p"},"Available applications")," output above. ",Object(l.b)("inlineCode",{parentName:"p"},"Nginx Full")," should be listed."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Enable Port 80 and Port 443 to allow traffic.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo ufw allow 'Nginx Full'\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Verify that ",Object(l.b)("inlineCode",{parentName:"li"},"ufw")," has been updated.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo ufw status\n")),Object(l.b)("p",null,"You are expecting the following output."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"Status: active\n\nTo                         Action      From\n--                         ------      ----\nOpenSSH                    ALLOW       Anywhere\n80,443/tcp                 ALLOW       Anywhere\nNginx Full                 ALLOW       Anywhere\nOpenSSH (v6)               ALLOW       Anywhere (v6)\n80,443/tcp (v6)            ALLOW       Anywhere (v6)\nNginx Full (v6)            ALLOW       Anywhere (v6)\n")),Object(l.b)("p",null,"Your output should match the above output. Providing your output matches the above, you may continue to configuring ",Object(l.b)("strong",{parentName:"p"},"NGINX"),"."),Object(l.b)("h3",{id:"configure-nginx-1"},"Configure NGINX"),Object(l.b)("p",null,"The next step is to create a server block with the correct directives to work with the erxes installation."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Create a new file in the correct directory, and name it your domain name. For example, if your domain name is ",Object(l.b)("inlineCode",{parentName:"li"},"erxes.example.com"),", name the file, ",Object(l.b)("inlineCode",{parentName:"li"},"erxes.example.com"),".")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# example: sudo nano /etc/nginx/sites-available/erxes.example.com\nsudo nano /etc/nginx/sites-available/YOUR-DOMAIN-NAME\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Copy the below ",Object(l.b)("strong",{parentName:"li"},"NGINX server block")," into the open file. ",Object(l.b)("strong",{parentName:"li"},"DO NOT SAVE THE FILE")," until you replace the ",Object(l.b)("inlineCode",{parentName:"li"},"YOUR_DOMAIN_COM")," with your actual ",Object(l.b)("inlineCode",{parentName:"li"},"domain name"),".")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-txt"}),"server {\n        listen 80;\n\n        # your domain name here\n        # for example, server_name erxes.example.com;\n        server_name YOUR_DOMAIN_COM;\n\n        # erxes build path\n        root /home/erxes/erxes.io/erxes/build;\n        index index.html;\n\n        error_log /var/log/nginx/erxes.error.log;\n        access_log /var/log/nginx/erxes.access.log;\n\n        location / {\n                root /home/erxes/erxes.io/erxes/build;\n                index index.html;\n                try_files $uri /index.html;\n        }\n\n        # widgets is running on 3200 port.\n        location /widgets/ {\n                proxy_pass http://127.0.0.1:3200/;\n                proxy_set_header Host $http_host;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_http_version 1.1;\n        }\n\n        # api project is running on 3300 port.\n        location /api/ {\n                proxy_pass http://127.0.0.1:3300/;\n                # proxy_set_header Host $http_host;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_http_version 1.1;\n                proxy_set_header Upgrade $http_upgrade;\n                # proxy_set_header Connection \"Upgrade\";\n                proxy_set_header Connection 'upgrade';\n                proxy_set_header Host $host;\n        }\n        # erxes integrations project is running on 3400 port.\n        location /integrations/ {\n                proxy_pass http://127.0.0.1:3400/;\n                proxy_set_header Host $http_host;\n                proxy_set_header X-Real-IP $remote_addr;\n                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n                proxy_http_version 1.1;\n        }\n}\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"After replacing ",Object(l.b)("inlineCode",{parentName:"li"},"YOUR_DOMAIN_COM")," with your actual domain name. Save with ",Object(l.b)("inlineCode",{parentName:"li"},"ctrl + x")," and then ",Object(l.b)("inlineCode",{parentName:"li"},"y")," to accept the changes."),Object(l.b)("li",{parentName:"ul"},"Enable the file by creating a link form it to ",Object(l.b)("strong",{parentName:"li"},"sites-enabled"),". Make sure to ",Object(l.b)("strong",{parentName:"li"},"use your domain name")," exactly as you created the file above. ",Object(l.b)("strong",{parentName:"li"},"Replace")," ",Object(l.b)("inlineCode",{parentName:"li"},"YOUR_DOMAIN_COM")," ",Object(l.b)("strong",{parentName:"li"},"with your actual domain name."))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo ln -s /etc/nginx/sites-available/YOUR_DOMAIN_COM /etc/nginx/sites-enabled/\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Open the ",Object(l.b)("strong",{parentName:"li"},"nginx.conf"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo nano /etc/nginx/nginx.conf\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Uncomment the following line ",Object(l.b)("inlineCode",{parentName:"li"},"server_names_hash_bucket_size 64;"))),Object(l.b)("p",null,"It should look like this:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-txt"}),"http {\n    * * *\n\n    server_names_hash_bucket_size 64;\n\n    * * *\n}\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Save with ",Object(l.b)("inlineCode",{parentName:"p"},"ctrl + x")," and then ",Object(l.b)("inlineCode",{parentName:"p"},"y")," to accept the changes.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Test the ",Object(l.b)("strong",{parentName:"p"},"NGINX")," configuration to make sure you don't have any errors"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo nginx -t\n")),Object(l.b)("p",null,"You should see the following output:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n")),Object(l.b)("p",null,"If you got no errors, reload nginx service."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo systemctl reload nginx\n")),Object(l.b)("p",null,"Now you are ready to install the SSL Certificates using ",Object(l.b)("strong",{parentName:"p"},"Let's Encrypt")," and ",Object(l.b)("strong",{parentName:"p"},"Certbot"),"."),Object(l.b)("h2",{id:"install-lets-encrypt-using-certbot"},"Install Let's Encrypt using Certbot"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Let's Encrypt")," enables you to use ",Object(l.b)("strong",{parentName:"p"},"HTTPS")," on your website. It will issue you a certificate which shows that you control your domain. ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.nginx.com/resources/wiki/start/topics/tutorials/install/"}),"Let's Encrypt additional information"),"."),Object(l.b)("p",null,"You will follow the installation instructions as covered ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://certbot.eff.org/lets-encrypt/ubuntubionic-nginx"}),"here"),", with ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://certbot.eff.org/"}),"Certbot")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"You will need to add a ",Object(l.b)("strong",{parentName:"li"},"Certbot")," PPA to the list of repositories on the server.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo apt-get update\nsudo apt-get -y install software-properties-common\nsudo add-apt-repository universe\nsudo add-apt-repository -y ppa:certbot/certbot\nsudo apt-get update\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install Certbot")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo apt-get install -y certbot python3-certbot-nginx\n")),Object(l.b)("p",null,"Execute Certbot. You will asked several questions, you can answer as follows:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Enter your email address"),Object(l.b)("li",{parentName:"ul"},"Agree with the ",Object(l.b)("strong",{parentName:"li"},"Terms of Service")),Object(l.b)("li",{parentName:"ul"},"Answer ",Object(l.b)("inlineCode",{parentName:"li"},"Yes")," or ",Object(l.b)("inlineCode",{parentName:"li"},"No"),", if you want to share your email address with the Electronic Frontier Foundation"),Object(l.b)("li",{parentName:"ul"},"Select the corresponding number associated with your domain name, usually ",Object(l.b)("inlineCode",{parentName:"li"},"1")),Object(l.b)("li",{parentName:"ul"},"Choose ",Object(l.b)("inlineCode",{parentName:"li"},"2")," to redirect all your traffic to a secure ",Object(l.b)("strong",{parentName:"li"},"HTTPS"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo certbot --nginx\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Now run the following to ",Object(l.b)("strong",{parentName:"li"},"test and set-up")," automatic renewal of your 90 day certbot. This needs to succeed so that your renewals are automatic.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo certbot renew --dry-run\n")),Object(l.b)("p",null,"Check your website in the browser. You should see the ",Object(l.b)("strong",{parentName:"p"},"Secure Padlock")," next to your URL. You are now ready to move onto the final steps to install ",Object(l.b)("strong",{parentName:"p"},"erxes")," itself."),Object(l.b)("h2",{id:"install-erxes"},"Install erxes"),Object(l.b)("p",null,"All the dependencies for ",Object(l.b)("strong",{parentName:"p"},"erxes")," are now installed. You have also configured your server. Follow these remaining steps to complete the installation of ",Object(l.b)("strong",{parentName:"p"},"erxes"),"."),Object(l.b)("h3",{id:"download-extract-and-install-each-of-the-erxes-components"},"Download, extract and install each of the erxes components"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Create the empty folder directories for the installation of erxes.")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"NOTE:")," COPY THE ENTIRE CODE BLOCK AS ONE COMMAND."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"mkdir -p ~/erxes.io/erxes \\\n -p ~/erxes.io/erxes-api\\\n -p ~/erxes.io/erxes-crons \\\n -p ~/erxes.io/erxes-workers \\\n -p ~/erxes.io/erxes-widgets \\\n -p ~/erxes.io/erxes-logger \\\n -p ~/erxes.io/erxes-engages-email-sender \\\n -p ~/erxes.io/erxes-email-verifier \\\n -p ~/erxes.io/erxes-integrations \\\n -p ~/erxes.io/erxes-elkSyncer\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Individually download and extract each of these 8 packages. (These commands place them in the proper installation directories.)")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"NOTE:")," COPY THE ENTIRE CODE BLOCK AS ONE COMMAND."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"curl -L https://github.com/erxes/erxes/releases/download/0.16.0/erxes-0.16.0.tar.gz | tar -xz -C ~/erxes.io/erxes/ \\\n    && curl -L https://github.com/erxes/erxes/releases/download/0.16.0/erxes-widgets-0.16.0.tar.gz | tar -xz -C ~/erxes.io/erxes-widgets/ \\\n    && curl -L https://github.com/erxes/erxes-api/releases/download/0.16.2/erxes-api-0.16.2.tar.gz | tar -xz -C ~/erxes.io/erxes-api/ \\\n    && curl -L https://github.com/erxes/erxes-api/releases/download/0.15.5/erxes-email-verifier-0.15.5.tar.gz | tar -xz -C ~/erxes.io/erxes-email-verifier/ \\\n    && curl -L https://github.com/erxes/erxes-api/releases/download/0.15.5/erxes-engages-email-sender-0.15.5.tar.gz | tar -xz -C ~/erxes.io/erxes-engages-email-sender/ \\\n    && curl -L https://github.com/erxes/erxes-api/releases/download/0.15.5/erxes-logger-0.15.5.tar.gz | tar -xz -C ~/erxes.io/erxes-logger/ \\\n    && curl -L https://github.com/erxes/erxes-integrations/releases/download/0.16.0/erxes-integrations-0.16.0.tar.gz | tar -xz -C ~/erxes.io/erxes-integrations/ \\\n    && curl -L https://github.com/erxes/erxes-api/releases/download/0.15.5/erxes-elksyncer-0.15.5.tar.gz | tar -xz -C ~/erxes.io/erxes-elkSyncer\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install package dependencies (using ",Object(l.b)("inlineCode",{parentName:"li"},"yarn install"),") required for the packages that make up ",Object(l.b)("strong",{parentName:"li"},"erxes"),".")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"NOTE:")," COPY THE ENTIRE CODE BLOCK AS ONE COMMAND."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"NOTE:")," This step can take a few minutes to complete."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"cd ~/erxes.io/erxes-widgets && yarn install \\\n    && cd ~/erxes.io/erxes-api && yarn install \\\n    && cd ~/erxes.io/erxes-email-verifier && yarn install \\\n    && cd ~/erxes.io/erxes-engages-email-sender && yarn install \\\n    && cd ~/erxes.io/erxes-logger && yarn install \\\n    && cd ~/erxes.io/erxes-integrations && yarn install \\\n    && cd ~\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install and configure the ",Object(l.b)("strong",{parentName:"li"},"elkSyncer")," package, following these commands.")),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Run these commands one by one"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'cd ~/erxes.io/erxes-elkSyncer/elkSyncer\nsudo apt -y install python3-pip\npip3 install -r requirements.txt\npip3 install --upgrade -r requirements.txt\nsudo mkdir -p /var/log/mongo-connector/\nsudo chown -R erxes:erxes /var/log/mongo-connector/\nexport PATH="$HOME/.local/bin:$PATH"\n')),Object(l.b)("p",null,"After successfully each of the above packages, you may continue and install ",Object(l.b)("strong",{parentName:"p"},"PM2"),"."),Object(l.b)("h2",{id:"install-pm2"},"Install PM2"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"PM2")," is a tool that helps you manage and keep ",Object(l.b)("strong",{parentName:"p"},"erxes")," online. It is a process manager. You can read more about the installation process here: ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://pm2.keymetrics.io/docs/usage/quick-start/"}),"How to install PM2")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install ",Object(l.b)("strong",{parentName:"li"},"PM2"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"npm install pm2@latest -g\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Check to see if ",Object(l.b)("strong",{parentName:"li"},"PM2")," is installed correctly.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"pm2 --version\n")),Object(l.b)("p",null,"You should get a similar output as below:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"4.4.0\n# your version of pm2 may be different\n")),Object(l.b)("p",null,"You should receive a response from ",Object(l.b)("inlineCode",{parentName:"p"},"pm2 --version"),". The version should show as last line. You will need ",Object(l.b)("strong",{parentName:"p"},"PM2")," later in the installation process. For now, continue on with the next steps to install ",Object(l.b)("strong",{parentName:"p"},"Yarn"),"."),Object(l.b)("h3",{id:"configure-pm2-ecosystemconfigjs"},"Configure PM2 ",Object(l.b)("inlineCode",{parentName:"h3"},"ecosystem.config.js")),Object(l.b)("p",null,"In the following steps, you will ",Object(l.b)("strong",{parentName:"p"},"copy")," and ",Object(l.b)("strong",{parentName:"p"},"create")," an ",Object(l.b)("inlineCode",{parentName:"p"},"ecosystem.config.js")," file that ",Object(l.b)("strong",{parentName:"p"},"PM2")," uses to manage the processes behind ",Object(l.b)("strong",{parentName:"p"},"erxes"),". ",Object(l.b)("strong",{parentName:"p"},"Before it will work, you need to provide your exact URL and a password to encrypt all the communication between your front-end and your server.")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Create and open a new ",Object(l.b)("inlineCode",{parentName:"li"},"ecosystem.config.js")," file.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"cd ~/erxes.io\nnano ecosystem.config.js\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Copy the following content into the file. ",Object(l.b)("strong",{parentName:"li"},"SAVE THE FILE AS-IS WITHOUT ANY CHANGES","*"),".")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"module.exports = {\n  apps: [\n    {\n      name: 'erxes-api',\n      script: 'dist',\n      cwd: '/home/erxes/erxes.io/erxes-api',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      node_args: '--max_old_space_size=4096',\n      env: {\n        PORT: 3300,\n        NODE_ENV: 'production',\n        JWT_TOKEN_SECRET: 'YOUR_SECRET_TOKEN',\n        DEBUG: 'erxes-api:*',\n        MONGO_URL: 'mongodb://localhost/erxes',\n        REDIS_HOST: 'localhost',\n        REDIS_PORT: 6379,\n        REDIS_PASSWORD: '',\n        RABBITMQ_HOST: 'amqp://localhost',\n        ELASTICSEARCH_URL: 'http://localhost:9200',\n        MAIN_APP_DOMAIN: 'https://YOUR_DOMAIN_COM',\n        WIDGETS_DOMAIN: 'https://YOUR_DOMAIN_COM/widgets',\n        INTEGRATIONS_API_DOMAIN: 'https://YOUR_DOMAIN_COM/integrations',\n      },\n    },\n    {\n      name: 'erxes-cronjobs',\n      script: 'dist/cronJobs',\n      cwd: '/home/erxes/erxes.io/erxes-api',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      node_args: '--max_old_space_size=4096',\n      env: {\n        PORT_CRONS: 3600,\n        NODE_ENV: 'production',\n        PROCESS_NAME: 'crons',\n        DEBUG: 'erxes-crons:*',\n        MONGO_URL: 'mongodb://localhost/erxes',\n        REDIS_HOST: 'localhost',\n        REDIS_PORT: 6379,\n        REDIS_PASSWORD: '',\n        RABBITMQ_HOST: 'amqp://localhost',\n      },\n    },\n    {\n      name: 'erxes-workers',\n      script: 'dist/workers',\n      cwd: '/home/erxes/erxes.io/erxes-api',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      node_args: '--max_old_space_size=4096',\n      env: {\n        PORT_WORKERS: 3700,\n        NODE_ENV: 'production',\n        DEBUG: 'erxes-workers:*',\n        MONGO_URL: 'mongodb://localhost/erxes',\n        REDIS_HOST: 'localhost',\n        REDIS_PORT: 6379,\n        REDIS_PASSWORD: '',\n        RABBITMQ_HOST: 'amqp://localhost',\n        JWT_TOKEN_SECRET: 'YOUR_SECRET_TOKEN',\n      },\n    },\n    {\n      name: 'erxes-widgets',\n      script: 'dist',\n      cwd: '/home/erxes/erxes.io/erxes-widgets',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      node_args: '--max_old_space_size=4096',\n      env: {\n        PORT: 3200,\n        NODE_ENV: 'production',\n        ROOT_URL: 'https://YOUR_DOMAIN_COM/widgets',\n        API_URL: 'https://YOUR_DOMAIN_COM/api',\n        API_SUBSCRIPTIONS_URL: 'wss://YOUR_DOMAIN_COM/api/subscriptions',\n      },\n    },\n    {\n      name: 'erxes-engages',\n      script: 'dist',\n      cwd: '/home/erxes/erxes.io/erxes-engages-email-sender',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      node_args: '--max_old_space_size=4096',\n      env: {\n        PORT: 3900,\n        NODE_ENV: 'production',\n        DEBUG: 'erxes-engages:*',\n        MAIN_API_DOMAIN: 'https://YOUR_DOMAIN_COM/api',\n        MONGO_URL: 'mongodb://localhost/erxes_engages',\n        RABBITMQ_HOST: 'amqp://localhost',\n        REDIS_HOST: 'localhost',\n        REDIS_PORT: 6379,\n        REDIS_PASSWORD: '',\n      },\n    },\n    {\n      name: 'erxes-logger',\n      script: 'dist',\n      cwd: '/home/erxes/erxes.io/erxes-logger',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      node_args: '--max_old_space_size=4096',\n      env: {\n        PORT: 3800,\n        NODE_ENV: 'production',\n        DEBUG: 'erxes-logs:*',\n        MONGO_URL: 'mongodb://localhost/erxes_logger',\n        RABBITMQ_HOST: 'amqp://localhost',\n      },\n    },\n    {\n      name: 'erxes-integrations',\n      script: 'dist',\n      cwd: '/home/erxes/erxes.io/erxes-integrations',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      node_args: '--max_old_space_size=4096',\n      env: {\n        PORT: 3400,\n        NODE_ENV: 'production',\n        DEBUG: 'erxes-integrations:*',\n        DOMAIN: 'https://YOUR_DOMAIN_COM/integrations',\n        MAIN_APP_DOMAIN: 'https://YOUR_DOMAIN_COM',\n        MAIN_API_DOMAIN: 'https://YOUR_DOMAIN_COM/api',\n        MONGO_URL: 'mongodb://localhost/erxes_integrations',\n        RABBITMQ_HOST: 'amqp://localhost',\n        REDIS_HOST: 'localhost',\n        REDIS_PORT: 6379,\n        REDIS_PASSWORD: '',\n      },\n    },\n    {\n      name: 'erxes-elkSyncer',\n      script: 'main.py',\n      cwd: '/home/erxes/erxes.io/erxes-elkSyncer/elkSyncer',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      interpreter: '/usr/bin/python3',\n      env: {\n        MONGO_URL: 'mongodb://localhost/erxes',\n        ELASTICSEARCH_URL: 'http://localhost:9200',\n      },\n    },\n    {\n      name: 'erxes-email-verifier',\n      script: 'dist',\n      cwd: '/home/erxes/erxes.io/erxes-email-verifier',\n      log_date_format: 'YYYY-MM-DD HH:mm Z',\n      node_args: '--max_old_space_size=4096',\n      env: {\n        PORT_WORKERS: 3700,\n        NODE_ENV: 'production',\n        DEBUG: 'erxes-workers:*',\n        MONGO_URL: 'mongodb://localhost/erxes',\n        REDIS_HOST: 'localhost',\n        REDIS_PORT: 6379,\n        REDIS_PASSWORD: '',\n        RABBITMQ_HOST: 'amqp://localhost',\n        JWT_TOKEN_SECRET: 'YOUR_SECRET_TOKEN',\n      },\n    },\n  ],\n};\n")),Object(l.b)("p",null,"The next step is to set ",Object(l.b)("strong",{parentName:"p"},"environment variables")," so that we can easily populate the ",Object(l.b)("strong",{parentName:"p"},"ecosystem.config.js")," file."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Run the following command, but replace ",Object(l.b)("inlineCode",{parentName:"li"},"YOUR_ACTUAL_DOMAIN_COM")," with your actual domain name.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"#export YOUR_DOMAIN_COM=erxes.example.com\nexport YOUR_DOMAIN_COM=YOUR_ACTUAL_DOMAIN_COM\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Run the following command to create a ",Object(l.b)("strong",{parentName:"li"},"secret token"),".")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"export YOUR_SECRET_TOKEN=`python3 -c 'import os,base64; print(base64.urlsafe_b64encode(os.urandom(16)).decode())'`\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Run each script below, to update your ",Object(l.b)("strong",{parentName:"li"},"DOMAIN_NAME_COM","*")," in the ",Object(l.b)("strong",{parentName:"li"},"ecosystem.config.js"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sed -i 's,YOUR_DOMAIN_COM,'\"${YOUR_DOMAIN_COM}\"',g' ecosystem.config.js\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Run each script below, to update your ",Object(l.b)("strong",{parentName:"li"},"SECRET_PASSWORD_TOKEN","*")," in the ",Object(l.b)("strong",{parentName:"li"},"ecosystem.config.js"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sed -i 's,YOUR_SECRET_TOKEN,'\"${YOUR_SECRET_TOKEN}\"',g' ecosystem.config.js\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Start PM2")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"pm2 start ecosystem.config.js\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Generate a startup script. Copy/paste the script in the terminal and run it.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"pm2 startup\n")),Object(l.b)("p",null,"The above will generate a script like this: ",Object(l.b)("strong",{parentName:"p"},"DO NOT USE THIS EXAMPLE - USE YOURS GENERATED IN THE TERMINAL")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# DO NOT COPY THIS - USE THE ONE GENERATED IN THE TERMINAL\n# sudo env PATH=$PATH:/home/erxes/.nvm/versions/node/v12.18.2/bin /home/erxes/.nvm/versions/node/v12.18.2/lib/node_modules/pm2/bin/pm2 startup systemd -u erxes --hp /home/erxes\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Now copy ",Object(l.b)("strong",{parentName:"li"},"your output"),". Similar to the below.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# THIS IS AN EXAMPLE - USE YOURS\nsudo env PATH=$PATH:/home/erxes/.nvm/versions/node/v12.18.2/bin /home/erxes/.nvm/versions/node/v12.18.2/lib/node_modules/pm2/bin/pm2 startup systemd -u erxes --hp /home/erxes\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Save all the applications that ",Object(l.b)("strong",{parentName:"li"},"PM2")," is managing.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"pm2 save\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Verify all process are running.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"pm2 l\n")),Object(l.b)("p",null,"The status of all the processes should say ",Object(l.b)("strong",{parentName:"p"},"online"),"."),Object(l.b)("h3",{id:"configure-frontend-environment-variables"},"Configure frontend environment variables"),Object(l.b)("p",null,"In the previous step, you set environment variables using ",Object(l.b)("strong",{parentName:"p"},"PM2"),", but ",Object(l.b)("strong",{parentName:"p"},"PM2")," does not have access to the bundled front-end static code. Therefore, you need to set the environment variables needed from the front-end differently."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Open the appropriate ",Object(l.b)("inlineCode",{parentName:"li"},"env.js")," file in the nano editor.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"nano ~/erxes.io/erxes/build/js/env.js\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Copy the following ",Object(l.b)("strong",{parentName:"li"},"environment variables")," in between the ",Object(l.b)("strong",{parentName:"li"},"{ }"),", and replace ",Object(l.b)("strong",{parentName:"li"},"YOUR_DOMAIN_COM")," with your actual domain name.")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'NODE_ENV: "production",\nREACT_APP_API_URL: "https://YOUR_DOMAIN_COM/api",\nREACT_APP_API_SUBSCRIPTION_URL: "wss://YOUR_DOMAIN_COM/api/subscriptions",\nREACT_APP_CDN_HOST: "https://YOUR_DOMAIN_COM/widgets"\n')),Object(l.b)("p",null,"It should look like this, but ",Object(l.b)("strong",{parentName:"p"},"with your actual domain name"),":"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'window.env = {\n    NODE_ENV: "production",\n    REACT_APP_API_URL: "https://erxes.example.com/api",\n    REACT_APP_API_SUBSCRIPTION_URL: "wss://erxes.example.com/api/subscriptions",\n    REACT_APP_CDN_HOST: "https://erxes.example.com/widgets"\n}\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"save the file with ",Object(l.b)("inlineCode",{parentName:"li"},"ctrl + x")," and then ",Object(l.b)("inlineCode",{parentName:"li"},"y")," to accept all changes.")),Object(l.b)("p",null,"You are now ready to ",Object(l.b)("strong",{parentName:"p"},"initialize")," and ",Object(l.b)("strong",{parentName:"p"},"load the permissions")," in ",Object(l.b)("strong",{parentName:"p"},"erxes"),"."),Object(l.b)("h2",{id:"export-mongodb-url"},"export MongoDB URL"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"initialize Erxes and generate ",Object(l.b)("strong",{parentName:"li"},"login password"),".")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'cd ~\nexport MONGO_URL="mongodb://localhost/erxes"\n')),Object(l.b)("h2",{id:"congratulations-time-to-log-in"},"Congratulations, time to log in"),Object(l.b)("p",null,"You have installed ",Object(l.b)("strong",{parentName:"p"},"erxes")," and all the dependencies. You may now visit your url, and log in."))}c.isMDXComponent=!0}}]);