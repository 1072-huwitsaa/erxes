"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var httpClient = _interopRequireWildcard(require("./http"));

var fakeClient = _interopRequireWildcard(require("./fake"));

var rabbitmqClient = _interopRequireWildcard(require("./rabbitmq"));

var init = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(options) {
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!(options.envs.NODE_ENV === "test")) {
              _context.next = 3;
              break;
            }

            fakeClient.init(options);
            return _context.abrupt("return", fakeClient);

          case 3:
            if (!options.envs.RABBITMQ_HOST) {
              _context.next = 9;
              break;
            }

            _context.next = 6;
            return rabbitmqClient.init(options.envs.RABBITMQ_HOST);

          case 6:
            return _context.abrupt("return", rabbitmqClient);

          case 9:
            httpClient.init(options);
            return _context.abrupt("return", httpClient);

          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function init(_x) {
    return _ref.apply(this, arguments);
  };
}();

var _default = init;
exports["default"] = _default;