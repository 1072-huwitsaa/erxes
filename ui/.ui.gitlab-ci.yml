ui:install_dependencies:
  stage: install_dependencies
  image: node:12.16-alpine
  before_script:
    - cd ui
  script:
    - yarn install
  rules:
    - changes:
        - ui/package.json
        - ui/yarn.lock
        # Only creating cache when this file changes.
        # If cache is deleted somehow run pipelines manually to create cache again.
        # Otherwise new cache won't build until ui/package.json file changed.
  cache:
    key:
      files:
        - ui/package.json
        - ui/yarn.lock
      prefix: ui
    paths:
      - ui/node_modules/
    policy: pull-push

ui:test_and_build:
  stage: test_and_build
  image: node:12.16-alpine
  before_script:
    - cd ui
    - yarn install # install dependencies again if cache is missing
    - apk add --no-cache --update git
    - git checkout ${CI_COMMIT_REF_NAME}
  script:
    - yarn lint
    - yarn tsc
    - yarn build
  rules:
    - changes:
        - ui/**/*
  cache:
    key:
      files:
        - ui/package.json
        - ui/yarn.lock
      prefix: ui
    paths:
      - ui/node_modules/
    policy: pull
  artifacts:
    expire_in: 1h
    paths:
      - ui/build/

ui:build_docker_image:
  stage: build_docker_images
  variables:
    BASE_IMAGE: erxes/erxes:base-1.18-alpine
  before_script:
    - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME $DOCKER_REGISTRY --password-stdin
  script:
    - cd ui
    - DOCKER_BUILDKIT=1 docker build --build-arg BASE_IMAGE=$BASE_IMAGE -t $DOCKER_REGISTRY/erxes/$CI_PROJECT_NAME:${CI_COMMIT_REF_NAME} -f ui.Dockerfile .
    - docker push $DOCKER_REGISTRY/erxes/$CI_PROJECT_NAME:${CI_COMMIT_REF_NAME}
  rules:
    - changes:
        - ui/**/*
      if: '$CI_COMMIT_BRANCH == "subscription" || $CI_COMMIT_BRANCH == "demo"'
  needs:
    - job: ui:test_and_build
      artifacts: true
