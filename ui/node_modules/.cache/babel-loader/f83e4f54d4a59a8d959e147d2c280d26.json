{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _addEmoji = require('../../../modifiers/addEmoji');\n\nvar _addEmoji2 = _interopRequireDefault(_addEmoji);\n\nvar _Groups = require('./Groups');\n\nvar _Groups2 = _interopRequireDefault(_Groups);\n\nvar _Nav = require('./Nav');\n\nvar _Nav2 = _interopRequireDefault(_Nav);\n\nvar _ToneSelect = require('./ToneSelect');\n\nvar _ToneSelect2 = _interopRequireDefault(_ToneSelect);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Popover = function (_Component) {\n  _inherits(Popover, _Component);\n\n  function Popover() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Popover);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Popover.__proto__ || Object.getPrototypeOf(Popover)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      activeGroup: 0,\n      showToneSelect: false\n    }, _this.onMouseDown = function () {\n      _this.mouseDown = true;\n    }, _this.onMouseUp = function () {\n      _this.mouseDown = false;\n\n      if (_this.activeEmoji) {\n        _this.activeEmoji.deselect();\n\n        _this.activeEmoji = null;\n\n        if (_this.state.showToneSelect) {\n          _this.closeToneSelect();\n        } else if (_this.toneSelectTimer) {\n          clearTimeout(_this.toneSelectTimer);\n          _this.toneSelectTimer = null;\n        }\n      }\n    }, _this.onWheel = function (e) {\n      return e.preventDefault();\n    }, _this.onEmojiSelect = function (emoji) {\n      var newEditorState = (0, _addEmoji2.default)(_this.props.store.getEditorState(), emoji);\n\n      _this.props.store.setEditorState(newEditorState);\n    }, _this.onEmojiMouseDown = function (emojiEntry, toneSet) {\n      _this.activeEmoji = emojiEntry;\n\n      if (toneSet) {\n        _this.openToneSelectWithTimer(toneSet);\n      }\n    }, _this.onGroupSelect = function (groupIndex) {\n      _this.groups.scrollToGroup(groupIndex);\n    }, _this.onGroupScroll = function (groupIndex) {\n      if (groupIndex !== _this.state.activeGroup) {\n        _this.setState({\n          activeGroup: groupIndex\n        });\n      }\n    }, _this.openToneSelectWithTimer = function (toneSet) {\n      _this.toneSelectTimer = setTimeout(function () {\n        _this.toneSelectTimer = null;\n\n        _this.openToneSelect(toneSet);\n      }, _this.props.toneSelectOpenDelay);\n    }, _this.openToneSelect = function (toneSet) {\n      _this.toneSet = toneSet;\n\n      _this.setState({\n        showToneSelect: true\n      });\n    }, _this.closeToneSelect = function () {\n      _this.toneSet = [];\n\n      _this.setState({\n        showToneSelect: false\n      });\n    }, _this.checkMouseDown = function () {\n      return _this.mouseDown;\n    }, _this.mouseDown = false, _this.activeEmoji = null, _this.toneSet = [], _this.toneSelectTimer = null, _this.renderToneSelect = function () {\n      if (_this.state.showToneSelect) {\n        var _this$props = _this.props,\n            cacheBustParam = _this$props.cacheBustParam,\n            imagePath = _this$props.imagePath,\n            imageType = _this$props.imageType,\n            _this$props$theme = _this$props.theme,\n            theme = _this$props$theme === undefined ? {} : _this$props$theme;\n\n        var containerBounds = _this.container.getBoundingClientRect();\n\n        var areaBounds = _this.groups.container.getBoundingClientRect();\n\n        var entryBounds = _this.activeEmoji.button.getBoundingClientRect(); // Translate TextRectangle coords to CSS relative coords\n\n\n        var bounds = {\n          areaBounds: {\n            left: areaBounds.left - containerBounds.left,\n            right: containerBounds.right - areaBounds.right,\n            top: areaBounds.top - containerBounds.top,\n            bottom: containerBounds.bottom - areaBounds.bottom,\n            width: areaBounds.width,\n            height: areaBounds.width\n          },\n          entryBounds: {\n            left: entryBounds.left - containerBounds.left,\n            right: containerBounds.right - entryBounds.right,\n            top: entryBounds.top - containerBounds.top,\n            bottom: containerBounds.bottom - entryBounds.bottom,\n            width: entryBounds.width,\n            height: entryBounds.width\n          }\n        };\n        return _react2.default.createElement(_ToneSelect2.default, {\n          theme: theme,\n          bounds: bounds,\n          toneSet: _this.toneSet,\n          imagePath: imagePath,\n          imageType: imageType,\n          cacheBustParam: cacheBustParam,\n          onEmojiSelect: _this.onEmojiSelect\n        });\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Popover, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      window.addEventListener('mouseup', this.onMouseUp);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener('mouseup', this.onMouseUp);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          cacheBustParam = _props.cacheBustParam,\n          imagePath = _props.imagePath,\n          imageType = _props.imageType,\n          _props$theme = _props.theme,\n          theme = _props$theme === undefined ? {} : _props$theme,\n          _props$groups = _props.groups,\n          groups = _props$groups === undefined ? [] : _props$groups,\n          emojis = _props.emojis,\n          _props$isOpen = _props.isOpen,\n          isOpen = _props$isOpen === undefined ? false : _props$isOpen,\n          useNativeArt = _props.useNativeArt;\n      var className = isOpen ? theme.emojiSelectPopover : theme.emojiSelectPopoverClosed;\n      var activeGroup = this.state.activeGroup;\n      return _react2.default.createElement('div', {\n        className: className,\n        onMouseDown: this.onMouseDown,\n        onWheel: this.onWheel,\n        ref: function ref(element) {\n          _this2.container = element;\n        }\n      }, _react2.default.createElement('h3', {\n        className: theme.emojiSelectPopoverTitle\n      }, groups[activeGroup].title), _react2.default.createElement(_Groups2.default, {\n        theme: theme,\n        groups: groups,\n        emojis: emojis,\n        imagePath: imagePath,\n        imageType: imageType,\n        cacheBustParam: cacheBustParam,\n        checkMouseDown: this.checkMouseDown,\n        onEmojiSelect: this.onEmojiSelect,\n        onEmojiMouseDown: this.onEmojiMouseDown,\n        onGroupScroll: this.onGroupScroll,\n        ref: function ref(element) {\n          _this2.groups = element;\n        },\n        useNativeArt: useNativeArt,\n        isOpen: isOpen\n      }), _react2.default.createElement(_Nav2.default, {\n        theme: theme,\n        groups: groups,\n        activeGroup: activeGroup,\n        onGroupSelect: this.onGroupSelect\n      }), this.renderToneSelect());\n    }\n  }]);\n\n  return Popover;\n}(_react.Component);\n\nPopover.propTypes = {\n  cacheBustParam: _propTypes2.default.string.isRequired,\n  imagePath: _propTypes2.default.string.isRequired,\n  imageType: _propTypes2.default.string.isRequired,\n  theme: _propTypes2.default.object.isRequired,\n  store: _propTypes2.default.object.isRequired,\n  groups: _propTypes2.default.arrayOf(_propTypes2.default.object).isRequired,\n  emojis: _propTypes2.default.object.isRequired,\n  toneSelectOpenDelay: _propTypes2.default.number.isRequired,\n  isOpen: _propTypes2.default.bool,\n  useNativeArt: _propTypes2.default.bool\n};\nPopover.defaultProps = {\n  isOpen: false\n};\nexports.default = Popover;","map":null,"metadata":{},"sourceType":"script"}