{"ast":null,"code":"import { engageDetailFields } from './queries';\nvar setPause = \"\\n  mutation setPause($_id: String!) {\\n    engageMessageSetPause(_id: $_id) {\\n      _id\\n    }\\n  }\\n\";\nvar setLive = \"\\n  mutation setLive($_id: String!) {\\n    engageMessageSetLive(_id: $_id) {\\n      _id\\n    }\\n  }\\n\";\nvar setLiveManual = \"\\n  mutation setLiveManual($_id: String!) {\\n    engageMessageSetLiveManual(_id: $_id) {\\n      _id\\n    }\\n  }\\n\";\nvar engagesUpdateConfigs = \"\\n  mutation engagesUpdateConfigs($configsMap: JSON!) {\\n    engagesUpdateConfigs(configsMap: $configsMap)\\n  }\\n\";\nvar sendTestEmail = \"\\n  mutation engageMessageSendTestEmail($from: String!, $to: String!, $content: String!) {\\n    engageMessageSendTestEmail(from: $from, to: $to, content: $content)\\n  }\\n\";\nvar commonVariables = \"\\n  $title: String!,\\n  $kind: String!,\\n  $method: String!,\\n  $fromUserId: String,\\n  $isDraft: Boolean,\\n  $isLive: Boolean,\\n  $stopDate: Date,\\n  $segmentIds: [String],\\n  $brandIds: [String],\\n  $customerIds: [String],\\n  $tagIds: [String],\\n  $email: EngageMessageEmail,\\n  $scheduleDate: EngageScheduleDateInput,\\n  $messenger: EngageMessageMessenger,\\n  $shortMessage: EngageMessageSmsInput,\\n\";\nvar commonParams = \"\\n  title: $title,\\n  kind: $kind,\\n  method: $method,\\n  fromUserId: $fromUserId,\\n  isDraft: $isDraft,\\n  isLive: $isLive,\\n  stopDate: $stopDate,\\n  segmentIds: $segmentIds,\\n  tagIds: $tagIds,\\n  brandIds: $brandIds,\\n  customerIds: $customerIds,\\n  email: $email,\\n  messenger: $messenger,\\n  scheduleDate: $scheduleDate,\\n  shortMessage: $shortMessage,\\n\";\nvar messagesAdd = \"\\n  mutation engageMessageAdd(\".concat(commonVariables, \") {\\n    engageMessageAdd(\").concat(commonParams, \") {\\n      _id\\n      \").concat(engageDetailFields, \"\\n    }\\n  }\\n\");\nvar messagesEdit = \"\\n  mutation engageMessageEdit($_id: String!, \".concat(commonVariables, \") {\\n    engageMessageEdit(_id: $_id, \").concat(commonParams, \") {\\n      _id\\n      \").concat(engageDetailFields, \"\\n    }\\n  }\\n\");\nvar messageRemove = \"\\n  mutation engageMessageRemove($_id: String!) {\\n    engageMessageRemove(_id: $_id) {\\n      _id\\n    }\\n  }\\n\";\nvar verifyEmail = \"\\n  mutation engageMessageVerifyEmail($email: String!) {\\n    engageMessageVerifyEmail(email: $email)\\n  }\\n\";\nvar removeVerifiedEmail = \"\\n  mutation engageMessageRemoveVerifiedEmail($email: String!) {\\n    engageMessageRemoveVerifiedEmail(email: $email)\\n  }\\n\";\nvar segmentsAdd = \"\\n  mutation segmentsAdd(\\n    $name: String!,\\n    $description: String,\\n    $subOf: String,\\n    $color: String,\\n    $conditions: [SegmentCondition],\\n  ) {\\n\\n    segmentsAdd(\\n      contentType: \\\"customer\\\",\\n      name: $name,\\n      description: $description,\\n      subOf: $subOf,\\n      color: $color,\\n      conditions: $conditions,\\n    ) {\\n      _id\\n    }\\n  }\\n\";\nexport default {\n  setPause: setPause,\n  setLive: setLive,\n  setLiveManual: setLiveManual,\n  messageRemove: messageRemove,\n  messagesAdd: messagesAdd,\n  messagesEdit: messagesEdit,\n  engagesUpdateConfigs: engagesUpdateConfigs,\n  segmentsAdd: segmentsAdd,\n  removeVerifiedEmail: removeVerifiedEmail,\n  verifyEmail: verifyEmail,\n  sendTestEmail: sendTestEmail\n};","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/graphql/mutations.ts"],"names":["engageDetailFields","setPause","setLive","setLiveManual","engagesUpdateConfigs","sendTestEmail","commonVariables","commonParams","messagesAdd","messagesEdit","messageRemove","verifyEmail","removeVerifiedEmail","segmentsAdd"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,WAAnC;AAEA,IAAMC,QAAQ,4GAAd;AAQA,IAAMC,OAAO,0GAAb;AAQA,IAAMC,aAAa,sHAAnB;AAQA,IAAMC,oBAAoB,sHAA1B;AAMA,IAAMC,aAAa,+KAAnB;AAMA,IAAMC,eAAe,uZAArB;AAkBA,IAAMC,YAAY,6WAAlB;AAkBA,IAAMC,WAAW,2CACaF,eADb,uCAEMC,YAFN,mCAITP,kBAJS,mBAAjB;AASA,IAAMS,YAAY,2DAC4BH,eAD5B,mDAEiBC,YAFjB,mCAIVP,kBAJU,mBAAlB;AASA,IAAMU,aAAa,qHAAnB;AAQA,IAAMC,WAAW,iHAAjB;AAMA,IAAMC,mBAAmB,iIAAzB;AAMA,IAAMC,WAAW,+XAAjB;AAsBA,eAAe;AACbZ,EAAAA,QAAQ,EAARA,QADa;AAEbC,EAAAA,OAAO,EAAPA,OAFa;AAGbC,EAAAA,aAAa,EAAbA,aAHa;AAIbO,EAAAA,aAAa,EAAbA,aAJa;AAKbF,EAAAA,WAAW,EAAXA,WALa;AAMbC,EAAAA,YAAY,EAAZA,YANa;AAObL,EAAAA,oBAAoB,EAApBA,oBAPa;AAQbS,EAAAA,WAAW,EAAXA,WARa;AASbD,EAAAA,mBAAmB,EAAnBA,mBATa;AAUbD,EAAAA,WAAW,EAAXA,WAVa;AAWbN,EAAAA,aAAa,EAAbA;AAXa,CAAf","sourcesContent":["import { engageDetailFields } from './queries';\n\nconst setPause = `\n  mutation setPause($_id: String!) {\n    engageMessageSetPause(_id: $_id) {\n      _id\n    }\n  }\n`;\n\nconst setLive = `\n  mutation setLive($_id: String!) {\n    engageMessageSetLive(_id: $_id) {\n      _id\n    }\n  }\n`;\n\nconst setLiveManual = `\n  mutation setLiveManual($_id: String!) {\n    engageMessageSetLiveManual(_id: $_id) {\n      _id\n    }\n  }\n`;\n\nconst engagesUpdateConfigs = `\n  mutation engagesUpdateConfigs($configsMap: JSON!) {\n    engagesUpdateConfigs(configsMap: $configsMap)\n  }\n`;\n\nconst sendTestEmail = `\n  mutation engageMessageSendTestEmail($from: String!, $to: String!, $content: String!) {\n    engageMessageSendTestEmail(from: $from, to: $to, content: $content)\n  }\n`;\n\nconst commonVariables = `\n  $title: String!,\n  $kind: String!,\n  $method: String!,\n  $fromUserId: String,\n  $isDraft: Boolean,\n  $isLive: Boolean,\n  $stopDate: Date,\n  $segmentIds: [String],\n  $brandIds: [String],\n  $customerIds: [String],\n  $tagIds: [String],\n  $email: EngageMessageEmail,\n  $scheduleDate: EngageScheduleDateInput,\n  $messenger: EngageMessageMessenger,\n  $shortMessage: EngageMessageSmsInput,\n`;\n\nconst commonParams = `\n  title: $title,\n  kind: $kind,\n  method: $method,\n  fromUserId: $fromUserId,\n  isDraft: $isDraft,\n  isLive: $isLive,\n  stopDate: $stopDate,\n  segmentIds: $segmentIds,\n  tagIds: $tagIds,\n  brandIds: $brandIds,\n  customerIds: $customerIds,\n  email: $email,\n  messenger: $messenger,\n  scheduleDate: $scheduleDate,\n  shortMessage: $shortMessage,\n`;\n\nconst messagesAdd = `\n  mutation engageMessageAdd(${commonVariables}) {\n    engageMessageAdd(${commonParams}) {\n      _id\n      ${engageDetailFields}\n    }\n  }\n`;\n\nconst messagesEdit = `\n  mutation engageMessageEdit($_id: String!, ${commonVariables}) {\n    engageMessageEdit(_id: $_id, ${commonParams}) {\n      _id\n      ${engageDetailFields}\n    }\n  }\n`;\n\nconst messageRemove = `\n  mutation engageMessageRemove($_id: String!) {\n    engageMessageRemove(_id: $_id) {\n      _id\n    }\n  }\n`;\n\nconst verifyEmail = `\n  mutation engageMessageVerifyEmail($email: String!) {\n    engageMessageVerifyEmail(email: $email)\n  }\n`;\n\nconst removeVerifiedEmail = `\n  mutation engageMessageRemoveVerifiedEmail($email: String!) {\n    engageMessageRemoveVerifiedEmail(email: $email)\n  }\n`;\n\nconst segmentsAdd = `\n  mutation segmentsAdd(\n    $name: String!,\n    $description: String,\n    $subOf: String,\n    $color: String,\n    $conditions: [SegmentCondition],\n  ) {\n\n    segmentsAdd(\n      contentType: \"customer\",\n      name: $name,\n      description: $description,\n      subOf: $subOf,\n      color: $color,\n      conditions: $conditions,\n    ) {\n      _id\n    }\n  }\n`;\n\nexport default {\n  setPause,\n  setLive,\n  setLiveManual,\n  messageRemove,\n  messagesAdd,\n  messagesEdit,\n  engagesUpdateConfigs,\n  segmentsAdd,\n  removeVerifiedEmail,\n  verifyEmail,\n  sendTestEmail\n};\n"]},"metadata":{},"sourceType":"module"}