{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/team/components/UserForm.tsx\";\nimport UserCommonInfos from 'modules/auth/components/UserCommonInfos';\nimport CollapseContent from 'modules/common/components/CollapseContent';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { __, getConstantFromStore } from 'modules/common/utils';\nimport SelectBrands from 'modules/settings/brands/containers/SelectBrands';\nimport React from 'react';\nimport Select from 'react-select-plus';\nimport CommonForm from '../../common/components/Form';\n\nvar UserForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserForm, _React$Component);\n\n  function UserForm(props) {\n    var _this;\n\n    _classCallCheck(this, UserForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserForm).call(this, props));\n\n    _this.onAvatarUpload = function (url) {\n      _this.setState({\n        avatar: url\n      });\n    };\n\n    _this.generateParams = function (options) {\n      return options.map(function (option) {\n        return {\n          value: option._id,\n          label: option.name\n        };\n      });\n    };\n\n    _this.collectValues = function (items) {\n      return items.map(function (item) {\n        return item.value;\n      });\n    };\n\n    _this.generateDoc = function (values) {\n      var object = _this.props.object;\n      var _this$state = _this.state,\n          selectedChannels = _this$state.selectedChannels,\n          selectedGroups = _this$state.selectedGroups,\n          selectedBrands = _this$state.selectedBrands;\n      var finalValues = values;\n\n      if (object) {\n        finalValues._id = object._id;\n      }\n\n      var links = {};\n      getConstantFromStore('social_links').forEach(function (link) {\n        links[link.value] = finalValues[link.value];\n      });\n      return {\n        _id: finalValues._id,\n        username: finalValues.username,\n        email: finalValues.email,\n        details: {\n          avatar: _this.state.avatar,\n          shortName: finalValues.shortName,\n          fullName: finalValues.fullName,\n          position: finalValues.position,\n          location: finalValues.location,\n          description: finalValues.description,\n          operatorPhone: finalValues.operatorPhone\n        },\n        channelIds: _this.collectValues(selectedChannels),\n        links: links,\n        groupIds: _this.collectValues(selectedGroups),\n        brandIds: selectedBrands\n      };\n    };\n\n    _this.renderContent = function (formProps) {\n      var object = _this.props.object;\n      var user = object || {\n        details: {}\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(UserCommonInfos, {\n        user: user,\n        onAvatarUpload: _this.onAvatarUpload,\n        formProps: formProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(CollapseContent, {\n        title: __('Other'),\n        compact: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, _this.renderChannels(), _this.renderGroups(), _this.renderBrands()));\n    };\n\n    var _user = props.object || {\n      details: {}\n    };\n\n    var defaultAvatar = '/images/avatar-colored.svg';\n    _this.state = {\n      avatar: _user.details.avatar || defaultAvatar,\n      selectedChannels: _this.generateParams(props.selectedChannels),\n      selectedGroups: _this.generateParams(props.selectedGroups),\n      selectedBrands: _user.brandIds || []\n    };\n    return _this;\n  }\n\n  _createClass(UserForm, [{\n    key: \"renderGroups\",\n    value: function renderGroups() {\n      var _this2 = this;\n\n      var self = this;\n      var groups = this.props.groups;\n\n      var onChange = function onChange(selectedGroups) {\n        _this2.setState({\n          selectedGroups: selectedGroups\n        });\n      };\n\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Choose the user groups\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Select, {\n        placeholder: __('Choose groups'),\n        value: self.state.selectedGroups,\n        options: self.generateParams(groups),\n        onChange: onChange,\n        multi: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderBrands\",\n    value: function renderBrands() {\n      var _this3 = this;\n\n      var self = this;\n      var showBrands = this.props.showBrands;\n\n      if (!showBrands) {\n        return null;\n      }\n\n      var onChange = function onChange(selectedBrands) {\n        _this3.setState({\n          selectedBrands: selectedBrands\n        });\n      };\n\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Choose the brands\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(SelectBrands, {\n        label: \"Brand\",\n        value: self.state.selectedBrands,\n        onSelect: onChange,\n        name: \"selectedBrands\",\n        multi: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderChannels\",\n    value: function renderChannels() {\n      var self = this;\n      var channels = this.props.channels;\n\n      var onChange = function onChange(selectedChannels) {\n        self.setState({\n          selectedChannels: selectedChannels\n        });\n      };\n\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Choose the channels\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(Select, {\n        placeholder: __('Choose channels'),\n        value: self.state.selectedChannels,\n        options: self.generateParams(channels),\n        onChange: onChange,\n        multi: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CommonForm, Object.assign({}, this.props, {\n        name: \"team member\",\n        renderContent: this.renderContent,\n        generateDoc: this.generateDoc,\n        renderButton: this.props.renderButton,\n        object: this.props.object,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UserForm;\n}(React.Component);\n\nexport default UserForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/team/components/UserForm.tsx"],"names":["UserCommonInfos","CollapseContent","FormGroup","ControlLabel","__","getConstantFromStore","SelectBrands","React","Select","CommonForm","UserForm","props","onAvatarUpload","url","setState","avatar","generateParams","options","map","option","value","_id","label","name","collectValues","items","item","generateDoc","values","object","state","selectedChannels","selectedGroups","selectedBrands","finalValues","links","forEach","link","username","email","details","shortName","fullName","position","location","description","operatorPhone","channelIds","groupIds","brandIds","renderContent","formProps","user","renderChannels","renderGroups","renderBrands","defaultAvatar","self","groups","onChange","showBrands","channels","renderButton","Component"],"mappings":"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","sourcesContent":["import UserCommonInfos from 'modules/auth/components/UserCommonInfos';\nimport { IUser, IUserDetails, IUserLinks } from 'modules/auth/types';\nimport CollapseContent from 'modules/common/components/CollapseContent';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { IButtonMutateProps, IFormProps } from 'modules/common/types';\nimport { __, getConstantFromStore } from 'modules/common/utils';\nimport SelectBrands from 'modules/settings/brands/containers/SelectBrands';\nimport { IUserGroup } from 'modules/settings/permissions/types';\nimport React from 'react';\nimport Select from 'react-select-plus';\nimport { IChannel } from '../../channels/types';\nimport CommonForm from '../../common/components/Form';\nimport { ICommonFormProps } from '../../common/types';\n\ntype Props = {\n  channels: IChannel[];\n  groups: IUserGroup[];\n  selectedChannels: IChannel[];\n  selectedGroups: IUserGroup[];\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  showBrands: boolean;\n} & ICommonFormProps;\n\ntype State = {\n  avatar: string;\n  selectedChannels: IChannel[];\n  selectedGroups: IUserGroup[];\n  selectedBrands: string[];\n};\n\nclass UserForm extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const user = props.object || { details: {} };\n    const defaultAvatar = '/images/avatar-colored.svg';\n\n    this.state = {\n      avatar: user.details.avatar || defaultAvatar,\n      selectedChannels: this.generateParams(props.selectedChannels),\n      selectedGroups: this.generateParams(props.selectedGroups),\n      selectedBrands: user.brandIds || []\n    };\n  }\n\n  onAvatarUpload = url => {\n    this.setState({ avatar: url });\n  };\n\n  generateParams = options => {\n    return options.map(option => ({\n      value: option._id,\n      label: option.name\n    }));\n  };\n\n  collectValues = items => {\n    return items.map(item => item.value);\n  };\n\n  renderGroups() {\n    const self = this;\n    const { groups } = this.props;\n\n    const onChange = selectedGroups => {\n      this.setState({ selectedGroups });\n    };\n\n    return (\n      <FormGroup>\n        <ControlLabel>Choose the user groups</ControlLabel>\n        <br />\n\n        <Select\n          placeholder={__('Choose groups')}\n          value={self.state.selectedGroups}\n          options={self.generateParams(groups)}\n          onChange={onChange}\n          multi={true}\n        />\n      </FormGroup>\n    );\n  }\n\n  renderBrands() {\n    const self = this;\n    const { showBrands } = this.props;\n\n    if (!showBrands) {\n      return null;\n    }\n\n    const onChange = selectedBrands => {\n      this.setState({ selectedBrands });\n    };\n\n    return (\n      <FormGroup>\n        <ControlLabel>Choose the brands</ControlLabel>\n        <br />\n\n        <SelectBrands\n          label=\"Brand\"\n          value={self.state.selectedBrands}\n          onSelect={onChange}\n          name=\"selectedBrands\"\n          multi={true}\n        />\n      </FormGroup>\n    );\n  }\n\n  renderChannels() {\n    const self = this;\n    const { channels } = this.props;\n\n    const onChange = selectedChannels => {\n      self.setState({ selectedChannels });\n    };\n\n    return (\n      <FormGroup>\n        <ControlLabel>Choose the channels</ControlLabel>\n        <br />\n\n        <Select\n          placeholder={__('Choose channels')}\n          value={self.state.selectedChannels}\n          options={self.generateParams(channels)}\n          onChange={onChange}\n          multi={true}\n        />\n      </FormGroup>\n    );\n  }\n\n  generateDoc = (values: {} & IUser & IUserDetails & IUserLinks) => {\n    const { object } = this.props;\n    const { selectedChannels, selectedGroups, selectedBrands } = this.state;\n    const finalValues = values;\n\n    if (object) {\n      finalValues._id = object._id;\n    }\n\n    const links = {};\n\n    getConstantFromStore('social_links').forEach(link => {\n      links[link.value] = finalValues[link.value];\n    });\n\n    return {\n      _id: finalValues._id,\n      username: finalValues.username,\n      email: finalValues.email,\n      details: {\n        avatar: this.state.avatar,\n        shortName: finalValues.shortName,\n        fullName: finalValues.fullName,\n        position: finalValues.position,\n        location: finalValues.location,\n        description: finalValues.description,\n        operatorPhone: finalValues.operatorPhone\n      },\n      channelIds: this.collectValues(selectedChannels),\n      links,\n      groupIds: this.collectValues(selectedGroups),\n      brandIds: selectedBrands\n    };\n  };\n\n  renderContent = (formProps: IFormProps) => {\n    const { object } = this.props;\n    const user = object || { details: {} };\n\n    return (\n      <div>\n        <UserCommonInfos\n          user={user}\n          onAvatarUpload={this.onAvatarUpload}\n          formProps={formProps}\n        />\n\n        <CollapseContent title={__('Other')} compact={true}>\n          {this.renderChannels()}\n          {this.renderGroups()}\n          {this.renderBrands()}\n        </CollapseContent>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <CommonForm\n        {...this.props}\n        name=\"team member\"\n        renderContent={this.renderContent}\n        generateDoc={this.generateDoc}\n        renderButton={this.props.renderButton}\n        object={this.props.object}\n      />\n    );\n  }\n}\n\nexport default UserForm;\n"]},"metadata":{},"sourceType":"module"}