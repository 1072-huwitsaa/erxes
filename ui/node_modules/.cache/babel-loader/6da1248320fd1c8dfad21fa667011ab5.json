{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/properties/components/Properties.tsx\";\nimport Button from 'modules/common/components/Button';\nimport DropdownToggle from 'modules/common/components/DropdownToggle';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport HeaderDescription from 'modules/common/components/HeaderDescription';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport { Title } from 'modules/common/styles/main';\nimport { __ } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport PropertyForm from '../containers/PropertyForm';\nimport PropertyGroupForm from '../containers/PropertyGroupForm';\nimport { PropertyList } from '../styles';\nimport PropertyRow from './PropertyRow';\nimport Sidebar from './Sidebar';\n\nvar Properties =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Properties, _React$Component);\n\n  function Properties() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Properties);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Properties)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderProperties = function () {\n      var _this$props = _this.props,\n          fieldsGroups = _this$props.fieldsGroups,\n          queryParams = _this$props.queryParams,\n          removePropertyGroup = _this$props.removePropertyGroup,\n          removeProperty = _this$props.removeProperty,\n          updatePropertyVisible = _this$props.updatePropertyVisible;\n\n      if (fieldsGroups.length === 0) {\n        return React.createElement(EmptyState, {\n          icon: \"paragraph\",\n          text: \"There arent't any groups and fields\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(PropertyList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, fieldsGroups.map(function (group) {\n        return React.createElement(PropertyRow, {\n          key: group._id,\n          group: group,\n          queryParams: queryParams,\n          removePropertyGroup: removePropertyGroup,\n          removeProperty: removeProperty,\n          updatePropertyVisible: updatePropertyVisible,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      }));\n    };\n\n    _this.renderActionBar = function () {\n      var _this$props2 = _this.props,\n          queryParams = _this$props2.queryParams,\n          fieldsGroups = _this$props2.fieldsGroups,\n          currentType = _this$props2.currentType;\n      var addGroup = React.createElement(Dropdown.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, __('Add group'));\n      var addField = React.createElement(Dropdown.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __('Add Property'));\n\n      var groupContent = function groupContent(props) {\n        return React.createElement(PropertyGroupForm, Object.assign({}, props, {\n          queryParams: queryParams,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }));\n      };\n\n      var propertyContent = function propertyContent(modalProps) {\n        if (fieldsGroups.length === 0) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, __('Please add property Group first'), \"!\");\n        }\n\n        return React.createElement(PropertyForm, Object.assign({}, modalProps, _this.props, {\n          queryParams: queryParams,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }));\n      };\n\n      return React.createElement(Dropdown, {\n        alignRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        as: DropdownToggle,\n        id: \"dropdown-properties\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"primary\",\n        uppercase: false,\n        icon: \"plus-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, __('Add Group & Field '), React.createElement(Icon, {\n        icon: \"angle-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(ModalTrigger, {\n        title: \"Add Group\",\n        trigger: addGroup,\n        autoOpenKey: \"showProperty\".concat(currentType, \"Modal\"),\n        content: groupContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(ModalTrigger, {\n        title: \"Add Property\",\n        trigger: addField,\n        content: propertyContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })));\n    };\n\n    return _this;\n  }\n\n  _createClass(Properties, [{\n    key: \"render\",\n    value: function render() {\n      var currentType = this.props.currentType;\n      var breadcrumb = [{\n        title: __('Settings'),\n        link: '/settings'\n      }, {\n        title: __('Properties'),\n        link: '/settings/properties'\n      }, {\n        title: __(\"\".concat(currentType, \" properties\"))\n      }];\n      var title = React.createElement(Title, {\n        capitalize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, currentType, \" \", __('properties'));\n      var headerDescription = React.createElement(HeaderDescription, {\n        icon: \"/images/actions/26.svg\",\n        title: \"Properties\",\n        description: __('The quick view finder helps you to view basic information on both companies and customers alike. Add groups and fields of the exact information you want to see') + '.',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      });\n      return React.createElement(Wrapper, {\n        actionBar: React.createElement(Wrapper.ActionBar, {\n          background: \"colorWhite\",\n          left: title,\n          right: this.renderActionBar(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }),\n        header: React.createElement(Wrapper.Header, {\n          title: __(currentType),\n          breadcrumb: breadcrumb,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }),\n        mainHead: headerDescription,\n        leftSidebar: React.createElement(Sidebar, {\n          title: __('Property types'),\n          currentType: __(currentType),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }),\n        content: this.renderProperties(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Properties;\n}(React.Component);\n\nexport default Properties;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/properties/components/Properties.tsx"],"names":["Button","DropdownToggle","EmptyState","HeaderDescription","Icon","ModalTrigger","Title","__","Wrapper","React","Dropdown","PropertyForm","PropertyGroupForm","PropertyList","PropertyRow","Sidebar","Properties","renderProperties","props","fieldsGroups","queryParams","removePropertyGroup","removeProperty","updatePropertyVisible","length","map","group","_id","renderActionBar","currentType","addGroup","addField","groupContent","propertyContent","modalProps","breadcrumb","title","link","headerDescription","Component"],"mappings":"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","sourcesContent":["import Button from 'modules/common/components/Button';\nimport DropdownToggle from 'modules/common/components/DropdownToggle';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport HeaderDescription from 'modules/common/components/HeaderDescription';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport { Title } from 'modules/common/styles/main';\nimport { __ } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport PropertyForm from '../containers/PropertyForm';\nimport PropertyGroupForm from '../containers/PropertyGroupForm';\nimport { PropertyList } from '../styles';\nimport { IFieldGroup } from '../types';\nimport PropertyRow from './PropertyRow';\nimport Sidebar from './Sidebar';\n\ntype Props = {\n  queryParams: any;\n  refetch?: () => void;\n  fieldsGroups: IFieldGroup[];\n  currentType: string;\n  removePropertyGroup: (data: { _id: string }) => any;\n  removeProperty: (data: { _id: string }) => void;\n  updatePropertyVisible: (data: { _id: string; isVisible: boolean }) => void;\n  updatePropertyGroupVisible: (data: {\n    _id: string;\n    isVisible: boolean;\n  }) => void;\n};\n\nclass Properties extends React.Component<Props> {\n  renderProperties = () => {\n    const {\n      fieldsGroups,\n      queryParams,\n      removePropertyGroup,\n      removeProperty,\n      updatePropertyVisible\n    } = this.props;\n\n    if (fieldsGroups.length === 0) {\n      return (\n        <EmptyState\n          icon=\"paragraph\"\n          text=\"There arent't any groups and fields\"\n        />\n      );\n    }\n\n    return (\n      <PropertyList>\n        {fieldsGroups.map(group => {\n          return (\n            <PropertyRow\n              key={group._id}\n              group={group}\n              queryParams={queryParams}\n              removePropertyGroup={removePropertyGroup}\n              removeProperty={removeProperty}\n              updatePropertyVisible={updatePropertyVisible}\n            />\n          );\n        })}\n      </PropertyList>\n    );\n  };\n\n  renderActionBar = () => {\n    const { queryParams, fieldsGroups, currentType } = this.props;\n\n    const addGroup = <Dropdown.Item>{__('Add group')}</Dropdown.Item>;\n    const addField = <Dropdown.Item>{__('Add Property')}</Dropdown.Item>;\n\n    const groupContent = props => (\n      <PropertyGroupForm {...props} queryParams={queryParams} />\n    );\n\n    const propertyContent = modalProps => {\n      if (fieldsGroups.length === 0) {\n        return <div>{__('Please add property Group first')}!</div>;\n      }\n\n      return (\n        <PropertyForm\n          {...modalProps}\n          {...this.props}\n          queryParams={queryParams}\n        />\n      );\n    };\n\n    return (\n      <Dropdown alignRight={true}>\n        <Dropdown.Toggle as={DropdownToggle} id=\"dropdown-properties\">\n          <Button btnStyle=\"primary\" uppercase={false} icon=\"plus-circle\">\n            {__('Add Group & Field ')}\n            <Icon icon=\"angle-down\" />\n          </Button>\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <ModalTrigger\n            title=\"Add Group\"\n            trigger={addGroup}\n            autoOpenKey={`showProperty${currentType}Modal`}\n            content={groupContent}\n          />\n          <ModalTrigger\n            title=\"Add Property\"\n            trigger={addField}\n            content={propertyContent}\n          />\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  };\n\n  render() {\n    const { currentType } = this.props;\n\n    const breadcrumb = [\n      { title: __('Settings'), link: '/settings' },\n      { title: __('Properties'), link: '/settings/properties' },\n      { title: __(`${currentType} properties`) }\n    ];\n\n    const title = (\n      <Title capitalize={true}>\n        {currentType} {__('properties')}\n      </Title>\n    );\n\n    const headerDescription = (\n      <HeaderDescription\n        icon=\"/images/actions/26.svg\"\n        title=\"Properties\"\n        description={\n          __(\n            'The quick view finder helps you to view basic information on both companies and customers alike. Add groups and fields of the exact information you want to see'\n          ) + '.'\n        }\n      />\n    );\n\n    return (\n      <Wrapper\n        actionBar={\n          <Wrapper.ActionBar\n            background=\"colorWhite\"\n            left={title}\n            right={this.renderActionBar()}\n          />\n        }\n        header={\n          <Wrapper.Header title={__(currentType)} breadcrumb={breadcrumb} />\n        }\n        mainHead={headerDescription}\n        leftSidebar={\n          <Sidebar title={__('Property types')} currentType={__(currentType)} />\n        }\n        content={this.renderProperties()}\n      />\n    );\n  }\n}\n\nexport default Properties;\n"]},"metadata":{},"sourceType":"module"}