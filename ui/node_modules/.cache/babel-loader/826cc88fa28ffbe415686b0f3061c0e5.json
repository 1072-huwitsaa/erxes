{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/properties/components/PropertyForm.tsx\";\nimport Button from 'modules/common/components/Button';\nimport FormControl from 'modules/common/components/form/Control';\nimport Form from 'modules/common/components/form/Form';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport ModifiableList from 'modules/common/components/ModifiableList';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { Row } from 'modules/settings/integrations/styles';\nimport React from 'react';\nimport PropertyGroupForm from '../containers/PropertyGroupForm';\n\nvar PropertyForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PropertyForm, _React$Component);\n\n  function PropertyForm(_props) {\n    var _this;\n\n    _classCallCheck(this, PropertyForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PropertyForm).call(this, _props));\n\n    _this.generateDoc = function (values) {\n      var _this$props = _this.props,\n          field = _this$props.field,\n          type = _this$props.type;\n      var finalValues = values;\n\n      if (field) {\n        finalValues._id = field._id;\n      }\n\n      return _objectSpread({}, finalValues, {\n        type: _this.state.type,\n        options: _this.state.options,\n        contentType: type\n      });\n    };\n\n    _this.onChangeOption = function (options) {\n      _this.setState({\n        options: options\n      });\n    };\n\n    _this.onRemoveOption = function (options) {\n      _this.setState({\n        options: options\n      });\n    };\n\n    _this.onTypeChange = function (e) {\n      var value = e.target.value;\n      var doc = {\n        hasOptions: false,\n        options: []\n      };\n\n      if (value === 'select' || value === 'check' || value === 'radio') {\n        doc = {\n          hasOptions: true,\n          options: []\n        };\n      }\n\n      _this.setState(_objectSpread({\n        type: value\n      }, doc));\n    };\n\n    _this.renderOptions = function () {\n      if (!_this.state.hasOptions) {\n        return null;\n      }\n\n      return React.createElement(ModifiableList, {\n        options: _this.state.options,\n        onChangeOption: _this.onChangeOption,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      });\n    };\n\n    _this.renderAddGroup = function () {\n      var queryParams = _this.props.queryParams;\n      var trigger = React.createElement(Button, {\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Create group\");\n\n      var content = function content(props) {\n        return React.createElement(PropertyGroupForm, Object.assign({}, props, {\n          queryParams: queryParams,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }));\n      };\n\n      return React.createElement(ModalTrigger, {\n        title: \"Create group\",\n        trigger: trigger,\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      });\n    };\n\n    _this.renderContent = function (formProps) {\n      var _this$props2 = _this.props,\n          groups = _this$props2.groups,\n          closeModal = _this$props2.closeModal,\n          renderButton = _this$props2.renderButton,\n          field = _this$props2.field;\n      var object = field || {};\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted;\n      var type = _this.state.type;\n      return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Name:\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"text\",\n        defaultValue: object.text || '',\n        required: true,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Description:\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"description\",\n        componentClass: \"textarea\",\n        defaultValue: object.description || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Group:\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"groupId\",\n        componentClass: \"select\",\n        defaultValue: object.groupId || '',\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), groups.map(function (group) {\n        return React.createElement(\"option\", {\n          key: group._id,\n          value: group._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, group.name);\n      })), _this.renderAddGroup())), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Type:\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"type\",\n        componentClass: \"select\",\n        value: type,\n        onChange: _this.onTypeChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Input\"), React.createElement(\"option\", {\n        value: \"textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Text area\"), React.createElement(\"option\", {\n        value: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Select\"), React.createElement(\"option\", {\n        value: \"check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Checkbox\"), React.createElement(\"option\", {\n        value: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Radio button\"), React.createElement(\"option\", {\n        value: \"file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"File\"))), _this.renderOptions(), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Validation:\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        componentClass: \"select\",\n        name: \"validation\",\n        defaultValue: object.validation || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"option\", {\n        value: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Number\"), React.createElement(\"option\", {\n        value: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Date\"))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        onClick: closeModal,\n        icon: \"times-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Close\"), renderButton({\n        name: 'property',\n        values: _this.generateDoc(values),\n        isSubmitted: isSubmitted,\n        callback: closeModal,\n        object: field\n      })));\n    };\n\n    var _doc = {\n      options: [],\n      type: '',\n      hasOptions: false\n    };\n\n    if (_props.field) {\n      var _props$field = _props.field,\n          type = _props$field.type,\n          options = _props$field.options;\n      _doc = _objectSpread({}, _doc, {\n        type: type\n      });\n\n      if (type === 'select' || type === 'radio' || type === 'check') {\n        _doc = {\n          type: type,\n          hasOptions: true,\n          options: Object.assign([], options || [])\n        };\n      }\n    }\n\n    _this.state = _objectSpread({}, _doc, {\n      add: false\n    });\n    return _this;\n  }\n\n  _createClass(PropertyForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return PropertyForm;\n}(React.Component);\n\nexport default PropertyForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/properties/components/PropertyForm.tsx"],"names":["Button","FormControl","Form","FormGroup","ControlLabel","ModalTrigger","ModifiableList","ModalFooter","Row","React","PropertyGroupForm","PropertyForm","props","generateDoc","values","field","type","finalValues","_id","state","options","contentType","onChangeOption","setState","onRemoveOption","onTypeChange","e","value","target","doc","hasOptions","renderOptions","renderAddGroup","queryParams","trigger","content","renderContent","formProps","groups","closeModal","renderButton","object","isSubmitted","text","description","groupId","map","group","name","validation","callback","Object","assign","add","Component"],"mappings":"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","sourcesContent":["import Button from 'modules/common/components/Button';\nimport FormControl from 'modules/common/components/form/Control';\nimport Form from 'modules/common/components/form/Form';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport ModifiableList from 'modules/common/components/ModifiableList';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { IButtonMutateProps, IFormProps } from 'modules/common/types';\nimport { Row } from 'modules/settings/integrations/styles';\nimport React from 'react';\nimport PropertyGroupForm from '../containers/PropertyGroupForm';\nimport { IField, IFieldGroup } from '../types';\n\ntype Props = {\n  queryParams: any;\n  field?: IField;\n  groups: IFieldGroup[];\n  type: string;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  closeModal: () => void;\n};\n\ntype State = {\n  options: any[];\n  type: string;\n  hasOptions: boolean;\n  add: boolean;\n};\n\nclass PropertyForm extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    let doc = {\n      options: [],\n      type: '',\n      hasOptions: false\n    };\n\n    if (props.field) {\n      const { type, options } = props.field;\n\n      doc = {\n        ...doc,\n        type\n      };\n\n      if (type === 'select' || type === 'radio' || type === 'check') {\n        doc = {\n          type,\n          hasOptions: true,\n          options: Object.assign([], options || [])\n        };\n      }\n    }\n\n    this.state = {\n      ...doc,\n      add: false\n    };\n  }\n\n  generateDoc = (values: {\n    _id?: string;\n    groupId: string;\n    validation: string;\n    text: string;\n    description: string;\n  }) => {\n    const { field, type } = this.props;\n\n    const finalValues = values;\n\n    if (field) {\n      finalValues._id = field._id;\n    }\n\n    return {\n      ...finalValues,\n      type: this.state.type,\n      options: this.state.options,\n      contentType: type\n    };\n  };\n\n  onChangeOption = options => {\n    this.setState({ options });\n  };\n\n  onRemoveOption = options => {\n    this.setState({ options });\n  };\n\n  onTypeChange = e => {\n    const value = e.target.value;\n\n    let doc = { hasOptions: false, options: [] };\n\n    if (value === 'select' || value === 'check' || value === 'radio') {\n      doc = { hasOptions: true, options: [] };\n    }\n\n    this.setState({ type: value, ...doc });\n  };\n\n  renderOptions = () => {\n    if (!this.state.hasOptions) {\n      return null;\n    }\n\n    return (\n      <ModifiableList\n        options={this.state.options}\n        onChangeOption={this.onChangeOption}\n      />\n    );\n  };\n\n  renderAddGroup = () => {\n    const { queryParams } = this.props;\n\n    const trigger = <Button uppercase={false}>Create group</Button>;\n    const content = props => (\n      <PropertyGroupForm {...props} queryParams={queryParams} />\n    );\n\n    return (\n      <ModalTrigger title=\"Create group\" trigger={trigger} content={content} />\n    );\n  };\n\n  renderContent = (formProps: IFormProps) => {\n    const { groups, closeModal, renderButton, field } = this.props;\n\n    const object = field || ({} as IField);\n\n    const { values, isSubmitted } = formProps;\n    const { type } = this.state;\n\n    return (\n      <>\n        <FormGroup>\n          <ControlLabel required={true}>Name:</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"text\"\n            defaultValue={object.text || ''}\n            required={true}\n            autoFocus={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Description:</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"description\"\n            componentClass=\"textarea\"\n            defaultValue={object.description || ''}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel required={true}>Group:</ControlLabel>\n          <Row>\n            <FormControl\n              {...formProps}\n              name=\"groupId\"\n              componentClass=\"select\"\n              defaultValue={object.groupId || ''}\n              required={true}\n            >\n              {groups.map(group => {\n                return (\n                  <option key={group._id} value={group._id}>\n                    {group.name}\n                  </option>\n                );\n              })}\n            </FormControl>\n            {this.renderAddGroup()}\n          </Row>\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel required={true}>Type:</ControlLabel>\n\n          <FormControl\n            {...formProps}\n            name=\"type\"\n            componentClass=\"select\"\n            value={type}\n            onChange={this.onTypeChange}\n            required={true}\n          >\n            <option />\n            <option value=\"input\">Input</option>\n            <option value=\"textarea\">Text area</option>\n            <option value=\"select\">Select</option>\n            <option value=\"check\">Checkbox</option>\n            <option value=\"radio\">Radio button</option>\n            <option value=\"file\">File</option>\n          </FormControl>\n        </FormGroup>\n        {this.renderOptions()}\n\n        <FormGroup>\n          <ControlLabel>Validation:</ControlLabel>\n\n          <FormControl\n            {...formProps}\n            componentClass=\"select\"\n            name=\"validation\"\n            defaultValue={object.validation || ''}\n          >\n            <option />\n            <option value=\"email\">Email</option>\n            <option value=\"number\">Number</option>\n            <option value=\"date\">Date</option>\n          </FormControl>\n        </FormGroup>\n\n        <ModalFooter>\n          <Button btnStyle=\"simple\" onClick={closeModal} icon=\"times-circle\" uppercase={false}>\n            Close\n          </Button>\n\n          {renderButton({\n            name: 'property',\n            values: this.generateDoc(values),\n            isSubmitted,\n            callback: closeModal,\n            object: field\n          })}\n        </ModalFooter>\n      </>\n    );\n  };\n\n  render() {\n    return <Form renderContent={this.renderContent} />;\n  }\n}\n\nexport default PropertyForm;\n"]},"metadata":{},"sourceType":"module"}