{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/ModalTrigger.tsx\";\nimport { __ } from 'modules/common/utils';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport RTG from 'react-transition-group';\nimport { CloseModal } from '../styles/main';\nimport routerUtils from '../utils/router';\n\nvar ModalTrigger =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModalTrigger, _React$Component);\n\n  _createClass(ModalTrigger, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.autoOpenKey !== state.autoOpenKey) {\n        if (routerUtils.checkHashKeyInURL(props.history, props.autoOpenKey)) {\n          return {\n            isOpen: true,\n            autoOpenKey: props.autoOpenKey\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  function ModalTrigger(props) {\n    var _this;\n\n    _classCallCheck(this, ModalTrigger);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalTrigger).call(this, props));\n\n    _this.openModal = function () {\n      _this.setState({\n        isOpen: true\n      });\n    };\n\n    _this.closeModal = function () {\n      _this.setState({\n        isOpen: false\n      });\n    };\n\n    _this.renderHeader = function () {\n      if (_this.props.hideHeader) {\n        return React.createElement(CloseModal, {\n          onClick: _this.closeModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"times\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }));\n      }\n\n      var _this$props = _this.props,\n          title = _this$props.title,\n          ignoreTrans = _this$props.ignoreTrans,\n          paddingContent = _this$props.paddingContent;\n      return React.createElement(Modal.Header, {\n        closeButton: true,\n        className: paddingContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, ignoreTrans ? title : __(title)));\n    };\n\n    _this.state = {\n      isOpen: props.isOpen || false,\n      autoOpenKey: ''\n    };\n    return _this;\n  }\n\n  _createClass(ModalTrigger, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          trigger = _this$props2.trigger,\n          size = _this$props2.size,\n          dialogClassName = _this$props2.dialogClassName,\n          content = _this$props2.content,\n          backDrop = _this$props2.backDrop,\n          enforceFocus = _this$props2.enforceFocus,\n          onExit = _this$props2.onExit,\n          paddingContent = _this$props2.paddingContent,\n          centered = _this$props2.centered,\n          _this$props2$isAnimat = _this$props2.isAnimate,\n          isAnimate = _this$props2$isAnimat === void 0 ? false : _this$props2$isAnimat;\n      var isOpen = this.state.isOpen; // add onclick event to the trigger component\n\n      var triggerComponent = trigger ? React.cloneElement(trigger, {\n        onClick: this.openModal\n      }) : null;\n      return React.createElement(React.Fragment, null, triggerComponent, React.createElement(Modal, {\n        dialogClassName: dialogClassName,\n        size: size,\n        show: isOpen,\n        onHide: this.closeModal,\n        backdrop: backDrop,\n        enforceFocus: enforceFocus,\n        onExit: onExit,\n        animation: isAnimate,\n        centered: centered,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.renderHeader(), React.createElement(Modal.Body, {\n        className: paddingContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(RTG.Transition, {\n        in: isOpen,\n        timeout: 300,\n        unmountOnExit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, content({\n        closeModal: this.closeModal\n      })))));\n    }\n  }]);\n\n  return ModalTrigger;\n}(React.Component);\n\nexport default withRouter(ModalTrigger);","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/ModalTrigger.tsx"],"names":["__","Icon","React","Modal","withRouter","RTG","CloseModal","routerUtils","ModalTrigger","props","state","autoOpenKey","checkHashKeyInURL","history","isOpen","openModal","setState","closeModal","renderHeader","hideHeader","title","ignoreTrans","paddingContent","trigger","size","dialogClassName","content","backDrop","enforceFocus","onExit","centered","isAnimate","triggerComponent","cloneElement","onClick","Component"],"mappings":"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","sourcesContent":["import { __ } from 'modules/common/utils';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport RTG from 'react-transition-group';\nimport { CloseModal } from '../styles/main';\nimport { IRouterProps } from '../types';\nimport routerUtils from '../utils/router';\n\ntype Props = {\n  title: string;\n  trigger?: React.ReactNode;\n  autoOpenKey?: string;\n  content: ({ closeModal }: { closeModal: () => void }) => void;\n  size?: 'sm' | 'lg' | 'xl';\n  ignoreTrans?: boolean;\n  dialogClassName?: string;\n  backDrop?: 'static' | boolean;\n  enforceFocus?: boolean;\n  hideHeader?: boolean;\n  isOpen?: boolean;\n  history: any;\n  paddingContent?: 'less-padding';\n  centered?: boolean;\n  onExit?: () => void;\n  isAnimate?: boolean;\n} & IRouterProps;\n\ntype State = {\n  isOpen?: boolean;\n  autoOpenKey?: string;\n};\n\nclass ModalTrigger extends React.Component<Props, State> {\n  static getDerivedStateFromProps(props, state) {\n    if (props.autoOpenKey !== state.autoOpenKey) {\n      if (routerUtils.checkHashKeyInURL(props.history, props.autoOpenKey)) {\n        return {\n          isOpen: true,\n          autoOpenKey: props.autoOpenKey\n        };\n      }\n    }\n\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: props.isOpen || false,\n      autoOpenKey: ''\n    };\n  }\n\n  openModal = () => {\n    this.setState({ isOpen: true });\n  };\n\n  closeModal = () => {\n    this.setState({ isOpen: false });\n  };\n\n  renderHeader = () => {\n    if (this.props.hideHeader) {\n      return (\n        <CloseModal onClick={this.closeModal}>\n          <Icon icon=\"times\" />\n        </CloseModal>\n      );\n    }\n\n    const { title, ignoreTrans, paddingContent } = this.props;\n\n    return (\n      <Modal.Header closeButton={true} className={paddingContent}>\n        <Modal.Title>{ignoreTrans ? title : __(title)}</Modal.Title>\n      </Modal.Header>\n    );\n  };\n\n  render() {\n    const {\n      trigger,\n      size,\n      dialogClassName,\n      content,\n      backDrop,\n      enforceFocus,\n      onExit,\n      paddingContent,\n      centered,\n      isAnimate = false\n    } = this.props;\n\n    const { isOpen } = this.state;\n\n    // add onclick event to the trigger component\n    const triggerComponent = trigger\n      ? React.cloneElement(trigger as React.ReactElement<any>, {\n          onClick: this.openModal\n        })\n      : null;\n\n    return (\n      <>\n        {triggerComponent}\n\n        <Modal\n          dialogClassName={dialogClassName}\n          size={size}\n          show={isOpen}\n          onHide={this.closeModal}\n          backdrop={backDrop}\n          enforceFocus={enforceFocus}\n          onExit={onExit}\n          animation={isAnimate}\n          centered={centered}\n        >\n          {this.renderHeader()}\n          <Modal.Body className={paddingContent}>\n            <RTG.Transition in={isOpen} timeout={300} unmountOnExit={true}>\n              {content({ closeModal: this.closeModal })}\n            </RTG.Transition>\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default withRouter(ModalTrigger);\n"]},"metadata":{},"sourceType":"module"}