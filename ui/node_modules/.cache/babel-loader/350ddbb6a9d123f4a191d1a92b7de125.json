{"ast":null,"code":"import _toConsumableArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/segments/components/SegmentsList.tsx\";\nimport Button from \"modules/common/components/Button\";\nimport DataWithLoader from \"modules/common/components/DataWithLoader\";\nimport EmptyContent from \"modules/common/components/empty/EmptyContent\";\nimport Label from \"modules/common/components/Label\";\nimport Table from \"modules/common/components/table\";\nimport Tip from \"modules/common/components/Tip\";\nimport ActionButtons from \"erxes-common-ui/lib/components/actionButtons\";\nimport { Title } from \"modules/common/styles/main\";\nimport { __ } from \"modules/common/utils\";\nimport Wrapper from \"modules/layout/components/Wrapper\";\nimport { EMPTY_SEGMENT_CONTENT } from \"modules/settings/constants\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar\";\n\nvar SegmentsList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SegmentsList, _React$Component);\n\n  function SegmentsList() {\n    _classCallCheck(this, SegmentsList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SegmentsList).apply(this, arguments));\n  }\n\n  _createClass(SegmentsList, [{\n    key: \"renderActionButtons\",\n    value: function renderActionButtons(segment) {\n      var _this$props = this.props,\n          contentType = _this$props.contentType,\n          removeSegment = _this$props.removeSegment;\n\n      var onClick = function onClick() {\n        removeSegment(segment._id);\n      };\n\n      return React.createElement(ActionButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Tip, {\n        text: __(\"Edit\"),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/segments/edit/\".concat(contentType, \"/\").concat(segment._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"link\",\n        icon: \"edit-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }))), React.createElement(Tip, {\n        text: __(\"Delete\"),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"link\",\n        onClick: onClick,\n        icon: \"times-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent(segments) {\n      var _this = this;\n\n      return React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, __(\"Name\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __(\"Description\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __(\"Color\")), React.createElement(\"th\", {\n        style: {\n          width: 80\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }))), React.createElement(\"tbody\", {\n        id: \"SegmentShowing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, segments.map(function (segment) {\n        return React.createElement(\"tr\", {\n          key: segment._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, segment.subOf ? \"\\xA0\\xA0\" : null, \" \", segment.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, segment.description), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(Label, {\n          lblColor: segment.color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, segment.color)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, _this.renderActionButtons(segment)));\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          contentType = _this$props2.contentType,\n          loading = _this$props2.loading,\n          segments = _this$props2.segments;\n      var parentSegments = [];\n      segments.forEach(function (segment) {\n        if (!segment.subOf) {\n          parentSegments.push.apply(parentSegments, [segment].concat(_toConsumableArray(segment.getSubSegments)));\n        }\n      });\n      var breadcrumb = [{\n        title: __(\"Settings\"),\n        link: \"/settings\"\n      }, {\n        title: __(\"Segments\")\n      }];\n      var title = React.createElement(Title, {\n        capitalize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, contentType, \" \", __(\"segments\"));\n      var actionBarRight = React.createElement(Link, {\n        id: \"NewSegmentButton\",\n        to: \"/segments/new/\".concat(contentType),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"primary\",\n        uppercase: false,\n        icon: \"plus-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"New segment\"));\n      var actionBar = React.createElement(Wrapper.ActionBar, {\n        left: title,\n        right: actionBarRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      });\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          title: __(\"Segments\"),\n          breadcrumb: breadcrumb,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }),\n        actionBar: actionBar,\n        content: React.createElement(DataWithLoader, {\n          data: this.renderContent(parentSegments),\n          loading: loading,\n          count: parentSegments.length,\n          emptyContent: React.createElement(EmptyContent, {\n            content: EMPTY_SEGMENT_CONTENT,\n            maxItemWidth: \"330px\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }),\n        leftSidebar: React.createElement(Sidebar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SegmentsList;\n}(React.Component);\n\nexport default SegmentsList;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/segments/components/SegmentsList.tsx"],"names":["Button","DataWithLoader","EmptyContent","Label","Table","Tip","ActionButtons","Title","__","Wrapper","EMPTY_SEGMENT_CONTENT","React","Link","Sidebar","SegmentsList","segment","props","contentType","removeSegment","onClick","_id","segments","width","map","subOf","name","description","color","renderActionButtons","loading","parentSegments","forEach","push","getSubSegments","breadcrumb","title","link","actionBarRight","actionBar","renderContent","length","Component"],"mappings":"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","sourcesContent":["import Button from \"modules/common/components/Button\";\nimport DataWithLoader from \"modules/common/components/DataWithLoader\";\nimport EmptyContent from \"modules/common/components/empty/EmptyContent\";\nimport Label from \"modules/common/components/Label\";\nimport Table from \"modules/common/components/table\";\nimport Tip from \"modules/common/components/Tip\";\nimport ActionButtons from \"erxes-common-ui/lib/components/actionButtons\";\nimport { Title } from \"modules/common/styles/main\";\nimport { __ } from \"modules/common/utils\";\nimport Wrapper from \"modules/layout/components/Wrapper\";\nimport { EMPTY_SEGMENT_CONTENT } from \"modules/settings/constants\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ISegment } from \"../types\";\nimport Sidebar from \"./Sidebar\";\n\ntype Props = {\n  contentType?: string;\n  segments: ISegment[];\n  loading: boolean;\n  removeSegment: (segmentId: string) => void;\n};\n\nclass SegmentsList extends React.Component<Props> {\n  renderActionButtons(segment) {\n    const { contentType, removeSegment } = this.props;\n\n    const onClick = () => {\n      removeSegment(segment._id);\n    };\n\n    return (\n      <ActionButtons>\n        <Tip text={__(\"Edit\")} placement=\"top\">\n          <Link to={`/segments/edit/${contentType}/${segment._id}`}>\n            <Button btnStyle=\"link\" icon=\"edit-3\" />\n          </Link>\n        </Tip>\n        <Tip text={__(\"Delete\")} placement=\"top\">\n          <Button btnStyle=\"link\" onClick={onClick} icon=\"times-circle\" />\n        </Tip>\n      </ActionButtons>\n    );\n  }\n\n  renderContent(segments) {\n    return (\n      <Table>\n        <thead>\n          <tr>\n            <th>{__(\"Name\")}</th>\n            <th>{__(\"Description\")}</th>\n            <th>{__(\"Color\")}</th>\n            <th style={{ width: 80 }} />\n          </tr>\n        </thead>\n        <tbody id={\"SegmentShowing\"}>\n          {segments.map((segment) => (\n            <tr key={segment._id}>\n              <td>\n                {segment.subOf ? \"\\u00a0\\u00a0\" : null} {segment.name}\n              </td>\n              <td>{segment.description}</td>\n              <td>\n                <Label lblColor={segment.color}>{segment.color}</Label>\n              </td>\n              <td>{this.renderActionButtons(segment)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    );\n  }\n\n  render() {\n    const { contentType, loading, segments } = this.props;\n    const parentSegments: ISegment[] = [];\n\n    segments.forEach((segment) => {\n      if (!segment.subOf) {\n        parentSegments.push(segment, ...segment.getSubSegments);\n      }\n    });\n\n    const breadcrumb = [\n      { title: __(\"Settings\"), link: \"/settings\" },\n      { title: __(\"Segments\") },\n    ];\n\n    const title = (\n      <Title capitalize={true}>\n        {contentType} {__(\"segments\")}\n      </Title>\n    );\n\n    const actionBarRight = (\n      <Link id={\"NewSegmentButton\"} to={`/segments/new/${contentType}`}>\n        <Button btnStyle=\"primary\" uppercase={false} icon=\"plus-circle\">\n          New segment\n        </Button>\n      </Link>\n    );\n\n    const actionBar = <Wrapper.ActionBar left={title} right={actionBarRight} />;\n\n    return (\n      <Wrapper\n        header={\n          <Wrapper.Header title={__(\"Segments\")} breadcrumb={breadcrumb} />\n        }\n        actionBar={actionBar}\n        content={\n          <DataWithLoader\n            data={this.renderContent(parentSegments)}\n            loading={loading}\n            count={parentSegments.length}\n            emptyContent={\n              <EmptyContent\n                content={EMPTY_SEGMENT_CONTENT}\n                maxItemWidth=\"330px\"\n              />\n            }\n          />\n        }\n        leftSidebar={<Sidebar />}\n      />\n    );\n  }\n}\n\nexport default SegmentsList;\n"]},"metadata":{},"sourceType":"module"}