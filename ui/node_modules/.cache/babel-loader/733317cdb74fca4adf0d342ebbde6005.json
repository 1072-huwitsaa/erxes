{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/components/common/TaggerSection.tsx\";\nimport Box from 'modules/common/components/Box';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { __ } from 'modules/common/utils';\nimport { SidebarList } from 'modules/layout/styles';\nimport Tagger from 'modules/tags/containers/Tagger';\nimport React from 'react';\nimport Collapse from 'react-bootstrap/Collapse';\n\nvar TaggerSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TaggerSection, _React$Component);\n\n  function TaggerSection(props) {\n    var _this;\n\n    _classCallCheck(this, TaggerSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaggerSection).call(this, props));\n\n    _this.toggleTagger = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        isTaggerVisible: !_this.state.isTaggerVisible\n      });\n    };\n\n    _this.state = {\n      isTaggerVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(TaggerSection, [{\n    key: \"renderTags\",\n    value: function renderTags(tags) {\n      if (!tags.length) {\n        return React.createElement(EmptyState, {\n          icon: \"tag-alt\",\n          text: \"Not tagged yet\",\n          size: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(SidebarList, {\n        className: \"no-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, tags.map(function (_ref) {\n        var _id = _ref._id,\n            colorCode = _ref.colorCode,\n            name = _ref.name;\n        return React.createElement(\"li\", {\n          key: _id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"tag-alt\",\n          style: {\n            color: colorCode\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), name);\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          type = _this$props.type,\n          refetchQueries = _this$props.refetchQueries,\n          collapseCallback = _this$props.collapseCallback;\n      var tags = data.getTags || [];\n      var extraButtons = React.createElement(\"a\", {\n        href: \"#settings\",\n        tabIndex: 0,\n        onClick: this.toggleTagger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"cog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n      return React.createElement(Box, {\n        title: __('Tags'),\n        name: \"showTags\",\n        extraButtons: extraButtons,\n        callback: collapseCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Collapse, {\n        in: this.state.isTaggerVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Tagger, {\n        type: type,\n        targets: [data],\n        className: \"sidebar-accordion\",\n        event: \"onClick\",\n        refetchQueries: refetchQueries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), this.renderTags(tags));\n    }\n  }]);\n\n  return TaggerSection;\n}(React.Component);\n\nexport default TaggerSection;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/components/common/TaggerSection.tsx"],"names":["Box","EmptyState","Icon","__","SidebarList","Tagger","React","Collapse","TaggerSection","props","toggleTagger","e","preventDefault","setState","isTaggerVisible","state","tags","length","map","_id","colorCode","name","color","data","type","refetchQueries","collapseCallback","getTags","extraButtons","renderTags","Component"],"mappings":"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","sourcesContent":["import Box from 'modules/common/components/Box';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { __ } from 'modules/common/utils';\nimport { SidebarList } from 'modules/layout/styles';\nimport Tagger from 'modules/tags/containers/Tagger';\nimport React from 'react';\nimport Collapse from 'react-bootstrap/Collapse';\n\ntype Props = {\n  data: any;\n  type: string;\n  refetchQueries?: any[];\n  collapseCallback?: () => void;\n};\n\ntype State = {\n  isTaggerVisible: boolean;\n};\n\nclass TaggerSection extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isTaggerVisible: false\n    };\n  }\n\n  toggleTagger = e => {\n    e.preventDefault();\n\n    this.setState({ isTaggerVisible: !this.state.isTaggerVisible });\n  };\n\n  renderTags(tags) {\n    if (!tags.length) {\n      return <EmptyState icon=\"tag-alt\" text=\"Not tagged yet\" size=\"small\" />;\n    }\n\n    return (\n      <SidebarList className=\"no-link\">\n        {tags.map(({ _id, colorCode, name }) => (\n          <li key={_id}>\n            <Icon icon=\"tag-alt\" style={{ color: colorCode }} />\n            {name}\n          </li>\n        ))}\n      </SidebarList>\n    );\n  }\n\n  render() {\n    const { data, type, refetchQueries, collapseCallback } = this.props;\n    const tags = data.getTags || [];\n\n    const extraButtons = (\n      <a href=\"#settings\" tabIndex={0} onClick={this.toggleTagger}>\n        <Icon icon=\"cog\" />\n      </a>\n    );\n\n    return (\n      <Box\n        title={__('Tags')}\n        name=\"showTags\"\n        extraButtons={extraButtons}\n        callback={collapseCallback}\n      >\n        <Collapse in={this.state.isTaggerVisible}>\n          <Tagger\n            type={type}\n            targets={[data]}\n            className=\"sidebar-accordion\"\n            event=\"onClick\"\n            refetchQueries={refetchQueries}\n          />\n        </Collapse>\n        {this.renderTags(tags)}\n      </Box>\n    );\n  }\n}\n\nexport default TaggerSection;\n"]},"metadata":{},"sourceType":"module"}