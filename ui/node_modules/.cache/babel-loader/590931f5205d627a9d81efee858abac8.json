{"ast":null,"code":"var _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/productService/containers/TagFilter.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport CountsByTag from 'modules/common/components/CountsByTag';\nimport { TAG_TYPES } from 'modules/tags/constants';\nimport { queries as tagQueries } from 'modules/tags/graphql';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { queries } from '../graphql';\n\nvar TagFilterContainer = function TagFilterContainer(props) {\n  var countByTagsQuery = props.countByTagsQuery,\n      tagsQuery = props.tagsQuery;\n  var counts = countByTagsQuery.productCountByTags || {};\n  return React.createElement(CountsByTag, {\n    tags: (tagsQuery ? tagsQuery.tags : null) || [],\n    counts: counts,\n    manageUrl: \"/tags/product\",\n    loading: (tagsQuery ? tagsQuery.loading : null) || false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  });\n};\n\nexport default compose(graphql(gql(queries.productCountByTags), {\n  name: 'countByTagsQuery'\n}), graphql(gql(tagQueries.tags), {\n  name: 'tagsQuery',\n  options: function options() {\n    return {\n      variables: {\n        type: TAG_TYPES.PRODUCT\n      }\n    };\n  }\n}))(TagFilterContainer);","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/productService/containers/TagFilter.tsx"],"names":["gql","compose","CountsByTag","TAG_TYPES","queries","tagQueries","React","graphql","TagFilterContainer","props","countByTagsQuery","tagsQuery","counts","productCountByTags","tags","loading","name","options","variables","type","PRODUCT"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,OAAO,IAAIC,UAApB,QAAsC,sBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,SAASH,OAAT,QAAwB,YAAxB;;AAGA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAGrB;AAAA,MACIC,gBADJ,GACoCD,KADpC,CACIC,gBADJ;AAAA,MACsBC,SADtB,GACoCF,KADpC,CACsBE,SADtB;AAGJ,MAAMC,MAAM,GAAGF,gBAAgB,CAACG,kBAAjB,IAAuC,EAAtD;AAEA,SACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAE,CAACF,SAAS,GAAGA,SAAS,CAACG,IAAb,GAAoB,IAA9B,KAAuC,EAD/C;AAEE,IAAA,MAAM,EAAEF,MAFV;AAGE,IAAA,SAAS,EAAC,eAHZ;AAIE,IAAA,OAAO,EAAE,CAACD,SAAS,GAAGA,SAAS,CAACI,OAAb,GAAuB,IAAjC,KAA0C,KAJrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAhBD;;AAkBA,eAAed,OAAO,CACpBM,OAAO,CAAmCP,GAAG,CAACI,OAAO,CAACS,kBAAT,CAAtC,EAAoE;AACzEG,EAAAA,IAAI,EAAE;AADmE,CAApE,CADa,EAIpBT,OAAO,CAA0CP,GAAG,CAACK,UAAU,CAACS,IAAZ,CAA7C,EAAgE;AACrEE,EAAAA,IAAI,EAAE,WAD+D;AAErEC,EAAAA,OAAO,EAAE;AAAA,WAAO;AACdC,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAEhB,SAAS,CAACiB;AADP;AADG,KAAP;AAAA;AAF4D,CAAhE,CAJa,CAAP,CAYbZ,kBAZa,CAAf","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport CountsByTag from 'modules/common/components/CountsByTag';\nimport { TAG_TYPES } from 'modules/tags/constants';\nimport { queries as tagQueries } from 'modules/tags/graphql';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { TagsQueryResponse } from '../../../tags/types';\nimport { queries } from '../graphql';\nimport { CountByTagsQueryResponse } from '../types';\n\nconst TagFilterContainer = (props: {\n  countByTagsQuery: CountByTagsQueryResponse;\n  tagsQuery?: TagsQueryResponse;\n}) => {\n  const { countByTagsQuery, tagsQuery } = props;\n\n  const counts = countByTagsQuery.productCountByTags || {};\n\n  return (\n    <CountsByTag\n      tags={(tagsQuery ? tagsQuery.tags : null) || []}\n      counts={counts}\n      manageUrl=\"/tags/product\"\n      loading={(tagsQuery ? tagsQuery.loading : null) || false}\n    />\n  );\n};\n\nexport default compose(\n  graphql<{}, CountByTagsQueryResponse, {}>(gql(queries.productCountByTags), {\n    name: 'countByTagsQuery'\n  }),\n  graphql<{}, TagsQueryResponse, { type: string }>(gql(tagQueries.tags), {\n    name: 'tagsQuery',\n    options: () => ({\n      variables: {\n        type: TAG_TYPES.PRODUCT\n      }\n    })\n  })\n)(TagFilterContainer);\n"]},"metadata":{},"sourceType":"module"}