{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/containers/filters/IntegrationFilter.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withProps } from '../../../common/utils';\nimport IntegrationFilter from '../../components/list/IntegrationFilter';\nimport { queries as customerQueries } from '../../graphql';\n\nvar IntegrationFilterContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IntegrationFilterContainer, _React$Component);\n\n  function IntegrationFilterContainer() {\n    _classCallCheck(this, IntegrationFilterContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(IntegrationFilterContainer).apply(this, arguments));\n  }\n\n  _createClass(IntegrationFilterContainer, [{\n    key: \"render\",\n    value: function render() {\n      var customersCountQuery = this.props.customersCountQuery;\n      var counts = (customersCountQuery ? customersCountQuery.customerCounts : null) || {\n        byIntegrationType: {}\n      };\n\n      var updatedProps = _objectSpread({}, this.props, {\n        loading: (customersCountQuery ? customersCountQuery.loading : null) || false,\n        counts: counts.byIntegrationType\n      });\n\n      return React.createElement(IntegrationFilter, Object.assign({}, updatedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return IntegrationFilterContainer;\n}(React.Component);\n\nexport default withProps(compose(graphql(gql(customerQueries.customerCounts), {\n  name: 'customersCountQuery',\n  skip: function skip(_ref) {\n    var loadingMainQuery = _ref.loadingMainQuery;\n    return loadingMainQuery;\n  },\n  options: function options(_ref2) {\n    var type = _ref2.type;\n    return {\n      variables: {\n        type: type,\n        only: 'byIntegrationType'\n      }\n    };\n  }\n}))(IntegrationFilterContainer));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/containers/filters/IntegrationFilter.tsx"],"names":["gql","compose","React","graphql","withProps","IntegrationFilter","queries","customerQueries","IntegrationFilterContainer","customersCountQuery","props","counts","customerCounts","byIntegrationType","updatedProps","loading","Component","name","skip","loadingMainQuery","options","type","variables","only"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;AACA,SAASC,OAAO,IAAIC,eAApB,QAA2C,eAA3C;;IAOMC,0B;;;;;;;;;;;;;6BACK;AAAA,UACCC,mBADD,GACyB,KAAKC,KAD9B,CACCD,mBADD;AAGP,UAAME,MAAM,GAAG,CAACF,mBAAmB,GAC/BA,mBAAmB,CAACG,cADW,GAE/B,IAFW,KAEF;AAAEC,QAAAA,iBAAiB,EAAE;AAArB,OAFb;;AAIA,UAAMC,YAAY,qBACb,KAAKJ,KADQ;AAEhBK,QAAAA,OAAO,EACL,CAACN,mBAAmB,GAAGA,mBAAmB,CAACM,OAAvB,GAAiC,IAArD,KAA8D,KAHhD;AAIhBJ,QAAAA,MAAM,EAAEA,MAAM,CAACE;AAJC,QAAlB;;AAOA,aAAO,oBAAC,iBAAD,oBAAuBC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAhBsCZ,KAAK,CAACc,S;;AAwB/C,eAAeZ,SAAS,CACtBH,OAAO,CACLE,OAAO,CACLH,GAAG,CAACO,eAAe,CAACK,cAAjB,CADE,EAEL;AACEK,EAAAA,IAAI,EAAE,qBADR;AAEEC,EAAAA,IAAI,EAAE;AAAA,QAAGC,gBAAH,QAAGA,gBAAH;AAAA,WAA0BA,gBAA1B;AAAA,GAFR;AAGEC,EAAAA,OAAO,EAAE;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,WAAe;AACtBC,MAAAA,SAAS,EAAE;AAAED,QAAAA,IAAI,EAAJA,IAAF;AAAQE,QAAAA,IAAI,EAAE;AAAd;AADW,KAAf;AAAA;AAHX,CAFK,CADF,CAAP,CAWEf,0BAXF,CADsB,CAAxB","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withProps } from '../../../common/utils';\nimport IntegrationFilter from '../../components/list/IntegrationFilter';\nimport { queries as customerQueries } from '../../graphql';\nimport { CountQueryResponse } from '../../types';\n\ntype Props = {\n  customersCountQuery?: CountQueryResponse;\n};\n\nclass IntegrationFilterContainer extends React.Component<Props> {\n  render() {\n    const { customersCountQuery } = this.props;\n\n    const counts = (customersCountQuery\n      ? customersCountQuery.customerCounts\n      : null) || { byIntegrationType: {} };\n\n    const updatedProps = {\n      ...this.props,\n      loading:\n        (customersCountQuery ? customersCountQuery.loading : null) || false,\n      counts: counts.byIntegrationType\n    };\n\n    return <IntegrationFilter {...updatedProps} />;\n  }\n}\n\ntype WrapperProps = {\n  type: string;\n  loadingMainQuery: boolean;\n};\n\nexport default withProps<WrapperProps>(\n  compose(\n    graphql<WrapperProps, CountQueryResponse, { only: string }>(\n      gql(customerQueries.customerCounts),\n      {\n        name: 'customersCountQuery',\n        skip: ({ loadingMainQuery }) => loadingMainQuery,\n        options: ({ type }) => ({\n          variables: { type, only: 'byIntegrationType' }\n        })\n      }\n    )\n  )(IntegrationFilterContainer)\n);\n"]},"metadata":{},"sourceType":"module"}