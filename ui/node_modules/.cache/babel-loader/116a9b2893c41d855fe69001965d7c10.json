{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/growthHacks/components/TemplateForm.tsx\";\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport React from 'react';\nimport CommonForm from '../../common/components/Form';\nimport { Warning } from '../styles';\nimport Stages from './Stages';\n\nvar TemplateForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TemplateForm, _React$Component);\n\n  function TemplateForm(props) {\n    var _this;\n\n    _classCallCheck(this, TemplateForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TemplateForm).call(this, props));\n\n    _this.onEditorChange = function (e) {\n      _this.setState({\n        content: e.editor.getData()\n      });\n    };\n\n    _this.generateDoc = function (values) {\n      var object = _this.props.object;\n      var finalValues = values;\n      var stages = _this.state.stages;\n\n      if (object) {\n        finalValues._id = object._id;\n      }\n\n      return {\n        _id: finalValues._id,\n        name: finalValues.name,\n        description: finalValues.description,\n        type: 'growthHack',\n        stages: stages.filter(function (el) {\n          return el.name && el.formId;\n        })\n      };\n    };\n\n    _this.onChangeStages = function (stages) {\n      _this.setState({\n        stages: stages\n      });\n    };\n\n    _this.renderContent = function (formProps) {\n      var object = _this.props.object || {};\n      return React.createElement(React.Fragment, null, _this.renderWarning(), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Name\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"name\",\n        defaultValue: object.name,\n        type: \"text\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Description\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"description\",\n        defaultValue: object.description,\n        componentClass: \"textarea\",\n        type: \"text\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Stages\"), React.createElement(Stages, {\n        stages: _this.state.stages,\n        onChangeStages: _this.onChangeStages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })));\n    };\n\n    var _object = props.object;\n\n    var _stages = _object && _object.stages ? _object.stages : [];\n\n    _this.state = {\n      stages: _stages.map(function (stage) {\n        return {\n          _id: stage._id,\n          name: stage.name,\n          formId: stage.formId\n        };\n      }),\n      content: _object && _object.content || ''\n    };\n    return _this;\n  }\n\n  _createClass(TemplateForm, [{\n    key: \"renderWarning\",\n    value: function renderWarning() {\n      if (!this.props.object) {\n        return null;\n      }\n\n      return React.createElement(Warning, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"The previous projects using that template will not change. Only changes to the newly chosen projects.\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CommonForm, Object.assign({}, this.props, {\n        name: \"growth hack template\",\n        renderContent: this.renderContent,\n        generateDoc: this.generateDoc,\n        object: this.props.object,\n        confirmationUpdate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TemplateForm;\n}(React.Component);\n\nexport default TemplateForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/growthHacks/components/TemplateForm.tsx"],"names":["FormControl","FormGroup","ControlLabel","React","CommonForm","Warning","Stages","TemplateForm","props","onEditorChange","e","setState","content","editor","getData","generateDoc","values","object","finalValues","stages","state","_id","name","description","type","filter","el","formId","onChangeStages","renderContent","formProps","renderWarning","map","stage","Component"],"mappings":"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","sourcesContent":["import { IStage } from 'modules/boards/types';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { IFormProps } from 'modules/common/types';\nimport React from 'react';\nimport CommonForm from '../../common/components/Form';\nimport { ICommonFormProps } from '../../common/types';\nimport { Warning } from '../styles';\nimport { IPipelineTemplate } from '../types';\nimport Stages from './Stages';\n\ntype Props = {\n  object?: IPipelineTemplate;\n} & ICommonFormProps;\n\ntype State = {\n  content: string;\n  stages: IStage[];\n};\n\nclass TemplateForm extends React.Component<Props & ICommonFormProps, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const { object } = props;\n    const stages = object && object.stages ? object.stages : [];\n\n    this.state = {\n      stages: stages.map((stage: IStage) => ({\n        _id: stage._id,\n        name: stage.name,\n        formId: stage.formId\n      })),\n      content: (object && object.content) || ''\n    };\n  }\n\n  onEditorChange = e => {\n    this.setState({ content: e.editor.getData() });\n  };\n\n  generateDoc = (values: {\n    _id?: string;\n    name: string;\n    description: string;\n  }) => {\n    const { object } = this.props;\n    const finalValues = values;\n    const { stages } = this.state;\n\n    if (object) {\n      finalValues._id = object._id;\n    }\n\n    return {\n      _id: finalValues._id,\n      name: finalValues.name,\n      description: finalValues.description,\n      type: 'growthHack',\n      stages: stages.filter(el => el.name && el.formId)\n    };\n  };\n\n  onChangeStages = stages => {\n    this.setState({ stages });\n  };\n\n  renderWarning() {\n    if (!this.props.object) {\n      return null;\n    }\n\n    return (\n      <Warning>\n        The previous projects using that template will not change. Only changes\n        to the newly chosen projects.\n      </Warning>\n    );\n  }\n\n  renderContent = (formProps: IFormProps) => {\n    const object = this.props.object || ({} as IPipelineTemplate);\n\n    return (\n      <>\n        {this.renderWarning()}\n        <FormGroup>\n          <ControlLabel required={true}>Name</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"name\"\n            defaultValue={object.name}\n            type=\"text\"\n            required={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel required={true}>Description</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"description\"\n            defaultValue={object.description}\n            componentClass=\"textarea\"\n            type=\"text\"\n            required={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Stages</ControlLabel>\n          <Stages\n            stages={this.state.stages}\n            onChangeStages={this.onChangeStages}\n          />\n        </FormGroup>\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <CommonForm\n        {...this.props}\n        name=\"growth hack template\"\n        renderContent={this.renderContent}\n        generateDoc={this.generateDoc}\n        object={this.props.object}\n        confirmationUpdate={true}\n      />\n    );\n  }\n}\n\nexport default TemplateForm;\n"]},"metadata":{},"sourceType":"module"}