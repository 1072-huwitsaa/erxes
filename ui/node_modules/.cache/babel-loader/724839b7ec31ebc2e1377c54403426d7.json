{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/ResponseReport.tsx\";\nimport Spinner from 'modules/common/components/Spinner';\nimport { __ } from 'modules/common/utils';\nimport { menuInbox } from 'modules/common/utils/menus';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport React from 'react';\nimport { InsightContent, InsightRow, InsightTitle, InsightWrapper, LoaderWrapper } from '../styles';\nimport Chart from './Chart';\nimport InboxFilter from './filter/InboxFilter';\nimport PunchCard from './PunchCard';\nimport Sidebar from './Sidebar';\nimport Summary from './Summary';\n\nvar ResponseReport =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResponseReport, _React$Component);\n\n  function ResponseReport(props) {\n    var _this;\n\n    _classCallCheck(this, ResponseReport);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResponseReport).call(this, props));\n    _this.wrapper = void 0;\n    _this.state = {\n      width: 600\n    };\n    return _this;\n  }\n\n  _createClass(ResponseReport, [{\n    key: \"calculateWidth\",\n    value: function calculateWidth() {\n      var width = this.wrapper.clientWidth;\n      this.setState({\n        width: width\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.loading.punch && !this.props.loading.punchCard) {\n        this.calculateWidth();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.calculateWidth();\n    }\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle(title, time) {\n      return React.createElement(InsightTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, __(title), time ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"(\", time, \")\") : null);\n    }\n  }, {\n    key: \"renderTrend\",\n    value: function renderTrend(name, loading, trend) {\n      var _this2 = this;\n\n      var innerRef = function innerRef(node) {\n        _this2.wrapper = node;\n      };\n\n      return React.createElement(InsightRow, {\n        innerRef: innerRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.renderTitle(name), React.createElement(Chart, {\n        loading: loading,\n        height: 360,\n        data: trend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderPunchCard\",\n    value: function renderPunchCard(loading, punch, width) {\n      var content = React.createElement(LoaderWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        objective: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n\n      if (!loading.punchCard) {\n        content = React.createElement(PunchCard, {\n          data: punch,\n          width: width,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(InsightRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.renderTitle('Punch card'), content);\n    }\n  }, {\n    key: \"renderCharts\",\n    value: function renderCharts() {\n      var _this$props = this.props,\n          trend = _this$props.trend,\n          punchCard = _this$props.punchCard,\n          summaryData = _this$props.summaryData,\n          loading = _this$props.loading;\n      var width = this.state.width;\n      return React.createElement(InsightContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(InsightRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.renderTitle('Response Times summary'), React.createElement(Summary, {\n        loading: loading.summaryData,\n        data: summaryData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), this.renderTrend('Response Trend', loading.trend, trend), this.renderPunchCard(loading, punchCard, width));\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$props2 = this.props,\n          brands = _this$props2.brands,\n          history = _this$props2.history,\n          queryParams = _this$props2.queryParams;\n      return React.createElement(InsightWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(InboxFilter, {\n        history: history,\n        brands: brands,\n        queryParams: queryParams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), this.renderCharts());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          title: __('Response Report'),\n          submenu: menuInbox,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }),\n        leftSidebar: React.createElement(Sidebar, {\n          queryParams: this.props.queryParams,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }),\n        content: this.renderContent(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ResponseReport;\n}(React.Component);\n\nexport default ResponseReport;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/ResponseReport.tsx"],"names":["Spinner","__","menuInbox","Wrapper","React","InsightContent","InsightRow","InsightTitle","InsightWrapper","LoaderWrapper","Chart","InboxFilter","PunchCard","Sidebar","Summary","ResponseReport","props","wrapper","state","width","clientWidth","setState","prevProps","loading","punch","punchCard","calculateWidth","title","time","name","trend","innerRef","node","renderTitle","content","summaryData","renderTrend","renderPunchCard","brands","history","queryParams","renderCharts","renderContent","Component"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,mCAApB;AACA,SAASC,EAAT,QAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,cADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,cAJF,EAKEC,aALF,QAMO,WANP;AAaA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAkBMC,c;;;;;AAGJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;AADiB,UAFXC,OAEW;AAGjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAHiB;AAMlB;;;;qCAEgB;AACf,UAAMA,KAAK,GAAG,KAAKF,OAAL,CAAaG,WAA3B;AACA,WAAKC,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAALA;AAAF,OAAd;AACD;;;uCAEkBG,S,EAAW;AAC5B,UAAIA,SAAS,CAACC,OAAV,CAAkBC,KAAlB,IAA2B,CAAC,KAAKR,KAAL,CAAWO,OAAX,CAAmBE,SAAnD,EAA8D;AAC5D,aAAKC,cAAL;AACD;AACF;;;wCAEmB;AAClB,WAAKA,cAAL;AACD;;;gCAEWC,K,EAAeC,I,EAAe;AACxC,aACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG3B,EAAE,CAAC0B,KAAD,CADL,EAEGC,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQA,IAAR,MAAH,GAA2B,IAFlC,CADF;AAMD;;;gCAEWC,I,EAAcN,O,EAAkBO,K,EAAuB;AAAA;;AACjE,UAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI,EAAI;AACvB,QAAA,MAAI,CAACf,OAAL,GAAee,IAAf;AACD,OAFD;;AAIA,aACE,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAED,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKE,WAAL,CAAiBJ,IAAjB,CADH,EAEE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAEN,OAAhB;AAAyB,QAAA,MAAM,EAAE,GAAjC;AAAsC,QAAA,IAAI,EAAEO,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;oCAEeP,O,EAAmBC,K,EAAyBL,K,EAAe;AACzE,UAAIe,OAAO,GACT,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;;AAMA,UAAI,CAACX,OAAO,CAACE,SAAb,EAAwB;AACtBS,QAAAA,OAAO,GAAG,oBAAC,SAAD;AAAW,UAAA,IAAI,EAAEV,KAAjB;AAAwB,UAAA,KAAK,EAAEL,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACD;;AAED,aACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKc,WAAL,CAAiB,YAAjB,CADH,EAEGC,OAFH,CADF;AAMD;;;mCAEc;AAAA,wBACsC,KAAKlB,KAD3C;AAAA,UACLc,KADK,eACLA,KADK;AAAA,UACEL,SADF,eACEA,SADF;AAAA,UACaU,WADb,eACaA,WADb;AAAA,UAC0BZ,OAD1B,eAC0BA,OAD1B;AAGb,UAAMJ,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;AAEA,aACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKc,WAAL,CAAiB,wBAAjB,CADH,EAEE,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAEV,OAAO,CAACY,WAA1B;AAAuC,QAAA,IAAI,EAAEA,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAMG,KAAKC,WAAL,CAAiB,gBAAjB,EAAmCb,OAAO,CAACO,KAA3C,EAAkDA,KAAlD,CANH,EAQG,KAAKO,eAAL,CAAqBd,OAArB,EAA8BE,SAA9B,EAAyCN,KAAzC,CARH,CADF;AAYD;;;oCAEe;AAAA,yBAC2B,KAAKH,KADhC;AAAA,UACNsB,MADM,gBACNA,MADM;AAAA,UACEC,OADF,gBACEA,OADF;AAAA,UACWC,WADX,gBACWA,WADX;AAGd,aACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,OAAO,EAAED,OADX;AAEE,QAAA,MAAM,EAAED,MAFV;AAGE,QAAA,WAAW,EAAEE,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAMG,KAAKC,YAAL,EANH,CADF;AAUD;;;6BAEQ;AACP,aACE,oBAAC,OAAD;AACE,QAAA,MAAM,EACJ,oBAAC,OAAD,CAAS,MAAT;AAAgB,UAAA,KAAK,EAAExC,EAAE,CAAC,iBAAD,CAAzB;AAA8C,UAAA,OAAO,EAAEC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAIE,QAAA,WAAW,EAAE,oBAAC,OAAD;AAAS,UAAA,WAAW,EAAE,KAAKc,KAAL,CAAWwB,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJf;AAKE,QAAA,OAAO,EAAE,KAAKE,aAAL,EALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD;;;;EA/G0BtC,KAAK,CAACuC,S;;AAkHnC,eAAe5B,cAAf","sourcesContent":["import Spinner from 'modules/common/components/Spinner';\nimport { __ } from 'modules/common/utils';\nimport { menuInbox } from 'modules/common/utils/menus';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport React from 'react';\nimport { IBrand } from '../../settings/brands/types';\nimport {\n  InsightContent,\n  InsightRow,\n  InsightTitle,\n  InsightWrapper,\n  LoaderWrapper\n} from '../styles';\nimport {\n  IChartParams,\n  IPunchCardData,\n  IQueryParams,\n  SummaryData\n} from '../types';\nimport Chart from './Chart';\nimport InboxFilter from './filter/InboxFilter';\nimport PunchCard from './PunchCard';\nimport Sidebar from './Sidebar';\nimport Summary from './Summary';\n\ntype ILoading = {\n  summaryData: boolean;\n  trend: boolean;\n  punchCard: boolean;\n};\n\ntype Props = {\n  brands: IBrand[];\n  queryParams: IQueryParams;\n  history: any;\n  summaryData: SummaryData[];\n  trend: IChartParams[];\n  punchCard: IPunchCardData[];\n  loading: ILoading;\n};\n\nclass ResponseReport extends React.Component<Props, { width: number }> {\n  private wrapper;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 600\n    };\n  }\n\n  calculateWidth() {\n    const width = this.wrapper.clientWidth;\n    this.setState({ width });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.loading.punch && !this.props.loading.punchCard) {\n      this.calculateWidth();\n    }\n  }\n\n  componentDidMount() {\n    this.calculateWidth();\n  }\n\n  renderTitle(title: string, time?: string) {\n    return (\n      <InsightTitle>\n        {__(title)}\n        {time ? <span>({time})</span> : null}\n      </InsightTitle>\n    );\n  }\n\n  renderTrend(name: string, loading: boolean, trend: IChartParams[]) {\n    const innerRef = node => {\n      this.wrapper = node;\n    };\n\n    return (\n      <InsightRow innerRef={innerRef}>\n        {this.renderTitle(name)}\n        <Chart loading={loading} height={360} data={trend} />\n      </InsightRow>\n    );\n  }\n\n  renderPunchCard(loading: ILoading, punch: IPunchCardData[], width: number) {\n    let content = (\n      <LoaderWrapper>\n        <Spinner objective={true} />\n      </LoaderWrapper>\n    );\n\n    if (!loading.punchCard) {\n      content = <PunchCard data={punch} width={width} />;\n    }\n\n    return (\n      <InsightRow>\n        {this.renderTitle('Punch card')}\n        {content}\n      </InsightRow>\n    );\n  }\n\n  renderCharts() {\n    const { trend, punchCard, summaryData, loading } = this.props;\n\n    const width = this.state.width;\n\n    return (\n      <InsightContent>\n        <InsightRow>\n          {this.renderTitle('Response Times summary')}\n          <Summary loading={loading.summaryData} data={summaryData} />\n        </InsightRow>\n\n        {this.renderTrend('Response Trend', loading.trend, trend)}\n\n        {this.renderPunchCard(loading, punchCard, width)}\n      </InsightContent>\n    );\n  }\n\n  renderContent() {\n    const { brands, history, queryParams } = this.props;\n\n    return (\n      <InsightWrapper>\n        <InboxFilter\n          history={history}\n          brands={brands}\n          queryParams={queryParams}\n        />\n        {this.renderCharts()}\n      </InsightWrapper>\n    );\n  }\n\n  render() {\n    return (\n      <Wrapper\n        header={\n          <Wrapper.Header title={__('Response Report')} submenu={menuInbox} />\n        }\n        leftSidebar={<Sidebar queryParams={this.props.queryParams} />}\n        content={this.renderContent()}\n      />\n    );\n  }\n}\n\nexport default ResponseReport;\n"]},"metadata":{},"sourceType":"module"}