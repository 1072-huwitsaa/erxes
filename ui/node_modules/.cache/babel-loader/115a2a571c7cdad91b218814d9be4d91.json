{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/label/LabelChooser.tsx\";\nimport { ColorButton } from 'modules/boards/styles/common';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { __ } from 'modules/common/utils';\nimport * as React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { ChooseLabelWrapper } from '../../styles/label';\nimport Overlay from './Overlay';\n\nvar ChooseLabel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChooseLabel, _React$Component);\n\n  function ChooseLabel(props) {\n    var _this;\n\n    _classCallCheck(this, ChooseLabel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChooseLabel).call(this, props));\n    _this.overlayTrigger = void 0;\n\n    _this.onOverlayClose = function () {\n      _this.overlayTrigger.hide();\n    };\n\n    _this.onSelectLabels = function (selectedLabelIds) {\n      _this.setState({\n        selectedLabelIds: selectedLabelIds\n      });\n\n      _this.props.doLabel(selectedLabelIds);\n    };\n\n    _this.state = {\n      selectedLabelIds: props.selectedLabelIds\n    };\n    return _this;\n  }\n\n  _createClass(ChooseLabel, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.selectedLabelIds.toString() !== prevProps.selectedLabelIds.toString()) {\n        this.setState({\n          selectedLabelIds: this.props.selectedLabelIds\n        });\n      }\n    }\n  }, {\n    key: \"renderOverlay\",\n    value: function renderOverlay() {\n      var _this$props = this.props,\n          labels = _this$props.labels,\n          toggleConfirm = _this$props.toggleConfirm,\n          pipelineId = _this$props.pipelineId;\n      var selectedLabelIds = this.state.selectedLabelIds;\n      var props = {\n        pipelineId: pipelineId,\n        selectedLabelIds: selectedLabelIds,\n        labels: labels,\n        toggleConfirm: toggleConfirm,\n        onClose: this.onOverlayClose,\n        onSelectLabels: this.onSelectLabels\n      };\n      return React.createElement(Overlay, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ChooseLabelWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(OverlayTrigger, {\n        ref: function ref(overlayTrigger) {\n          _this2.overlayTrigger = overlayTrigger;\n        },\n        trigger: \"click\",\n        placement: \"bottom\",\n        overlay: this.renderOverlay(),\n        rootClose: !this.props.isConfirmVisible,\n        container: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(ColorButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"label-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), __('Labels'))));\n    }\n  }]);\n\n  return ChooseLabel;\n}(React.Component);\n\nexport default ChooseLabel;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/label/LabelChooser.tsx"],"names":["ColorButton","Icon","__","React","OverlayTrigger","ChooseLabelWrapper","Overlay","ChooseLabel","props","overlayTrigger","onOverlayClose","hide","onSelectLabels","selectedLabelIds","setState","doLabel","state","prevProps","toString","labels","toggleConfirm","pipelineId","onClose","renderOverlay","isConfirmVisible","Component"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,8BAA5B;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,SAASC,EAAT,QAAmB,sBAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AAEA,OAAOC,OAAP,MAAoB,WAApB;;IAWMC,W;;;;;AAMJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AADiB,UAFXC,cAEW;;AAAA,UAenBC,cAfmB,GAeF,YAAM;AACrB,YAAKD,cAAL,CAAoBE,IAApB;AACD,KAjBkB;;AAAA,UAmBnBC,cAnBmB,GAmBF,UAACC,gBAAD,EAAgC;AAC/C,YAAKC,QAAL,CAAc;AAAED,QAAAA,gBAAgB,EAAhBA;AAAF,OAAd;;AAEA,YAAKL,KAAL,CAAWO,OAAX,CAAmBF,gBAAnB;AACD,KAvBkB;;AAGjB,UAAKG,KAAL,GAAa;AAAEH,MAAAA,gBAAgB,EAAEL,KAAK,CAACK;AAA1B,KAAb;AAHiB;AAIlB;;;;uCAEkBI,S,EAAkB;AACnC,UACE,KAAKT,KAAL,CAAWK,gBAAX,CAA4BK,QAA5B,OACAD,SAAS,CAACJ,gBAAV,CAA2BK,QAA3B,EAFF,EAGE;AACA,aAAKJ,QAAL,CAAc;AAAED,UAAAA,gBAAgB,EAAE,KAAKL,KAAL,CAAWK;AAA/B,SAAd;AACD;AACF;;;oCAYe;AAAA,wBACgC,KAAKL,KADrC;AAAA,UACNW,MADM,eACNA,MADM;AAAA,UACEC,aADF,eACEA,aADF;AAAA,UACiBC,UADjB,eACiBA,UADjB;AAAA,UAENR,gBAFM,GAEe,KAAKG,KAFpB,CAENH,gBAFM;AAId,UAAML,KAAK,GAAG;AACZa,QAAAA,UAAU,EAAVA,UADY;AAEZR,QAAAA,gBAAgB,EAAhBA,gBAFY;AAGZM,QAAAA,MAAM,EAANA,MAHY;AAIZC,QAAAA,aAAa,EAAbA,aAJY;AAKZE,QAAAA,OAAO,EAAE,KAAKZ,cALF;AAMZE,QAAAA,cAAc,EAAE,KAAKA;AANT,OAAd;AASA,aAAO,oBAAC,OAAD,oBAAaJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AACE,QAAA,GAAG,EAAE,aAAAC,cAAc,EAAI;AACrB,UAAA,MAAI,CAACA,cAAL,GAAsBA,cAAtB;AACD,SAHH;AAIE,QAAA,OAAO,EAAC,OAJV;AAKE,QAAA,SAAS,EAAC,QALZ;AAME,QAAA,OAAO,EAAE,KAAKc,aAAL,EANX;AAOE,QAAA,SAAS,EAAE,CAAC,KAAKf,KAAL,CAAWgB,gBAPzB;AAQE,QAAA,SAAS,EAAE,IARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGtB,EAAE,CAAC,QAAD,CAFL,CAVF,CADF,CADF;AAmBD;;;;EAnEuBC,KAAK,CAACsB,S;;AAsEhC,eAAelB,WAAf","sourcesContent":["import { ColorButton } from 'modules/boards/styles/common';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { __ } from 'modules/common/utils';\nimport * as React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { ChooseLabelWrapper } from '../../styles/label';\nimport { IPipelineLabel } from '../../types';\nimport Overlay from './Overlay';\n\ntype Props = {\n  pipelineId: string;\n  selectedLabelIds: string[];\n  labels: IPipelineLabel[];\n  doLabel: (labelIds: string[]) => void;\n  isConfirmVisible: boolean;\n  toggleConfirm: (callback?: () => void) => void;\n};\n\nclass ChooseLabel extends React.Component<\n  Props,\n  { selectedLabelIds: string[] }\n> {\n  private overlayTrigger;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { selectedLabelIds: props.selectedLabelIds };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      this.props.selectedLabelIds.toString() !==\n      prevProps.selectedLabelIds.toString()\n    ) {\n      this.setState({ selectedLabelIds: this.props.selectedLabelIds });\n    }\n  }\n\n  onOverlayClose = () => {\n    this.overlayTrigger.hide();\n  };\n\n  onSelectLabels = (selectedLabelIds: string[]) => {\n    this.setState({ selectedLabelIds });\n\n    this.props.doLabel(selectedLabelIds);\n  };\n\n  renderOverlay() {\n    const { labels, toggleConfirm, pipelineId } = this.props;\n    const { selectedLabelIds } = this.state;\n\n    const props = {\n      pipelineId,\n      selectedLabelIds,\n      labels,\n      toggleConfirm,\n      onClose: this.onOverlayClose,\n      onSelectLabels: this.onSelectLabels\n    };\n\n    return <Overlay {...props} />;\n  }\n\n  render() {\n    return (\n      <ChooseLabelWrapper>\n        <OverlayTrigger\n          ref={overlayTrigger => {\n            this.overlayTrigger = overlayTrigger;\n          }}\n          trigger=\"click\"\n          placement=\"bottom\"\n          overlay={this.renderOverlay()}\n          rootClose={!this.props.isConfirmVisible}\n          container={this}\n        >\n          <ColorButton>\n            <Icon icon=\"label-alt\" />\n            {__('Labels')}\n          </ColorButton>\n        </OverlayTrigger>\n      </ChooseLabelWrapper>\n    );\n  }\n}\n\nexport default ChooseLabel;\n"]},"metadata":{},"sourceType":"module"}