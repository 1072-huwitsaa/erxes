{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/components/FormBase.tsx\";\nimport { __, Alert } from 'modules/common/utils';\nimport React from 'react';\nimport { METHODS } from '../constants';\n\nvar FormBase =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormBase, _React$Component);\n\n  function FormBase() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormBase);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormBase)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.validateDoc = function (docType, doc) {\n      if (!doc.title) {\n        return _this.sendError(__('Write a title'));\n      }\n\n      if (!doc.fromUserId && doc.method !== METHODS.SMS) {\n        return _this.sendError(__('Choose a sender'));\n      }\n\n      if (doc.messenger) {\n        var _doc$messenger = doc.messenger,\n            brandId = _doc$messenger.brandId,\n            sentAs = _doc$messenger.sentAs,\n            content = _doc$messenger.content;\n\n        if (!brandId) {\n          return _this.sendError(__('Choose a brand'));\n        }\n\n        if (!sentAs) {\n          return _this.sendError(__('Choose a sent as'));\n        }\n\n        if (!content) {\n          return _this.sendError(__('Write a content'));\n        }\n      }\n\n      if (doc.email) {\n        var _doc$email = doc.email,\n            subject = _doc$email.subject,\n            _content = _doc$email.content;\n\n        if (!subject) {\n          return _this.sendError(__('Write an email subject'));\n        }\n\n        if (!_content) {\n          return _this.sendError(__('Write a content'));\n        }\n      }\n\n      if (doc.scheduleDate) {\n        var _doc$scheduleDate = doc.scheduleDate,\n            _type = _doc$scheduleDate.type,\n            day = _doc$scheduleDate.day,\n            month = _doc$scheduleDate.month;\n\n        if (!_type) {\n          return _this.sendError(__('Choose a schedule day'));\n        }\n\n        if ((_type === 'year' || _type === 'month') && !day) {\n          return _this.sendError(__('Choose a schedule day'));\n        }\n\n        if (_type === 'year' && !month) {\n          return _this.sendError(__('Choose a schedule day'));\n        }\n      }\n\n      if (docType === 'live') {\n        return {\n          status: 'ok',\n          doc: _objectSpread({\n            isLive: true,\n            isDraft: false\n          }, doc)\n        };\n      }\n\n      if (docType === 'draft') {\n        return {\n          status: 'ok',\n          doc: _objectSpread({\n            isLive: false,\n            isDraft: true\n          }, doc)\n        };\n      }\n\n      return {\n        status: 'ok',\n        doc: doc\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(FormBase, [{\n    key: \"sendError\",\n    value: function sendError(message) {\n      Alert.error(message);\n      return {\n        status: 'error'\n      };\n    }\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle() {\n      var kind = this.props.kind;\n\n      var title = __('Auto message');\n\n      if (kind === 'manual') {\n        title = __('Manual message');\n      }\n\n      if (kind === 'visitorAuto') {\n        title = __('Visitor auto message');\n      }\n\n      return title;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var breadcrumbs = [{\n        title: __('Engage'),\n        link: '/engage'\n      }, {\n        title: this.renderTitle()\n      }];\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.props.content({\n        renderTitle: function renderTitle() {\n          return _this2.renderTitle();\n        },\n        breadcrumbs: breadcrumbs,\n        validateDoc: this.validateDoc\n      }));\n    }\n  }]);\n\n  return FormBase;\n}(React.Component);\n\nexport default FormBase;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/components/FormBase.tsx"],"names":["__","Alert","React","METHODS","FormBase","validateDoc","docType","doc","title","sendError","fromUserId","method","SMS","messenger","brandId","sentAs","content","email","subject","scheduleDate","type","day","month","status","isLive","isDraft","message","error","kind","props","breadcrumbs","link","renderTitle","Component"],"mappings":"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","sourcesContent":["import { IBreadCrumbItem } from 'modules/common/types';\nimport { __, Alert } from 'modules/common/utils';\nimport React from 'react';\nimport { METHODS } from '../constants';\nimport { IEngageMessageDoc } from '../types';\n\ntype Props = {\n  kind: string;\n  content: (params: {\n    renderTitle: () => string;\n    breadcrumbs: IBreadCrumbItem[];\n    validateDoc: (\n      type: string,\n      doc: IEngageMessageDoc\n    ) => { status: string; doc?: IEngageMessageDoc };\n  }) => any;\n};\n\nclass FormBase extends React.Component<Props> {\n  sendError(message: string): { status: string } {\n    Alert.error(message);\n\n    return { status: 'error' };\n  }\n\n  validateDoc = (docType, doc): { status: string; doc?: IEngageMessageDoc } => {\n    if (!doc.title) {\n      return this.sendError(__('Write a title'));\n    }\n\n    if (!doc.fromUserId && doc.method !== METHODS.SMS) {\n      return this.sendError(__('Choose a sender'));\n    }\n\n    if (doc.messenger) {\n      const { brandId, sentAs, content } = doc.messenger;\n\n      if (!brandId) {\n        return this.sendError(__('Choose a brand'));\n      }\n\n      if (!sentAs) {\n        return this.sendError(__('Choose a sent as'));\n      }\n\n      if (!content) {\n        return this.sendError(__('Write a content'));\n      }\n    }\n\n    if (doc.email) {\n      const { subject, content } = doc.email;\n\n      if (!subject) {\n        return this.sendError(__('Write an email subject'));\n      }\n\n      if (!content) {\n        return this.sendError(__('Write a content'));\n      }\n    }\n\n    if (doc.scheduleDate) {\n      const { type, day, month } = doc.scheduleDate;\n\n      if (!type) {\n        return this.sendError(__('Choose a schedule day'));\n      }\n\n      if ((type === 'year' || type === 'month') && !day) {\n        return this.sendError(__('Choose a schedule day'));\n      }\n\n      if (type === 'year' && !month) {\n        return this.sendError(__('Choose a schedule day'));\n      }\n    }\n\n    if (docType === 'live') {\n      return {\n        status: 'ok',\n        doc: { isLive: true, isDraft: false, ...doc }\n      };\n    }\n\n    if (docType === 'draft') {\n      return {\n        status: 'ok',\n        doc: { isLive: false, isDraft: true, ...doc }\n      };\n    }\n\n    return { status: 'ok', doc };\n  };\n\n  renderTitle() {\n    const { kind } = this.props;\n\n    let title = __('Auto message');\n\n    if (kind === 'manual') {\n      title = __('Manual message');\n    }\n\n    if (kind === 'visitorAuto') {\n      title = __('Visitor auto message');\n    }\n\n    return title;\n  }\n\n  render() {\n    const breadcrumbs = [\n      { title: __('Engage'), link: '/engage' },\n      { title: this.renderTitle() }\n    ];\n\n    return (\n      <React.Fragment>\n        {this.props.content({\n          renderTitle: () => this.renderTitle(),\n          breadcrumbs,\n          validateDoc: this.validateDoc\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default FormBase;\n"]},"metadata":{},"sourceType":"module"}