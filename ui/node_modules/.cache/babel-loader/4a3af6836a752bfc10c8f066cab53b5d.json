{"ast":null,"code":"var _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/companies/components/list/CompanyRow.tsx\";\nimport _ from 'lodash';\nimport FormControl from 'modules/common/components/form/Control';\nimport NameCard from 'modules/common/components/nameCard/NameCard';\nimport Tags from 'modules/common/components/Tags';\nimport { formatValue } from 'modules/common/utils';\nimport { ClickableRow } from 'modules/customers/styles';\nimport React from 'react';\nimport { FlexItem } from '../../styles';\n\nfunction displayObjectListItem(company, customFieldName, subFieldName) {\n  var objectList = company[customFieldName] || [];\n  var subFieldKey = subFieldName.replace(\"\".concat(customFieldName, \".\"), '');\n  var subField = objectList.find ? objectList.find(function (obj) {\n    return obj.field === subFieldKey;\n  }) : [];\n\n  if (!subField) {\n    return null;\n  }\n\n  return formatValue(subField.value);\n}\n\nfunction displayValue(company, name) {\n  var value = _.get(company, name);\n\n  if (name === 'primaryName') {\n    return React.createElement(FlexItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(NameCard.Avatar, {\n      company: company,\n      size: 30,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), \" \\u2003\", formatValue(company.primaryName));\n  }\n\n  if (name.includes('customFieldsData')) {\n    return displayObjectListItem(company, 'customFieldsData', name);\n  }\n\n  return formatValue(value);\n}\n\nfunction CompanyRow(_ref) {\n  var company = _ref.company,\n      columnsConfig = _ref.columnsConfig,\n      history = _ref.history,\n      isChecked = _ref.isChecked,\n      toggleBulk = _ref.toggleBulk;\n  var tags = company.getTags || [];\n\n  var onChange = function onChange(e) {\n    if (toggleBulk) {\n      toggleBulk(company, e.target.checked);\n    }\n  };\n\n  var onClick = function onClick(e) {\n    e.stopPropagation();\n  };\n\n  var onTrClick = function onTrClick() {\n    history.push(\"/companies/details/\".concat(company._id));\n  };\n\n  return React.createElement(\"tr\", {\n    onClick: onTrClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    id: \"companiesCheckBox\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    checked: isChecked,\n    componentClass: \"checkbox\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), columnsConfig.map(function (_ref2) {\n    var name = _ref2.name;\n    return React.createElement(\"td\", {\n      key: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(ClickableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, displayValue(company, name)));\n  }), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Tags, {\n    tags: tags,\n    limit: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })));\n}\n\nexport default CompanyRow;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/companies/components/list/CompanyRow.tsx"],"names":["_","FormControl","NameCard","Tags","formatValue","ClickableRow","React","FlexItem","displayObjectListItem","company","customFieldName","subFieldName","objectList","subFieldKey","replace","subField","find","obj","field","value","displayValue","name","get","primaryName","includes","CompanyRow","columnsConfig","history","isChecked","toggleBulk","tags","getTags","onChange","e","target","checked","onClick","stopPropagation","onTrClick","push","_id","map"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport FormControl from 'modules/common/components/form/Control';\nimport NameCard from 'modules/common/components/nameCard/NameCard';\nimport Tags from 'modules/common/components/Tags';\nimport { formatValue } from 'modules/common/utils';\nimport { ClickableRow } from 'modules/customers/styles';\nimport React from 'react';\nimport { FlexItem } from '../../styles';\nimport { ICompany } from '../../types';\n\ntype Props = {\n  company: ICompany;\n  columnsConfig: any[];\n  history: any;\n  isChecked: boolean;\n  toggleBulk: (company: ICompany, isChecked?: boolean) => void;\n};\n\nfunction displayObjectListItem(company, customFieldName, subFieldName) {\n  const objectList = company[customFieldName] || [];\n  const subFieldKey = subFieldName.replace(`${customFieldName}.`, '');\n\n  const subField = objectList.find\n    ? objectList.find(obj => obj.field === subFieldKey)\n    : [];\n\n  if (!subField) {\n    return null;\n  }\n\n  return formatValue(subField.value);\n}\n\nfunction displayValue(company, name) {\n  const value = _.get(company, name);\n\n  if (name === 'primaryName') {\n    return (\n      <FlexItem>\n        <NameCard.Avatar company={company} size={30} /> &emsp;\n        {formatValue(company.primaryName)}\n      </FlexItem>\n    );\n  }\n\n  if (name.includes('customFieldsData')) {\n    return displayObjectListItem(company, 'customFieldsData', name);\n  }\n\n  return formatValue(value);\n}\n\nfunction CompanyRow({\n  company,\n  columnsConfig,\n  history,\n  isChecked,\n  toggleBulk\n}: Props) {\n  const tags = company.getTags || [];\n\n  const onChange = e => {\n    if (toggleBulk) {\n      toggleBulk(company, e.target.checked);\n    }\n  };\n\n  const onClick = e => {\n    e.stopPropagation();\n  };\n\n  const onTrClick = () => {\n    history.push(`/companies/details/${company._id}`);\n  };\n\n  return (\n    <tr onClick={onTrClick}>\n      <td id=\"companiesCheckBox\" onClick={onClick}>\n        <FormControl\n          checked={isChecked}\n          componentClass=\"checkbox\"\n          onChange={onChange}\n        />\n      </td>\n      {columnsConfig.map(({ name }) => (\n        <td key={name}>\n          <ClickableRow>{displayValue(company, name)}</ClickableRow>\n        </td>\n      ))}\n      <td>\n        <Tags tags={tags} limit={2} />\n      </td>\n    </tr>\n  );\n}\n\nexport default CompanyRow;\n"]},"metadata":{},"sourceType":"module"}