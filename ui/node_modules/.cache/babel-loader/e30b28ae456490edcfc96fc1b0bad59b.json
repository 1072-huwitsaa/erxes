{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/containers/InvisibleItemInUrl.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { withProps } from 'modules/common/utils';\nimport routerUtils from 'modules/common/utils/router';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\nimport { EditForm } from './editForm';\n\nvar InvisibleItemInUrl =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InvisibleItemInUrl, _React$PureComponent);\n\n  function InvisibleItemInUrl() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InvisibleItemInUrl);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InvisibleItemInUrl)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.beforePopupClose = function () {\n      var history = _this.props.history;\n      routerUtils.removeParams(history, 'itemId');\n    };\n\n    return _this;\n  }\n\n  _createClass(InvisibleItemInUrl, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          options = _this$props.options,\n          itemId = _this$props.itemId,\n          detailQuery = _this$props.detailQuery;\n\n      if (detailQuery.loading) {\n        return null;\n      }\n\n      var item = detailQuery[options.queriesName.detailQuery];\n\n      if (!item) {\n        return null;\n      }\n\n      return React.createElement(EditForm, {\n        itemId: itemId,\n        options: options,\n        isPopupVisible: true,\n        stageId: item.stageId,\n        hideHeader: true,\n        beforePopupClose: this.beforePopupClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return InvisibleItemInUrl;\n}(React.PureComponent);\n\nvar withQuery = function withQuery(props) {\n  var options = props.options;\n  return withProps(compose(graphql(gql(options.queries.detailQuery), {\n    name: 'detailQuery',\n    options: function options(_ref) {\n      var itemId = _ref.itemId;\n      return {\n        variables: {\n          _id: itemId\n        },\n        fetchPolicy: 'network-only'\n      };\n    }\n  }))(withRouter(InvisibleItemInUrl)));\n};\n\nvar WithData =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WithData, _React$Component);\n\n  function WithData(props) {\n    var _this2;\n\n    _classCallCheck(this, WithData);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(WithData).call(this, props));\n    _this2.withQuery = void 0;\n    _this2.withQuery = withQuery(props);\n    return _this2;\n  }\n\n  _createClass(WithData, [{\n    key: \"render\",\n    value: function render() {\n      var Component = this.withQuery;\n      return React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return WithData;\n}(React.Component);\n\nexport { WithData as default };","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/containers/InvisibleItemInUrl.tsx"],"names":["gql","compose","withProps","routerUtils","React","graphql","withRouter","EditForm","InvisibleItemInUrl","beforePopupClose","history","props","removeParams","options","itemId","detailQuery","loading","item","queriesName","stageId","PureComponent","withQuery","queries","name","variables","_id","fetchPolicy","WithData","Component"],"mappings":";;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAEA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,QAAT,QAAyB,YAAzB;;IAYMC,kB;;;;;;;;;;;;;;;;;;UACJC,gB,GAAmB,YAAM;AAAA,UACfC,OADe,GACH,MAAKC,KADF,CACfD,OADe;AAGvBP,MAAAA,WAAW,CAACS,YAAZ,CAAyBF,OAAzB,EAAkC,QAAlC;AACD,K;;;;;;;6BAEQ;AAAA,wBACkC,KAAKC,KADvC;AAAA,UACCE,OADD,eACCA,OADD;AAAA,UACUC,MADV,eACUA,MADV;AAAA,UACkBC,WADlB,eACkBA,WADlB;;AAGP,UAAIA,WAAW,CAACC,OAAhB,EAAyB;AACvB,eAAO,IAAP;AACD;;AAED,UAAMC,IAAI,GAAGF,WAAW,CAACF,OAAO,CAACK,WAAR,CAAoBH,WAArB,CAAxB;;AAEA,UAAI,CAACE,IAAL,EAAW;AACT,eAAO,IAAP;AACD;;AAED,aACE,oBAAC,QAAD;AACE,QAAA,MAAM,EAAEH,MADV;AAEE,QAAA,OAAO,EAAED,OAFX;AAGE,QAAA,cAAc,EAAE,IAHlB;AAIE,QAAA,OAAO,EAAEI,IAAI,CAACE,OAJhB;AAKE,QAAA,UAAU,EAAE,IALd;AAME,QAAA,gBAAgB,EAAE,KAAKV,gBANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD;;;;EA9B8BL,KAAK,CAACgB,a;;AAiCvC,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACV,KAAD,EAAyB;AAAA,MACjCE,OADiC,GACrBF,KADqB,CACjCE,OADiC;AAGzC,SAAOX,SAAS,CACdD,OAAO,CACLI,OAAO,CACLL,GAAG,CAACa,OAAO,CAACS,OAAR,CAAgBP,WAAjB,CADE,EAEL;AACEQ,IAAAA,IAAI,EAAE,aADR;AAEEV,IAAAA,OAAO,EAAE,uBAAoC;AAAA,UAAjCC,MAAiC,QAAjCA,MAAiC;AAC3C,aAAO;AACLU,QAAAA,SAAS,EAAE;AACTC,UAAAA,GAAG,EAAEX;AADI,SADN;AAILY,QAAAA,WAAW,EAAE;AAJR,OAAP;AAMD;AATH,GAFK,CADF,CAAP,CAeEpB,UAAU,CAACE,kBAAD,CAfZ,CADc,CAAhB;AAkBD,CArBD;;IAuBqBmB,Q;;;;;AAGnB,oBAAYhB,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AADiB,WAFXU,SAEW;AAGjB,WAAKA,SAAL,GAAiBA,SAAS,CAACV,KAAD,CAA1B;AAHiB;AAIlB;;;;6BAEQ;AACP,UAAMiB,SAAS,GAAG,KAAKP,SAAvB;AAEA,aAAO,oBAAC,SAAD,oBAAe,KAAKV,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAbmCP,KAAK,CAACwB,S;;SAAvBD,Q","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { IRouterProps } from 'modules/common/types';\nimport { withProps } from 'modules/common/utils';\nimport routerUtils from 'modules/common/utils/router';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\nimport { DetailQueryResponse, IOptions } from '../types';\nimport { EditForm } from './editForm';\n\ntype WrapperProps = {\n  itemId: string;\n  options: IOptions;\n};\n\ntype FinalProps = WrapperProps &\n  IRouterProps & {\n    detailQuery: DetailQueryResponse;\n  };\n\nclass InvisibleItemInUrl extends React.PureComponent<FinalProps> {\n  beforePopupClose = () => {\n    const { history } = this.props;\n\n    routerUtils.removeParams(history, 'itemId');\n  };\n\n  render() {\n    const { options, itemId, detailQuery } = this.props;\n\n    if (detailQuery.loading) {\n      return null;\n    }\n\n    const item = detailQuery[options.queriesName.detailQuery];\n\n    if (!item) {\n      return null;\n    }\n\n    return (\n      <EditForm\n        itemId={itemId}\n        options={options}\n        isPopupVisible={true}\n        stageId={item.stageId}\n        hideHeader={true}\n        beforePopupClose={this.beforePopupClose}\n      />\n    );\n  }\n}\n\nconst withQuery = (props: WrapperProps) => {\n  const { options } = props;\n\n  return withProps<WrapperProps>(\n    compose(\n      graphql<WrapperProps, DetailQueryResponse, { _id: string }>(\n        gql(options.queries.detailQuery),\n        {\n          name: 'detailQuery',\n          options: ({ itemId }: { itemId: string }) => {\n            return {\n              variables: {\n                _id: itemId\n              },\n              fetchPolicy: 'network-only'\n            };\n          }\n        }\n      )\n    )(withRouter(InvisibleItemInUrl))\n  );\n};\n\nexport default class WithData extends React.Component<WrapperProps> {\n  private withQuery;\n\n  constructor(props) {\n    super(props);\n\n    this.withQuery = withQuery(props);\n  }\n\n  render() {\n    const Component = this.withQuery;\n\n    return <Component {...this.props} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}