{"ast":null,"code":"import { toArray } from 'modules/boards/utils';\nimport TaskEditForm from 'modules/tasks/components/TaskEditForm';\nimport TaskItem from './components/TaskItem';\nimport { mutations, queries } from './graphql';\nvar options = {\n  EditForm: TaskEditForm,\n  Item: TaskItem,\n  type: 'task',\n  title: 'Task',\n  queriesName: {\n    itemsQuery: 'tasks',\n    detailQuery: 'taskDetail',\n    archivedItemsQuery: 'archivedTasks',\n    archivedItemsCountQuery: 'archivedTasksCount'\n  },\n  mutationsName: {\n    addMutation: 'tasksAdd',\n    editMutation: 'tasksEdit',\n    removeMutation: 'tasksRemove',\n    changeMutation: 'tasksChange',\n    watchMutation: 'tasksWatch',\n    archiveMutation: 'tasksArchive',\n    copyMutation: 'tasksCopy',\n    updateTimeTrackMutation: 'updateTimeTrack'\n  },\n  queries: {\n    itemsQuery: queries.tasks,\n    detailQuery: queries.taskDetail,\n    archivedItemsQuery: queries.archivedTasks,\n    archivedItemsCountQuery: queries.archivedTasksCount\n  },\n  mutations: {\n    addMutation: mutations.tasksAdd,\n    editMutation: mutations.tasksEdit,\n    removeMutation: mutations.tasksRemove,\n    changeMutation: mutations.tasksChange,\n    watchMutation: mutations.tasksWatch,\n    archiveMutation: mutations.tasksArchive,\n    copyMutation: mutations.tasksCopy,\n    updateTimeTrackMutation: mutations.taskUpdateTimeTracking\n  },\n  texts: {\n    addText: 'Add a task',\n    updateSuccessText: 'You successfully updated a task',\n    deleteSuccessText: 'You successfully deleted a task',\n    copySuccessText: 'You successfully copied a task',\n    changeSuccessText: 'You successfully changed a task'\n  },\n  isMove: true,\n  getExtraParams: function getExtraParams(queryParams) {\n    var priority = queryParams.priority;\n    var extraParams = {};\n\n    if (priority) {\n      extraParams.priority = toArray(priority);\n    }\n\n    return extraParams;\n  }\n};\nexport default options;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/tasks/options.ts"],"names":["toArray","TaskEditForm","TaskItem","mutations","queries","options","EditForm","Item","type","title","queriesName","itemsQuery","detailQuery","archivedItemsQuery","archivedItemsCountQuery","mutationsName","addMutation","editMutation","removeMutation","changeMutation","watchMutation","archiveMutation","copyMutation","updateTimeTrackMutation","tasks","taskDetail","archivedTasks","archivedTasksCount","tasksAdd","tasksEdit","tasksRemove","tasksChange","tasksWatch","tasksArchive","tasksCopy","taskUpdateTimeTracking","texts","addText","updateSuccessText","deleteSuccessText","copySuccessText","changeSuccessText","isMove","getExtraParams","queryParams","priority","extraParams"],"mappings":"AAAA,SAASA,OAAT,QAAwB,sBAAxB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,WAAnC;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAEL,YADI;AAEdM,EAAAA,IAAI,EAAEL,QAFQ;AAGdM,EAAAA,IAAI,EAAE,MAHQ;AAIdC,EAAAA,KAAK,EAAE,MAJO;AAKdC,EAAAA,WAAW,EAAE;AACXC,IAAAA,UAAU,EAAE,OADD;AAEXC,IAAAA,WAAW,EAAE,YAFF;AAGXC,IAAAA,kBAAkB,EAAE,eAHT;AAIXC,IAAAA,uBAAuB,EAAE;AAJd,GALC;AAWdC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,UADA;AAEbC,IAAAA,YAAY,EAAE,WAFD;AAGbC,IAAAA,cAAc,EAAE,aAHH;AAIbC,IAAAA,cAAc,EAAE,aAJH;AAKbC,IAAAA,aAAa,EAAE,YALF;AAMbC,IAAAA,eAAe,EAAE,cANJ;AAObC,IAAAA,YAAY,EAAE,WAPD;AAQbC,IAAAA,uBAAuB,EAAE;AARZ,GAXD;AAqBdnB,EAAAA,OAAO,EAAE;AACPO,IAAAA,UAAU,EAAEP,OAAO,CAACoB,KADb;AAEPZ,IAAAA,WAAW,EAAER,OAAO,CAACqB,UAFd;AAGPZ,IAAAA,kBAAkB,EAAET,OAAO,CAACsB,aAHrB;AAIPZ,IAAAA,uBAAuB,EAAEV,OAAO,CAACuB;AAJ1B,GArBK;AA2BdxB,EAAAA,SAAS,EAAE;AACTa,IAAAA,WAAW,EAAEb,SAAS,CAACyB,QADd;AAETX,IAAAA,YAAY,EAAEd,SAAS,CAAC0B,SAFf;AAGTX,IAAAA,cAAc,EAAEf,SAAS,CAAC2B,WAHjB;AAITX,IAAAA,cAAc,EAAEhB,SAAS,CAAC4B,WAJjB;AAKTX,IAAAA,aAAa,EAAEjB,SAAS,CAAC6B,UALhB;AAMTX,IAAAA,eAAe,EAAElB,SAAS,CAAC8B,YANlB;AAOTX,IAAAA,YAAY,EAAEnB,SAAS,CAAC+B,SAPf;AAQTX,IAAAA,uBAAuB,EAAEpB,SAAS,CAACgC;AAR1B,GA3BG;AAqCdC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,YADJ;AAELC,IAAAA,iBAAiB,EAAE,iCAFd;AAGLC,IAAAA,iBAAiB,EAAE,iCAHd;AAILC,IAAAA,eAAe,EAAE,gCAJZ;AAKLC,IAAAA,iBAAiB,EAAE;AALd,GArCO;AA4CdC,EAAAA,MAAM,EAAE,IA5CM;AA6CdC,EAAAA,cAAc,EAAE,wBAACC,WAAD,EAAsB;AAAA,QAC5BC,QAD4B,GACfD,WADe,CAC5BC,QAD4B;AAEpC,QAAMC,WAAgB,GAAG,EAAzB;;AAEA,QAAID,QAAJ,EAAc;AACZC,MAAAA,WAAW,CAACD,QAAZ,GAAuB7C,OAAO,CAAC6C,QAAD,CAA9B;AACD;;AAED,WAAOC,WAAP;AACD;AAtDa,CAAhB;AAyDA,eAAezC,OAAf","sourcesContent":["import { toArray } from 'modules/boards/utils';\nimport TaskEditForm from 'modules/tasks/components/TaskEditForm';\nimport TaskItem from './components/TaskItem';\nimport { mutations, queries } from './graphql';\n\nconst options = {\n  EditForm: TaskEditForm,\n  Item: TaskItem,\n  type: 'task',\n  title: 'Task',\n  queriesName: {\n    itemsQuery: 'tasks',\n    detailQuery: 'taskDetail',\n    archivedItemsQuery: 'archivedTasks',\n    archivedItemsCountQuery: 'archivedTasksCount'\n  },\n  mutationsName: {\n    addMutation: 'tasksAdd',\n    editMutation: 'tasksEdit',\n    removeMutation: 'tasksRemove',\n    changeMutation: 'tasksChange',\n    watchMutation: 'tasksWatch',\n    archiveMutation: 'tasksArchive',\n    copyMutation: 'tasksCopy',\n    updateTimeTrackMutation: 'updateTimeTrack'\n  },\n  queries: {\n    itemsQuery: queries.tasks,\n    detailQuery: queries.taskDetail,\n    archivedItemsQuery: queries.archivedTasks,\n    archivedItemsCountQuery: queries.archivedTasksCount\n  },\n  mutations: {\n    addMutation: mutations.tasksAdd,\n    editMutation: mutations.tasksEdit,\n    removeMutation: mutations.tasksRemove,\n    changeMutation: mutations.tasksChange,\n    watchMutation: mutations.tasksWatch,\n    archiveMutation: mutations.tasksArchive,\n    copyMutation: mutations.tasksCopy,\n    updateTimeTrackMutation: mutations.taskUpdateTimeTracking\n  },\n  texts: {\n    addText: 'Add a task',\n    updateSuccessText: 'You successfully updated a task',\n    deleteSuccessText: 'You successfully deleted a task',\n    copySuccessText: 'You successfully copied a task',\n    changeSuccessText: 'You successfully changed a task'\n  },\n  isMove: true,\n  getExtraParams: (queryParams: any) => {\n    const { priority } = queryParams;\n    const extraParams: any = {};\n\n    if (priority) {\n      extraParams.priority = toArray(priority);\n    }\n\n    return extraParams;\n  }\n};\n\nexport default options;\n"]},"metadata":{},"sourceType":"module"}