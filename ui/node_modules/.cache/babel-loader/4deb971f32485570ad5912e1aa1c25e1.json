{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/containers/facebook/Form.tsx\";\nimport client from 'apolloClient';\nimport gql from 'graphql-tag';\nimport ButtonMutate from 'modules/common/components/ButtonMutate';\nimport { Alert } from 'modules/common/utils';\nimport Facebook from 'modules/settings/integrations/components/facebook/Form';\nimport { mutations, queries } from 'modules/settings/integrations/graphql';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { getRefetchQueries } from '../utils';\n\nvar FacebookContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FacebookContainer, _React$Component);\n\n  function FacebookContainer(props) {\n    var _this;\n\n    _classCallCheck(this, FacebookContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FacebookContainer).call(this, props));\n\n    _this.onAccountSelect = function (accountId) {\n      if (!accountId) {\n        return _this.setState({\n          pages: [],\n          accountId: ''\n        });\n      }\n\n      _this.setState({\n        loadingPages: true\n      });\n\n      client.query({\n        query: gql(queries.fetchApi),\n        variables: {\n          path: '/facebook/get-pages',\n          params: {\n            accountId: accountId\n          }\n        }\n      }).then(function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading;\n\n        if (!loading) {\n          _this.setState({\n            pages: data.integrationsFetchApi,\n            accountId: accountId,\n            loadingPages: false\n          });\n        }\n      }).catch(function (error) {\n        Alert.error(error.message);\n\n        _this.setState({\n          loadingPages: false\n        });\n      });\n    };\n\n    _this.onRemoveAccount = function () {\n      _this.setState({\n        pages: []\n      });\n    };\n\n    _this.renderButton = function (_ref2) {\n      var name = _ref2.name,\n          values = _ref2.values,\n          isSubmitted = _ref2.isSubmitted,\n          callback = _ref2.callback;\n      var kind = _this.props.kind;\n      return React.createElement(ButtonMutate, {\n        mutation: mutations.integrationsCreateExternalIntegration,\n        variables: values,\n        callback: callback,\n        refetchQueries: getRefetchQueries(kind),\n        isSubmitted: isSubmitted,\n        type: \"submit\",\n        uppercase: false,\n        successMessage: \"You successfully added a \".concat(name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    };\n\n    _this.state = {\n      pages: [],\n      loadingPages: false\n    };\n    return _this;\n  }\n\n  _createClass(FacebookContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          callBack = _this$props.callBack,\n          kind = _this$props.kind;\n      var _this$state = this.state,\n          accountId = _this$state.accountId,\n          pages = _this$state.pages,\n          loadingPages = _this$state.loadingPages;\n      var updatedProps = {\n        kind: kind,\n        callBack: callBack,\n        accountId: accountId,\n        pages: pages,\n        loadingPages: loadingPages,\n        onAccountSelect: this.onAccountSelect,\n        onRemoveAccount: this.onRemoveAccount,\n        renderButton: this.renderButton\n      };\n      return React.createElement(Facebook, Object.assign({}, updatedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FacebookContainer;\n}(React.Component);\n\nexport default withRouter(FacebookContainer);","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/containers/facebook/Form.tsx"],"names":["client","gql","ButtonMutate","Alert","Facebook","mutations","queries","React","withRouter","getRefetchQueries","FacebookContainer","props","onAccountSelect","accountId","setState","pages","loadingPages","query","fetchApi","variables","path","params","then","data","loading","integrationsFetchApi","catch","error","message","onRemoveAccount","renderButton","name","values","isSubmitted","callback","kind","integrationsCreateExternalIntegration","state","callBack","updatedProps","Component"],"mappings":"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","sourcesContent":["import client from 'apolloClient';\nimport gql from 'graphql-tag';\nimport ButtonMutate from 'modules/common/components/ButtonMutate';\nimport { IButtonMutateProps, IRouterProps } from 'modules/common/types';\nimport { Alert } from 'modules/common/utils';\nimport Facebook from 'modules/settings/integrations/components/facebook/Form';\nimport { mutations, queries } from 'modules/settings/integrations/graphql';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { IPages } from '../../types';\nimport { getRefetchQueries } from '../utils';\n\ntype Props = {\n  kind: string;\n  type?: string;\n  callBack: () => void;\n};\n\ntype FinalProps = {} & IRouterProps & Props;\n\ntype State = {\n  pages: IPages[];\n  accountId?: string;\n  loadingPages?: boolean;\n};\n\nclass FacebookContainer extends React.Component<FinalProps, State> {\n  constructor(props: FinalProps) {\n    super(props);\n\n    this.state = { pages: [], loadingPages: false };\n  }\n\n  onAccountSelect = (accountId?: string) => {\n    if (!accountId) {\n      return this.setState({ pages: [], accountId: '' });\n    }\n\n    this.setState({ loadingPages: true });\n\n    client\n      .query({\n        query: gql(queries.fetchApi),\n        variables: {\n          path: '/facebook/get-pages',\n          params: { accountId }\n        }\n      })\n      .then(({ data, loading }: any) => {\n        if (!loading) {\n          this.setState({\n            pages: data.integrationsFetchApi,\n            accountId,\n            loadingPages: false\n          });\n        }\n      })\n      .catch(error => {\n        Alert.error(error.message);\n        this.setState({ loadingPages: false });\n      });\n  };\n\n  onRemoveAccount = () => {\n    this.setState({ pages: [] });\n  };\n\n  renderButton = ({\n    name,\n    values,\n    isSubmitted,\n    callback\n  }: IButtonMutateProps) => {\n    const { kind } = this.props;\n\n    return (\n      <ButtonMutate\n        mutation={mutations.integrationsCreateExternalIntegration}\n        variables={values}\n        callback={callback}\n        refetchQueries={getRefetchQueries(kind)}\n        isSubmitted={isSubmitted}\n        type=\"submit\"\n        uppercase={false}\n        successMessage={`You successfully added a ${name}`}\n      />\n    );\n  };\n\n  render() {\n    const { callBack, kind } = this.props;\n    const { accountId, pages, loadingPages } = this.state;\n\n    const updatedProps = {\n      kind,\n      callBack,\n      accountId,\n      pages,\n      loadingPages,\n      onAccountSelect: this.onAccountSelect,\n      onRemoveAccount: this.onRemoveAccount,\n      renderButton: this.renderButton\n    };\n\n    return <Facebook {...updatedProps} />;\n  }\n}\n\nexport default withRouter<FinalProps>(FacebookContainer);\n"]},"metadata":{},"sourceType":"module"}