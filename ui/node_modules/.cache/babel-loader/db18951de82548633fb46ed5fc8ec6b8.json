{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/filterableList/FilterableList.tsx\";\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport EmptyState from '../EmptyState';\nimport Spinner from '../Spinner';\nimport Filter from './Filter';\nimport { AvatarImg, FlexRow, IconWrapper, PopoverBody, PopoverFooter, PopoverHeader, PopoverList } from './styles';\n\nvar FilterableList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FilterableList, _React$Component);\n\n  function FilterableList(props) {\n    var _this;\n\n    _classCallCheck(this, FilterableList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterableList).call(this, props));\n\n    _this.filterItems = function (e) {\n      _this.setState({\n        key: e.target.value\n      });\n    };\n\n    _this.toggleItem = function (id) {\n      var items = _this.state.items;\n      var item = items.find(function (i) {\n        return i._id === id;\n      });\n      items[items.indexOf(item)].selectedBy = item.selectedBy === 'all' ? 'none' : 'all';\n\n      _this.setState({\n        items: items\n      }); // onClick hook\n\n\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(items, id);\n      }\n    };\n\n    _this.state = {\n      key: '',\n      items: props.items\n    };\n    return _this;\n  }\n\n  _createClass(FilterableList, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // onExit hook\n      var onExit = this.props.onExit;\n\n      if (onExit) {\n        onExit(this.state.items);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (JSON.stringify(this.props.items) !== JSON.stringify(nextProps.items)) {\n        this.setState({\n          items: nextProps.items\n        });\n      }\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          _this$props$showCheck = _this$props.showCheckmark,\n          showCheckmark = _this$props$showCheck === void 0 ? true : _this$props$showCheck,\n          loading = _this$props.loading;\n      var _this$state = this.state,\n          items = _this$state.items,\n          key = _this$state.key;\n\n      if (loading) {\n        return React.createElement(Spinner, {\n          objective: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        });\n      }\n\n      if (items.length === 0) {\n        return React.createElement(EmptyState, {\n          text: \"There aren\\u2019t any data at the moment.\",\n          icon: \"clipboard-blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        });\n      }\n\n      return items.map(function (item) {\n        // filter items by key\n        if (key && item.title.toLowerCase().indexOf(key.toLowerCase()) < 0) {\n          return false;\n        }\n\n        var onClick = function onClick() {\n          return _this2.toggleItem(item._id);\n        };\n\n        return React.createElement(FlexRow, {\n          key: item._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: showCheckmark ? item.selectedBy : '',\n          style: item.style,\n          onClick: onClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, item.iconClass ? React.createElement(\"i\", {\n          className: \"icon \".concat(item.iconClass),\n          style: {\n            color: item.iconColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }) : null, ' ', item.avatar ? React.createElement(AvatarImg, {\n          src: item.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }) : null, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, item.title || '[undefined]')), item.additionalIconClass && React.createElement(IconWrapper, {\n          onClick: item.additionalIconOnClick && item.additionalIconOnClick.bind(_this2, item._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: item.additionalIconClass,\n          size: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        })));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          onSearch = _this$props2.onSearch,\n          selectable = _this$props2.selectable,\n          links = _this$props2.links;\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(PopoverHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Filter, {\n        onChange: onSearch || this.filterItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), React.createElement(PopoverBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(PopoverList, {\n        selectable: selectable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, this.renderItems())), links && React.createElement(PopoverFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(PopoverList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, links.map(function (link) {\n        return React.createElement(\"li\", {\n          key: link.href,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(Link, {\n          onClick: link.onClick,\n          to: link.href,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, link.title));\n      }))));\n    }\n  }]);\n\n  return FilterableList;\n}(React.Component);\n\nexport default FilterableList;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/filterableList/FilterableList.tsx"],"names":["Icon","React","Link","EmptyState","Spinner","Filter","AvatarImg","FlexRow","IconWrapper","PopoverBody","PopoverFooter","PopoverHeader","PopoverList","FilterableList","props","filterItems","e","setState","key","target","value","toggleItem","id","items","state","item","find","i","_id","indexOf","selectedBy","onClick","onExit","nextProps","JSON","stringify","showCheckmark","loading","length","map","title","toLowerCase","style","iconClass","color","iconColor","avatar","additionalIconClass","additionalIconOnClick","bind","className","onSearch","selectable","links","renderItems","link","href","Component"],"mappings":"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","sourcesContent":["import Icon from 'erxes-common-ui/lib/components/icon';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport EmptyState from '../EmptyState';\nimport Spinner from '../Spinner';\nimport Filter from './Filter';\nimport {\n  AvatarImg,\n  FlexRow,\n  IconWrapper,\n  PopoverBody,\n  PopoverFooter,\n  PopoverHeader,\n  PopoverList\n} from './styles';\n\ntype Props = {\n  items?: any[];\n  links?: any[];\n  showCheckmark?: boolean;\n  selectable?: boolean;\n  loading?: boolean;\n  className?: string;\n\n  // hooks\n  onClick?: (items: any[], id: string) => void;\n  onSearch?: (e: React.FormEvent<HTMLElement>) => void;\n  onExit?: (items: any[]) => void;\n};\n\ntype State = {\n  key: string;\n  items: any[];\n};\n\nclass FilterableList extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      key: '',\n      items: props.items\n    };\n  }\n\n  componentWillUnmount() {\n    // onExit hook\n    const { onExit } = this.props;\n\n    if (onExit) {\n      onExit(this.state.items);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (JSON.stringify(this.props.items) !== JSON.stringify(nextProps.items)) {\n      this.setState({\n        items: nextProps.items\n      });\n    }\n  }\n\n  filterItems = e => {\n    this.setState({ key: e.target.value });\n  };\n\n  toggleItem = (id: string) => {\n    const items = this.state.items;\n    const item = items.find(i => i._id === id);\n\n    items[items.indexOf(item)].selectedBy =\n      item.selectedBy === 'all' ? 'none' : 'all';\n\n    this.setState({ items });\n\n    // onClick hook\n    const { onClick } = this.props;\n\n    if (onClick) {\n      onClick(items, id);\n    }\n  };\n\n  renderItems() {\n    const { showCheckmark = true, loading } = this.props;\n    const { items, key } = this.state;\n\n    if (loading) {\n      return <Spinner objective={true} />;\n    }\n\n    if (items.length === 0) {\n      return (\n        <EmptyState\n          text=\"There aren’t any data at the moment.\"\n          icon=\"clipboard-blank\"\n        />\n      );\n    }\n\n    return items.map(item => {\n      // filter items by key\n      if (key && item.title.toLowerCase().indexOf(key.toLowerCase()) < 0) {\n        return false;\n      }\n\n      const onClick = () => this.toggleItem(item._id);\n\n      return (\n        <FlexRow key={item._id}>\n          <li\n            className={showCheckmark ? item.selectedBy : ''}\n            style={item.style}\n            onClick={onClick}\n          >\n            {item.iconClass ? (\n              <i\n                className={`icon ${item.iconClass}`}\n                style={{ color: item.iconColor }}\n              />\n            ) : null}{' '}\n            {item.avatar ? <AvatarImg src={item.avatar} /> : null}\n            <span>{item.title || '[undefined]'}</span>\n          </li>\n          {item.additionalIconClass && (\n            <IconWrapper\n              onClick={\n                item.additionalIconOnClick &&\n                item.additionalIconOnClick.bind(this, item._id)\n              }\n            >\n              <Icon icon={item.additionalIconClass} size={12} />\n            </IconWrapper>\n          )}\n        </FlexRow>\n      );\n    });\n  }\n\n  render() {\n    const { className, onSearch, selectable, links } = this.props;\n\n    return (\n      <div className={className}>\n        <PopoverHeader>\n          <Filter onChange={onSearch || this.filterItems} />\n        </PopoverHeader>\n\n        <PopoverBody>\n          <PopoverList selectable={selectable}>\n            {this.renderItems()}\n          </PopoverList>\n        </PopoverBody>\n        {links && (\n          <PopoverFooter>\n            <PopoverList>\n              {links.map(link => (\n                <li key={link.href}>\n                  <Link onClick={link.onClick} to={link.href}>\n                    {link.title}\n                  </Link>\n                </li>\n              ))}\n            </PopoverList>\n          </PopoverFooter>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default FilterableList;\n"]},"metadata":{},"sourceType":"module"}