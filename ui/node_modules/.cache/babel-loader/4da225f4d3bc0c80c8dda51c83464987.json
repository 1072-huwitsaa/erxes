{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/boards/containers/Home.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport Spinner from 'modules/common/components/Spinner';\nimport { router as routerUtils, withProps } from 'modules/common/utils';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\nimport Home from '../components/Home';\nimport { queries } from '../graphql';\n\nvar HomeContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HomeContainer, _React$Component);\n\n  function HomeContainer() {\n    _classCallCheck(this, HomeContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HomeContainer).apply(this, arguments));\n  }\n\n  _createClass(HomeContainer, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var history = nextProps.history,\n          boardId = nextProps.boardId;\n\n      if (!routerUtils.getParam(history, 'boardId') && boardId) {\n        routerUtils.setParams(history, {\n          boardId: boardId\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Home, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return HomeContainer;\n}(React.Component);\n\n// Getting lastBoard id to currentBoard\nvar LastBoard = function LastBoard(props) {\n  var boardGetLastQuery = props.boardGetLastQuery;\n\n  if (boardGetLastQuery.loading) {\n    return React.createElement(Spinner, {\n      objective: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n  }\n\n  var lastBoard = boardGetLastQuery.boardGetLast || {};\n\n  var extendedProps = _objectSpread({}, props, {\n    boardId: lastBoard._id\n  });\n\n  return React.createElement(HomeContainer, Object.assign({}, extendedProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n};\n\nvar LastBoardContainer = withProps(compose(graphql(gql(queries.boardGetLast), {\n  name: 'boardGetLastQuery',\n  options: function options(_ref) {\n    var type = _ref.type;\n    return {\n      variables: {\n        type: type\n      }\n    };\n  }\n}))(LastBoard)); // Main home component\n\nvar MainContainer = function MainContainer(props) {\n  var history = props.history;\n  var boardId = routerUtils.getParam(history, 'boardId');\n\n  if (boardId) {\n    var extendedProps = _objectSpread({}, props, {\n      boardId: boardId\n    });\n\n    return React.createElement(HomeContainer, Object.assign({}, extendedProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(LastBoardContainer, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }));\n};\n\nexport default withRouter(MainContainer);","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/boards/containers/Home.tsx"],"names":["gql","compose","Spinner","router","routerUtils","withProps","React","graphql","withRouter","Home","queries","HomeContainer","nextProps","history","boardId","getParam","setParams","props","Component","LastBoard","boardGetLastQuery","loading","lastBoard","boardGetLast","extendedProps","_id","LastBoardContainer","name","options","type","variables","MainContainer"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAEA,OAAOC,OAAP,MAAoB,mCAApB;AAEA,SAASC,MAAM,IAAIC,WAAnB,EAAgCC,SAAhC,QAAiD,sBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,OAAT,QAAwB,YAAxB;;IAcMC,a;;;;;;;;;;;;;8CACsBC,S,EAAW;AAAA,UAC3BC,OAD2B,GACND,SADM,CAC3BC,OAD2B;AAAA,UAClBC,OADkB,GACNF,SADM,CAClBE,OADkB;;AAGnC,UAAI,CAACV,WAAW,CAACW,QAAZ,CAAqBF,OAArB,EAA8B,SAA9B,CAAD,IAA6CC,OAAjD,EAA0D;AACxDV,QAAAA,WAAW,CAACY,SAAZ,CAAsBH,OAAtB,EAA+B;AAAEC,UAAAA,OAAO,EAAPA;AAAF,SAA/B;AACD;AACF;;;6BAEQ;AACP,aAAO,oBAAC,IAAD,oBAAU,KAAKG,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAXyBX,KAAK,CAACY,S;;AAkBlC;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACF,KAAD,EAAmC;AAAA,MAC3CG,iBAD2C,GACrBH,KADqB,CAC3CG,iBAD2C;;AAGnD,MAAIA,iBAAiB,CAACC,OAAtB,EAA+B;AAC7B,WAAO,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAMC,SAAS,GAAGF,iBAAiB,CAACG,YAAlB,IAAkC,EAApD;;AAEA,MAAMC,aAAa,qBACdP,KADc;AAEjBH,IAAAA,OAAO,EAAEQ,SAAS,CAACG;AAFF,IAAnB;;AAKA,SAAO,oBAAC,aAAD,oBAAmBD,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAfD;;AAmBA,IAAME,kBAAkB,GAAGrB,SAAS,CAClCJ,OAAO,CACLM,OAAO,CACLP,GAAG,CAACU,OAAO,CAACa,YAAT,CADE,EAEL;AACEI,EAAAA,IAAI,EAAE,mBADR;AAEEC,EAAAA,OAAO,EAAE;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,WAAe;AACtBC,MAAAA,SAAS,EAAE;AAAED,QAAAA,IAAI,EAAJA;AAAF;AADW,KAAf;AAAA;AAFX,CAFK,CADF,CAAP,CAUEV,SAVF,CADkC,CAApC,C,CAcA;;AACA,IAAMY,aAAa,GAAG,SAAhBA,aAAgB,CAACd,KAAD,EAAsB;AAAA,MAClCJ,OADkC,GACtBI,KADsB,CAClCJ,OADkC;AAE1C,MAAMC,OAAO,GAAGV,WAAW,CAACW,QAAZ,CAAqBF,OAArB,EAA8B,SAA9B,CAAhB;;AAEA,MAAIC,OAAJ,EAAa;AACX,QAAMU,aAAa,qBAAQP,KAAR;AAAeH,MAAAA,OAAO,EAAPA;AAAf,MAAnB;;AAEA,WAAO,oBAAC,aAAD,oBAAmBU,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAED,SAAO,oBAAC,kBAAD,oBAAwBP,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAXD;;AAaA,eAAeT,UAAU,CAAYuB,aAAZ,CAAzB","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { BoardsGetLastQueryResponse } from 'modules/boards/types';\nimport Spinner from 'modules/common/components/Spinner';\nimport { IRouterProps } from 'modules/common/types';\nimport { router as routerUtils, withProps } from 'modules/common/utils';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\nimport Home from '../components/Home';\nimport { queries } from '../graphql';\nimport { IOption } from '../types';\n\ntype HomeContainerProps = {\n  history?: any;\n  boardId: string;\n};\n\ntype Props = {\n  type: string;\n  title: string;\n  options?: IOption;\n};\n\nclass HomeContainer extends React.Component<HomeContainerProps & Props> {\n  componentWillReceiveProps(nextProps) {\n    const { history, boardId } = nextProps;\n\n    if (!routerUtils.getParam(history, 'boardId') && boardId) {\n      routerUtils.setParams(history, { boardId });\n    }\n  }\n\n  render() {\n    return <Home {...this.props} />;\n  }\n}\n\ntype LastBoardProps = {\n  boardGetLastQuery: BoardsGetLastQueryResponse;\n};\n\n// Getting lastBoard id to currentBoard\nconst LastBoard = (props: LastBoardProps & Props) => {\n  const { boardGetLastQuery } = props;\n\n  if (boardGetLastQuery.loading) {\n    return <Spinner objective={true} />;\n  }\n\n  const lastBoard = boardGetLastQuery.boardGetLast || {};\n\n  const extendedProps = {\n    ...props,\n    boardId: lastBoard._id\n  };\n\n  return <HomeContainer {...extendedProps} />;\n};\n\ntype MainProps = IRouterProps & Props;\n\nconst LastBoardContainer = withProps<MainProps>(\n  compose(\n    graphql<MainProps, BoardsGetLastQueryResponse, {}>(\n      gql(queries.boardGetLast),\n      {\n        name: 'boardGetLastQuery',\n        options: ({ type }) => ({\n          variables: { type }\n        })\n      }\n    )\n  )(LastBoard)\n);\n\n// Main home component\nconst MainContainer = (props: MainProps) => {\n  const { history } = props;\n  const boardId = routerUtils.getParam(history, 'boardId');\n\n  if (boardId) {\n    const extendedProps = { ...props, boardId };\n\n    return <HomeContainer {...extendedProps} />;\n  }\n\n  return <LastBoardContainer {...props} />;\n};\n\nexport default withRouter<MainProps>(MainContainer);\n"]},"metadata":{},"sourceType":"module"}