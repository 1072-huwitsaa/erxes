{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/internalNotes/containers/Form.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport Form from '../components/Form';\nimport { mutations } from '../graphql';\n\nvar FormContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormContainer, _React$Component);\n\n  function FormContainer(props) {\n    var _this;\n\n    _classCallCheck(this, FormContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormContainer).call(this, props));\n\n    _this.create = function (variables, callback) {\n      var _this$props = _this.props,\n          contentType = _this$props.contentType,\n          contentTypeId = _this$props.contentTypeId,\n          internalNotesAdd = _this$props.internalNotesAdd;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      internalNotesAdd({\n        variables: _objectSpread({\n          contentType: contentType,\n          contentTypeId: contentTypeId\n        }, variables)\n      }).then(function () {\n        callback();\n\n        _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    _this.state = {\n      isLoading: false\n    };\n    return _this;\n  } // create internalNote\n\n\n  _createClass(FormContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          contentType = _this$props2.contentType,\n          contentTypeId = _this$props2.contentTypeId;\n      return React.createElement(Form, {\n        save: this.create,\n        isActionLoading: this.state.isLoading,\n        contentType: contentType,\n        contentTypeId: contentTypeId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return FormContainer;\n}(React.Component);\n\nexport default compose(graphql(gql(mutations.internalNotesAdd), {\n  name: 'internalNotesAdd',\n  options: function options() {\n    return {\n      refetchQueries: ['activityLogs']\n    };\n  }\n}))(FormContainer);","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/internalNotes/containers/Form.tsx"],"names":["gql","compose","React","graphql","Form","mutations","FormContainer","props","create","variables","callback","contentType","contentTypeId","internalNotesAdd","setState","isLoading","then","state","Component","name","options","refetchQueries"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,SAAT,QAA0B,YAA1B;;IAaMC,a;;;;;AAIJ,yBAAYC,KAAZ,EAA+B;AAAA;;AAAA;;AAC7B,uFAAMA,KAAN;;AAD6B,UAO/BC,MAP+B,GAOtB,UAACC,SAAD,EAAYC,QAAZ,EAAqC;AAAA,wBACa,MAAKH,KADlB;AAAA,UACpCI,WADoC,eACpCA,WADoC;AAAA,UACvBC,aADuB,eACvBA,aADuB;AAAA,UACRC,gBADQ,eACRA,gBADQ;;AAG5C,YAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;;AAEAF,MAAAA,gBAAgB,CAAC;AACfJ,QAAAA,SAAS;AACPE,UAAAA,WAAW,EAAXA,WADO;AAEPC,UAAAA,aAAa,EAAbA;AAFO,WAGJH,SAHI;AADM,OAAD,CAAhB,CAMGO,IANH,CAMQ,YAAM;AACZN,QAAAA,QAAQ;;AAER,cAAKI,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OAVD;AAWD,KAvB8B;;AAG7B,UAAKE,KAAL,GAAa;AAAEF,MAAAA,SAAS,EAAE;AAAb,KAAb;AAH6B;AAI9B,G,CAED;;;;;6BAmBS;AAAA,yBACgC,KAAKR,KADrC;AAAA,UACCI,WADD,gBACCA,WADD;AAAA,UACcC,aADd,gBACcA,aADd;AAGP,aACE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAE,KAAKJ,MADb;AAEE,QAAA,eAAe,EAAE,KAAKS,KAAL,CAAWF,SAF9B;AAGE,QAAA,WAAW,EAAEJ,WAHf;AAIE,QAAA,aAAa,EAAEC,aAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD;;;;EAxCyBV,KAAK,CAACgB,S;;AA2ClC,eAAejB,OAAO,CACpBE,OAAO,CAILH,GAAG,CAACK,SAAS,CAACQ,gBAAX,CAJE,EAI4B;AACjCM,EAAAA,IAAI,EAAE,kBAD2B;AAEjCC,EAAAA,OAAO,EAAE,mBAAM;AACb,WAAO;AACLC,MAAAA,cAAc,EAAE,CAAC,cAAD;AADX,KAAP;AAGD;AANgC,CAJ5B,CADa,CAAP,CAabf,aAba,CAAf","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport Form from '../components/Form';\nimport { mutations } from '../graphql';\nimport {\n  InternalNotesAddMutationResponse,\n  InternalNotesAddMutationVariables\n} from '../types';\n\ntype Props = {\n  contentType: string;\n  contentTypeId: string;\n};\n\ntype FinalProps = Props & InternalNotesAddMutationResponse;\n\nclass FormContainer extends React.Component<\n  FinalProps,\n  { isLoading: boolean }\n> {\n  constructor(props: FinalProps) {\n    super(props);\n\n    this.state = { isLoading: false };\n  }\n\n  // create internalNote\n  create = (variables, callback: () => void) => {\n    const { contentType, contentTypeId, internalNotesAdd } = this.props;\n\n    this.setState({ isLoading: true });\n\n    internalNotesAdd({\n      variables: {\n        contentType,\n        contentTypeId,\n        ...variables\n      }\n    }).then(() => {\n      callback();\n\n      this.setState({ isLoading: false });\n    });\n  };\n\n  render() {\n    const { contentType, contentTypeId } = this.props;\n\n    return (\n      <Form\n        save={this.create}\n        isActionLoading={this.state.isLoading}\n        contentType={contentType}\n        contentTypeId={contentTypeId}\n      />\n    );\n  }\n}\n\nexport default compose(\n  graphql<\n    Props,\n    InternalNotesAddMutationResponse,\n    InternalNotesAddMutationVariables\n  >(gql(mutations.internalNotesAdd), {\n    name: 'internalNotesAdd',\n    options: () => {\n      return {\n        refetchQueries: ['activityLogs']\n      };\n    }\n  })\n)(FormContainer);\n"]},"metadata":{},"sourceType":"module"}