{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _slicedToArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/ArchivedItems.tsx\";\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { __ } from 'modules/common/utils';\nimport React, { useState } from 'react';\nimport { BoardItem, ItemContainer, LoadMore } from '../styles/rightMenu';\n\nfunction ArchivedItem(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showPopup = _useState2[0],\n      setVisibility = _useState2[1];\n\n  var options = props.options,\n      item = props.item,\n      type = props.type;\n\n  var toggleVisibility = function toggleVisibility() {\n    setVisibility(!showPopup);\n  };\n\n  var remove = function remove() {\n    props.remove(item);\n  };\n\n  var sendToBoard = function sendToBoard() {\n    props.sendToBoard(item);\n  };\n\n  var renderActions = function renderActions() {\n    return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      onClick: sendToBoard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __('Send to Board')), ' - ', React.createElement(\"span\", {\n      onClick: remove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __('Delete')));\n  };\n\n  if (type === 'item') {\n    var Component = options.Item;\n    return React.createElement(ItemContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Component, {\n      onClick: toggleVisibility,\n      isFormVisible: showPopup,\n      item: item,\n      options: options,\n      portable: true,\n      beforePopupClose: toggleVisibility,\n      sendToBoard: sendToBoard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), renderActions());\n  }\n\n  return React.createElement(ItemContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(BoardItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, item.name), renderActions());\n}\n\nvar ArchivedItems =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ArchivedItems, _React$Component);\n\n  function ArchivedItems(props) {\n    var _this;\n\n    _classCallCheck(this, ArchivedItems);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ArchivedItems).call(this, props));\n\n    _this.openForm = function () {\n      _this.setState({\n        showForm: true\n      });\n    };\n\n    _this.state = {\n      showForm: false\n    };\n    return _this;\n  }\n\n  _createClass(ArchivedItems, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          type = _this$props.type,\n          hasMore = _this$props.hasMore;\n\n      if (!this.props.items || this.props.items.length === 0) {\n        return React.createElement(EmptyState, {\n          text: \"There aren\\u2019t any archived \".concat(type, \".\"),\n          icon: \"archive-alt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        });\n      }\n\n      var _this$props2 = this.props,\n          options = _this$props2.options,\n          remove = _this$props2.remove,\n          sendToBoard = _this$props2.sendToBoard,\n          items = _this$props2.items,\n          loadMore = _this$props2.loadMore;\n      return React.createElement(React.Fragment, null, items.map(function (item) {\n        return React.createElement(ArchivedItem, {\n          options: options,\n          key: item._id,\n          item: item,\n          remove: remove,\n          sendToBoard: sendToBoard,\n          type: type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        });\n      }), hasMore ? React.createElement(LoadMore, {\n        onClick: loadMore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"redo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), __('Load More')) : null);\n    }\n  }]);\n\n  return ArchivedItems;\n}(React.Component);\n\nexport default ArchivedItems;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/ArchivedItems.tsx"],"names":["EmptyState","Icon","__","React","useState","BoardItem","ItemContainer","LoadMore","ArchivedItem","props","showPopup","setVisibility","options","item","type","toggleVisibility","remove","sendToBoard","renderActions","Component","Item","name","ArchivedItems","openForm","setState","showForm","state","hasMore","items","length","loadMore","map","_id"],"mappings":"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","sourcesContent":["import EmptyState from 'modules/common/components/EmptyState';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { __ } from 'modules/common/utils';\nimport { IDeal } from 'modules/deals/types';\nimport { ITicket } from 'modules/tickets/types';\nimport React, { useState } from 'react';\nimport { BoardItem, ItemContainer, LoadMore } from '../styles/rightMenu';\nimport { IItem, IOptions } from '../types';\n\ntype ItemProps = {\n  item: IDeal | IItem | ITicket;\n  sendToBoard: (item: any) => void;\n  remove: (item: any) => void;\n  type: string;\n  options: IOptions;\n};\n\nfunction ArchivedItem(props: ItemProps) {\n  const [showPopup, setVisibility] = useState(false);\n  const { options, item, type } = props;\n\n  const toggleVisibility = () => {\n    setVisibility(!showPopup);\n  };\n\n  const remove = () => {\n    props.remove(item);\n  };\n\n  const sendToBoard = () => {\n    props.sendToBoard(item);\n  };\n\n  const renderActions = () => {\n    return (\n      <>\n        <span onClick={sendToBoard}>{__('Send to Board')}</span>\n        {' - '}\n        <span onClick={remove}>{__('Delete')}</span>\n      </>\n    );\n  };\n\n  if (type === 'item') {\n    const Component = options.Item;\n\n    return (\n      <ItemContainer>\n        <Component\n          onClick={toggleVisibility}\n          isFormVisible={showPopup}\n          item={item}\n          options={options}\n          portable={true}\n          beforePopupClose={toggleVisibility}\n          sendToBoard={sendToBoard}\n        />\n        {renderActions()}\n      </ItemContainer>\n    );\n  }\n\n  return (\n    <ItemContainer>\n      <BoardItem>{item.name}</BoardItem>\n      {renderActions()}\n    </ItemContainer>\n  );\n}\n\ntype Props = {\n  items: IItem[];\n  sendToBoard: (item: any) => void;\n  remove: (item: any) => void;\n  loadMore: () => void;\n  type: string;\n  options: IOptions;\n  hasMore: boolean;\n};\n\ntype State = {\n  showForm: boolean;\n};\n\nclass ArchivedItems extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showForm: false\n    };\n  }\n\n  openForm = () => {\n    this.setState({ showForm: true });\n  };\n\n  render() {\n    const { type, hasMore } = this.props;\n\n    if (!this.props.items || this.props.items.length === 0) {\n      return (\n        <EmptyState\n          text={`There aren’t any archived ${type}.`}\n          icon=\"archive-alt\"\n        />\n      );\n    }\n\n    const { options, remove, sendToBoard, items, loadMore } = this.props;\n\n    return (\n      <>\n        {items.map(item => (\n          <ArchivedItem\n            options={options}\n            key={item._id}\n            item={item}\n            remove={remove}\n            sendToBoard={sendToBoard}\n            type={type}\n          />\n        ))}\n        {hasMore ? (\n          <LoadMore onClick={loadMore}>\n            <Icon icon=\"redo\" />\n            {__('Load More')}\n          </LoadMore>\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default ArchivedItems;\n"]},"metadata":{},"sourceType":"module"}