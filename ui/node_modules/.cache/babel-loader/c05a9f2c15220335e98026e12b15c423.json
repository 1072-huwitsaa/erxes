{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/channels/components/Channels.tsx\";\nimport Button from 'erxes-common-ui/lib/components/button';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport HeaderDescription from 'modules/common/components/HeaderDescription';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport Pagination from 'modules/common/components/pagination/Pagination';\nimport { Title } from 'modules/common/styles/main';\nimport { __ } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport IntegrationList from 'modules/settings/integrations/containers/common/IntegrationList';\nimport React from 'react';\nimport ManageIntegrations from '../containers/ManageIntegrations';\nimport Sidebar from '../containers/Sidebar';\n\nvar Channels =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Channels, _React$Component);\n\n  function Channels() {\n    _classCallCheck(this, Channels);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Channels).apply(this, arguments));\n  }\n\n  _createClass(Channels, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          integrationsCount = _this$props.integrationsCount,\n          currentChannel = _this$props.currentChannel,\n          queryParams = _this$props.queryParams,\n          loading = _this$props.loading;\n      var breadcrumb = [{\n        title: __('Settings'),\n        link: '/settings'\n      }, {\n        title: __('Channels'),\n        link: '/settings/channels'\n      }, {\n        title: \"\".concat(currentChannel.name || '')\n      }];\n\n      if (!currentChannel._id) {\n        return React.createElement(EmptyState, {\n          image: \"/images/actions/8.svg\",\n          text: \"No Channels\",\n          size: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      }\n\n      var trigger = React.createElement(Button, {\n        uppercase: false,\n        btnStyle: \"simple\",\n        icon: \"web-grid-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __('Manage integration'));\n\n      var content = function content(props) {\n        return React.createElement(ManageIntegrations, Object.assign({}, props, {\n          queryParams: queryParams,\n          currentChannel: currentChannel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }));\n      };\n\n      var rightActionBar = currentChannel._id && React.createElement(ModalTrigger, {\n        title: \"Manage Integration\",\n        trigger: trigger,\n        size: \"lg\",\n        autoOpenKey: \"showManageIntegrationModal\",\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n      var leftActionBar = React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, currentChannel.name);\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          title: \"\".concat(currentChannel.name || ''),\n          breadcrumb: breadcrumb,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }),\n        mainHead: React.createElement(HeaderDescription, {\n          icon: \"/images/actions/31.svg\",\n          title: 'Channels',\n          description: __('Channels are important to know how and where your team members are spread out. Manage your channels and stay at the top of your game.'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }),\n        leftSidebar: React.createElement(Sidebar, {\n          currentChannelId: currentChannel._id,\n          queryParams: queryParams,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }),\n        actionBar: React.createElement(Wrapper.ActionBar, {\n          left: leftActionBar,\n          right: rightActionBar,\n          background: \"colorWhite\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }),\n        content: React.createElement(DataWithLoader, {\n          data: React.createElement(IntegrationList, {\n            queryParams: queryParams,\n            variables: {\n              channelId: currentChannel._id\n            },\n            disableAction: true,\n            integrationsCount: integrationsCount,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }),\n          loading: loading,\n          count: integrationsCount,\n          emptyText: \"Choose from our many integrations and add to your channel\",\n          emptyImage: \"/images/actions/2.svg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }),\n        footer: currentChannel._id && React.createElement(Pagination, {\n          count: integrationsCount,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Channels;\n}(React.Component);\n\nexport default Channels;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/channels/components/Channels.tsx"],"names":["Button","DataWithLoader","EmptyState","HeaderDescription","ModalTrigger","Pagination","Title","__","Wrapper","IntegrationList","React","ManageIntegrations","Sidebar","Channels","props","integrationsCount","currentChannel","queryParams","loading","breadcrumb","title","link","name","_id","trigger","content","rightActionBar","leftActionBar","channelId","Component"],"mappings":"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","sourcesContent":["import Button from 'erxes-common-ui/lib/components/button';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport HeaderDescription from 'modules/common/components/HeaderDescription';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport Pagination from 'modules/common/components/pagination/Pagination';\nimport { Title } from 'modules/common/styles/main';\nimport { __ } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport IntegrationList from 'modules/settings/integrations/containers/common/IntegrationList';\nimport React from 'react';\nimport ManageIntegrations from '../containers/ManageIntegrations';\nimport Sidebar from '../containers/Sidebar';\nimport { IChannel } from '../types';\n\ntype Props = {\n  integrationsCount: number;\n  queryParams: any;\n  currentChannel: IChannel;\n  loading: boolean;\n};\n\nclass Channels extends React.Component<Props, {}> {\n  render() {\n    const {\n      integrationsCount,\n      currentChannel,\n      queryParams,\n      loading\n    } = this.props;\n\n    const breadcrumb = [\n      { title: __('Settings'), link: '/settings' },\n      { title: __('Channels'), link: '/settings/channels' },\n      { title: `${currentChannel.name || ''}` }\n    ];\n\n    if (!currentChannel._id) {\n      return (\n        <EmptyState\n          image=\"/images/actions/8.svg\"\n          text=\"No Channels\"\n          size=\"small\"\n        />\n      );\n    }\n\n    const trigger = (\n      <Button uppercase={false} btnStyle=\"simple\" icon=\"web-grid-alt\">\n        {__('Manage integration')}\n      </Button>\n    );\n\n    const content = props => (\n      <ManageIntegrations\n        {...props}\n        queryParams={queryParams}\n        currentChannel={currentChannel}\n      />\n    );\n\n    const rightActionBar = currentChannel._id && (\n      <ModalTrigger\n        title=\"Manage Integration\"\n        trigger={trigger}\n        size=\"lg\"\n        autoOpenKey=\"showManageIntegrationModal\"\n        content={content}\n      />\n    );\n\n    const leftActionBar = <Title>{currentChannel.name}</Title>;\n\n    return (\n      <Wrapper\n        header={\n          <Wrapper.Header\n            title={`${currentChannel.name || ''}`}\n            breadcrumb={breadcrumb}\n          />\n        }\n        mainHead={\n          <HeaderDescription\n            icon=\"/images/actions/31.svg\"\n            title={'Channels'}\n            description={__(\n              'Channels are important to know how and where your team members are spread out. Manage your channels and stay at the top of your game.'\n            )}\n          />\n        }\n        leftSidebar={\n          <Sidebar\n            currentChannelId={currentChannel._id}\n            queryParams={queryParams}\n          />\n        }\n        actionBar={\n          <Wrapper.ActionBar\n            left={leftActionBar}\n            right={rightActionBar}\n            background=\"colorWhite\"\n          />\n        }\n        content={\n          <DataWithLoader\n            data={\n              <IntegrationList\n                queryParams={queryParams}\n                variables={{ channelId: currentChannel._id }}\n                disableAction={true}\n                integrationsCount={integrationsCount}\n              />\n            }\n            loading={loading}\n            count={integrationsCount}\n            emptyText=\"Choose from our many integrations and add to your channel\"\n            emptyImage=\"/images/actions/2.svg\"\n          />\n        }\n        footer={currentChannel._id && <Pagination count={integrationsCount} />}\n      />\n    );\n  }\n}\n\nexport default Channels;\n"]},"metadata":{},"sourceType":"module"}