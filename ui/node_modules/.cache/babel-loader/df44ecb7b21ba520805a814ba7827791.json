{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/filter/Filter.tsx\";\nimport Datetime from '@nateradebaugh/react-datetime';\nimport dayjs from 'dayjs';\nimport Button from 'modules/common/components/Button';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { FlexItem, FlexRow, InsightFilter, InsightTitle } from '../../styles';\n\nvar Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter(props) {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filter).call(this, props));\n\n    _this.onDateInputChange = function (type, date) {\n      if (type === 'endDate') {\n        _this.setState({\n          endDate: date\n        });\n      } else {\n        _this.setState({\n          startDate: date\n        });\n      }\n    };\n\n    _this.onClick = function () {\n      _this.props.onApplyClick(_this.state);\n    };\n\n    var _props$queryParams = props.queryParams,\n        startDate = _props$queryParams.startDate,\n        endDate = _props$queryParams.endDate;\n\n    if (!startDate && !endDate) {\n      startDate = dayjs().add(-7, 'day');\n      endDate = dayjs();\n    }\n\n    _this.state = {\n      startDate: dayjs(startDate).toDate(),\n      endDate: dayjs(endDate).toDate()\n    };\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"render\",\n    value: function render() {\n      var content = this.props.content;\n      var dateProps = {\n        inputProps: {\n          placeholder: 'Click to select a date'\n        },\n        timeFormat: 'HH:mm',\n        dateFormat: 'YYYY/MM/DD'\n      };\n      return React.createElement(InsightFilter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(InsightTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, __('Filter')), React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, content, React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Start date\"), React.createElement(Datetime, Object.assign({}, dateProps, {\n        value: this.state.startDate,\n        onChange: this.onDateInputChange.bind(this, 'startDate'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))), React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"End date\"), React.createElement(Datetime, Object.assign({}, dateProps, {\n        value: this.state.endDate,\n        onChange: this.onDateInputChange.bind(this, 'endDate'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        btnStyle: \"success\",\n        icon: \"filter-1\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Filter\")));\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\n\nexport default Filter;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/filter/Filter.tsx"],"names":["Datetime","dayjs","Button","ControlLabel","__","React","FlexItem","FlexRow","InsightFilter","InsightTitle","Filter","props","onDateInputChange","type","date","setState","endDate","startDate","onClick","onApplyClick","state","queryParams","add","toDate","content","dateProps","inputProps","placeholder","timeFormat","dateFormat","bind","Component"],"mappings":"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","sourcesContent":["import Datetime from '@nateradebaugh/react-datetime';\nimport dayjs from 'dayjs';\nimport Button from 'modules/common/components/Button';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { FlexItem, FlexRow, InsightFilter, InsightTitle } from '../../styles';\nimport { IQueryParams } from '../../types';\n\ntype Props = {\n  content: React.ReactNode;\n  onApplyClick: (args: { startDate: Date; endDate: Date }) => void;\n  history: any;\n  queryParams: IQueryParams;\n};\n\ntype States = {\n  startDate: Date;\n  endDate: Date;\n};\n\nclass Filter extends React.Component<Props, States> {\n  constructor(props) {\n    super(props);\n\n    let { startDate, endDate } = props.queryParams;\n\n    if (!startDate && !endDate) {\n      startDate = dayjs().add(-7, 'day');\n      endDate = dayjs();\n    }\n\n    this.state = {\n      startDate: dayjs(startDate).toDate(),\n      endDate: dayjs(endDate).toDate()\n    };\n  }\n\n  onDateInputChange = (type: string, date) => {\n    if (type === 'endDate') {\n      this.setState({ endDate: date });\n    } else {\n      this.setState({ startDate: date });\n    }\n  };\n\n  onClick = () => {\n    this.props.onApplyClick(this.state);\n  };\n\n  render() {\n    const { content } = this.props;\n\n    const dateProps = {\n      inputProps: { placeholder: 'Click to select a date' },\n      timeFormat: 'HH:mm',\n      dateFormat: 'YYYY/MM/DD'\n    };\n\n    return (\n      <InsightFilter>\n        <InsightTitle>{__('Filter')}</InsightTitle>\n        <FlexRow>\n          {content}\n          <FlexItem>\n            <ControlLabel>Start date</ControlLabel>\n            <Datetime\n              {...dateProps}\n              value={this.state.startDate}\n              onChange={this.onDateInputChange.bind(this, 'startDate')}\n            />\n          </FlexItem>\n          <FlexItem>\n            <ControlLabel>End date</ControlLabel>\n            <Datetime\n              {...dateProps}\n              value={this.state.endDate}\n              onChange={this.onDateInputChange.bind(this, 'endDate')}\n            />\n          </FlexItem>\n          <Button btnStyle=\"success\" icon=\"filter-1\" onClick={this.onClick}>\n            Filter\n          </Button>\n        </FlexRow>\n      </InsightFilter>\n    );\n  }\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}