{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/components/step/MessageStep.tsx\";\nimport EmailForm from 'modules/engage/containers/EmailForm';\nimport React from 'react';\nimport { METHODS } from '../../constants';\nimport MessengerForm from '../MessengerForm';\n\nvar MessageStep =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MessageStep, _React$Component);\n\n  function MessageStep() {\n    _classCallCheck(this, MessageStep);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MessageStep).apply(this, arguments));\n  }\n\n  _createClass(MessageStep, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          brands = _this$props.brands,\n          onChange = _this$props.onChange,\n          users = _this$props.users,\n          method = _this$props.method,\n          templates = _this$props.templates,\n          kind = _this$props.kind,\n          messenger = _this$props.messenger,\n          email = _this$props.email,\n          fromUserId = _this$props.fromUserId,\n          content = _this$props.content,\n          scheduleDate = _this$props.scheduleDate;\n\n      if (method === METHODS.EMAIL) {\n        return React.createElement(EmailForm, {\n          onChange: onChange,\n          users: users,\n          templates: templates,\n          kind: kind,\n          email: email || {},\n          fromUserId: fromUserId,\n          content: content,\n          scheduleDate: scheduleDate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(MessengerForm, {\n        brands: brands,\n        onChange: onChange,\n        users: users,\n        hasKind: true,\n        messageKind: kind,\n        messenger: messenger || {},\n        fromUserId: fromUserId,\n        content: content,\n        scheduleDate: scheduleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MessageStep;\n}(React.Component);\n\nexport default MessageStep;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/components/step/MessageStep.tsx"],"names":["EmailForm","React","METHODS","MessengerForm","MessageStep","props","brands","onChange","users","method","templates","kind","messenger","email","fromUserId","content","scheduleDate","EMAIL","Component"],"mappings":";;;;;;AACA,OAAOA,SAAP,MAAsB,qCAAtB;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAMA,OAAOC,aAAP,MAA0B,kBAA1B;;IAmBMC,W;;;;;;;;;;;;;6BACK;AAAA,wBAaH,KAAKC,KAbF;AAAA,UAELC,MAFK,eAELA,MAFK;AAAA,UAGLC,QAHK,eAGLA,QAHK;AAAA,UAILC,KAJK,eAILA,KAJK;AAAA,UAKLC,MALK,eAKLA,MALK;AAAA,UAMLC,SANK,eAMLA,SANK;AAAA,UAOLC,IAPK,eAOLA,IAPK;AAAA,UAQLC,SARK,eAQLA,SARK;AAAA,UASLC,KATK,eASLA,KATK;AAAA,UAULC,UAVK,eAULA,UAVK;AAAA,UAWLC,OAXK,eAWLA,OAXK;AAAA,UAYLC,YAZK,eAYLA,YAZK;;AAeP,UAAIP,MAAM,KAAKP,OAAO,CAACe,KAAvB,EAA8B;AAC5B,eACE,oBAAC,SAAD;AACE,UAAA,QAAQ,EAAEV,QADZ;AAEE,UAAA,KAAK,EAAEC,KAFT;AAGE,UAAA,SAAS,EAAEE,SAHb;AAIE,UAAA,IAAI,EAAEC,IAJR;AAKE,UAAA,KAAK,EAAEE,KAAK,IAAK,EALnB;AAME,UAAA,UAAU,EAAEC,UANd;AAOE,UAAA,OAAO,EAAEC,OAPX;AAQE,UAAA,YAAY,EAAEC,YARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;AAED,aACE,oBAAC,aAAD;AACE,QAAA,MAAM,EAAEV,MADV;AAEE,QAAA,QAAQ,EAAEC,QAFZ;AAGE,QAAA,KAAK,EAAEC,KAHT;AAIE,QAAA,OAAO,EAAE,IAJX;AAKE,QAAA,WAAW,EAAEG,IALf;AAME,QAAA,SAAS,EAAEC,SAAS,IAAK,EAN3B;AAOE,QAAA,UAAU,EAAEE,UAPd;AAQE,QAAA,OAAO,EAAEC,OARX;AASE,QAAA,YAAY,EAAEC,YAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAaD;;;;EA5CuBf,KAAK,CAACiB,S;;AA+ChC,eAAed,WAAf","sourcesContent":["import { IUser } from 'modules/auth/types';\nimport EmailForm from 'modules/engage/containers/EmailForm';\nimport { IBrand } from 'modules/settings/brands/types';\nimport { IEmailTemplate } from 'modules/settings/emailTemplates/types';\nimport React from 'react';\nimport { METHODS } from '../../constants';\nimport {\n  IEngageEmail,\n  IEngageMessenger,\n  IEngageScheduleDate\n} from '../../types';\nimport MessengerForm from '../MessengerForm';\n\ntype Props = {\n  brands: IBrand[];\n  onChange: (\n    name: 'messenger' | 'email' | 'content' | 'scheduleDate' | 'fromUserId',\n    value?: IEngageEmail | IEngageMessenger | IEngageScheduleDate | string\n  ) => void;\n  users: IUser[];\n  method: string;\n  templates: IEmailTemplate[];\n  kind: string;\n  messenger?: IEngageMessenger;\n  email?: IEngageEmail;\n  fromUserId: string;\n  content: string;\n  scheduleDate: IEngageScheduleDate;\n};\n\nclass MessageStep extends React.Component<Props> {\n  render() {\n    const {\n      brands,\n      onChange,\n      users,\n      method,\n      templates,\n      kind,\n      messenger,\n      email,\n      fromUserId,\n      content,\n      scheduleDate\n    } = this.props;\n\n    if (method === METHODS.EMAIL) {\n      return (\n        <EmailForm\n          onChange={onChange}\n          users={users}\n          templates={templates}\n          kind={kind}\n          email={email || ({} as IEngageEmail)}\n          fromUserId={fromUserId}\n          content={content}\n          scheduleDate={scheduleDate}\n        />\n      );\n    }\n\n    return (\n      <MessengerForm\n        brands={brands}\n        onChange={onChange}\n        users={users}\n        hasKind={true}\n        messageKind={kind}\n        messenger={messenger || ({} as IEngageMessenger)}\n        fromUserId={fromUserId}\n        content={content}\n        scheduleDate={scheduleDate}\n      />\n    );\n  }\n}\n\nexport default MessageStep;\n"]},"metadata":{},"sourceType":"module"}