{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/containers/portable/ItemChooser.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { withProps } from 'modules/common/utils';\nimport ConformityChooser from 'modules/conformity/containers/ConformityChooser';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport AddForm from './AddForm';\n\nvar ItemChooserContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ItemChooserContainer, _React$Component);\n\n  function ItemChooserContainer(props) {\n    var _this;\n\n    _classCallCheck(this, ItemChooserContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ItemChooserContainer).call(this, props));\n\n    _this.resetAssociatedItem = function () {\n      return _this.setState({\n        newItem: undefined\n      });\n    };\n\n    _this.state = {\n      newItem: undefined\n    };\n    return _this;\n  }\n\n  _createClass(ItemChooserContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          data = _this$props.data,\n          itemsQuery = _this$props.itemsQuery,\n          search = _this$props.search;\n\n      var renderName = function renderName(item) {\n        return item.name || 'Unknown';\n      };\n\n      var getAssociatedItem = function getAssociatedItem(newItem) {\n        _this2.setState({\n          newItem: newItem\n        });\n      };\n\n      var updatedProps = _objectSpread({}, this.props, {\n        data: {\n          _id: data._id,\n          name: renderName(data),\n          datas: data.items,\n          mainTypeId: data.mainTypeId,\n          mainType: data.mainType,\n          isRelated: data.isRelated,\n          relType: data.options.type,\n          options: data.options\n        },\n        search: search,\n        clearState: function clearState() {\n          return search('');\n        },\n        perPage: 0,\n        title: data.options.title,\n        renderName: renderName,\n        renderForm: function renderForm(formProps) {\n          return React.createElement(AddForm, Object.assign({}, formProps, {\n            refetch: itemsQuery.refetch,\n            options: data.options,\n            boardId: _this2.props.boardId,\n            pipelineId: _this2.props.pipelineId,\n            stageId: _this2.props.stageId,\n            showSelect: true,\n            getAssociatedItem: getAssociatedItem,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }));\n        },\n        newItem: this.state.newItem,\n        resetAssociatedItem: this.resetAssociatedItem,\n        datas: itemsQuery[data.options.queriesName.itemsQuery] || [],\n        refetchQuery: data.options.queries.itemsQuery\n      });\n\n      return React.createElement(ConformityChooser, Object.assign({}, updatedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ItemChooserContainer;\n}(React.Component);\n\nvar WithQuery = function WithQuery(_ref) {\n  var options = _ref.options;\n  return withProps(compose(graphql(gql(options.queries.itemsQuery), {\n    name: 'itemsQuery',\n    options: function options(_ref2) {\n      var searchValue = _ref2.searchValue,\n          stageId = _ref2.stageId,\n          data = _ref2.data;\n      return {\n        variables: {\n          search: searchValue,\n          stageId: stageId,\n          mainType: data.mainType,\n          mainTypeId: data.mainTypeId,\n          isRelated: data.isRelated,\n          relType: data.options.type,\n          sortField: 'createdAt',\n          sortDirection: -1\n        },\n        fetchPolicy: data.isRelated ? 'network-only' : 'cache-first'\n      };\n    }\n  }))(ItemChooserContainer));\n};\n\nvar Wrapper =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Wrapper, _React$Component2);\n\n  function Wrapper(props) {\n    var _this3;\n\n    _classCallCheck(this, Wrapper);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Wrapper).call(this, props));\n    _this3.withQuery = void 0;\n\n    _this3.search = function (value) {\n      return _this3.setState({\n        searchValue: value\n      });\n    };\n\n    _this3.filterStageId = function (stageId, boardId, pipelineId) {\n      return _this3.setState({\n        stageId: stageId,\n        boardId: boardId,\n        pipelineId: pipelineId\n      });\n    };\n\n    _this3.state = {\n      searchValue: '',\n      stageId: '',\n      boardId: '',\n      pipelineId: ''\n    };\n    _this3.withQuery = WithQuery({\n      options: props.data.options\n    });\n    return _this3;\n  }\n\n  _createClass(Wrapper, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          searchValue = _this$state.searchValue,\n          stageId = _this$state.stageId,\n          boardId = _this$state.boardId,\n          pipelineId = _this$state.pipelineId;\n      var Component = this.withQuery;\n      return React.createElement(Component, Object.assign({}, this.props, {\n        search: this.search,\n        searchValue: searchValue,\n        filterStageId: this.filterStageId,\n        stageId: stageId,\n        boardId: boardId,\n        pipelineId: pipelineId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Wrapper;\n}(React.Component);\n\nexport { Wrapper as default };","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/containers/portable/ItemChooser.tsx"],"names":["gql","compose","withProps","ConformityChooser","React","graphql","AddForm","ItemChooserContainer","props","resetAssociatedItem","setState","newItem","undefined","state","data","itemsQuery","search","renderName","item","name","getAssociatedItem","updatedProps","_id","datas","items","mainTypeId","mainType","isRelated","relType","options","type","clearState","perPage","title","renderForm","formProps","refetch","boardId","pipelineId","stageId","queriesName","refetchQuery","queries","Component","WithQuery","searchValue","variables","sortField","sortDirection","fetchPolicy","Wrapper","withQuery","value","filterStageId"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { withProps } from 'modules/common/utils';\nimport ConformityChooser from 'modules/conformity/containers/ConformityChooser';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport {\n  IFilterParams,\n  IItem,\n  IOptions,\n  ItemsQueryResponse,\n  SaveMutation\n} from '../../types';\nimport AddForm from './AddForm';\n\ntype IProps = {\n  search: (value: string, loadMore?: boolean) => void;\n  searchValue: string;\n  filterStageId?: (\n    stageId?: string,\n    boardId?: string,\n    pipelineId?: string\n  ) => void;\n  stageId?: string;\n  boardId?: string;\n  pipelineId?: string;\n  showSelect?: boolean;\n};\n\ntype FinalProps = {\n  itemsQuery: ItemsQueryResponse;\n  addMutation: SaveMutation;\n} & IProps;\n\nclass ItemChooserContainer extends React.Component<\n  WrapperProps & FinalProps,\n  { newItem?: string }\n> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newItem: undefined\n    };\n  }\n\n  resetAssociatedItem = () => {\n    return this.setState({ newItem: undefined });\n  };\n\n  render() {\n    const { data, itemsQuery, search } = this.props;\n\n    const renderName = item => {\n      return item.name || 'Unknown';\n    };\n\n    const getAssociatedItem = (newItem: string) => {\n      this.setState({ newItem });\n    };\n\n    const updatedProps = {\n      ...this.props,\n      data: {\n        _id: data._id,\n        name: renderName(data),\n        datas: data.items,\n        mainTypeId: data.mainTypeId,\n        mainType: data.mainType,\n        isRelated: data.isRelated,\n        relType: data.options.type,\n        options: data.options\n      },\n      search,\n      clearState: () => search(''),\n      perPage: 0,\n      title: data.options.title,\n      renderName,\n      renderForm: formProps => (\n        <AddForm\n          {...formProps}\n          refetch={itemsQuery.refetch}\n          options={data.options}\n          boardId={this.props.boardId}\n          pipelineId={this.props.pipelineId}\n          stageId={this.props.stageId}\n          showSelect={true}\n          getAssociatedItem={getAssociatedItem}\n        />\n      ),\n      newItem: this.state.newItem,\n      resetAssociatedItem: this.resetAssociatedItem,\n      datas: itemsQuery[data.options.queriesName.itemsQuery] || [],\n      refetchQuery: data.options.queries.itemsQuery\n    };\n\n    return <ConformityChooser {...updatedProps} />;\n  }\n}\n\nconst WithQuery = ({ options }) => {\n  return withProps<IProps>(\n    compose(\n      graphql<IProps & WrapperProps, ItemsQueryResponse, IFilterParams>(\n        gql(options.queries.itemsQuery),\n        {\n          name: 'itemsQuery',\n          options: ({ searchValue, stageId, data }) => {\n            return {\n              variables: {\n                search: searchValue,\n                stageId,\n                mainType: data.mainType,\n                mainTypeId: data.mainTypeId,\n                isRelated: data.isRelated,\n                relType: data.options.type,\n                sortField: 'createdAt',\n                sortDirection: -1\n              },\n              fetchPolicy: data.isRelated ? 'network-only' : 'cache-first'\n            };\n          }\n        }\n      )\n    )(ItemChooserContainer)\n  );\n};\n\ntype WrapperProps = {\n  data: {\n    _id?: string;\n    name: string;\n    items: IItem[];\n    options: IOptions;\n    mainTypeId?: string;\n    mainType?: string;\n    isRelated?: boolean;\n  };\n  onSelect: (datas: IItem[]) => void;\n  showSelect?: boolean;\n  closeModal: () => void;\n};\n\nexport default class Wrapper extends React.Component<\n  WrapperProps,\n  {\n    searchValue: string;\n    stageId?: string;\n    pipelineId?: string;\n    boardId?: string;\n  }\n> {\n  private withQuery;\n\n  constructor(props) {\n    super(props);\n\n    this.state = { searchValue: '', stageId: '', boardId: '', pipelineId: '' };\n    this.withQuery = WithQuery({ options: props.data.options });\n  }\n\n  search = value => {\n    return this.setState({ searchValue: value });\n  };\n\n  filterStageId = (stageId, boardId, pipelineId) => {\n    return this.setState({ stageId, boardId, pipelineId });\n  };\n\n  render() {\n    const { searchValue, stageId, boardId, pipelineId } = this.state;\n    const Component = this.withQuery;\n\n    return (\n      <Component\n        {...this.props}\n        search={this.search}\n        searchValue={searchValue}\n        filterStageId={this.filterStageId}\n        stageId={stageId}\n        boardId={boardId}\n        pipelineId={pipelineId}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}