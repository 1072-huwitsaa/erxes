{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/ConvertTo.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: inline-block;\\n\\n  .dropdown-menu {\\n    min-width: auto;\\n  }\\n\\n  button {\\n    padding: 3px 7px 3px 12px;\\n    font-size: 10px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Button from 'modules/common/components/Button';\nimport DropdownToggle from 'modules/common/components/DropdownToggle';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { __ } from 'modules/common/utils';\nimport DealConvertTrigger from 'modules/deals/components/DealConvertTrigger';\nimport TaskConvertTrigger from 'modules/tasks/components/TaskConvertTrigger';\nimport TicketConvertTrigger from 'modules/tickets/components/TicketConvertTrigger';\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport styled from 'styled-components';\nvar Container = styled.div(_templateObject());\nexport default (function (props) {\n  var conversation = props.conversation,\n      convertToInfo = props.convertToInfo,\n      refetch = props.refetch;\n  var assignedUserIds = conversation.assignedUserId ? [conversation.assignedUserId] : [];\n  var customerIds = conversation.customerId ? [conversation.customerId] : [];\n  var sourceConversationId = conversation._id;\n  var triggerProps = {\n    assignedUserIds: assignedUserIds,\n    relTypeIds: customerIds,\n    relType: 'customer',\n    sourceConversationId: sourceConversationId,\n    refetch: refetch\n  };\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    as: DropdownToggle,\n    id: \"dropdown-convert-to\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Button, {\n    uppercase: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __('Convert'), \" \", React.createElement(Icon, {\n    icon: \"angle-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))), React.createElement(Dropdown.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    key: \"ticket\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TicketConvertTrigger, Object.assign({}, triggerProps, {\n    url: convertToInfo.ticketUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))), React.createElement(\"li\", {\n    key: \"deal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(DealConvertTrigger, Object.assign({}, triggerProps, {\n    url: convertToInfo.dealUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))), React.createElement(\"li\", {\n    key: \"task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TaskConvertTrigger, Object.assign({}, triggerProps, {\n    url: convertToInfo.taskUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))))));\n});","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/ConvertTo.tsx"],"names":["Button","DropdownToggle","Icon","__","DealConvertTrigger","TaskConvertTrigger","TicketConvertTrigger","React","Dropdown","styled","Container","div","props","conversation","convertToInfo","refetch","assignedUserIds","assignedUserId","customerIds","customerId","sourceConversationId","_id","triggerProps","relTypeIds","relType","ticketUrl","dealUrl","taskUrl"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,kCAAnB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,SAASC,EAAT,QAAmB,sBAAnB;AACA,OAAOC,kBAAP,MAA+B,6CAA/B;AAEA,OAAOC,kBAAP,MAA+B,6CAA/B;AACA,OAAOC,oBAAP,MAAiC,iDAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,SAAS,GAAGD,MAAM,CAACE,GAAV,mBAAf;AAuBA,gBAAe,UAACC,KAAD,EAAkB;AAAA,MACvBC,YADuB,GACkBD,KADlB,CACvBC,YADuB;AAAA,MACTC,aADS,GACkBF,KADlB,CACTE,aADS;AAAA,MACMC,OADN,GACkBH,KADlB,CACMG,OADN;AAG/B,MAAMC,eAAe,GAAGH,YAAY,CAACI,cAAb,GACpB,CAACJ,YAAY,CAACI,cAAd,CADoB,GAEpB,EAFJ;AAGA,MAAMC,WAAW,GAAGL,YAAY,CAACM,UAAb,GAA0B,CAACN,YAAY,CAACM,UAAd,CAA1B,GAAsD,EAA1E;AACA,MAAMC,oBAAoB,GAAGP,YAAY,CAACQ,GAA1C;AAEA,MAAMC,YAAY,GAAG;AACnBN,IAAAA,eAAe,EAAfA,eADmB;AAEnBO,IAAAA,UAAU,EAAEL,WAFO;AAGnBM,IAAAA,OAAO,EAAE,UAHU;AAInBJ,IAAAA,oBAAoB,EAApBA,oBAJmB;AAKnBL,IAAAA,OAAO,EAAPA;AALmB,GAArB;AAQA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD,CAAU,MAAV;AAAiB,IAAA,EAAE,EAAEd,cAArB;AAAqC,IAAA,EAAE,EAAC,qBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,EAAE,CAAC,SAAD,CADL,OACkB,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlB,CADF,CADF,EAME,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,GAAG,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD,oBACMmB,YADN;AAEE,IAAA,GAAG,EAAER,aAAa,CAACW,SAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,EAOE;AAAI,IAAA,GAAG,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD,oBAAwBH,YAAxB;AAAsC,IAAA,GAAG,EAAER,aAAa,CAACY,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAPF,EAUE;AAAI,IAAA,GAAG,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD,oBAAwBJ,YAAxB;AAAsC,IAAA,GAAG,EAAER,aAAa,CAACa,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAVF,CANF,CADF,CADF;AAyBD,CA1CD","sourcesContent":["import Button from 'modules/common/components/Button';\nimport DropdownToggle from 'modules/common/components/DropdownToggle';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { __ } from 'modules/common/utils';\nimport DealConvertTrigger from 'modules/deals/components/DealConvertTrigger';\nimport { IConversation } from 'modules/inbox/types';\nimport TaskConvertTrigger from 'modules/tasks/components/TaskConvertTrigger';\nimport TicketConvertTrigger from 'modules/tickets/components/TicketConvertTrigger';\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: inline-block;\n\n  .dropdown-menu {\n    min-width: auto;\n  }\n\n  button {\n    padding: 3px 7px 3px 12px;\n    font-size: 10px;\n  }\n`;\n\ntype Props = {\n  conversation: IConversation;\n  convertToInfo: {\n    ticketUrl?: string;\n    dealUrl?: string;\n    taskUrl?: string;\n  };\n  refetch: () => void;\n};\n\nexport default (props: Props) => {\n  const { conversation, convertToInfo, refetch } = props;\n\n  const assignedUserIds = conversation.assignedUserId\n    ? [conversation.assignedUserId]\n    : [];\n  const customerIds = conversation.customerId ? [conversation.customerId] : [];\n  const sourceConversationId = conversation._id;\n\n  const triggerProps = {\n    assignedUserIds,\n    relTypeIds: customerIds,\n    relType: 'customer',\n    sourceConversationId,\n    refetch\n  };\n\n  return (\n    <Container>\n      <Dropdown>\n        <Dropdown.Toggle as={DropdownToggle} id=\"dropdown-convert-to\">\n          <Button uppercase={false}>\n            {__('Convert')} <Icon icon=\"angle-down\" />\n          </Button>\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <li key=\"ticket\">\n            <TicketConvertTrigger\n              {...triggerProps}\n              url={convertToInfo.ticketUrl}\n            />\n          </li>\n          <li key=\"deal\">\n            <DealConvertTrigger {...triggerProps} url={convertToInfo.dealUrl} />\n          </li>\n          <li key=\"task\">\n            <TaskConvertTrigger {...triggerProps} url={convertToInfo.taskUrl} />\n          </li>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}