{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/facebook/FacebookComment.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: inline-block;\\n\\n  .dropdown-menu {\\n    min-width: auto;\\n  }\\n\\n  button {\\n    padding: 3px 7px 3px 12px;\\n    font-size: 10px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport DropdownToggle from 'modules/common/components/DropdownToggle';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport NameCard from 'modules/common/components/nameCard/NameCard';\nimport DealConvertTrigger from 'modules/deals/components/DealConvertTrigger';\nimport TaskConvertTrigger from 'modules/tasks/components/TaskConvertTrigger';\nimport TicketConvertTrigger from 'modules/tickets/components/TicketConvertTrigger';\nimport * as React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport styled from 'styled-components';\nimport Date from './Date';\nimport FacebookContent from './FacebookContent';\nimport ReplyingMessage from './ReplyingMessage';\nimport { ChildPost, Comment, FlexItem, Reply, ShowMore, User } from './styles';\nimport UserName from './UserName';\nvar Container = styled.div(_templateObject());\n\nvar FacebookComment =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FacebookComment, _React$Component);\n\n  function FacebookComment(props) {\n    var _this;\n\n    _classCallCheck(this, FacebookComment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FacebookComment).call(this, props));\n\n    _this.fetchReplies = function (commentId) {\n      var fetchFacebook = _this.props.fetchFacebook;\n      fetchFacebook({\n        commentId: commentId\n      });\n\n      _this.setState({\n        hasReplies: false\n      });\n    };\n\n    _this.changeHasReply = function () {\n      _this.setState({\n        hasReplies: true\n      });\n    };\n\n    _this.changeStatusComment = function () {\n      var isResolved = _this.state.isResolved;\n      var changeStatusComment = _this.props.changeStatusComment;\n\n      _this.setState({\n        isResolved: isResolved ? false : true\n      });\n\n      return changeStatusComment();\n    };\n\n    _this.collectAttachments = function () {\n      var comment = _this.props.comment;\n      var result = [];\n\n      if (comment.attachments && comment.attachments.length > 0) {\n        var attachments = comment.attachments;\n        attachments.forEach(function (link, index) {\n          if (link.includes('fna.fbcdn.net')) {\n            result.push({\n              url: link,\n              name: 'attachment',\n              type: 'image / jpeg,'\n            });\n          }\n        });\n      }\n\n      return result;\n    };\n\n    var data = props.comment;\n    var hasReplies = false;\n\n    if (data && data.commentCount && data.commentCount > 0) {\n      hasReplies = true;\n    }\n\n    _this.state = {\n      hasReplies: hasReplies,\n      isResolved: data.isResolved ? true : false\n    };\n    return _this;\n  }\n\n  _createClass(FacebookComment, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          comment = _this$props.comment,\n          replyComment = _this$props.replyComment,\n          isReply = _this$props.isReply,\n          convertToInfo = _this$props.convertToInfo,\n          refetch = _this$props.refetch;\n      var isResolved = this.state.isResolved;\n      var customer = comment.customer || {};\n\n      if (!comment) {\n        return null;\n      }\n\n      var size = comment && comment.parentId ? 20 : 32;\n      var statusText = isResolved ? 'Open' : 'Resolve';\n\n      var content = function content(props) {\n        return React.createElement(ReplyingMessage, Object.assign({\n          changeHasReply: _this2.changeHasReply,\n          conversationId: comment.conversationId,\n          commentId: comment.commentId,\n          currentUserName: \"\".concat(customer.firstName, \" \").concat(customer.lastName || ''),\n          replyComment: replyComment\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }));\n      };\n\n      var triggerProps = {\n        relTypeIds: [customer._id],\n        relType: 'customer',\n        sourceConversationId: comment.commentId,\n        refetch: refetch,\n        description: comment.content,\n        attachments: this.collectAttachments()\n      };\n      return React.createElement(React.Fragment, null, React.createElement(ChildPost, {\n        isReply: comment.parentId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(NameCard.Avatar, {\n        customer: comment.customer,\n        size: size,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(User, {\n        isReply: comment.parentId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Comment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(UserName, {\n        username: \"\".concat(customer.firstName, \" \").concat(customer.lastName || ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(FacebookContent, {\n        content: comment.content,\n        attachments: comment.attachments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }))), !isReply ? React.createElement(Reply, {\n        type: \"reply\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(ModalTrigger, {\n        title: \"Reply\",\n        trigger: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, \"Reply\"),\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })) : null, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        as: DropdownToggle,\n        id: \"dropdown-convert-to\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Reply, {\n        type: \"convert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Convert\"))), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        key: \"ticket\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(TicketConvertTrigger, Object.assign({}, triggerProps, {\n        url: convertToInfo.ticketUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        key: \"deal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(DealConvertTrigger, Object.assign({}, triggerProps, {\n        url: convertToInfo.dealUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        key: \"task\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(TaskConvertTrigger, Object.assign({}, triggerProps, {\n        url: convertToInfo.taskUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })))))), React.createElement(Reply, {\n        type: statusText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: this.changeStatusComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, statusText)), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Date, {\n        type: \"comment\",\n        timestamp: comment.timestamp,\n        permalink_url: comment.permalink_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })))), this.state.hasReplies && React.createElement(ShowMore, {\n        onClick: this.fetchReplies.bind(this, comment.commentId),\n        isReply: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"reply\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"View more replies\")));\n    }\n  }]);\n\n  return FacebookComment;\n}(React.Component);\n\nexport { FacebookComment as default };","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/facebook/FacebookComment.tsx"],"names":["DropdownToggle","Icon","ModalTrigger","NameCard","DealConvertTrigger","TaskConvertTrigger","TicketConvertTrigger","React","Dropdown","styled","Date","FacebookContent","ReplyingMessage","ChildPost","Comment","FlexItem","Reply","ShowMore","User","UserName","Container","div","FacebookComment","props","fetchReplies","commentId","fetchFacebook","setState","hasReplies","changeHasReply","changeStatusComment","isResolved","state","collectAttachments","comment","result","attachments","length","forEach","link","index","includes","push","url","name","type","data","commentCount","replyComment","isReply","convertToInfo","refetch","customer","size","parentId","statusText","content","conversationId","firstName","lastName","triggerProps","relTypeIds","_id","relType","sourceConversationId","description","ticketUrl","dealUrl","taskUrl","timestamp","permalink_url","bind","Component"],"mappings":"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","sourcesContent":["import DropdownToggle from 'modules/common/components/DropdownToggle';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport NameCard from 'modules/common/components/nameCard/NameCard';\nimport DealConvertTrigger from 'modules/deals/components/DealConvertTrigger';\nimport { IFacebookComment } from 'modules/inbox/types';\nimport TaskConvertTrigger from 'modules/tasks/components/TaskConvertTrigger';\nimport TicketConvertTrigger from 'modules/tickets/components/TicketConvertTrigger';\nimport * as React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport styled from 'styled-components';\nimport Date from './Date';\nimport FacebookContent from './FacebookContent';\nimport ReplyingMessage from './ReplyingMessage';\nimport { ChildPost, Comment, FlexItem, Reply, ShowMore, User } from './styles';\nimport UserName from './UserName';\n\nconst Container = styled.div`\n  display: inline-block;\n\n  .dropdown-menu {\n    min-width: auto;\n  }\n\n  button {\n    padding: 3px 7px 3px 12px;\n    font-size: 10px;\n  }\n`;\n\ntype Props = {\n  comment: IFacebookComment;\n  isReply?: boolean;\n  convertToInfo: {\n    ticketUrl?: string;\n    dealUrl?: string;\n    taskUrl?: string;\n  };\n  changeStatusComment: () => void;\n  replyComment: (\n    data: {\n      conversationId: string;\n      commentId: string;\n      content: string;\n    },\n    callback: () => void\n  ) => void;\n  fetchFacebook: ({\n    commentId,\n    postId,\n    limit\n  }: {\n    commentId?: string;\n    postId?: string;\n    limit?: number;\n  }) => void;\n  refetch: () => void;\n};\n\nexport default class FacebookComment extends React.Component<\n  Props,\n  { hasReplies: boolean; isResolved: boolean }\n> {\n  constructor(props) {\n    super(props);\n\n    const data = props.comment;\n    let hasReplies = false;\n\n    if (data && data.commentCount && data.commentCount > 0) {\n      hasReplies = true;\n    }\n\n    this.state = {\n      hasReplies,\n      isResolved: data.isResolved ? true : false\n    };\n  }\n\n  fetchReplies = commentId => {\n    const { fetchFacebook } = this.props;\n\n    fetchFacebook({ commentId });\n\n    this.setState({ hasReplies: false });\n  };\n\n  changeHasReply = () => {\n    this.setState({ hasReplies: true });\n  };\n\n  changeStatusComment = () => {\n    const { isResolved } = this.state;\n    const { changeStatusComment } = this.props;\n\n    this.setState({ isResolved: isResolved ? false : true });\n\n    return changeStatusComment();\n  };\n\n  collectAttachments = () => {\n    const { comment } = this.props;\n    const result = [] as any;\n\n    if (comment.attachments && comment.attachments.length > 0) {\n      const { attachments } = comment;\n\n      attachments.forEach((link, index) => {\n        if (link.includes('fna.fbcdn.net')) {\n          result.push({\n            url: link,\n            name: 'attachment',\n            type: 'image / jpeg,'\n          });\n        }\n      });\n    }\n\n    return result;\n  };\n\n  render() {\n    const {\n      comment,\n      replyComment,\n      isReply,\n      convertToInfo,\n      refetch\n    } = this.props;\n    const { isResolved } = this.state;\n\n    const customer = comment.customer || {};\n\n    if (!comment) {\n      return null;\n    }\n\n    const size = comment && comment.parentId ? 20 : 32;\n    const statusText = isResolved ? 'Open' : 'Resolve';\n\n    const content = props => (\n      <ReplyingMessage\n        changeHasReply={this.changeHasReply}\n        conversationId={comment.conversationId}\n        commentId={comment.commentId}\n        currentUserName={`${customer.firstName} ${customer.lastName || ''}`}\n        replyComment={replyComment}\n        {...props}\n      />\n    );\n\n    const triggerProps = {\n      relTypeIds: [customer._id],\n      relType: 'customer',\n      sourceConversationId: comment.commentId,\n      refetch,\n      description: comment.content,\n      attachments: this.collectAttachments()\n    };\n\n    return (\n      <>\n        <ChildPost isReply={comment.parentId}>\n          <NameCard.Avatar customer={comment.customer} size={size} />\n\n          <User isReply={comment.parentId}>\n            <FlexItem>\n              <Comment>\n                <UserName\n                  username={`${customer.firstName} ${customer.lastName || ''}`}\n                />\n                <FacebookContent\n                  content={comment.content}\n                  attachments={comment.attachments}\n                />\n              </Comment>\n            </FlexItem>\n\n            {!isReply ? (\n              <Reply type=\"reply\">\n                <ModalTrigger\n                  title=\"Reply\"\n                  trigger={<span>Reply</span>}\n                  content={content}\n                />\n              </Reply>\n            ) : null}\n            <Container>\n              <Dropdown>\n                <Dropdown.Toggle as={DropdownToggle} id=\"dropdown-convert-to\">\n                  <Reply type=\"convert\">\n                    <span>Convert</span>\n                  </Reply>\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <li key=\"ticket\">\n                    <TicketConvertTrigger\n                      {...triggerProps}\n                      url={convertToInfo.ticketUrl}\n                    />\n                  </li>\n                  <li key=\"deal\">\n                    <DealConvertTrigger\n                      {...triggerProps}\n                      url={convertToInfo.dealUrl}\n                    />\n                  </li>\n                  <li key=\"task\">\n                    <TaskConvertTrigger\n                      {...triggerProps}\n                      url={convertToInfo.taskUrl}\n                    />\n                  </li>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Container>\n\n            <Reply type={statusText}>\n              <span onClick={this.changeStatusComment}>{statusText}</span>\n            </Reply>\n            <span>\n              <Date\n                type=\"comment\"\n                timestamp={comment.timestamp}\n                permalink_url={comment.permalink_url}\n              />\n            </span>\n          </User>\n        </ChildPost>\n        {this.state.hasReplies && (\n          <ShowMore\n            onClick={this.fetchReplies.bind(this, comment.commentId)}\n            isReply={true}\n          >\n            <Icon icon=\"reply\" />\n            <span>View more replies</span>\n          </ShowMore>\n        )}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}