{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/WorkArea.tsx\";\nimport asyncComponent from \"modules/common/components/AsyncComponent\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport { AvatarImg } from \"modules/common/components/filterableList/styles\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport Label from \"modules/common/components/Label\";\nimport Tags from \"modules/common/components/Tags\";\nimport { __, getUserAvatar } from \"modules/common/utils\";\nimport AssignBoxPopover from \"modules/inbox/components/assignBox/AssignBoxPopover\";\nimport RespondBox from \"modules/inbox/containers/conversationDetail/RespondBox\";\nimport Resolver from \"modules/inbox/containers/Resolver\";\nimport Tagger from \"modules/inbox/containers/Tagger\";\nimport { PopoverButton } from \"modules/inbox/styles\";\nimport Wrapper from \"modules/layout/components/Wrapper\";\nimport { ContenFooter, ContentBox } from \"modules/layout/styles\";\nimport { BarItems } from \"modules/layout/styles\";\nimport React from \"react\";\nimport Conversation from \"./conversation/Conversation\";\nimport { ActionBarLeft, AssignText, AssignTrigger, ConversationWrapper, MailSubject } from \"./styles\";\nimport TypingIndicator from \"./TypingIndicator\";\nvar Participators = asyncComponent(function () {\n  return import(\n  /* webpackChunkName:\"Inbox-Participators\" */\n  \"./Participators\");\n}, {\n  height: \"30px\",\n  width: \"30px\",\n  round: true\n});\nvar ConvertTo = asyncComponent(function () {\n  return import(\n  /* webpackChunkName:\"Inbox-ConvertTo\" */\n  \"../../../containers/conversationDetail/workarea/ConvertTo\");\n}, {\n  height: \"22px\",\n  width: \"71px\"\n});\n\nvar WorkArea =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WorkArea, _React$Component);\n\n  function WorkArea(props) {\n    var _this;\n\n    _classCallCheck(this, WorkArea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WorkArea).call(this, props));\n    _this.node = void 0;\n\n    _this.onScroll = function () {\n      var current = _this.node.current;\n      var loadMoreMessages = _this.props.loadMoreMessages;\n\n      if (current.scrollTop === 0) {\n        loadMoreMessages();\n      }\n    };\n\n    _this.scrollBottom = function () {\n      var current = _this.node.current;\n      return current.scrollTop = current.scrollHeight;\n    };\n\n    _this.setAttachmentPreview = function (attachmentPreview) {\n      _this.setState({\n        attachmentPreview: attachmentPreview\n      });\n    };\n\n    _this.isMailConversation = function (kind) {\n      return kind.includes(\"nylas\") || kind === \"gmail\" ? true : false;\n    };\n\n    _this.renderExtraHeading = function (kind, conversationMessage) {\n      if (!conversationMessage) {\n        return null;\n      }\n\n      if (_this.isMailConversation(kind)) {\n        var mailData = conversationMessage.mailData;\n        return React.createElement(MailSubject, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, mailData && (mailData.subject || \"\"));\n      }\n\n      return null;\n    };\n\n    _this.state = {\n      attachmentPreview: null\n    };\n    _this.node = React.createRef();\n    return _this;\n  }\n\n  _createClass(WorkArea, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.scrollBottom();\n    } // Calculating new messages's height to use later in componentDidUpdate\n    // So that we can retract cursor position to original place\n\n  }, {\n    key: \"getSnapshotBeforeUpdate\",\n    value: function getSnapshotBeforeUpdate(prevProps) {\n      var conversationMessages = this.props.conversationMessages;\n\n      if (prevProps.conversationMessages.length < conversationMessages.length) {\n        var current = this.node.current;\n        return current.scrollHeight - current.scrollTop;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var _this$props = this.props,\n          conversationMessages = _this$props.conversationMessages,\n          typingInfo = _this$props.typingInfo;\n      var messageCount = conversationMessages.length;\n      var prevMessageCount = prevProps.conversationMessages.length;\n\n      if (snapshot !== null) {\n        var current = this.node.current;\n        current.scrollTop = current.scrollHeight - snapshot;\n      }\n\n      if (prevMessageCount + 1 === messageCount || typingInfo) {\n        this.scrollBottom();\n      }\n\n      return;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          currentConversation = _this$props2.currentConversation,\n          conversationMessages = _this$props2.conversationMessages,\n          addMessage = _this$props2.addMessage,\n          loading = _this$props2.loading,\n          typingInfo = _this$props2.typingInfo,\n          refetchMessages = _this$props2.refetchMessages,\n          refetchDetail = _this$props2.refetchDetail;\n      var tags = currentConversation.tags || [];\n      var assignedUser = currentConversation.assignedUser;\n      var participatedUsers = currentConversation.participatedUsers || [];\n      var kind = currentConversation.integration.kind;\n      var showInternal = this.isMailConversation(kind) || kind === \"lead\";\n      var tagTrigger = React.createElement(PopoverButton, {\n        id: \"conversationTags\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, tags.length ? React.createElement(Tags, {\n        tags: tags,\n        limit: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }) : React.createElement(Label, {\n        lblStyle: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"No tags\"), React.createElement(Icon, {\n        icon: \"angle-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }));\n      var assignTrigger = React.createElement(AssignTrigger, {\n        id: \"conversationAssignTrigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, assignedUser && assignedUser._id ? React.createElement(AvatarImg, {\n        src: getUserAvatar(assignedUser),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }) : React.createElement(Button, {\n        id: \"conversationAssignTo\",\n        btnStyle: \"simple\",\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, __(\"Member\"), React.createElement(Icon, {\n        icon: \"angle-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })));\n      var actionBarRight = React.createElement(BarItems, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Tagger, {\n        targets: [currentConversation],\n        trigger: tagTrigger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(ConvertTo, {\n        conversation: currentConversation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(Resolver, {\n        conversations: [currentConversation],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }));\n      var actionBarLeft = React.createElement(ActionBarLeft, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(AssignText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, __(\"Assign to\"), \":\"), React.createElement(AssignBoxPopover, {\n        targets: [currentConversation],\n        trigger: assignTrigger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), participatedUsers && React.createElement(Participators, {\n        participatedUsers: participatedUsers,\n        limit: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }));\n      var actionBar = React.createElement(Wrapper.ActionBar, {\n        right: actionBarRight,\n        left: actionBarLeft,\n        background: \"colorWhite\",\n        bottom: this.renderExtraHeading(kind, conversationMessages[0]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      });\n      var typingIndicator = typingInfo ? React.createElement(TypingIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, typingInfo) : null;\n      var content = React.createElement(ConversationWrapper, {\n        id: \"conversationWrapper\",\n        innerRef: this.node,\n        onScroll: this.onScroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Conversation, {\n        conversation: currentConversation,\n        scrollBottom: this.scrollBottom,\n        conversationMessages: conversationMessages,\n        attachmentPreview: this.state.attachmentPreview,\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }));\n      return React.createElement(React.Fragment, null, actionBar, React.createElement(ContentBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, content), currentConversation._id && React.createElement(ContenFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, typingIndicator, React.createElement(RespondBox, {\n        showInternal: showInternal,\n        conversation: currentConversation,\n        setAttachmentPreview: this.setAttachmentPreview,\n        addMessage: addMessage,\n        refetchMessages: refetchMessages,\n        refetchDetail: refetchDetail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return WorkArea;\n}(React.Component);\n\nexport { WorkArea as default };","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/WorkArea.tsx"],"names":["asyncComponent","Button","AvatarImg","Icon","Label","Tags","__","getUserAvatar","AssignBoxPopover","RespondBox","Resolver","Tagger","PopoverButton","Wrapper","ContenFooter","ContentBox","BarItems","React","Conversation","ActionBarLeft","AssignText","AssignTrigger","ConversationWrapper","MailSubject","TypingIndicator","Participators","height","width","round","ConvertTo","WorkArea","props","node","onScroll","current","loadMoreMessages","scrollTop","scrollBottom","scrollHeight","setAttachmentPreview","attachmentPreview","setState","isMailConversation","kind","includes","renderExtraHeading","conversationMessage","mailData","subject","state","createRef","prevProps","conversationMessages","length","prevState","snapshot","typingInfo","messageCount","prevMessageCount","currentConversation","addMessage","loading","refetchMessages","refetchDetail","tags","assignedUser","participatedUsers","integration","showInternal","tagTrigger","assignTrigger","_id","actionBarRight","actionBarLeft","actionBar","typingIndicator","content","Component"],"mappings":"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","sourcesContent":["import asyncComponent from \"modules/common/components/AsyncComponent\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport { AvatarImg } from \"modules/common/components/filterableList/styles\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport Label from \"modules/common/components/Label\";\nimport Tags from \"modules/common/components/Tags\";\nimport { IAttachmentPreview } from \"modules/common/types\";\nimport { __, getUserAvatar } from \"modules/common/utils\";\nimport AssignBoxPopover from \"modules/inbox/components/assignBox/AssignBoxPopover\";\nimport RespondBox from \"modules/inbox/containers/conversationDetail/RespondBox\";\nimport Resolver from \"modules/inbox/containers/Resolver\";\nimport Tagger from \"modules/inbox/containers/Tagger\";\nimport { PopoverButton } from \"modules/inbox/styles\";\nimport Wrapper from \"modules/layout/components/Wrapper\";\nimport { ContenFooter, ContentBox } from \"modules/layout/styles\";\nimport { BarItems } from \"modules/layout/styles\";\nimport React from \"react\";\nimport {\n  AddMessageMutationVariables,\n  IConversation,\n  IMessage,\n} from \"../../../types\";\nimport Conversation from \"./conversation/Conversation\";\nimport {\n  ActionBarLeft,\n  AssignText,\n  AssignTrigger,\n  ConversationWrapper,\n  MailSubject,\n} from \"./styles\";\nimport TypingIndicator from \"./TypingIndicator\";\n\nconst Participators = asyncComponent(\n  () => import(/* webpackChunkName:\"Inbox-Participators\" */ \"./Participators\"),\n  { height: \"30px\", width: \"30px\", round: true }\n);\n\nconst ConvertTo = asyncComponent(\n  () =>\n    import(\n      /* webpackChunkName:\"Inbox-ConvertTo\" */ \"../../../containers/conversationDetail/workarea/ConvertTo\"\n    ),\n  { height: \"22px\", width: \"71px\" }\n);\n\ntype Props = {\n  queryParams?: any;\n  title?: string;\n  currentConversationId?: string;\n  currentConversation: IConversation;\n  conversationMessages: IMessage[];\n  loading: boolean;\n  typingInfo?: string;\n  loadMoreMessages: () => void;\n  addMessage: ({\n    variables,\n    optimisticResponse,\n    callback,\n    kind,\n  }: {\n    variables: AddMessageMutationVariables;\n    optimisticResponse: any;\n    callback?: (e?) => void;\n    kind: string;\n  }) => void;\n  refetchMessages: () => void;\n  refetchDetail: () => void;\n};\n\ntype State = {\n  attachmentPreview: IAttachmentPreview;\n};\n\nexport default class WorkArea extends React.Component<Props, State> {\n  private node;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = { attachmentPreview: null };\n\n    this.node = React.createRef();\n  }\n\n  componentDidMount() {\n    this.scrollBottom();\n  }\n\n  // Calculating new messages's height to use later in componentDidUpdate\n  // So that we can retract cursor position to original place\n  getSnapshotBeforeUpdate(prevProps) {\n    const { conversationMessages } = this.props;\n\n    if (prevProps.conversationMessages.length < conversationMessages.length) {\n      const { current } = this.node;\n\n      return current.scrollHeight - current.scrollTop;\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { conversationMessages, typingInfo } = this.props;\n\n    const messageCount = conversationMessages.length;\n    const prevMessageCount = prevProps.conversationMessages.length;\n\n    if (snapshot !== null) {\n      const { current } = this.node;\n      current.scrollTop = current.scrollHeight - snapshot;\n    }\n\n    if (prevMessageCount + 1 === messageCount || typingInfo) {\n      this.scrollBottom();\n    }\n\n    return;\n  }\n\n  onScroll = () => {\n    const { current } = this.node;\n    const { loadMoreMessages } = this.props;\n\n    if (current.scrollTop === 0) {\n      loadMoreMessages();\n    }\n  };\n\n  scrollBottom = () => {\n    const { current } = this.node;\n\n    return (current.scrollTop = current.scrollHeight);\n  };\n\n  setAttachmentPreview = (attachmentPreview) => {\n    this.setState({ attachmentPreview });\n  };\n\n  isMailConversation = (kind: string) =>\n    kind.includes(\"nylas\") || kind === \"gmail\" ? true : false;\n\n  renderExtraHeading = (kind: string, conversationMessage: IMessage) => {\n    if (!conversationMessage) {\n      return null;\n    }\n\n    if (this.isMailConversation(kind)) {\n      const { mailData } = conversationMessage;\n\n      return <MailSubject>{mailData && (mailData.subject || \"\")}</MailSubject>;\n    }\n\n    return null;\n  };\n\n  render() {\n    const {\n      currentConversation,\n      conversationMessages,\n      addMessage,\n      loading,\n      typingInfo,\n      refetchMessages,\n      refetchDetail,\n    } = this.props;\n\n    const tags = currentConversation.tags || [];\n    const assignedUser = currentConversation.assignedUser;\n    const participatedUsers = currentConversation.participatedUsers || [];\n    const { kind } = currentConversation.integration;\n\n    const showInternal = this.isMailConversation(kind) || kind === \"lead\";\n\n    const tagTrigger = (\n      <PopoverButton id=\"conversationTags\">\n        {tags.length ? (\n          <Tags tags={tags} limit={1} />\n        ) : (\n          <Label lblStyle=\"default\">No tags</Label>\n        )}\n        <Icon icon=\"angle-down\" />\n      </PopoverButton>\n    );\n\n    const assignTrigger = (\n      <AssignTrigger id=\"conversationAssignTrigger\">\n        {assignedUser && assignedUser._id ? (\n          <AvatarImg src={getUserAvatar(assignedUser)} />\n        ) : (\n          <Button id=\"conversationAssignTo\" btnStyle=\"simple\" size=\"small\">\n            {__(\"Member\")}\n            <Icon icon=\"angle-down\" />\n          </Button>\n        )}\n      </AssignTrigger>\n    );\n\n    const actionBarRight = (\n      <BarItems>\n        <Tagger targets={[currentConversation]} trigger={tagTrigger} />\n\n        <ConvertTo conversation={currentConversation} />\n\n        <Resolver conversations={[currentConversation]} />\n      </BarItems>\n    );\n\n    const actionBarLeft = (\n      <ActionBarLeft>\n        <AssignText>{__(\"Assign to\")}:</AssignText>\n        <AssignBoxPopover\n          targets={[currentConversation]}\n          trigger={assignTrigger}\n        />\n        {participatedUsers && (\n          <Participators participatedUsers={participatedUsers} limit={3} />\n        )}\n      </ActionBarLeft>\n    );\n\n    const actionBar = (\n      <Wrapper.ActionBar\n        right={actionBarRight}\n        left={actionBarLeft}\n        background=\"colorWhite\"\n        bottom={this.renderExtraHeading(kind, conversationMessages[0])}\n      />\n    );\n\n    const typingIndicator = typingInfo ? (\n      <TypingIndicator>{typingInfo}</TypingIndicator>\n    ) : null;\n\n    const content = (\n      <ConversationWrapper\n        id=\"conversationWrapper\"\n        innerRef={this.node}\n        onScroll={this.onScroll}\n      >\n        <Conversation\n          conversation={currentConversation}\n          scrollBottom={this.scrollBottom}\n          conversationMessages={conversationMessages}\n          attachmentPreview={this.state.attachmentPreview}\n          loading={loading}\n        />\n      </ConversationWrapper>\n    );\n\n    return (\n      <>\n        {actionBar}\n        <ContentBox>{content}</ContentBox>\n        {currentConversation._id && (\n          <ContenFooter>\n            {typingIndicator}\n            <RespondBox\n              showInternal={showInternal}\n              conversation={currentConversation}\n              setAttachmentPreview={this.setAttachmentPreview}\n              addMessage={addMessage}\n              refetchMessages={refetchMessages}\n              refetchDetail={refetchDetail}\n            />\n          </ContenFooter>\n        )}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}