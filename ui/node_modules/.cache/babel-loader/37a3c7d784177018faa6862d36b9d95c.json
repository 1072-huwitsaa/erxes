{"ast":null,"code":"import _slicedToArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/videoCall/containers/ManageRoom.tsx\";\nimport client from 'apolloClient';\nimport gql from 'graphql-tag';\nimport { SmallLoader } from 'modules/common/components/ButtonMutate';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Tip from 'modules/common/components/Tip';\nimport { __, Alert } from 'modules/common/utils';\nimport React, { useState } from 'react';\nimport { mutations } from '../graphql';\n\nfunction ManageRoom(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var openWindow = function openWindow(url, name) {\n    var height = 600;\n    var width = 480;\n    var y = window.top.outerHeight / 2 + window.top.screenY - height / 2;\n    var x = window.top.outerWidth / 2 + window.top.screenX - width / 2;\n    window.open(\"/videoCall?url=\".concat(url, \"&name=\").concat(name), '_blank', \"toolbar=no,titlebar=no,directories=no,menubar=no,location=no,scrollbars=yes,status=no,height=\".concat(height, \",width=\").concat(width, \",top=\").concat(y, \",left=\").concat(x));\n  };\n\n  var createVideoRoom = function createVideoRoom() {\n    var conversationId = props.conversationId,\n        activeVideo = props.activeVideo,\n        refetchDetail = props.refetchDetail,\n        refetchMessages = props.refetchMessages;\n\n    if (activeVideo && activeVideo.url) {\n      openWindow(activeVideo.url, activeVideo.name || '');\n    } else {\n      setLoading(true);\n      client.mutate({\n        mutation: gql(mutations.createVideoChatRoom),\n        variables: {\n          _id: conversationId\n        }\n      }).then(function (_ref) {\n        var data = _ref.data;\n        setLoading(false);\n        refetchDetail();\n        refetchMessages();\n        var _data$conversationCre = data.conversationCreateVideoChatRoom,\n            url = _data$conversationCre.url,\n            name = _data$conversationCre.name;\n        openWindow(url, name);\n      }).catch(function (error) {\n        setLoading(false);\n        Alert.error(error.message);\n      });\n    }\n  };\n\n  return React.createElement(Tip, {\n    text: __('Invite to video call'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    onClick: createVideoRoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, loading ? React.createElement(SmallLoader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }) : React.createElement(Icon, {\n    icon: \"video\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })));\n}\n\nexport default ManageRoom;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/videoCall/containers/ManageRoom.tsx"],"names":["client","gql","SmallLoader","Icon","Tip","__","Alert","React","useState","mutations","ManageRoom","props","loading","setLoading","openWindow","url","name","height","width","y","window","top","outerHeight","screenY","x","outerWidth","screenX","open","createVideoRoom","conversationId","activeVideo","refetchDetail","refetchMessages","mutate","mutation","createVideoChatRoom","variables","_id","then","data","conversationCreateVideoChatRoom","catch","error","message"],"mappings":"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","sourcesContent":["import client from 'apolloClient';\nimport gql from 'graphql-tag';\nimport { SmallLoader } from 'modules/common/components/ButtonMutate';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Tip from 'modules/common/components/Tip';\nimport { __, Alert } from 'modules/common/utils';\nimport { IVideoCallData } from 'modules/inbox/types';\nimport React, { useState } from 'react';\nimport { mutations } from '../graphql';\n\ntype Props = {\n  activeVideo?: IVideoCallData;\n  conversationId: string;\n  refetchDetail: () => void;\n  refetchMessages: () => void;\n};\n\nfunction ManageRoom(props: Props) {\n  const [loading, setLoading] = useState(false);\n\n  const openWindow = (url: string, name: string) => {\n    const height = 600;\n    const width = 480;\n\n    const y = window.top.outerHeight / 2 + window.top.screenY - height / 2;\n    const x = window.top.outerWidth / 2 + window.top.screenX - width / 2;\n\n    window.open(\n      `/videoCall?url=${url}&name=${name}`,\n      '_blank',\n      `toolbar=no,titlebar=no,directories=no,menubar=no,location=no,scrollbars=yes,status=no,height=${height},width=${width},top=${y},left=${x}`\n    );\n  };\n\n  const createVideoRoom = () => {\n    const {\n      conversationId,\n      activeVideo,\n      refetchDetail,\n      refetchMessages\n    } = props;\n\n    if (activeVideo && activeVideo.url) {\n      openWindow(activeVideo.url, activeVideo.name || '');\n    } else {\n      setLoading(true);\n\n      client\n        .mutate({\n          mutation: gql(mutations.createVideoChatRoom),\n          variables: { _id: conversationId }\n        })\n        .then(({ data }: any) => {\n          setLoading(false);\n\n          refetchDetail();\n          refetchMessages();\n\n          const { url, name } = data.conversationCreateVideoChatRoom;\n\n          openWindow(url, name);\n        })\n        .catch(error => {\n          setLoading(false);\n\n          Alert.error(error.message);\n        });\n    }\n  };\n\n  return (\n    <Tip text={__('Invite to video call')}>\n      <label onClick={createVideoRoom}>\n        {loading ? <SmallLoader /> : <Icon icon=\"video\" />}\n      </label>\n    </Tip>\n  );\n}\n\nexport default ManageRoom;\n"]},"metadata":{},"sourceType":"module"}