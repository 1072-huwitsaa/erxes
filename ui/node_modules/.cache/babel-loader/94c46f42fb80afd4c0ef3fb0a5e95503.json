{"ast":null,"code":"import _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/messenger/steps/Appearance.tsx\";\nimport classnames from 'classnames';\nimport { TEXT_COLORS } from 'modules/boards/constants';\nimport { ControlLabel } from 'modules/common/components/form';\nimport { FlexItem, LeftItem } from 'modules/common/components/step/styles';\nimport { __, uploadHandler } from 'modules/common/utils';\nimport { BackgroundSelector, ColorPick, ColorPicker, SubItem, WidgetBackgrounds } from 'modules/settings/styles';\nimport React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport TwitterPicker from 'react-color/lib/Twitter';\n\nvar Appearance =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Appearance, _React$Component);\n\n  function Appearance(props) {\n    var _this;\n\n    _classCallCheck(this, Appearance);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Appearance).call(this, props));\n\n    _this.onChange = function (name, value) {\n      _this.props.onChange(name, value);\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleLogoChange = function (e) {\n      var imageFile = e.target.files;\n      uploadHandler({\n        files: imageFile,\n        beforeUpload: function beforeUpload() {\n          _this.onChange('logoPreviewStyle', {\n            opacity: '0.7'\n          });\n        },\n        afterUpload: function afterUpload(_ref) {\n          var response = _ref.response;\n\n          _this.onChange('logo', response);\n\n          _this.onChange('logoPreviewStyle', {\n            opacity: '1'\n          });\n        },\n        afterRead: function afterRead(_ref2) {\n          var result = _ref2.result;\n\n          _this.onChange('logoPreviewUrl', result);\n        }\n      });\n    };\n\n    _this.state = {\n      wallpaper: props.wallpaper,\n      logoPreviewStyle: {},\n      logo: {},\n      logoPreviewUrl: {}\n    };\n    return _this;\n  }\n\n  _createClass(Appearance, [{\n    key: \"renderWallpaperSelect\",\n    value: function renderWallpaperSelect(value) {\n      var _this2 = this;\n\n      var isSelected = this.state.wallpaper === value;\n      var selectorClass = classnames({\n        selected: isSelected\n      });\n\n      var onClick = function onClick() {\n        return _this2.onChange('wallpaper', value);\n      };\n\n      return React.createElement(BackgroundSelector, {\n        className: selectorClass,\n        onClick: onClick,\n        style: {\n          borderColor: isSelected ? this.props.color : 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"background-\".concat(value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderUploadImage\",\n    value: function renderUploadImage(title) {\n      return React.createElement(SubItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, title), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleLogoChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          color = _this$props.color,\n          textColor = _this$props.textColor,\n          onChange = _this$props.onChange;\n\n      var onChangeColor = function onChangeColor(key, e) {\n        return onChange(key, e.hex);\n      };\n\n      var popoverContent = React.createElement(Popover, {\n        id: \"color-picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(TwitterPicker, {\n        color: color,\n        onChange: onChangeColor.bind(this, 'color'),\n        triangle: \"hide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }));\n      var textColorContent = React.createElement(Popover, {\n        id: \"text-color-picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(TwitterPicker, {\n        color: textColor,\n        onChange: onChangeColor.bind(this, 'textColor'),\n        colors: TEXT_COLORS,\n        triangle: \"hide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }));\n      return React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(LeftItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(SubItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, __('Choose a background color')), React.createElement(OverlayTrigger, {\n        trigger: \"click\",\n        rootClose: true,\n        placement: \"bottom-start\",\n        overlay: popoverContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(ColorPick, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(ColorPicker, {\n        style: {\n          backgroundColor: color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })))), React.createElement(SubItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, __('Choose a text color')), React.createElement(OverlayTrigger, {\n        trigger: \"click\",\n        rootClose: true,\n        placement: \"bottom-start\",\n        overlay: textColorContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(ColorPick, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(ColorPicker, {\n        style: {\n          backgroundColor: textColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })))), React.createElement(SubItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Choose a wallpaper\"), React.createElement(WidgetBackgrounds, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, this.renderWallpaperSelect('1'), this.renderWallpaperSelect('2'), this.renderWallpaperSelect('3'), this.renderWallpaperSelect('4'), this.renderWallpaperSelect('5'))), this.renderUploadImage(__('Choose a logo'))));\n    }\n  }]);\n\n  return Appearance;\n}(React.Component);\n\nexport default Appearance;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/messenger/steps/Appearance.tsx"],"names":["classnames","TEXT_COLORS","ControlLabel","FlexItem","LeftItem","__","uploadHandler","BackgroundSelector","ColorPick","ColorPicker","SubItem","WidgetBackgrounds","React","OverlayTrigger","Popover","TwitterPicker","Appearance","props","onChange","name","value","setState","handleLogoChange","e","imageFile","target","files","beforeUpload","opacity","afterUpload","response","afterRead","result","state","wallpaper","logoPreviewStyle","logo","logoPreviewUrl","isSelected","selectorClass","selected","onClick","borderColor","color","title","textColor","onChangeColor","key","hex","popoverContent","bind","textColorContent","backgroundColor","renderWallpaperSelect","renderUploadImage","Component"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport { TEXT_COLORS } from 'modules/boards/constants';\nimport { ControlLabel } from 'modules/common/components/form';\nimport { FlexItem, LeftItem } from 'modules/common/components/step/styles';\nimport { __, uploadHandler } from 'modules/common/utils';\nimport {\n  BackgroundSelector,\n  ColorPick,\n  ColorPicker,\n  SubItem,\n  WidgetBackgrounds\n} from 'modules/settings/styles';\nimport React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport TwitterPicker from 'react-color/lib/Twitter';\n\ntype Props = {\n  onChange: (\n    name:\n      | 'logoPreviewStyle'\n      | 'logo'\n      | 'logoPreviewUrl'\n      | 'wallpaper'\n      | 'color'\n      | 'textColor',\n    value: string\n  ) => void;\n  color: string;\n  textColor: string;\n  logoPreviewUrl?: string;\n  wallpaper: string;\n};\n\ntype State = {\n  wallpaper: string;\n  logoPreviewStyle: any;\n  logo: object;\n  logoPreviewUrl: object;\n};\n\nclass Appearance extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      wallpaper: props.wallpaper,\n      logoPreviewStyle: {},\n      logo: {},\n      logoPreviewUrl: {}\n    };\n  }\n\n  onChange = <T extends keyof State>(name: T, value: State[T]) => {\n    this.props.onChange(name, value);\n    this.setState(({ [name]: value } as unknown) as Pick<State, keyof State>);\n  };\n\n  handleLogoChange = e => {\n    const imageFile = e.target.files;\n\n    uploadHandler({\n      files: imageFile,\n\n      beforeUpload: () => {\n        this.onChange('logoPreviewStyle', { opacity: '0.7' });\n      },\n\n      afterUpload: ({ response }) => {\n        this.onChange('logo', response);\n        this.onChange('logoPreviewStyle', { opacity: '1' });\n      },\n\n      afterRead: ({ result }) => {\n        this.onChange('logoPreviewUrl', result);\n      }\n    });\n  };\n\n  renderWallpaperSelect(value) {\n    const isSelected = this.state.wallpaper === value;\n    const selectorClass = classnames({ selected: isSelected });\n\n    const onClick = () => this.onChange('wallpaper', value);\n\n    return (\n      <BackgroundSelector\n        className={selectorClass}\n        onClick={onClick}\n        style={{ borderColor: isSelected ? this.props.color : 'transparent' }}\n      >\n        <div className={`background-${value}`} />\n      </BackgroundSelector>\n    );\n  }\n\n  renderUploadImage(title) {\n    return (\n      <SubItem>\n        <ControlLabel>{title}</ControlLabel>\n        <input type=\"file\" onChange={this.handleLogoChange} />\n      </SubItem>\n    );\n  }\n\n  render() {\n    const { color, textColor, onChange } = this.props;\n    const onChangeColor = (key, e) => onChange(key, e.hex);\n\n    const popoverContent = (\n      <Popover id=\"color-picker\">\n        <TwitterPicker\n          color={color}\n          onChange={onChangeColor.bind(this, 'color')}\n          triangle=\"hide\"\n        />\n      </Popover>\n    );\n\n    const textColorContent = (\n      <Popover id=\"text-color-picker\">\n        <TwitterPicker\n          color={textColor}\n          onChange={onChangeColor.bind(this, 'textColor')}\n          colors={TEXT_COLORS}\n          triangle=\"hide\"\n        />\n      </Popover>\n    );\n\n    return (\n      <FlexItem>\n        <LeftItem>\n          <SubItem>\n            <ControlLabel>{__('Choose a background color')}</ControlLabel>\n            <OverlayTrigger\n              trigger=\"click\"\n              rootClose={true}\n              placement=\"bottom-start\"\n              overlay={popoverContent}\n            >\n              <ColorPick>\n                <ColorPicker style={{ backgroundColor: color }} />\n              </ColorPick>\n            </OverlayTrigger>\n          </SubItem>\n          <SubItem>\n            <ControlLabel>{__('Choose a text color')}</ControlLabel>\n            <OverlayTrigger\n              trigger=\"click\"\n              rootClose={true}\n              placement=\"bottom-start\"\n              overlay={textColorContent}\n            >\n              <ColorPick>\n                <ColorPicker style={{ backgroundColor: textColor }} />\n              </ColorPick>\n            </OverlayTrigger>\n          </SubItem>\n\n          <SubItem>\n            <ControlLabel>Choose a wallpaper</ControlLabel>\n\n            <WidgetBackgrounds>\n              {this.renderWallpaperSelect('1')}\n              {this.renderWallpaperSelect('2')}\n              {this.renderWallpaperSelect('3')}\n              {this.renderWallpaperSelect('4')}\n              {this.renderWallpaperSelect('5')}\n            </WidgetBackgrounds>\n          </SubItem>\n\n          {this.renderUploadImage(__('Choose a logo'))}\n        </LeftItem>\n      </FlexItem>\n    );\n  }\n}\n\nexport default Appearance;\n"]},"metadata":{},"sourceType":"module"}