{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/common/IntegrationListItem.tsx\";\nimport { getEnv } from \"apolloClient\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport ActionButtons from \"erxes-common-ui/lib/components/actionButtons\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport Label from \"modules/common/components/Label\";\nimport ModalTrigger from \"modules/common/components/ModalTrigger\";\nimport Tip from \"modules/common/components/Tip\";\nimport WithPermission from \"modules/common/components/WithPermission\";\nimport { __ } from \"modules/common/utils\";\nimport InstallCode from \"modules/settings/integrations/components/InstallCode\";\nimport { INTEGRATION_KINDS } from \"modules/settings/integrations/constants\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { cleanIntegrationKind } from \"../../containers/utils\";\nimport { INTEGRATIONS_COLORS } from \"../../integrationColors\";\nimport CommonFieldForm from \"./CommonFieldForm\";\n\nvar IntegrationListItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IntegrationListItem, _React$Component);\n\n  function IntegrationListItem() {\n    _classCallCheck(this, IntegrationListItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(IntegrationListItem).apply(this, arguments));\n  }\n\n  _createClass(IntegrationListItem, [{\n    key: \"renderArchiveAction\",\n    value: function renderArchiveAction() {\n      var _this$props = this.props,\n          archive = _this$props.archive,\n          integration = _this$props.integration,\n          disableAction = _this$props.disableAction;\n\n      if (!archive || disableAction || !integration.isActive) {\n        return null;\n      }\n\n      var onClick = function onClick() {\n        return archive(integration._id, true);\n      };\n\n      return React.createElement(WithPermission, {\n        action: \"integrationsArchive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Tip, {\n        text: __(\"Archive\"),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"link\",\n        onClick: onClick,\n        icon: \"archive-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderUnarchiveAction\",\n    value: function renderUnarchiveAction() {\n      var _this$props2 = this.props,\n          archive = _this$props2.archive,\n          integration = _this$props2.integration,\n          disableAction = _this$props2.disableAction;\n\n      if (!archive || disableAction || integration.isActive) {\n        return null;\n      }\n\n      var onClick = function onClick() {\n        return archive(integration._id, false);\n      };\n\n      return React.createElement(WithPermission, {\n        action: \"integrationsArchive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Tip, {\n        text: __(\"Unarchive\"),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"link\",\n        onClick: onClick,\n        icon: \"redo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderGetAction\",\n    value: function renderGetAction() {\n      var integration = this.props.integration;\n      var webhookData = integration.webhookData;\n\n      if (!webhookData) {\n        return;\n      }\n\n      var showTrigger = React.createElement(Button, {\n        btnStyle: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Tip, {\n        text: \"Show\",\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })));\n\n      var content = function content() {\n        var _getEnv = getEnv(),\n            REACT_APP_API_URL = _getEnv.REACT_APP_API_URL;\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"Name\"), \": \", integration.name, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"URL\"), \": \", REACT_APP_API_URL, \"/webhooks/\", integration._id, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }), React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Token\"), \": \", webhookData.token));\n      };\n\n      return React.createElement(WithPermission, {\n        action: \"showIntegrations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(ActionButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(ModalTrigger, {\n        title: \"Integration detail\",\n        trigger: showTrigger,\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderEditAction\",\n    value: function renderEditAction() {\n      var _this$props3 = this.props,\n          integration = _this$props3.integration,\n          editIntegration = _this$props3.editIntegration;\n\n      if (integration.kind === INTEGRATION_KINDS.MESSENGER) {\n        return null;\n      }\n\n      var editTrigger = React.createElement(Button, {\n        btnStyle: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Tip, {\n        text: \"Edit\",\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"edit-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })));\n\n      var content = function content(props) {\n        return React.createElement(CommonFieldForm, Object.assign({}, props, {\n          onSubmit: editIntegration,\n          name: integration.name,\n          brandId: integration.brandId,\n          channelIds: integration.channels.map(function (item) {\n            return item._id;\n          }) || [],\n          integrationId: integration._id,\n          integrationKind: integration.kind,\n          webhookData: integration.webhookData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }));\n      };\n\n      return React.createElement(WithPermission, {\n        action: \"integrationsEdit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(ActionButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(ModalTrigger, {\n        title: \"Edit integration\",\n        trigger: editTrigger,\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderMessengerActions\",\n    value: function renderMessengerActions(integration) {\n      var kind = integration.kind;\n\n      if (kind === INTEGRATION_KINDS.MESSENGER) {\n        var editTrigger = React.createElement(Button, {\n          btnStyle: \"link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(Tip, {\n          text: \"Install code\",\n          placement: \"top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"code\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        })));\n\n        var content = function content(props) {\n          return React.createElement(InstallCode, Object.assign({}, props, {\n            integration: integration,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }));\n        };\n\n        return React.createElement(ActionButtons, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(Tip, {\n          text: __(\"Edit messenger integration\"),\n          placement: \"top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/settings/integrations/editMessenger/\".concat(integration._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(Button, {\n          btnStyle: \"link\",\n          icon: \"edit-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }))), React.createElement(ModalTrigger, {\n          isOpen: this.props._id === integration._id,\n          title: \"Install code\",\n          size: \"lg\",\n          trigger: editTrigger,\n          content: content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderRemoveAction\",\n    value: function renderRemoveAction() {\n      var _this$props4 = this.props,\n          integration = _this$props4.integration,\n          removeIntegration = _this$props4.removeIntegration,\n          disableAction = _this$props4.disableAction;\n\n      if (!removeIntegration || disableAction) {\n        return null;\n      }\n\n      var onClick = function onClick() {\n        return removeIntegration(integration);\n      };\n\n      return React.createElement(WithPermission, {\n        action: \"integrationsRemove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Tip, {\n        text: __(\"Delete\"),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"link\",\n        onClick: onClick,\n        icon: \"times-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderExternalData\",\n    value: function renderExternalData(integration) {\n      var externalData = integration.externalData,\n          kind = integration.kind;\n      var value = \"\";\n\n      if (!externalData) {\n        return React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        });\n      }\n\n      switch (kind) {\n        case INTEGRATION_KINDS.CALLPRO:\n          value = externalData.phoneNumber;\n          break;\n\n        case INTEGRATION_KINDS.CHATFUEL:\n          value = (externalData.chatfuelConfigs || {}).toString();\n          break;\n\n        case INTEGRATION_KINDS.WHATSAPP:\n          value = externalData.whatsappToken;\n          break;\n\n        case INTEGRATION_KINDS.SMOOCH_TELEGRAM:\n          value = externalData.telegramBotToken;\n          break;\n\n        case INTEGRATION_KINDS.SMOOCH_VIBER:\n          value = externalData.viberBotToken;\n          break;\n\n        case INTEGRATION_KINDS.SMOOCH_LINE:\n          value = externalData.lineChannelId;\n          break;\n\n        case INTEGRATION_KINDS.TELNYX:\n          value = externalData.telnyxPhoneNumber;\n          break;\n\n        default:\n          break;\n      }\n\n      return React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var integration = this.props.integration;\n      var integrationKind = cleanIntegrationKind(integration.kind);\n      var labelStyle = integration.isActive ? \"success\" : \"warning\";\n      var status = integration.isActive ? __(\"Active\") : __(\"Archived\");\n      return React.createElement(\"tr\", {\n        key: integration._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, integration.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Label, {\n        lblColor: INTEGRATIONS_COLORS[integrationKind],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, integrationKind)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, integration.brand ? integration.brand.name : \"\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Label, {\n        lblStyle: labelStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, status)), this.renderExternalData(integration), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(ActionButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, this.renderMessengerActions(integration), this.renderGetAction(), this.renderEditAction(), this.renderArchiveAction(), this.renderUnarchiveAction(), this.renderRemoveAction())));\n    }\n  }]);\n\n  return IntegrationListItem;\n}(React.Component);\n\nexport default IntegrationListItem;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/common/IntegrationListItem.tsx"],"names":["getEnv","Button","ActionButtons","Icon","Label","ModalTrigger","Tip","WithPermission","__","InstallCode","INTEGRATION_KINDS","React","Link","cleanIntegrationKind","INTEGRATIONS_COLORS","CommonFieldForm","IntegrationListItem","props","archive","integration","disableAction","isActive","onClick","_id","webhookData","showTrigger","content","REACT_APP_API_URL","name","token","editIntegration","kind","MESSENGER","editTrigger","brandId","channels","map","item","removeIntegration","externalData","value","CALLPRO","phoneNumber","CHATFUEL","chatfuelConfigs","toString","WHATSAPP","whatsappToken","SMOOCH_TELEGRAM","telegramBotToken","SMOOCH_VIBER","viberBotToken","SMOOCH_LINE","lineChannelId","TELNYX","telnyxPhoneNumber","integrationKind","labelStyle","status","brand","renderExternalData","renderMessengerActions","renderGetAction","renderEditAction","renderArchiveAction","renderUnarchiveAction","renderRemoveAction","Component"],"mappings":"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","sourcesContent":["import { getEnv } from \"apolloClient\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport ActionButtons from \"erxes-common-ui/lib/components/actionButtons\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport Label from \"modules/common/components/Label\";\nimport ModalTrigger from \"modules/common/components/ModalTrigger\";\nimport Tip from \"modules/common/components/Tip\";\nimport WithPermission from \"modules/common/components/WithPermission\";\nimport { __ } from \"modules/common/utils\";\nimport InstallCode from \"modules/settings/integrations/components/InstallCode\";\nimport { INTEGRATION_KINDS } from \"modules/settings/integrations/constants\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { cleanIntegrationKind } from \"../../containers/utils\";\nimport { INTEGRATIONS_COLORS } from \"../../integrationColors\";\nimport { IIntegration, IntegrationMutationVariables } from \"../../types\";\nimport CommonFieldForm from \"./CommonFieldForm\";\n\ntype Props = {\n  _id?: string;\n  integration: IIntegration;\n  archive: (id: string, status: boolean) => void;\n  removeIntegration: (integration: IIntegration) => void;\n  disableAction?: boolean;\n  editIntegration: (\n    id: string,\n    { name, brandId, channelIds }: IntegrationMutationVariables\n  ) => void;\n};\n\nclass IntegrationListItem extends React.Component<Props> {\n  renderArchiveAction() {\n    const { archive, integration, disableAction } = this.props;\n\n    if (!archive || disableAction || !integration.isActive) {\n      return null;\n    }\n\n    const onClick = () => archive(integration._id, true);\n\n    return (\n      <WithPermission action=\"integrationsArchive\">\n        <Tip text={__(\"Archive\")} placement=\"top\">\n          <Button btnStyle=\"link\" onClick={onClick} icon=\"archive-alt\" />\n        </Tip>\n      </WithPermission>\n    );\n  }\n\n  renderUnarchiveAction() {\n    const { archive, integration, disableAction } = this.props;\n\n    if (!archive || disableAction || integration.isActive) {\n      return null;\n    }\n\n    const onClick = () => archive(integration._id, false);\n\n    return (\n      <WithPermission action=\"integrationsArchive\">\n        <Tip text={__(\"Unarchive\")} placement=\"top\">\n          <Button btnStyle=\"link\" onClick={onClick} icon=\"redo\" />\n        </Tip>\n      </WithPermission>\n    );\n  }\n\n  renderGetAction() {\n    const { integration } = this.props;\n    const webhookData = integration.webhookData;\n\n    if (!webhookData) {\n      return;\n    }\n\n    const showTrigger = (\n      <Button btnStyle=\"link\">\n        <Tip text=\"Show\" placement=\"top\">\n          <Icon icon=\"eye\" />\n        </Tip>\n      </Button>\n    );\n\n    const content = () => {\n      const { REACT_APP_API_URL } = getEnv();\n\n      return (\n        <div>\n          <b>Name</b>: {integration.name} <br />\n          <div>\n            <b>URL</b>: {REACT_APP_API_URL}/webhooks/{integration._id} <br />\n            <b>Token</b>: {webhookData.token}\n          </div>\n        </div>\n      );\n    };\n\n    return (\n      <WithPermission action=\"showIntegrations\">\n        <ActionButtons>\n          <ModalTrigger\n            title=\"Integration detail\"\n            trigger={showTrigger}\n            content={content}\n          />\n        </ActionButtons>\n      </WithPermission>\n    );\n  }\n\n  renderEditAction() {\n    const { integration, editIntegration } = this.props;\n\n    if (integration.kind === INTEGRATION_KINDS.MESSENGER) {\n      return null;\n    }\n\n    const editTrigger = (\n      <Button btnStyle=\"link\">\n        <Tip text=\"Edit\" placement=\"top\">\n          <Icon icon=\"edit-3\" />\n        </Tip>\n      </Button>\n    );\n\n    const content = (props) => (\n      <CommonFieldForm\n        {...props}\n        onSubmit={editIntegration}\n        name={integration.name}\n        brandId={integration.brandId}\n        channelIds={integration.channels.map((item) => item._id) || []}\n        integrationId={integration._id}\n        integrationKind={integration.kind}\n        webhookData={integration.webhookData}\n      />\n    );\n\n    return (\n      <WithPermission action=\"integrationsEdit\">\n        <ActionButtons>\n          <ModalTrigger\n            title=\"Edit integration\"\n            trigger={editTrigger}\n            content={content}\n          />\n        </ActionButtons>\n      </WithPermission>\n    );\n  }\n\n  renderMessengerActions(integration) {\n    const kind = integration.kind;\n\n    if (kind === INTEGRATION_KINDS.MESSENGER) {\n      const editTrigger = (\n        <Button btnStyle=\"link\">\n          <Tip text=\"Install code\" placement=\"top\">\n            <Icon icon=\"code\" />\n          </Tip>\n        </Button>\n      );\n\n      const content = (props) => (\n        <InstallCode {...props} integration={integration} />\n      );\n\n      return (\n        <ActionButtons>\n          <Tip text={__(\"Edit messenger integration\")} placement=\"top\">\n            <Link\n              to={`/settings/integrations/editMessenger/${integration._id}`}\n            >\n              <Button btnStyle=\"link\" icon=\"edit-3\" />\n            </Link>\n          </Tip>\n\n          <ModalTrigger\n            isOpen={this.props._id === integration._id}\n            title=\"Install code\"\n            size=\"lg\"\n            trigger={editTrigger}\n            content={content}\n          />\n        </ActionButtons>\n      );\n    }\n\n    return null;\n  }\n\n  renderRemoveAction() {\n    const { integration, removeIntegration, disableAction } = this.props;\n\n    if (!removeIntegration || disableAction) {\n      return null;\n    }\n\n    const onClick = () => removeIntegration(integration);\n\n    return (\n      <WithPermission action=\"integrationsRemove\">\n        <Tip text={__(\"Delete\")} placement=\"top\">\n          <Button btnStyle=\"link\" onClick={onClick} icon=\"times-circle\" />\n        </Tip>\n      </WithPermission>\n    );\n  }\n\n  renderExternalData(integration) {\n    const { externalData, kind } = integration;\n    let value = \"\";\n\n    if (!externalData) {\n      return <td />;\n    }\n\n    switch (kind) {\n      case INTEGRATION_KINDS.CALLPRO:\n        value = externalData.phoneNumber;\n        break;\n      case INTEGRATION_KINDS.CHATFUEL:\n        value = (externalData.chatfuelConfigs || {}).toString();\n        break;\n      case INTEGRATION_KINDS.WHATSAPP:\n        value = externalData.whatsappToken;\n        break;\n      case INTEGRATION_KINDS.SMOOCH_TELEGRAM:\n        value = externalData.telegramBotToken;\n        break;\n      case INTEGRATION_KINDS.SMOOCH_VIBER:\n        value = externalData.viberBotToken;\n        break;\n      case INTEGRATION_KINDS.SMOOCH_LINE:\n        value = externalData.lineChannelId;\n        break;\n      case INTEGRATION_KINDS.TELNYX:\n        value = externalData.telnyxPhoneNumber;\n        break;\n      default:\n        break;\n    }\n\n    return <td>{value}</td>;\n  }\n\n  render() {\n    const { integration } = this.props;\n    const integrationKind = cleanIntegrationKind(integration.kind);\n    const labelStyle = integration.isActive ? \"success\" : \"warning\";\n    const status = integration.isActive ? __(\"Active\") : __(\"Archived\");\n\n    return (\n      <tr key={integration._id}>\n        <td>{integration.name}</td>\n        <td>\n          <Label lblColor={INTEGRATIONS_COLORS[integrationKind]}>\n            {integrationKind}\n          </Label>\n        </td>\n        <td>{integration.brand ? integration.brand.name : \"\"}</td>\n        <td>\n          <Label lblStyle={labelStyle}>{status}</Label>\n        </td>\n        {this.renderExternalData(integration)}\n        <td>\n          <ActionButtons>\n            {this.renderMessengerActions(integration)}\n            {this.renderGetAction()}\n            {this.renderEditAction()}\n            {this.renderArchiveAction()}\n            {this.renderUnarchiveAction()}\n            {this.renderRemoveAction()}\n          </ActionButtons>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default IntegrationListItem;\n"]},"metadata":{},"sourceType":"module"}