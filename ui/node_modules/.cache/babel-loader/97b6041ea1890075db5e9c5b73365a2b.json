{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/team/containers/UserConfirmation.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { Alert, withProps } from 'modules/common/utils';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\nimport UserConfirmation from '../components/UserConfirmation';\nimport { mutations } from '../graphql';\n\nvar UserConfirmationContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserConfirmationContainer, _React$Component);\n\n  function UserConfirmationContainer() {\n    _classCallCheck(this, UserConfirmationContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UserConfirmationContainer).apply(this, arguments));\n  }\n\n  _createClass(UserConfirmationContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          usersConfirmInvitation = _this$props.usersConfirmInvitation,\n          queryParams = _this$props.queryParams,\n          history = _this$props.history,\n          currentUser = _this$props.currentUser;\n\n      var confirmUser = function confirmUser(_ref) {\n        var password = _ref.password,\n            passwordConfirmation = _ref.passwordConfirmation,\n            username = _ref.username,\n            fullName = _ref.fullName;\n        usersConfirmInvitation({\n          variables: {\n            token: queryParams.token,\n            password: password,\n            passwordConfirmation: passwordConfirmation,\n            username: username,\n            fullName: fullName\n          }\n        }).then(function () {\n          Alert.success('You successfully verified');\n          history.push('/');\n        }).catch(function (e) {\n          Alert.error(e.message);\n        });\n      };\n\n      var updatedProps = {\n        confirmUser: confirmUser,\n        currentUser: currentUser\n      };\n      return React.createElement(UserConfirmation, Object.assign({}, updatedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UserConfirmationContainer;\n}(React.Component);\n\nexport default withProps(compose(graphql(gql(mutations.usersConfirmInvitation), {\n  name: 'usersConfirmInvitation',\n  options: {\n    refetchQueries: ['users']\n  }\n}))(withRouter(UserConfirmationContainer)));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/team/containers/UserConfirmation.tsx"],"names":["gql","compose","Alert","withProps","React","graphql","withRouter","UserConfirmation","mutations","UserConfirmationContainer","props","usersConfirmInvitation","queryParams","history","currentUser","confirmUser","password","passwordConfirmation","username","fullName","variables","token","then","success","push","catch","e","error","message","updatedProps","Component","name","options","refetchQueries"],"mappings":";;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAEA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,sBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,SAAT,QAA0B,YAA1B;;IAUMC,yB;;;;;;;;;;;;;6BACK;AAAA,wBAMH,KAAKC,KANF;AAAA,UAELC,sBAFK,eAELA,sBAFK;AAAA,UAGLC,WAHK,eAGLA,WAHK;AAAA,UAILC,OAJK,eAILA,OAJK;AAAA,UAKLC,WALK,eAKLA,WALK;;AAQP,UAAMC,WAAW,GAAG,SAAdA,WAAc,OAUd;AAAA,YATJC,QASI,QATJA,QASI;AAAA,YARJC,oBAQI,QARJA,oBAQI;AAAA,YAPJC,QAOI,QAPJA,QAOI;AAAA,YANJC,QAMI,QANJA,QAMI;AACJR,QAAAA,sBAAsB,CAAC;AACrBS,UAAAA,SAAS,EAAE;AACTC,YAAAA,KAAK,EAAET,WAAW,CAACS,KADV;AAETL,YAAAA,QAAQ,EAARA,QAFS;AAGTC,YAAAA,oBAAoB,EAApBA,oBAHS;AAITC,YAAAA,QAAQ,EAARA,QAJS;AAKTC,YAAAA,QAAQ,EAARA;AALS;AADU,SAAD,CAAtB,CASGG,IATH,CASQ,YAAM;AACVpB,UAAAA,KAAK,CAACqB,OAAN,CAAc,2BAAd;AACAV,UAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACD,SAZH,EAaGC,KAbH,CAaS,UAAAC,CAAC,EAAI;AACVxB,UAAAA,KAAK,CAACyB,KAAN,CAAYD,CAAC,CAACE,OAAd;AACD,SAfH;AAgBD,OA3BD;;AA6BA,UAAMC,YAAY,GAAG;AACnBd,QAAAA,WAAW,EAAXA,WADmB;AAEnBD,QAAAA,WAAW,EAAXA;AAFmB,OAArB;AAKA,aAAO,oBAAC,gBAAD,oBAAsBe,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EA5CqCzB,KAAK,CAAC0B,S;;AA+C9C,eAAe3B,SAAS,CACtBF,OAAO,CACLI,OAAO,CACLL,GAAG,CAACQ,SAAS,CAACG,sBAAX,CADE,EAEL;AACEoB,EAAAA,IAAI,EAAE,wBADR;AAEEC,EAAAA,OAAO,EAAE;AACPC,IAAAA,cAAc,EAAE,CAAC,OAAD;AADT;AAFX,CAFK,CADF,CAAP,CAUE3B,UAAU,CAAaG,yBAAb,CAVZ,CADsB,CAAxB","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { IUser } from 'modules/auth/types';\nimport { Alert, withProps } from 'modules/common/utils';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\nimport { IRouterProps } from '../../../common/types';\nimport UserConfirmation from '../components/UserConfirmation';\nimport { mutations } from '../graphql';\nimport { ConfirmMutationResponse, ConfirmMutationVariables } from '../types';\n\ntype Props = {\n  queryParams: any;\n  currentUser?: IUser;\n};\n\ntype FinalProps = Props & IRouterProps & ConfirmMutationResponse;\n\nclass UserConfirmationContainer extends React.Component<FinalProps> {\n  render() {\n    const {\n      usersConfirmInvitation,\n      queryParams,\n      history,\n      currentUser\n    } = this.props;\n\n    const confirmUser = ({\n      password,\n      passwordConfirmation,\n      username,\n      fullName\n    }: {\n      password: string;\n      passwordConfirmation: string;\n      username: string;\n      fullName: string;\n    }) => {\n      usersConfirmInvitation({\n        variables: {\n          token: queryParams.token,\n          password,\n          passwordConfirmation,\n          username,\n          fullName\n        }\n      })\n        .then(() => {\n          Alert.success('You successfully verified');\n          history.push('/');\n        })\n        .catch(e => {\n          Alert.error(e.message);\n        });\n    };\n\n    const updatedProps = {\n      confirmUser,\n      currentUser\n    };\n\n    return <UserConfirmation {...updatedProps} />;\n  }\n}\n\nexport default withProps<Props>(\n  compose(\n    graphql<Props, ConfirmMutationResponse, ConfirmMutationVariables>(\n      gql(mutations.usersConfirmInvitation),\n      {\n        name: 'usersConfirmInvitation',\n        options: {\n          refetchQueries: ['users']\n        }\n      }\n    )\n  )(withRouter<FinalProps>(UserConfirmationContainer))\n);\n"]},"metadata":{},"sourceType":"module"}