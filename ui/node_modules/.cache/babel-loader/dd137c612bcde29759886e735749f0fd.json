{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/profile/components/EditProfileForm.tsx\";\nimport Button from 'erxes-common-ui/lib/components/button';\nimport UserCommonInfos from 'modules/auth/components/UserCommonInfos';\nimport Form from 'modules/common/components/form/Form';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { __, getConstantFromStore } from 'modules/common/utils';\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport PasswordConfirmation from './PasswordConfirmation';\n\nvar EditProfile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditProfile, _React$Component);\n\n  function EditProfile(props) {\n    var _this;\n\n    _classCallCheck(this, EditProfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditProfile).call(this, props));\n\n    _this.closeConfirm = function () {\n      _this.setState({\n        isShowPasswordPopup: false\n      });\n    };\n\n    _this.closeAllModals = function () {\n      _this.closeConfirm();\n\n      _this.props.closeModal();\n    };\n\n    _this.handleSubmit = function (password, values) {\n      var links = {};\n      getConstantFromStore('social_links').forEach(function (link) {\n        links[link.value] = values[link.value];\n      });\n\n      _this.props.save({\n        username: values.username,\n        email: values.email,\n        details: {\n          avatar: _this.state.avatar,\n          shortName: values.shortName,\n          fullName: values.fullName,\n          position: values.position,\n          location: values.location,\n          description: values.description,\n          operatorPhone: values.operatorPhone\n        },\n        links: links,\n        password: password\n      }, _this.closeAllModals);\n    };\n\n    _this.onAvatarUpload = function (url) {\n      _this.setState({\n        avatar: url\n      });\n    };\n\n    _this.onSuccess = function (password, values) {\n      return _this.handleSubmit(password, values);\n    };\n\n    _this.showConfirm = function () {\n      return _this.setState({\n        isShowPasswordPopup: true\n      });\n    };\n\n    _this.renderContent = function (formProps) {\n      return React.createElement(React.Fragment, null, React.createElement(UserCommonInfos, {\n        formProps: formProps,\n        user: _this.props.currentUser,\n        onAvatarUpload: _this.onAvatarUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), _this.renderPasswordConfirmationModal(formProps), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        onClick: _this.props.closeModal,\n        icon: \"times-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        type: \"submit\",\n        btnStyle: \"success\",\n        icon: \"plus-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Save\")));\n    };\n\n    var currentUser = props.currentUser;\n    var details = currentUser.details;\n    _this.state = {\n      avatar: details ? details.avatar || '' : '',\n      isShowPasswordPopup: false\n    };\n    return _this;\n  }\n\n  _createClass(EditProfile, [{\n    key: \"renderPasswordConfirmationModal\",\n    value: function renderPasswordConfirmationModal(formProps) {\n      return React.createElement(Modal, {\n        show: this.state.isShowPasswordPopup,\n        onHide: this.closeConfirm,\n        animation: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, __('Enter your password to Confirm'))), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(PasswordConfirmation, {\n        formProps: formProps,\n        onSuccess: this.onSuccess,\n        closeModal: this.closeConfirm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        renderContent: this.renderContent,\n        onSubmit: this.showConfirm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return EditProfile;\n}(React.Component);\n\nexport default EditProfile;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/profile/components/EditProfileForm.tsx"],"names":["Button","UserCommonInfos","Form","ModalFooter","__","getConstantFromStore","React","Modal","PasswordConfirmation","EditProfile","props","closeConfirm","setState","isShowPasswordPopup","closeAllModals","closeModal","handleSubmit","password","values","links","forEach","link","value","save","username","email","details","avatar","state","shortName","fullName","position","location","description","operatorPhone","onAvatarUpload","url","onSuccess","showConfirm","renderContent","formProps","currentUser","renderPasswordConfirmationModal","Component"],"mappings":"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","sourcesContent":["import Button from 'erxes-common-ui/lib/components/button';\nimport UserCommonInfos from 'modules/auth/components/UserCommonInfos';\nimport { IUser, IUserDoc } from 'modules/auth/types';\nimport Form from 'modules/common/components/form/Form';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { IFormProps } from 'modules/common/types';\nimport { __, getConstantFromStore } from 'modules/common/utils';\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport PasswordConfirmation from './PasswordConfirmation';\n\ntype Props = {\n  currentUser: IUser;\n  closeModal: () => void;\n  save: (\n    variables: IUserDoc & { password?: string },\n    callback: () => void\n  ) => void;\n};\n\ntype State = {\n  avatar: string;\n  isShowPasswordPopup: boolean;\n};\n\nclass EditProfile extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const { currentUser } = props;\n    const { details } = currentUser;\n\n    this.state = {\n      avatar: details ? details.avatar || '' : '',\n      isShowPasswordPopup: false\n    };\n  }\n\n  closeConfirm = () => {\n    this.setState({ isShowPasswordPopup: false });\n  };\n\n  closeAllModals = () => {\n    this.closeConfirm();\n    this.props.closeModal();\n  };\n\n  handleSubmit = (password: string, values: any) => {\n    const links = {};\n\n    getConstantFromStore('social_links').forEach(link => {\n      links[link.value] = values[link.value];\n    });\n\n    this.props.save(\n      {\n        username: values.username,\n        email: values.email,\n        details: {\n          avatar: this.state.avatar,\n          shortName: values.shortName,\n          fullName: values.fullName,\n          position: values.position,\n          location: values.location,\n          description: values.description,\n          operatorPhone: values.operatorPhone\n        },\n        links,\n        password\n      },\n      this.closeAllModals\n    );\n  };\n\n  onAvatarUpload = url => {\n    this.setState({ avatar: url });\n  };\n\n  onSuccess = (password: string, values: any[]) => {\n    return this.handleSubmit(password, values);\n  };\n\n  showConfirm = () => {\n    return this.setState({ isShowPasswordPopup: true });\n  };\n\n  renderPasswordConfirmationModal(formProps: IFormProps) {\n    return (\n      <Modal\n        show={this.state.isShowPasswordPopup}\n        onHide={this.closeConfirm}\n        animation={false}\n      >\n        <Modal.Header closeButton={true}>\n          <Modal.Title>{__('Enter your password to Confirm')}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <PasswordConfirmation\n            formProps={formProps}\n            onSuccess={this.onSuccess}\n            closeModal={this.closeConfirm}\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n\n  renderContent = formProps => {\n    return (\n      <>\n        <UserCommonInfos\n          formProps={formProps}\n          user={this.props.currentUser}\n          onAvatarUpload={this.onAvatarUpload}\n        />\n\n        {this.renderPasswordConfirmationModal(formProps)}\n\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            onClick={this.props.closeModal}\n            icon=\"times-circle\"\n            uppercase={false}\n          >\n            Cancel\n          </Button>\n\n          <Button type=\"submit\" btnStyle=\"success\" icon=\"plus-circle\">\n            Save\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <Form renderContent={this.renderContent} onSubmit={this.showConfirm} />\n    );\n  }\n}\n\nexport default EditProfile;\n"]},"metadata":{},"sourceType":"module"}