{"ast":null,"code":"import _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/components/list/LeadStatusFilter.tsx\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Box from 'modules/common/components/Box';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { __, router } from 'modules/common/utils';\nimport { FieldStyle, SidebarCounter, SidebarList } from 'modules/layout/styles';\nimport { LEAD_STATUS_TYPES } from '../../constants';\nimport { leadStatusChoices } from '../../utils';\n\nvar LeadStatusFilter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LeadStatusFilter, _React$Component);\n\n  function LeadStatusFilter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LeadStatusFilter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LeadStatusFilter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderCounts = function () {\n      var _this$props = _this.props,\n          history = _this$props.history,\n          counts = _this$props.counts;\n      var paramKey = 'leadStatus';\n\n      var onClick = function onClick(key, value) {\n        router.setParams(history, _defineProperty({}, key, value));\n        router.removeParams(history, 'page');\n      };\n\n      return React.createElement(SidebarList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, leadStatusChoices(__).map(function (_ref) {\n        var value = _ref.value,\n            label = _ref.label;\n        return React.createElement(\"li\", {\n          key: Math.random(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#filter\",\n          tabIndex: 0,\n          className: router.getParam(history, [paramKey]) === value ? 'active' : '',\n          onClick: onClick.bind(_assertThisInitialized(_this), paramKey, value),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(FieldStyle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, label), React.createElement(SidebarCounter, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, counts ? counts[value] : 0)));\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(LeadStatusFilter, [{\n    key: \"render\",\n    value: function render() {\n      var history = this.props.history;\n\n      var onClear = function onClear() {\n        router.setParams(history, {\n          leadStatus: null\n        });\n      };\n\n      var extraButtons = router.getParam(history, 'leadStatus') && React.createElement(\"a\", {\n        href: \"#cancel\",\n        tabIndex: 0,\n        onClick: onClear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"times-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n      return React.createElement(Box, {\n        extraButtons: extraButtons,\n        title: __('Filter by lead status'),\n        name: \"showFilterByStatus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(DataWithLoader, {\n        loading: this.props.loading,\n        count: Object.keys(LEAD_STATUS_TYPES).length,\n        data: this.renderCounts(),\n        emptyText: \"No Pop Ups\",\n        emptyIcon: \"type\",\n        size: \"small\",\n        objective: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LeadStatusFilter;\n}(React.Component);\n\nexport default withRouter(LeadStatusFilter);","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/components/list/LeadStatusFilter.tsx"],"names":["React","withRouter","Box","DataWithLoader","Icon","__","router","FieldStyle","SidebarCounter","SidebarList","LEAD_STATUS_TYPES","leadStatusChoices","LeadStatusFilter","renderCounts","props","history","counts","paramKey","onClick","key","value","setParams","removeParams","map","label","Math","random","getParam","bind","onClear","leadStatus","extraButtons","loading","Object","keys","length","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Box from 'modules/common/components/Box';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { __, router } from 'modules/common/utils';\nimport { FieldStyle, SidebarCounter, SidebarList } from 'modules/layout/styles';\nimport { IRouterProps } from '../../../common/types';\nimport { LEAD_STATUS_TYPES } from '../../constants';\nimport { leadStatusChoices } from '../../utils';\n\ninterface IProps extends IRouterProps {\n  counts: { [key: string]: number };\n  loading: boolean;\n  searchable?: boolean;\n}\n\nclass LeadStatusFilter extends React.Component<IProps> {\n  renderCounts = () => {\n    const { history, counts } = this.props;\n    const paramKey = 'leadStatus';\n\n    const onClick = (key, value) => {\n      router.setParams(history, { [key]: value });\n      router.removeParams(history, 'page');\n    };\n\n    return (\n      <SidebarList>\n        {leadStatusChoices(__).map(\n          ({ value, label }: { value: string; label: string }) => {\n            return (\n              <li key={Math.random()}>\n                <a\n                  href=\"#filter\"\n                  tabIndex={0}\n                  className={\n                    router.getParam(history, [paramKey]) === value\n                      ? 'active'\n                      : ''\n                  }\n                  onClick={onClick.bind(this, paramKey, value)}\n                >\n                  <FieldStyle>{label}</FieldStyle>\n                  <SidebarCounter>{counts ? counts[value] : 0}</SidebarCounter>\n                </a>\n              </li>\n            );\n          }\n        )}\n      </SidebarList>\n    );\n  };\n\n  render() {\n    const { history } = this.props;\n\n    const onClear = () => {\n      router.setParams(history, { leadStatus: null });\n    };\n\n    const extraButtons = router.getParam(history, 'leadStatus') && (\n      <a href=\"#cancel\" tabIndex={0} onClick={onClear}>\n        <Icon icon=\"times-circle\" />\n      </a>\n    );\n\n    return (\n      <Box\n        extraButtons={extraButtons}\n        title={__('Filter by lead status')}\n        name=\"showFilterByStatus\"\n      >\n        <DataWithLoader\n          loading={this.props.loading}\n          count={Object.keys(LEAD_STATUS_TYPES).length}\n          data={this.renderCounts()}\n          emptyText=\"No Pop Ups\"\n          emptyIcon=\"type\"\n          size=\"small\"\n          objective={true}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default withRouter<IProps>(LeadStatusFilter);\n"]},"metadata":{},"sourceType":"module"}