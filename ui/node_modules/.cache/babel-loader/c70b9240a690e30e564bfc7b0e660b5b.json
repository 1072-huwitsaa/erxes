{"ast":null,"code":"import _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/deals/components/calendar/Calendar.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  height: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport MainActionBar from 'modules/boards/containers/MainActionBar';\nimport { BoardContainer, BoardContent, ScrolledContent } from 'modules/boards/styles/common';\nimport Calendar from 'modules/common/components/Calendar';\nimport { __ } from 'modules/common/utils';\nimport Header from 'modules/layout/components/Header';\nimport React from 'react';\nimport styled from 'styled-components';\nimport DealColumn from '../../containers/calendar/DealColumn';\nimport DealMainActionBar from '../DealMainActionBar';\nvar Container = styled.div(_templateObject());\n\nvar toKey = function toKey(_ref) {\n  var year = _ref.year,\n      month = _ref.month;\n  return year + '-' + month;\n};\n\nvar CalendarView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CalendarView, _React$Component);\n\n  function CalendarView(props) {\n    var _this;\n\n    _classCallCheck(this, CalendarView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CalendarView).call(this, props));\n\n    _this.onColumnUpdated = function (date) {\n      _this.setState(_defineProperty({}, toKey(date), new Date().toString()));\n    };\n\n    _this.renderColumn = function (date) {\n      var queryParams = _this.props.queryParams;\n      var key = toKey(date);\n      return React.createElement(DealColumn, {\n        updatedAt: \"\".concat(key, \"-\").concat(_this.state[key]),\n        date: date,\n        queryParams: queryParams,\n        onColumnUpdated: _this.onColumnUpdated,\n        pipelineId: queryParams.pipelineId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    };\n\n    _this.renderActionBar = function (renderMiddleContent) {\n      return React.createElement(MainActionBar, {\n        type: \"deal\",\n        component: DealMainActionBar,\n        middleContent: renderMiddleContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    };\n\n    _this.renderContent = function (renderMonths, renderMiddleContent) {\n      var breadcrumb = [{\n        title: __('Deal')\n      }];\n      return React.createElement(BoardContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Header, {\n        title: __('Deal'),\n        breadcrumb: breadcrumb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(BoardContent, {\n        transparent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, _this.renderActionBar(renderMiddleContent), React.createElement(ScrolledContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, _this.renderMonthView(renderMonths))));\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CalendarView, [{\n    key: \"renderMonthView\",\n    value: function renderMonthView(renderMonths) {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, renderMonths());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Calendar, {\n        renderContent: this.renderContent,\n        renderColumn: this.renderColumn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CalendarView;\n}(React.Component);\n\nexport default CalendarView;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/deals/components/calendar/Calendar.tsx"],"names":["MainActionBar","BoardContainer","BoardContent","ScrolledContent","Calendar","__","Header","React","styled","DealColumn","DealMainActionBar","Container","div","toKey","year","month","CalendarView","props","onColumnUpdated","date","setState","Date","toString","renderColumn","queryParams","key","state","pipelineId","renderActionBar","renderMiddleContent","renderContent","renderMonths","breadcrumb","title","renderMonthView","Component"],"mappings":"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","sourcesContent":["import MainActionBar from 'modules/boards/containers/MainActionBar';\nimport {\n  BoardContainer,\n  BoardContent,\n  ScrolledContent\n} from 'modules/boards/styles/common';\nimport Calendar from 'modules/common/components/Calendar';\nimport { IDateColumn } from 'modules/common/types';\nimport { __ } from 'modules/common/utils';\nimport Header from 'modules/layout/components/Header';\nimport React from 'react';\nimport styled from 'styled-components';\nimport DealColumn from '../../containers/calendar/DealColumn';\nimport DealMainActionBar from '../DealMainActionBar';\n\ntype Props = {\n  queryParams: any;\n};\n\nconst Container = styled.div`\n  display: flex;\n  height: 100%;\n`;\n\nconst toKey = ({ year, month }: IDateColumn) => {\n  return year + '-' + month;\n};\n\nclass CalendarView extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  onColumnUpdated = (date: IDateColumn) => {\n    this.setState({ [toKey(date)]: new Date().toString() });\n  };\n\n  renderColumn = (date: IDateColumn) => {\n    const { queryParams } = this.props;\n    const key = toKey(date);\n\n    return (\n      <DealColumn\n        updatedAt={`${key}-${this.state[key]}`}\n        date={date}\n        queryParams={queryParams}\n        onColumnUpdated={this.onColumnUpdated}\n        pipelineId={queryParams.pipelineId}\n      />\n    );\n  };\n\n  renderActionBar = (renderMiddleContent: () => React.ReactNode) => {\n    return (\n      <MainActionBar\n        type=\"deal\"\n        component={DealMainActionBar}\n        middleContent={renderMiddleContent}\n      />\n    );\n  };\n\n  renderMonthView(renderMonths: () => React.ReactNode[]) {\n    return <Container>{renderMonths()}</Container>;\n  }\n\n  renderContent = (\n    renderMonths: () => React.ReactNode[],\n    renderMiddleContent: () => React.ReactNode\n  ) => {\n    const breadcrumb = [{ title: __('Deal') }];\n\n    return (\n      <BoardContainer>\n        <Header title={__('Deal')} breadcrumb={breadcrumb} />\n        <BoardContent transparent={true}>\n          {this.renderActionBar(renderMiddleContent)}\n          <ScrolledContent>\n            {this.renderMonthView(renderMonths)}\n          </ScrolledContent>\n        </BoardContent>\n      </BoardContainer>\n    );\n  };\n\n  render() {\n    return (\n      <Calendar\n        renderContent={this.renderContent}\n        renderColumn={this.renderColumn}\n      />\n    );\n  }\n}\n\nexport default CalendarView;\n"]},"metadata":{},"sourceType":"module"}