{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/containers/leftSidebar/FilterToggler.tsx\";\nimport DumbToggler from 'modules/inbox/components/leftSidebar/FilterToggler';\nimport React from 'react';\nimport { getConfig, setConfig } from '../../utils';\nvar STORAGE_KEY = 'erxes_additional_sidebar_config';\n\nvar FilterToggler =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(FilterToggler, _React$PureComponent);\n\n  function FilterToggler() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FilterToggler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FilterToggler)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.toggle = function (_ref) {\n      var isOpen = _ref.isOpen;\n      var name = _this.props.toggleName;\n      var config = getConfig(STORAGE_KEY);\n      config[name] = isOpen;\n      setConfig(STORAGE_KEY, config);\n    };\n\n    return _this;\n  }\n\n  _createClass(FilterToggler, [{\n    key: \"render\",\n    value: function render() {\n      var config = getConfig(STORAGE_KEY);\n      var name = this.props.toggleName;\n\n      if (!localStorage.getItem(STORAGE_KEY)) {\n        setConfig(STORAGE_KEY, {\n          showChannels: true,\n          showBrands: false,\n          showIntegrations: false,\n          showTags: false\n        });\n      }\n\n      var updatedProps = _objectSpread({}, this.props, {\n        isOpen: config[name],\n        toggle: this.toggle\n      });\n\n      return React.createElement(DumbToggler, Object.assign({}, updatedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FilterToggler;\n}(React.PureComponent);\n\nexport { FilterToggler as default };","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/containers/leftSidebar/FilterToggler.tsx"],"names":["DumbToggler","React","getConfig","setConfig","STORAGE_KEY","FilterToggler","toggle","isOpen","name","props","toggleName","config","localStorage","getItem","showChannels","showBrands","showIntegrations","showTags","updatedProps","PureComponent"],"mappings":";;;;;;;AAAA,OAAOA,WAAP,MAAwB,oDAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,aAArC;AAQA,IAAMC,WAAW,GAAG,iCAApB;;IAEqBC,a;;;;;;;;;;;;;;;;;;UACnBC,M,GAAS,gBAAqC;AAAA,UAAlCC,MAAkC,QAAlCA,MAAkC;AAC5C,UAAMC,IAAI,GAAG,MAAKC,KAAL,CAAWC,UAAxB;AAEA,UAAMC,MAAM,GAAGT,SAAS,CAACE,WAAD,CAAxB;AAEAO,MAAAA,MAAM,CAACH,IAAD,CAAN,GAAeD,MAAf;AAEAJ,MAAAA,SAAS,CAACC,WAAD,EAAcO,MAAd,CAAT;AACD,K;;;;;;;6BAEQ;AACP,UAAMA,MAAM,GAAGT,SAAS,CAACE,WAAD,CAAxB;AACA,UAAMI,IAAI,GAAG,KAAKC,KAAL,CAAWC,UAAxB;;AAEA,UAAI,CAACE,YAAY,CAACC,OAAb,CAAqBT,WAArB,CAAL,EAAwC;AACtCD,QAAAA,SAAS,CAACC,WAAD,EAAc;AACrBU,UAAAA,YAAY,EAAE,IADO;AAErBC,UAAAA,UAAU,EAAE,KAFS;AAGrBC,UAAAA,gBAAgB,EAAE,KAHG;AAIrBC,UAAAA,QAAQ,EAAE;AAJW,SAAd,CAAT;AAMD;;AAED,UAAMC,YAAY,qBACb,KAAKT,KADQ;AAEhBF,QAAAA,MAAM,EAAEI,MAAM,CAACH,IAAD,CAFE;AAGhBF,QAAAA,MAAM,EAAE,KAAKA;AAHG,QAAlB;;AAMA,aAAO,oBAAC,WAAD,oBAAiBY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EA/BwCjB,KAAK,CAACkB,a;;SAA5Bd,a","sourcesContent":["import DumbToggler from 'modules/inbox/components/leftSidebar/FilterToggler';\nimport React from 'react';\nimport { getConfig, setConfig } from '../../utils';\n\ntype Props = {\n  groupText: string;\n  toggleName: string;\n  manageUrl?: string;\n};\n\nconst STORAGE_KEY = 'erxes_additional_sidebar_config';\n\nexport default class FilterToggler extends React.PureComponent<Props, {}> {\n  toggle = ({ isOpen }: { isOpen: boolean }) => {\n    const name = this.props.toggleName;\n\n    const config = getConfig(STORAGE_KEY);\n\n    config[name] = isOpen;\n\n    setConfig(STORAGE_KEY, config);\n  };\n\n  render() {\n    const config = getConfig(STORAGE_KEY);\n    const name = this.props.toggleName;\n\n    if (!localStorage.getItem(STORAGE_KEY)) {\n      setConfig(STORAGE_KEY, {\n        showChannels: true,\n        showBrands: false,\n        showIntegrations: false,\n        showTags: false\n      });\n    }\n\n    const updatedProps = {\n      ...this.props,\n      isOpen: config[name],\n      toggle: this.toggle\n    };\n\n    return <DumbToggler {...updatedProps} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}