{"ast":null,"code":"import _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/team/components/UserInvitationForm.tsx\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport Info from \"modules/common/components/Info\";\nimport { ModalFooter } from \"modules/common/styles/main\";\nimport { __, Alert } from \"modules/common/utils\";\nimport React from \"react\";\nimport { Description } from \"../../styles\";\nimport { InviteOption, LinkButton, RemoveRow } from \"../styles\";\n\nvar UserInvitationForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserInvitationForm, _React$Component);\n\n  function UserInvitationForm(props) {\n    var _this;\n\n    _classCallCheck(this, UserInvitationForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserInvitationForm).call(this, props));\n\n    _this.generateDoc = function () {\n      var entries = _this.state.entries;\n      var validEntries = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = entries[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var entry = _step.value;\n\n          if (entry.email && entry.groupId) {\n            validEntries.push(entry);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return {\n        entries: validEntries\n      };\n    };\n\n    _this.onChange = function (i, type, e) {\n      var _ref = e.target,\n          value = _ref.value;\n\n      var entries = _toConsumableArray(_this.state.entries);\n\n      entries[i] = _objectSpread({}, entries[i], _defineProperty({}, type, value));\n\n      _this.setState({\n        entries: entries\n      });\n    };\n\n    _this.onAddMoreInput = function () {\n      _this.setState({\n        entries: [].concat(_toConsumableArray(_this.state.entries), [{\n          email: \"\",\n          password: \"\",\n          groupId: \"\"\n        }])\n      });\n    };\n\n    _this.onAddManyEmail = function () {\n      _this.setState({\n        addMany: true\n      });\n    };\n\n    _this.addInvitees = function () {\n      var entries = _this.state.entries;\n      var values = document.getElementById(\"multipleEmailValue\").value;\n\n      if (!values) {\n        return Alert.warning(\"No email address found!\");\n      }\n\n      var emails = values.split(\",\");\n      emails.map(function (e) {\n        return entries.splice(0, 0, {\n          email: e,\n          password: \"\",\n          groupId: \"\"\n        });\n      });\n\n      _this.setState({\n        addMany: false\n      });\n    };\n\n    _this.handleRemoveEntry = function (i) {\n      var entries = _this.state.entries;\n\n      _this.setState({\n        entries: entries.filter(function (item, index) {\n          return index !== i;\n        })\n      });\n    };\n\n    _this.renderRemoveInput = function (i) {\n      var entries = _this.state.entries;\n\n      if (entries.length <= 1) {\n        return null;\n      }\n\n      return React.createElement(RemoveRow, {\n        onClick: _this.handleRemoveEntry.bind(_assertThisInitialized(_this), i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }));\n    };\n\n    _this.generateGroupsChoices = function () {\n      return _this.props.usersGroups.map(function (group) {\n        return {\n          value: group._id,\n          label: group.name\n        };\n      });\n    };\n\n    _this.renderContent = function (formProps) {\n      var _this$state = _this.state,\n          addMany = _this$state.addMany,\n          entries = _this$state.entries;\n      var _this$props = _this.props,\n          closeModal = _this$props.closeModal,\n          renderButton = _this$props.renderButton;\n      var isSubmitted = formProps.isSubmitted;\n\n      if (addMany) {\n        return _this.renderMultipleEmail();\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"table\", {\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Email address\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Password\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Permission\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, entries.map(function (input, i) {\n        return React.createElement(\"tr\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(FormControl, Object.assign({}, formProps, {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"name@example.com\",\n          value: input.email,\n          autoFocus: i === 0,\n          onChange: _this.onChange.bind(_assertThisInitialized(_this), i, \"email\"),\n          required: true,\n          autoComplete: \"off\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, React.createElement(FormControl, Object.assign({}, formProps, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Password\",\n          value: input.password,\n          onChange: _this.onChange.bind(_assertThisInitialized(_this), i, \"password\"),\n          required: true,\n          autoComplete: \"new-password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(FormControl, Object.assign({}, formProps, {\n          name: \"groupId\",\n          componentClass: \"select\",\n          options: [{\n            value: \"\",\n            label: \"Choose group ...\"\n          }].concat(_toConsumableArray(_this.generateGroupsChoices())),\n          onChange: _this.onChange.bind(_assertThisInitialized(_this), i, \"groupId\"),\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, _this.renderRemoveInput(i)));\n      }))), React.createElement(InviteOption, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(LinkButton, {\n        onClick: _this.onAddMoreInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }), \" \", __(\"Add another\")), \" \", __(\"or\"), \" \", React.createElement(LinkButton, {\n        onClick: _this.onAddManyEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, __(\"add many at once\"), \" \")), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        onClick: closeModal,\n        icon: \"times-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Cancel\"), renderButton({\n        name: \"team member invitation\",\n        values: _this.generateDoc(),\n        isSubmitted: isSubmitted,\n        callback: closeModal\n      })));\n    };\n\n    _this.state = {\n      entries: [{\n        email: \"\",\n        password: \"\",\n        groupId: \"\"\n      }, {\n        email: \"\",\n        password: \"\",\n        groupId: \"\"\n      }, {\n        email: \"\",\n        password: \"\",\n        groupId: \"\"\n      }],\n      addMany: false,\n      isSubmitted: false\n    };\n    return _this;\n  }\n\n  _createClass(UserInvitationForm, [{\n    key: \"renderMultipleEmail\",\n    value: function renderMultipleEmail() {\n      var _this2 = this;\n\n      var onCancel = function onCancel() {\n        return _this2.setState({\n          addMany: false\n        });\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Enter multiple email addresses\"), React.createElement(Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, __(\"Please separate each email address with comma.\")), React.createElement(FormControl, {\n        id: \"multipleEmailValue\",\n        componentClass: \"textarea\",\n        rows: 5,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        onClick: onCancel,\n        uppercase: false,\n        icon: \"times-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        btnStyle: \"success\",\n        icon: \"check-circle\",\n        onClick: this.addInvitees,\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Add Invites\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, __(\"Send an email and notify members that they've been invited!\")), React.createElement(Form, {\n        autoComplete: \"off\",\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UserInvitationForm;\n}(React.Component);\n\nexport default UserInvitationForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/team/components/UserInvitationForm.tsx"],"names":["Button","Icon","FormControl","Form","FormGroup","ControlLabel","Info","ModalFooter","__","Alert","React","Description","InviteOption","LinkButton","RemoveRow","UserInvitationForm","props","generateDoc","entries","state","validEntries","entry","email","groupId","push","onChange","i","type","e","target","value","setState","onAddMoreInput","password","onAddManyEmail","addMany","addInvitees","values","document","getElementById","warning","emails","split","map","splice","handleRemoveEntry","filter","item","index","renderRemoveInput","length","bind","generateGroupsChoices","usersGroups","group","_id","label","name","renderContent","formProps","closeModal","renderButton","isSubmitted","renderMultipleEmail","width","input","callback","onCancel","Component"],"mappings":"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","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport Info from \"modules/common/components/Info\";\nimport { ModalFooter } from \"modules/common/styles/main\";\nimport { IButtonMutateProps, IFormProps } from \"modules/common/types\";\nimport { __, Alert } from \"modules/common/utils\";\nimport { ICommonFormProps } from \"modules/settings/common/types\";\nimport { IUserGroup } from \"modules/settings/permissions/types\";\nimport React from \"react\";\nimport { Description } from \"../../styles\";\nimport { InviteOption, LinkButton, RemoveRow } from \"../styles\";\nimport { IInvitationEntry } from \"../types\";\n\ntype Props = {\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  usersGroups: IUserGroup[];\n  refetchQueries: any;\n} & ICommonFormProps;\n\ntype State = {\n  entries: IInvitationEntry[];\n  addMany: boolean;\n  isSubmitted: boolean;\n};\n\nclass UserInvitationForm extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      entries: [\n        { email: \"\", password: \"\", groupId: \"\" },\n        { email: \"\", password: \"\", groupId: \"\" },\n        { email: \"\", password: \"\", groupId: \"\" },\n      ],\n      addMany: false,\n      isSubmitted: false,\n    };\n  }\n\n  generateDoc = () => {\n    const { entries } = this.state;\n\n    const validEntries: IInvitationEntry[] = [];\n\n    for (const entry of entries) {\n      if (entry.email && entry.groupId) {\n        validEntries.push(entry);\n      }\n    }\n\n    return { entries: validEntries };\n  };\n\n  onChange = (\n    i: number,\n    type: \"email\" | \"password\" | \"groupId\",\n    e: React.FormEvent\n  ) => {\n    const { value } = e.target as HTMLInputElement;\n\n    const entries = [...this.state.entries];\n\n    entries[i] = { ...entries[i], [type]: value };\n\n    this.setState({ entries });\n  };\n\n  onAddMoreInput = () => {\n    this.setState({\n      entries: [\n        ...this.state.entries,\n        { email: \"\", password: \"\", groupId: \"\" },\n      ],\n    });\n  };\n\n  onAddManyEmail = () => {\n    this.setState({ addMany: true });\n  };\n\n  addInvitees = () => {\n    const { entries } = this.state;\n\n    const values = (document.getElementById(\n      \"multipleEmailValue\"\n    ) as HTMLInputElement).value;\n\n    if (!values) {\n      return Alert.warning(\"No email address found!\");\n    }\n\n    const emails = values.split(\",\");\n\n    emails.map((e) =>\n      entries.splice(0, 0, { email: e, password: \"\", groupId: \"\" })\n    );\n\n    this.setState({ addMany: false });\n  };\n\n  handleRemoveEntry = (i: number) => {\n    const { entries } = this.state;\n\n    this.setState({ entries: entries.filter((item, index) => index !== i) });\n  };\n\n  renderRemoveInput = (i: number) => {\n    const { entries } = this.state;\n\n    if (entries.length <= 1) {\n      return null;\n    }\n\n    return (\n      <RemoveRow onClick={this.handleRemoveEntry.bind(this, i)}>\n        <Icon icon=\"times\" />\n      </RemoveRow>\n    );\n  };\n\n  renderMultipleEmail() {\n    const onCancel = () => this.setState({ addMany: false });\n\n    return (\n      <>\n        <FormGroup>\n          <ControlLabel required={true}>\n            Enter multiple email addresses\n          </ControlLabel>\n          <Description>\n            {__(\"Please separate each email address with comma.\")}\n          </Description>\n          <FormControl\n            id=\"multipleEmailValue\"\n            componentClass=\"textarea\"\n            rows={5}\n            required={true}\n          />\n        </FormGroup>\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            onClick={onCancel}\n            uppercase={false}\n            icon=\"times-circle\"\n          >\n            Cancel\n          </Button>\n\n          <Button\n            btnStyle=\"success\"\n            icon=\"check-circle\"\n            onClick={this.addInvitees}\n            uppercase={false}\n          >\n            Add Invites\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  generateGroupsChoices = () => {\n    return this.props.usersGroups.map((group) => ({\n      value: group._id,\n      label: group.name,\n    }));\n  };\n\n  renderContent = (formProps: IFormProps) => {\n    const { addMany, entries } = this.state;\n    const { closeModal, renderButton } = this.props;\n    const { isSubmitted } = formProps;\n\n    if (addMany) {\n      return this.renderMultipleEmail();\n    }\n\n    return (\n      <>\n        <table style={{ width: \"100%\" }}>\n          <thead>\n            <tr>\n              <th>\n                <ControlLabel required={true}>Email address</ControlLabel>\n              </th>\n              <th>\n                <ControlLabel required={true}>Password</ControlLabel>\n              </th>\n              <th>\n                <ControlLabel required={true}>Permission</ControlLabel>\n              </th>\n              <th />\n            </tr>\n          </thead>\n\n          <tbody>\n            {entries.map((input, i) => (\n              <tr key={i}>\n                <td>\n                  <FormControl\n                    {...formProps}\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"name@example.com\"\n                    value={input.email}\n                    autoFocus={i === 0}\n                    onChange={this.onChange.bind(this, i, \"email\")}\n                    required={true}\n                    autoComplete=\"off\"\n                  />\n                </td>\n\n                <td>\n                  <FormControl\n                    {...formProps}\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={input.password}\n                    onChange={this.onChange.bind(this, i, \"password\")}\n                    required={true}\n                    autoComplete=\"new-password\"\n                  />\n                </td>\n\n                <td>\n                  <FormControl\n                    {...formProps}\n                    name=\"groupId\"\n                    componentClass=\"select\"\n                    options={[\n                      { value: \"\", label: \"Choose group ...\" },\n                      ...this.generateGroupsChoices(),\n                    ]}\n                    onChange={this.onChange.bind(this, i, \"groupId\")}\n                    required={true}\n                  />\n                </td>\n\n                <td>{this.renderRemoveInput(i)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        <InviteOption>\n          <LinkButton onClick={this.onAddMoreInput}>\n            <Icon icon=\"add\" /> {__(\"Add another\")}\n          </LinkButton>{\" \"}\n          {__(\"or\")}{\" \"}\n          <LinkButton onClick={this.onAddManyEmail}>\n            {__(\"add many at once\")}{\" \"}\n          </LinkButton>\n        </InviteOption>\n\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            onClick={closeModal}\n            icon=\"times-circle\"\n            uppercase={false}\n          >\n            Cancel\n          </Button>\n\n          {renderButton({\n            name: \"team member invitation\",\n            values: this.generateDoc(),\n            isSubmitted,\n            callback: closeModal,\n          })}\n        </ModalFooter>\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <Info>\n          {__(\"Send an email and notify members that they've been invited!\")}\n        </Info>\n\n        <Form autoComplete=\"off\" renderContent={this.renderContent} />\n      </>\n    );\n  }\n}\n\nexport default UserInvitationForm;\n"]},"metadata":{},"sourceType":"module"}