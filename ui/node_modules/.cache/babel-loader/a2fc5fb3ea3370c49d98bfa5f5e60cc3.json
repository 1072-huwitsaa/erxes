{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/containers/editForm/Move.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { queries as boardQueries } from 'modules/boards/graphql';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withProps } from '../../../common/utils';\nimport Move from '../../components/editForm/Move';\n\nvar MoveContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MoveContainer, _React$Component);\n\n  function MoveContainer() {\n    _classCallCheck(this, MoveContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MoveContainer).apply(this, arguments));\n  }\n\n  _createClass(MoveContainer, [{\n    key: \"render\",\n    value: function render() {\n      var stagesQuery = this.props.stagesQuery;\n      var stages = stagesQuery.stages || [];\n\n      var updatedProps = _objectSpread({}, this.props, {\n        stages: stages\n      });\n\n      return React.createElement(Move, Object.assign({}, updatedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MoveContainer;\n}(React.Component);\n\nexport default withProps(compose(graphql(gql(boardQueries.stages), {\n  name: 'stagesQuery',\n  options: function options(_ref) {\n    var pipeline = _ref.item.pipeline;\n    return {\n      variables: {\n        pipelineId: pipeline._id\n      }\n    };\n  }\n}))(MoveContainer));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/containers/editForm/Move.tsx"],"names":["gql","compose","queries","boardQueries","React","graphql","withProps","Move","MoveContainer","stagesQuery","props","stages","updatedProps","Component","name","options","pipeline","item","variables","pipelineId","_id"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,SAASC,OAAO,IAAIC,YAApB,QAAwC,wBAAxC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,IAAP,MAAiB,gCAAjB;;IAUMC,a;;;;;;;;;;;;;6BAIK;AAAA,UACCC,WADD,GACiB,KAAKC,KADtB,CACCD,WADD;AAGP,UAAME,MAAM,GAAGF,WAAW,CAACE,MAAZ,IAAsB,EAArC;;AAEA,UAAMC,YAAY,qBACb,KAAKF,KADQ;AAEhBC,QAAAA,MAAM,EAANA;AAFgB,QAAlB;;AAKA,aAAO,oBAAC,IAAD,oBAAUC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAfyBR,KAAK,CAACS,S;;AAkBlC,eAAeP,SAAS,CACtBL,OAAO,CACLI,OAAO,CAILL,GAAG,CAACG,YAAY,CAACQ,MAAd,CAJE,EAIqB;AAC1BG,EAAAA,IAAI,EAAE,aADoB;AAE1BC,EAAAA,OAAO,EAAE;AAAA,QAAWC,QAAX,QAAGC,IAAH,CAAWD,QAAX;AAAA,WAA6B;AACpCE,MAAAA,SAAS,EAAE;AACTC,QAAAA,UAAU,EAAEH,QAAQ,CAACI;AADZ;AADyB,KAA7B;AAAA;AAFiB,CAJrB,CADF,CAAP,CAaEZ,aAbF,CADsB,CAAxB","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { queries as boardQueries } from 'modules/boards/graphql';\nimport { IOptions, IPipeline, StagesQueryResponse } from 'modules/boards/types';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withProps } from '../../../common/utils';\nimport Move from '../../components/editForm/Move';\nimport { IItem } from '../../types';\n\ntype Props = {\n  item: IItem;\n  stageId?: string;\n  options: IOptions;\n  onChangeStage?: (stageId: string) => void;\n};\n\nclass MoveContainer extends React.Component<{\n  stagesQuery: any;\n  options: IOptions;\n}> {\n  render() {\n    const { stagesQuery } = this.props;\n\n    const stages = stagesQuery.stages || [];\n\n    const updatedProps = {\n      ...this.props,\n      stages\n    };\n\n    return <Move {...updatedProps} />;\n  }\n}\n\nexport default withProps<Props>(\n  compose(\n    graphql<\n      { item: { pipeline: IPipeline }; options: IOptions },\n      StagesQueryResponse,\n      { pipelineId: string }\n    >(gql(boardQueries.stages), {\n      name: 'stagesQuery',\n      options: ({ item: { pipeline } }) => ({\n        variables: {\n          pipelineId: pipeline._id\n        }\n      })\n    })\n  )(MoveContainer)\n);\n"]},"metadata":{},"sourceType":"module"}