{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/DealVolumeReport.tsx\";\nimport Spinner from 'modules/common/components/Spinner';\nimport { __ } from 'modules/common/utils';\nimport { menuDeal } from 'modules/common/utils/menus';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport React from 'react';\nimport { INSIGHT_TYPES } from '../constants';\nimport DealFilter from '../containers/DealFilter';\nimport { InsightContent, InsightRow, InsightTitle, InsightWrapper, LoaderWrapper } from '../styles';\nimport Chart from './Chart';\nimport PunchCard from './PunchCard';\nimport Sidebar from './Sidebar';\nimport Summary from './Summary';\nimport TeamMembers from './TeamMembers';\n\nvar DealVolumeReport =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DealVolumeReport, _React$Component);\n\n  function DealVolumeReport(props) {\n    var _this;\n\n    _classCallCheck(this, DealVolumeReport);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DealVolumeReport).call(this, props));\n    _this.wrapper = void 0;\n    _this.state = {\n      width: 600\n    };\n    return _this;\n  }\n\n  _createClass(DealVolumeReport, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.loading.main && !this.props.loading.main) {\n        this.calculateWidth();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.calculateWidth();\n    }\n  }, {\n    key: \"calculateWidth\",\n    value: function calculateWidth() {\n      var width = this.wrapper.clientWidth;\n      this.setState({\n        width: width\n      });\n    }\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle(title, time) {\n      return React.createElement(InsightTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, __(title), time ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"(\", time, \")\") : null);\n    }\n  }, {\n    key: \"renderTrend\",\n    value: function renderTrend(name, loading, data) {\n      return React.createElement(InsightRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.renderTitle(name), React.createElement(Chart, {\n        loading: loading.main,\n        height: 360,\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderPunchCard\",\n    value: function renderPunchCard(loading, data, width) {\n      var content = React.createElement(LoaderWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        objective: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }));\n\n      if (!loading.punch) {\n        content = React.createElement(PunchCard, {\n          data: data,\n          width: width,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(InsightRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.renderTitle('Punch card'), content);\n    }\n  }, {\n    key: \"renderTeamMembers\",\n    value: function renderTeamMembers() {\n      var _this$props = this.props,\n          teamMembers = _this$props.teamMembers,\n          loading = _this$props.loading;\n\n      if (!teamMembers) {\n        return null;\n      }\n\n      return React.createElement(InsightRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(InsightTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Team Members\"), React.createElement(TeamMembers, {\n        loading: loading.teamMember || false,\n        datas: teamMembers || [],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderCharts\",\n    value: function renderCharts() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          trend = _this$props2.trend,\n          summary = _this$props2.summary,\n          punch = _this$props2.punch,\n          loading = _this$props2.loading;\n      var width = this.state.width;\n\n      var innerRef = function innerRef(node) {\n        _this2.wrapper = node;\n      };\n\n      return React.createElement(InsightContent, {\n        innerRef: innerRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(InsightRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, this.renderTitle('Volume summary'), React.createElement(Summary, {\n        loading: loading.main,\n        data: summary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), this.renderTrend('Volume Trend', loading, trend), this.renderPunchCard(loading, punch, width), this.renderTeamMembers());\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$props3 = this.props,\n          history = _this$props3.history,\n          queryParams = _this$props3.queryParams;\n      return React.createElement(InsightWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(DealFilter, {\n        history: history,\n        queryParams: queryParams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), this.renderCharts());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          title: __('Insights'),\n          submenu: menuDeal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }),\n        leftSidebar: React.createElement(Sidebar, {\n          queryParams: this.props.queryParams,\n          type: INSIGHT_TYPES.DEAL,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }),\n        content: this.renderContent(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return DealVolumeReport;\n}(React.Component);\n\nexport default DealVolumeReport;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/DealVolumeReport.tsx"],"names":["Spinner","__","menuDeal","Wrapper","React","INSIGHT_TYPES","DealFilter","InsightContent","InsightRow","InsightTitle","InsightWrapper","LoaderWrapper","Chart","PunchCard","Sidebar","Summary","TeamMembers","DealVolumeReport","props","wrapper","state","width","prevProps","loading","main","calculateWidth","clientWidth","setState","title","time","name","data","renderTitle","content","punch","teamMembers","teamMember","trend","summary","innerRef","node","renderTrend","renderPunchCard","renderTeamMembers","history","queryParams","renderCharts","DEAL","renderContent","Component"],"mappings":"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","sourcesContent":["import Spinner from 'modules/common/components/Spinner';\nimport { __ } from 'modules/common/utils';\nimport { menuDeal } from 'modules/common/utils/menus';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport React from 'react';\nimport { INSIGHT_TYPES } from '../constants';\nimport DealFilter from '../containers/DealFilter';\nimport {\n  InsightContent,\n  InsightRow,\n  InsightTitle,\n  InsightWrapper,\n  LoaderWrapper\n} from '../styles';\nimport {\n  IChartParams,\n  IPunchCardData,\n  IQueryParams,\n  SummaryData\n} from '../types';\nimport Chart from './Chart';\nimport PunchCard from './PunchCard';\nimport Sidebar from './Sidebar';\nimport Summary from './Summary';\nimport TeamMembers from './TeamMembers';\n\ntype loadingType = {\n  main: boolean;\n  punch: boolean;\n  teamMember: boolean;\n};\n\ntype Props = {\n  queryParams: IQueryParams;\n  history: any;\n  punch: IPunchCardData[];\n  trend: IChartParams[];\n  summary: SummaryData[];\n  loading: loadingType;\n  teamMembers: IChartParams[];\n};\n\nclass DealVolumeReport extends React.Component<Props, { width: number }> {\n  private wrapper;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 600\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.loading.main && !this.props.loading.main) {\n      this.calculateWidth();\n    }\n  }\n\n  componentDidMount() {\n    this.calculateWidth();\n  }\n\n  calculateWidth() {\n    const width = this.wrapper.clientWidth;\n    this.setState({ width });\n  }\n\n  renderTitle(title: string, time?: string) {\n    return (\n      <InsightTitle>\n        {__(title)}\n        {time ? <span>({time})</span> : null}\n      </InsightTitle>\n    );\n  }\n\n  renderTrend(name, loading, data) {\n    return (\n      <InsightRow>\n        {this.renderTitle(name)}\n        <Chart loading={loading.main} height={360} data={data} />\n      </InsightRow>\n    );\n  }\n\n  renderPunchCard(loading, data, width) {\n    let content = (\n      <LoaderWrapper>\n        <Spinner objective={true} />\n      </LoaderWrapper>\n    );\n\n    if (!loading.punch) {\n      content = <PunchCard data={data} width={width} />;\n    }\n\n    return (\n      <InsightRow>\n        {this.renderTitle('Punch card')}\n        {content}\n      </InsightRow>\n    );\n  }\n\n  renderTeamMembers() {\n    const { teamMembers, loading } = this.props;\n\n    if (!teamMembers) {\n      return null;\n    }\n\n    return (\n      <InsightRow>\n        <InsightTitle>Team Members</InsightTitle>\n        <TeamMembers\n          loading={loading.teamMember || false}\n          datas={teamMembers || []}\n        />\n      </InsightRow>\n    );\n  }\n\n  renderCharts() {\n    const { trend, summary, punch, loading } = this.props;\n\n    const width = this.state.width;\n\n    const innerRef = node => {\n      this.wrapper = node;\n    };\n\n    return (\n      <InsightContent innerRef={innerRef}>\n        <InsightRow>\n          {this.renderTitle('Volume summary')}\n          <Summary loading={loading.main} data={summary} />\n        </InsightRow>\n\n        {this.renderTrend('Volume Trend', loading, trend)}\n\n        {this.renderPunchCard(loading, punch, width)}\n\n        {this.renderTeamMembers()}\n      </InsightContent>\n    );\n  }\n\n  renderContent() {\n    const { history, queryParams } = this.props;\n\n    return (\n      <InsightWrapper>\n        <DealFilter history={history} queryParams={queryParams} />\n        {this.renderCharts()}\n      </InsightWrapper>\n    );\n  }\n\n  render() {\n    return (\n      <Wrapper\n        header={<Wrapper.Header title={__('Insights')} submenu={menuDeal} />}\n        leftSidebar={\n          <Sidebar\n            queryParams={this.props.queryParams}\n            type={INSIGHT_TYPES.DEAL}\n          />\n        }\n        content={this.renderContent()}\n      />\n    );\n  }\n}\n\nexport default DealVolumeReport;\n"]},"metadata":{},"sourceType":"module"}