{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/robot/components/TodoDetail.tsx\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  margin: 20px 0 10px;\\n  align-items: center;\\n\\n  span {\\n    margin-left: 10px;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\tposition: relative;\\n\\tpadding-left: 30px;\\n\\tmargin-bottom: 10px;\\n\\n\\t&:before {\\n\\t\\tcontent: '\\\\ea3f';\\n\\t\\tfont-style: normal;\\n    font-family: 'erxes';\\n\\t\\twidth: 20px;\\n\\t\\theight: 20px;\\n\\t\\tborder-radius: 10px;\\n\\t\\tborder: 1px solid;\\n\\t\\tborder-color: \", \";\\n\\t\\tbackground: \", \";\\n\\t\\tdisplay: block;\\n\\t\\tposition: absolute;\\n\\t\\tleft: 0;\\n\\t\\ttext-align: center;\\n\\t\\tcolor: \", \";\\n  }\\n  \\n  > span {\\n    margin-left: 5px;\\n  }\\n\\n\\ta {\\n    text-decoration: \", \";\\n\\t  font-style: \", \";\\n\\t\\tcolor: \", \";\\n\\n      &:hover {\\n        text-decoration: underline;\\n      }\\n\\t}\\n\"], [\"\\n\\tposition: relative;\\n\\tpadding-left: 30px;\\n\\tmargin-bottom: 10px;\\n\\n\\t&:before {\\n\\t\\tcontent: '\\\\\\\\ea3f';\\n\\t\\tfont-style: normal;\\n    font-family: 'erxes';\\n\\t\\twidth: 20px;\\n\\t\\theight: 20px;\\n\\t\\tborder-radius: 10px;\\n\\t\\tborder: 1px solid;\\n\\t\\tborder-color: \", \";\\n\\t\\tbackground: \", \";\\n\\t\\tdisplay: block;\\n\\t\\tposition: absolute;\\n\\t\\tleft: 0;\\n\\t\\ttext-align: center;\\n\\t\\tcolor: \", \";\\n  }\\n  \\n  > span {\\n    margin-left: 5px;\\n  }\\n\\n\\ta {\\n    text-decoration: \", \";\\n\\t  font-style: \", \";\\n\\t\\tcolor: \", \";\\n\\n      &:hover {\\n        text-decoration: underline;\\n      }\\n\\t}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0;\\n  list-style: none;\\n  margin: 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport ProgressBar from 'modules/common/components/ProgressBar';\nimport colors from 'modules/common/styles/colors';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport styledTS from 'styled-components-ts';\nimport { calculatePercentage } from '../utils';\nimport { Title } from './styles';\nimport VideoPopup from './VideoPopup';\nvar Checklist = styled.ul(_templateObject());\nvar ChecklistItem = styledTS(styled.li)(_templateObject2(), function (props) {\n  return props.isComplete ? colors.colorCoreGreen : colors.colorCoreGray;\n}, function (props) {\n  return props.isComplete && colors.colorCoreGreen;\n}, colors.colorWhite, function (props) {\n  return props.isComplete && 'line-through';\n}, function (props) {\n  return props.isComplete && 'italic';\n}, function (props) {\n  return props.isComplete ? colors.colorCoreGray : colors.textPrimary;\n});\nvar Progress = styled.div(_templateObject3());\n\nvar TodoDetail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoDetail, _React$Component);\n\n  function TodoDetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderProgress = function () {\n      var _this$props = _this.props,\n          feature = _this$props.feature,\n          stepsCompleteness = _this$props.stepsCompleteness;\n\n      if (!feature.showSettings || feature.settings.length === 0) {\n        return null;\n      }\n\n      var total = 0;\n      var done = 0;\n\n      for (var _key2 in stepsCompleteness) {\n        if (stepsCompleteness.hasOwnProperty(_key2)) {\n          total++;\n\n          if (stepsCompleteness[_key2]) {\n            done++;\n          }\n        }\n      }\n\n      var percent = calculatePercentage(total, done);\n      return React.createElement(Progress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        percentage: percent,\n        color: colors.colorCoreBlue,\n        height: \"10px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, percent, \"%\"));\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoDetail, [{\n    key: \"renderSettings\",\n    value: function renderSettings() {\n      var _this$props2 = this.props,\n          feature = _this$props2.feature,\n          stepsCompleteness = _this$props2.stepsCompleteness;\n\n      if (!feature.showSettings) {\n        return null;\n      }\n\n      return React.createElement(Checklist, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, feature.settings.map(function (setting, index) {\n        var detail = feature.settingsDetails[setting];\n        return React.createElement(ChecklistItem, {\n          key: index,\n          isComplete: stepsCompleteness[setting],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"\".concat(detail.url, \"#signedIn=true\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, detail.name), stepsCompleteness[setting] && React.createElement(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"Selebration\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"\\uD83C\\uDF89\"));\n      }));\n    }\n  }, {\n    key: \"renderVideo\",\n    value: function renderVideo() {\n      var feature = this.props.feature;\n\n      if (feature.videoUrl && feature.videoUrl !== 'url') {\n        return React.createElement(VideoPopup, {\n          onVideoClick: this.props.completeShowStep,\n          name: feature.name,\n          videoUrl: feature.videoUrl,\n          thumbImage: feature.videoThumb,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        });\n      }\n\n      return;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var feature = this.props.feature;\n      return React.createElement(React.Fragment, null, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, feature.text), this.renderVideo(), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, feature.description), this.renderProgress(), this.renderSettings());\n    }\n  }]);\n\n  return TodoDetail;\n}(React.Component);\n\nexport default TodoDetail;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/robot/components/TodoDetail.tsx"],"names":["ProgressBar","colors","React","Link","styled","styledTS","calculatePercentage","Title","VideoPopup","Checklist","ul","ChecklistItem","li","props","isComplete","colorCoreGreen","colorCoreGray","colorWhite","textPrimary","Progress","div","TodoDetail","renderProgress","feature","stepsCompleteness","showSettings","settings","length","total","done","key","hasOwnProperty","percent","colorCoreBlue","map","setting","index","detail","settingsDetails","url","name","videoUrl","completeShowStep","videoThumb","text","renderVideo","description","renderSettings","Component"],"mappings":"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","sourcesContent":["import ProgressBar from 'modules/common/components/ProgressBar';\nimport colors from 'modules/common/styles/colors';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport styledTS from 'styled-components-ts';\nimport { IFeature } from '../types';\nimport { calculatePercentage } from '../utils';\nimport { Title } from './styles';\nimport VideoPopup from './VideoPopup';\n\nconst Checklist = styled.ul`\n  padding: 0;\n  list-style: none;\n  margin: 0;\n`;\n\nconst ChecklistItem = styledTS<{ isComplete?: boolean }>(styled.li)`\n\tposition: relative;\n\tpadding-left: 30px;\n\tmargin-bottom: 10px;\n\n\t&:before {\n\t\tcontent: '\\\\ea3f';\n\t\tfont-style: normal;\n    font-family: 'erxes';\n\t\twidth: 20px;\n\t\theight: 20px;\n\t\tborder-radius: 10px;\n\t\tborder: 1px solid;\n\t\tborder-color: ${props =>\n      props.isComplete ? colors.colorCoreGreen : colors.colorCoreGray};\n\t\tbackground: ${props => props.isComplete && colors.colorCoreGreen};\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttext-align: center;\n\t\tcolor: ${colors.colorWhite};\n  }\n  \n  > span {\n    margin-left: 5px;\n  }\n\n\ta {\n    text-decoration: ${props => props.isComplete && 'line-through'};\n\t  font-style: ${props => props.isComplete && 'italic'};\n\t\tcolor: ${props =>\n      props.isComplete ? colors.colorCoreGray : colors.textPrimary};\n\n      &:hover {\n        text-decoration: underline;\n      }\n\t}\n`;\n\nconst Progress = styled.div`\n  display: flex;\n  margin: 20px 0 10px;\n  align-items: center;\n\n  span {\n    margin-left: 10px;\n  }\n`;\n\ntype Props = {\n  feature: IFeature;\n  completeShowStep: () => void;\n  stepsCompleteness: { [key: string]: boolean };\n};\n\nclass TodoDetail extends React.Component<Props> {\n  renderProgress = () => {\n    const { feature, stepsCompleteness } = this.props;\n\n    if (!feature.showSettings || feature.settings.length === 0) {\n      return null;\n    }\n\n    let total = 0;\n    let done = 0;\n\n    for (const key in stepsCompleteness) {\n      if (stepsCompleteness.hasOwnProperty(key)) {\n        total++;\n\n        if (stepsCompleteness[key]) {\n          done++;\n        }\n      }\n    }\n\n    const percent = calculatePercentage(total, done);\n\n    return (\n      <Progress>\n        <ProgressBar\n          percentage={percent}\n          color={colors.colorCoreBlue}\n          height=\"10px\"\n        />\n        <span>{percent}%</span>\n      </Progress>\n    );\n  };\n\n  renderSettings() {\n    const { feature, stepsCompleteness } = this.props;\n\n    if (!feature.showSettings) {\n      return null;\n    }\n\n    return (\n      <Checklist>\n        {feature.settings.map((setting, index) => {\n          const detail = feature.settingsDetails[setting];\n\n          return (\n            <ChecklistItem key={index} isComplete={stepsCompleteness[setting]}>\n              <Link to={`${detail.url}#signedIn=true`}>{detail.name}</Link>\n              {stepsCompleteness[setting] && (\n                <span role=\"img\" aria-label=\"Selebration\">\n                  🎉\n                </span>\n              )}\n            </ChecklistItem>\n          );\n        })}\n      </Checklist>\n    );\n  }\n\n  renderVideo() {\n    const { feature } = this.props;\n\n    if (feature.videoUrl && feature.videoUrl !== 'url') {\n      return (\n        <VideoPopup\n          onVideoClick={this.props.completeShowStep}\n          name={feature.name}\n          videoUrl={feature.videoUrl}\n          thumbImage={feature.videoThumb}\n        />\n      );\n    }\n\n    return;\n  }\n\n  render() {\n    const { feature } = this.props;\n\n    return (\n      <>\n        <Title>{feature.text}</Title>\n        {this.renderVideo()}\n        <p>{feature.description}</p>\n        {this.renderProgress()}\n        {this.renderSettings()}\n      </>\n    );\n  }\n}\n\nexport default TodoDetail;\n"]},"metadata":{},"sourceType":"module"}