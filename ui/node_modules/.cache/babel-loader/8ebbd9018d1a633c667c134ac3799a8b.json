{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/conversation/messages/SimpleMessage.tsx\";\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\nimport Attachment from 'modules/common/components/Attachment';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport NameCard from 'modules/common/components/nameCard/NameCard';\nimport TextDivider from 'modules/common/components/TextDivider';\nimport Tip from 'modules/common/components/Tip';\nimport { __ } from 'modules/common/utils';\nimport { urlify } from 'modules/inbox/utils';\nimport React from 'react';\nimport xss from 'xss';\nimport { AppMessageBox, CallBox, CallButton, MessageBody, MessageContent, MessageItem, UserInfo } from '../styles';\n\nvar SimpleMessage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SimpleMessage, _React$Component);\n\n  function SimpleMessage() {\n    _classCallCheck(this, SimpleMessage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SimpleMessage).apply(this, arguments));\n  }\n\n  _createClass(SimpleMessage, [{\n    key: \"renderAvatar\",\n    value: function renderAvatar() {\n      var _this$props = this.props,\n          message = _this$props.message,\n          isSameUser = _this$props.isSameUser;\n\n      if (isSameUser) {\n        return null;\n      }\n\n      var user = message.user;\n      var customer = message.customer;\n      var props = user ? {\n        user: user\n      } : {\n        customer: customer\n      };\n      return React.createElement(NameCard.Avatar, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderAttachment\",\n    value: function renderAttachment(hasAttachment) {\n      var message = this.props.message;\n      var attachments = message.attachments;\n\n      if (!hasAttachment) {\n        return null;\n      }\n\n      return attachments.map(function (attachment, index) {\n        return React.createElement(Attachment, {\n          key: index,\n          attachment: attachment,\n          simple: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"renderVideoCallRequest\",\n    value: function renderVideoCallRequest() {\n      return React.createElement(CallBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(UserInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"exclamation-triangle\",\n        color: \"#EA475D\",\n        size: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), ' ', __('You have received a video call request'))));\n    }\n  }, {\n    key: \"renderVideoCall\",\n    value: function renderVideoCall() {\n      var message = this.props.message;\n      var videoCallData = message.videoCallData || {\n        status: 'end',\n        url: ''\n      };\n\n      if (videoCallData.status === 'end') {\n        return React.createElement(CallBox, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(UserInfo, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"phone-slash\",\n          color: \"#EA475D\",\n          size: 15,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }), ' ', __('Video call ended'))));\n      }\n\n      return React.createElement(AppMessageBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(UserInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, __('Video call invitation sent')), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"user-plus\",\n        color: \"#3B85F4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }))), React.createElement(CallButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: videoCallData.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, __('Join a call'))));\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent(hasAttachment) {\n      var _this$props2 = this.props,\n          message = _this$props2.message,\n          renderContent = _this$props2.renderContent,\n          isStaff = _this$props2.isStaff;\n\n      if (renderContent) {\n        return renderContent();\n      }\n\n      if (message.contentType === 'videoCall') {\n        return this.renderVideoCall();\n      }\n\n      if (message.contentType === 'videoCallRequest') {\n        return this.renderVideoCallRequest();\n      }\n\n      if (!message.content) {\n        return React.createElement(MessageContent, {\n          staff: isStaff,\n          internal: message.internal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, this.renderAttachment(hasAttachment), ' ');\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(MessageContent, {\n        staff: isStaff,\n        internal: message.internal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: xss(urlify(message.content))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), this.renderAttachment(hasAttachment)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          message = _this$props3.message,\n          isStaff = _this$props3.isStaff,\n          isSameUser = _this$props3.isSameUser;\n      var messageDate = message.createdAt;\n      var hasAttachment = message.attachments && message.attachments.length > 0;\n      var classes = classNames(_objectSpread({}, this.props.classes || [], {\n        attachment: hasAttachment,\n        same: isSameUser\n      }));\n\n      if (message.fromBot) {\n        return React.createElement(TextDivider, {\n          text: message.content,\n          date: messageDate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(MessageItem, {\n        staff: isStaff,\n        className: classes,\n        isSame: isSameUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.renderAvatar(), React.createElement(MessageBody, {\n        staff: isStaff,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, this.renderContent(hasAttachment), React.createElement(Tip, {\n        text: dayjs(messageDate).format('lll'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"footer\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, dayjs(messageDate).format('LT')))));\n    }\n  }]);\n\n  return SimpleMessage;\n}(React.Component);\n\nexport { SimpleMessage as default };","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/conversation/messages/SimpleMessage.tsx"],"names":["classNames","dayjs","Attachment","Icon","NameCard","TextDivider","Tip","__","urlify","React","xss","AppMessageBox","CallBox","CallButton","MessageBody","MessageContent","MessageItem","UserInfo","SimpleMessage","props","message","isSameUser","user","customer","hasAttachment","attachments","map","attachment","index","videoCallData","status","url","renderContent","isStaff","contentType","renderVideoCall","renderVideoCallRequest","content","internal","renderAttachment","__html","messageDate","createdAt","length","classes","same","fromBot","renderAvatar","format","Component"],"mappings":";;;;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,OAAOC,QAAP,MAAqB,6CAArB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,GAAP,MAAgB,+BAAhB;AACA,SAASC,EAAT,QAAmB,sBAAnB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AAEA,SACEC,aADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,cALF,EAMEC,WANF,EAOEC,QAPF,QAQO,WARP;;IAkBqBC,a;;;;;;;;;;;;;mCACJ;AAAA,wBACmB,KAAKC,KADxB;AAAA,UACLC,OADK,eACLA,OADK;AAAA,UACIC,UADJ,eACIA,UADJ;;AAGb,UAAIA,UAAJ,EAAgB;AACd,eAAO,IAAP;AACD;;AAED,UAAMC,IAAI,GAAGF,OAAO,CAACE,IAArB;AACA,UAAMC,QAAQ,GAAGH,OAAO,CAACG,QAAzB;AACA,UAAMJ,KAAK,GAAGG,IAAI,GAAG;AAAEA,QAAAA,IAAI,EAAJA;AAAF,OAAH,GAAc;AAAEC,QAAAA,QAAQ,EAARA;AAAF,OAAhC;AAEA,aAAO,oBAAC,QAAD,CAAU,MAAV,oBAAqBJ,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;qCAEgBK,a,EAAwB;AAAA,UAC/BJ,OAD+B,GACnB,KAAKD,KADc,CAC/BC,OAD+B;AAAA,UAE/BK,WAF+B,GAEfL,OAFe,CAE/BK,WAF+B;;AAIvC,UAAI,CAACD,aAAL,EAAoB;AAClB,eAAO,IAAP;AACD;;AAED,aAAOC,WAAW,CAACC,GAAZ,CAAgB,UAACC,UAAD,EAAaC,KAAb;AAAA,eACrB,oBAAC,UAAD;AAAY,UAAA,GAAG,EAAEA,KAAjB;AAAwB,UAAA,UAAU,EAAED,UAApC;AAAgD,UAAA,MAAM,EAAE,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADqB;AAAA,OAAhB,CAAP;AAGD;;;6CAEwB;AACvB,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,sBAAX;AAAkC,QAAA,KAAK,EAAC,SAAxC;AAAkD,QAAA,IAAI,EAAE,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EACiE,GADjE,EAEGpB,EAAE,CAAC,wCAAD,CAFL,CADF,CADF,CADF;AAUD;;;sCAEiB;AAAA,UACRa,OADQ,GACI,KAAKD,KADT,CACRC,OADQ;AAGhB,UAAMS,aAAa,GAAGT,OAAO,CAACS,aAAR,IAAyB;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,GAAG,EAAE;AAAtB,OAA/C;;AAEA,UAAIF,aAAa,CAACC,MAAd,KAAyB,KAA7B,EAAoC;AAClC,eACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,aAAX;AAAyB,UAAA,KAAK,EAAC,SAA/B;AAAyC,UAAA,IAAI,EAAE,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EACwD,GADxD,EAEGvB,EAAE,CAAC,kBAAD,CAFL,CADF,CADF,CADF;AAUD;;AAED,aACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,EAAE,CAAC,4BAAD,CAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,WAAX;AAAuB,QAAA,KAAK,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CADF,EAOE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,MAAM,EAAC,QAAV;AAAmB,QAAA,GAAG,EAAC,qBAAvB;AAA6C,QAAA,IAAI,EAAEsB,aAAa,CAACE,GAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGxB,EAAE,CAAC,aAAD,CADL,CADF,CAPF,CADF;AAeD;;;kCAEaiB,a,EAAwB;AAAA,yBACQ,KAAKL,KADb;AAAA,UAC5BC,OAD4B,gBAC5BA,OAD4B;AAAA,UACnBY,aADmB,gBACnBA,aADmB;AAAA,UACJC,OADI,gBACJA,OADI;;AAGpC,UAAID,aAAJ,EAAmB;AACjB,eAAOA,aAAa,EAApB;AACD;;AAED,UAAIZ,OAAO,CAACc,WAAR,KAAwB,WAA5B,EAAyC;AACvC,eAAO,KAAKC,eAAL,EAAP;AACD;;AAED,UAAIf,OAAO,CAACc,WAAR,KAAwB,kBAA5B,EAAgD;AAC9C,eAAO,KAAKE,sBAAL,EAAP;AACD;;AAED,UAAI,CAAChB,OAAO,CAACiB,OAAb,EAAsB;AACpB,eACE,oBAAC,cAAD;AAAgB,UAAA,KAAK,EAAEJ,OAAvB;AAAgC,UAAA,QAAQ,EAAEb,OAAO,CAACkB,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKC,gBAAL,CAAsBf,aAAtB,CADH,EACyC,GADzC,CADF;AAKD;;AAED,aACE,0CACE,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAES,OAAvB;AAAgC,QAAA,QAAQ,EAAEb,OAAO,CAACkB,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,uBAAuB,EAAE;AAAEE,UAAAA,MAAM,EAAE9B,GAAG,CAACF,MAAM,CAACY,OAAO,CAACiB,OAAT,CAAP;AAAb,SAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIG,KAAKE,gBAAL,CAAsBf,aAAtB,CAJH,CADF,CADF;AAUD;;;6BAEQ;AAAA,yBACkC,KAAKL,KADvC;AAAA,UACCC,OADD,gBACCA,OADD;AAAA,UACUa,OADV,gBACUA,OADV;AAAA,UACmBZ,UADnB,gBACmBA,UADnB;AAEP,UAAMoB,WAAW,GAAGrB,OAAO,CAACsB,SAA5B;AACA,UAAMlB,aAAa,GAAGJ,OAAO,CAACK,WAAR,IAAuBL,OAAO,CAACK,WAAR,CAAoBkB,MAApB,GAA6B,CAA1E;AAEA,UAAMC,OAAO,GAAG5C,UAAU,mBACpB,KAAKmB,KAAL,CAAWyB,OAAX,IAAsB,EADF;AAExBjB,QAAAA,UAAU,EAAEH,aAFY;AAGxBqB,QAAAA,IAAI,EAAExB;AAHkB,SAA1B;;AAMA,UAAID,OAAO,CAAC0B,OAAZ,EAAqB;AACnB,eAAO,oBAAC,WAAD;AAAa,UAAA,IAAI,EAAE1B,OAAO,CAACiB,OAA3B;AAAoC,UAAA,IAAI,EAAEI,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aACE,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAER,OAApB;AAA6B,QAAA,SAAS,EAAEW,OAAxC;AAAiD,QAAA,MAAM,EAAEvB,UAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAK0B,YAAL,EADH,EAGE,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAEd,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,aAAL,CAAmBR,aAAnB,CADH,EAEE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAEvB,KAAK,CAACwC,WAAD,CAAL,CAAmBO,MAAnB,CAA0B,KAA1B,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAS/C,KAAK,CAACwC,WAAD,CAAL,CAAmBO,MAAnB,CAA0B,IAA1B,CAAT,CADF,CAFF,CAHF,CADF;AAYD;;;;EA1IwCvC,KAAK,CAACwC,S;;SAA5B/B,a","sourcesContent":["import classNames from 'classnames';\nimport dayjs from 'dayjs';\nimport Attachment from 'modules/common/components/Attachment';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport NameCard from 'modules/common/components/nameCard/NameCard';\nimport TextDivider from 'modules/common/components/TextDivider';\nimport Tip from 'modules/common/components/Tip';\nimport { __ } from 'modules/common/utils';\nimport { urlify } from 'modules/inbox/utils';\nimport React from 'react';\nimport xss from 'xss';\nimport { IMessage } from '../../../../../types';\nimport {\n  AppMessageBox,\n  CallBox,\n  CallButton,\n  MessageBody,\n  MessageContent,\n  MessageItem,\n  UserInfo\n} from '../styles';\n\ntype Props = {\n  message: IMessage;\n  classes?: string[];\n  isStaff: boolean;\n  isSameUser?: boolean;\n  renderContent?: () => React.ReactNode;\n};\n\nexport default class SimpleMessage extends React.Component<Props, {}> {\n  renderAvatar() {\n    const { message, isSameUser } = this.props;\n\n    if (isSameUser) {\n      return null;\n    }\n\n    const user = message.user;\n    const customer = message.customer;\n    const props = user ? { user } : { customer };\n\n    return <NameCard.Avatar {...props} />;\n  }\n\n  renderAttachment(hasAttachment: boolean) {\n    const { message } = this.props;\n    const { attachments } = message;\n\n    if (!hasAttachment) {\n      return null;\n    }\n\n    return attachments.map((attachment, index) => (\n      <Attachment key={index} attachment={attachment} simple={true} />\n    ));\n  }\n\n  renderVideoCallRequest() {\n    return (\n      <CallBox>\n        <UserInfo>\n          <strong>\n            <Icon icon=\"exclamation-triangle\" color=\"#EA475D\" size={15} />{' '}\n            {__('You have received a video call request')}\n          </strong>\n        </UserInfo>\n      </CallBox>\n    );\n  }\n\n  renderVideoCall() {\n    const { message } = this.props;\n\n    const videoCallData = message.videoCallData || { status: 'end', url: '' };\n\n    if (videoCallData.status === 'end') {\n      return (\n        <CallBox>\n          <UserInfo>\n            <strong>\n              <Icon icon=\"phone-slash\" color=\"#EA475D\" size={15} />{' '}\n              {__('Video call ended')}\n            </strong>\n          </UserInfo>\n        </CallBox>\n      );\n    }\n\n    return (\n      <AppMessageBox>\n        <UserInfo>\n          <h5>{__('Video call invitation sent')}</h5>\n          <h3>\n            <Icon icon=\"user-plus\" color=\"#3B85F4\" />\n          </h3>\n        </UserInfo>\n        <CallButton>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={videoCallData.url}>\n            {__('Join a call')}\n          </a>\n        </CallButton>\n      </AppMessageBox>\n    );\n  }\n\n  renderContent(hasAttachment: boolean) {\n    const { message, renderContent, isStaff } = this.props;\n\n    if (renderContent) {\n      return renderContent();\n    }\n\n    if (message.contentType === 'videoCall') {\n      return this.renderVideoCall();\n    }\n\n    if (message.contentType === 'videoCallRequest') {\n      return this.renderVideoCallRequest();\n    }\n\n    if (!message.content) {\n      return (\n        <MessageContent staff={isStaff} internal={message.internal}>\n          {this.renderAttachment(hasAttachment)}{' '}\n        </MessageContent>\n      );\n    }\n\n    return (\n      <>\n        <MessageContent staff={isStaff} internal={message.internal}>\n          <span\n            dangerouslySetInnerHTML={{ __html: xss(urlify(message.content)) }}\n          />\n          {this.renderAttachment(hasAttachment)}\n        </MessageContent>\n      </>\n    );\n  }\n\n  render() {\n    const { message, isStaff, isSameUser } = this.props;\n    const messageDate = message.createdAt;\n    const hasAttachment = message.attachments && message.attachments.length > 0;\n\n    const classes = classNames({\n      ...(this.props.classes || []),\n      attachment: hasAttachment,\n      same: isSameUser\n    });\n\n    if (message.fromBot) {\n      return <TextDivider text={message.content} date={messageDate} />;\n    }\n\n    return (\n      <MessageItem staff={isStaff} className={classes} isSame={isSameUser}>\n        {this.renderAvatar()}\n\n        <MessageBody staff={isStaff}>\n          {this.renderContent(hasAttachment)}\n          <Tip text={dayjs(messageDate).format('lll')}>\n            <footer>{dayjs(messageDate).format('LT')}</footer>\n          </Tip>\n        </MessageBody>\n      </MessageItem>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}