{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/properties/components/PropertyRow.tsx\";\nimport Button from \"modules/common/components/Button\";\nimport EmptyState from \"modules/common/components/EmptyState\";\nimport ModalTrigger from \"modules/common/components/ModalTrigger\";\nimport ActionButtons from \"erxes-common-ui/lib/components/actionButtons\";\nimport Table from \"modules/common/components/table\";\nimport Toggle from \"modules/common/components/Toggle\";\nimport { __, Alert, confirm } from \"modules/common/utils\";\nimport React from \"react\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport PropertyForm from \"../containers/PropertyForm\";\nimport PropertyGroupForm from \"../containers/PropertyGroupForm\";\nimport { CollapseRow, DropIcon, FieldType } from \"../styles\";\n\nvar PropertyRow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PropertyRow, _React$Component);\n\n  function PropertyRow(_props) {\n    var _this;\n\n    _classCallCheck(this, PropertyRow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PropertyRow).call(this, _props));\n\n    _this.handleCollapse = function () {\n      _this.setState({\n        collapse: !_this.state.collapse\n      });\n    };\n\n    _this.visibleHandler = function (e, property) {\n      if (property.isDefinedByErxes) {\n        return Alert.error(\"You cannot update this property\");\n      }\n\n      var isVisible = e.target.checked;\n      return _this.props.updatePropertyVisible({\n        _id: property._id,\n        isVisible: isVisible\n      });\n    };\n\n    _this.renderActionButtons = function (data, remove, content) {\n      if (data.isDefinedByErxes) {\n        return null;\n      }\n\n      var onClick = function onClick() {\n        return confirm().then(function () {\n          remove({\n            _id: data._id\n          });\n        }).catch(function (e) {\n          Alert.error(e.message);\n        });\n      };\n\n      return React.createElement(ActionButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(ModalTrigger, {\n        title: \"Edit Property\",\n        trigger: React.createElement(Button, {\n          btnStyle: \"link\",\n          icon: \"edit-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }),\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Button, {\n        btnStyle: \"link\",\n        icon: \"times-circle\",\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }));\n    };\n\n    _this.renderTableRow = function (field) {\n      var _this$props = _this.props,\n          removeProperty = _this$props.removeProperty,\n          queryParams = _this$props.queryParams;\n      var lastUpdatedUser = field.lastUpdatedUser;\n\n      var onChange = function onChange(e) {\n        return _this.visibleHandler(e, field);\n      };\n\n      return React.createElement(\"tr\", {\n        key: field._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, field.text, React.createElement(FieldType, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, field.type)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, lastUpdatedUser && lastUpdatedUser.details ? lastUpdatedUser.details.fullName : \"Unknown\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Toggle, {\n        defaultChecked: field.isVisible,\n        disabled: field.isDefinedByErxes,\n        icons: {\n          checked: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, \"Yes\"),\n          unchecked: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, \"No\")\n        },\n        onChange: onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, _this.renderActionButtons(field, removeProperty, function (props) {\n        return React.createElement(PropertyForm, Object.assign({}, props, {\n          field: field,\n          queryParams: queryParams,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }));\n      })));\n    };\n\n    _this.renderTable = function (fields) {\n      if (fields.length === 0) {\n        return React.createElement(EmptyState, {\n          icon: \"circular\",\n          text: \"There arent't any fields in this group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Table, {\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, __(\"Name\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, __(\"Last Updated By\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, __(\"Visible\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, fields.map(function (field) {\n        return _this.renderTableRow(field);\n      })));\n    };\n\n    _this.state = {\n      collapse: true\n    };\n    return _this;\n  }\n\n  _createClass(PropertyRow, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          group = _this$props2.group,\n          removePropertyGroup = _this$props2.removePropertyGroup,\n          queryParams = _this$props2.queryParams;\n      var _group$fields = group.fields,\n          fields = _group$fields === void 0 ? [] : _group$fields;\n      return React.createElement(\"li\", {\n        key: group._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(CollapseRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          flex: 1\n        },\n        onClick: this.handleCollapse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(DropIcon, {\n        isOpen: this.state.collapse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), group.name, \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, group.description)), this.renderActionButtons(group, removePropertyGroup, function (props) {\n        return React.createElement(PropertyGroupForm, Object.assign({}, props, {\n          group: group,\n          queryParams: queryParams,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }));\n      })), React.createElement(Collapse, {\n        in: this.state.collapse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.renderTable(fields))));\n    }\n  }]);\n\n  return PropertyRow;\n}(React.Component);\n\nexport default PropertyRow;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/properties/components/PropertyRow.tsx"],"names":["Button","EmptyState","ModalTrigger","ActionButtons","Table","Toggle","__","Alert","confirm","React","Collapse","PropertyForm","PropertyGroupForm","CollapseRow","DropIcon","FieldType","PropertyRow","props","handleCollapse","setState","collapse","state","visibleHandler","e","property","isDefinedByErxes","error","isVisible","target","checked","updatePropertyVisible","_id","renderActionButtons","data","remove","content","onClick","then","catch","message","renderTableRow","field","removeProperty","queryParams","lastUpdatedUser","onChange","text","type","details","fullName","unchecked","renderTable","fields","length","map","group","removePropertyGroup","flex","name","description","Component"],"mappings":"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","sourcesContent":["import Button from \"modules/common/components/Button\";\nimport EmptyState from \"modules/common/components/EmptyState\";\nimport ModalTrigger from \"modules/common/components/ModalTrigger\";\nimport ActionButtons from \"erxes-common-ui/lib/components/actionButtons\";\nimport Table from \"modules/common/components/table\";\nimport Toggle from \"modules/common/components/Toggle\";\nimport { __, Alert, confirm } from \"modules/common/utils\";\nimport React from \"react\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport PropertyForm from \"../containers/PropertyForm\";\nimport PropertyGroupForm from \"../containers/PropertyGroupForm\";\nimport { CollapseRow, DropIcon, FieldType } from \"../styles\";\nimport { IField, IFieldGroup } from \"../types\";\n\ntype Props = {\n  group: IFieldGroup;\n  queryParams: any;\n  removePropertyGroup: (data: { _id: string }) => any;\n  removeProperty: (data: { _id: string }) => void;\n  updatePropertyVisible: (params: { _id: string; isVisible: boolean }) => void;\n};\n\ntype State = {\n  collapse: boolean;\n};\n\nclass PropertyRow extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      collapse: true,\n    };\n  }\n\n  handleCollapse = () => {\n    this.setState({ collapse: !this.state.collapse });\n  };\n\n  visibleHandler = (e, property) => {\n    if (property.isDefinedByErxes) {\n      return Alert.error(\"You cannot update this property\");\n    }\n\n    const isVisible = e.target.checked;\n\n    return this.props.updatePropertyVisible({ _id: property._id, isVisible });\n  };\n\n  renderActionButtons = (data, remove, content) => {\n    if (data.isDefinedByErxes) {\n      return null;\n    }\n\n    const onClick = () =>\n      confirm()\n        .then(() => {\n          remove({ _id: data._id });\n        })\n        .catch((e) => {\n          Alert.error(e.message);\n        });\n\n    return (\n      <ActionButtons>\n        <ModalTrigger\n          title=\"Edit Property\"\n          trigger={<Button btnStyle=\"link\" icon=\"edit-3\" />}\n          content={content}\n        />\n        <Button btnStyle=\"link\" icon=\"times-circle\" onClick={onClick} />\n      </ActionButtons>\n    );\n  };\n\n  renderTableRow = (field: IField) => {\n    const { removeProperty, queryParams } = this.props;\n    const { lastUpdatedUser } = field;\n\n    const onChange = (e) => this.visibleHandler(e, field);\n\n    return (\n      <tr key={field._id}>\n        <td>\n          {field.text}\n          <FieldType>{field.type}</FieldType>\n        </td>\n        <td>\n          {lastUpdatedUser && lastUpdatedUser.details\n            ? lastUpdatedUser.details.fullName\n            : \"Unknown\"}\n        </td>\n        <td>\n          <Toggle\n            defaultChecked={field.isVisible}\n            disabled={field.isDefinedByErxes}\n            icons={{\n              checked: <span>Yes</span>,\n              unchecked: <span>No</span>,\n            }}\n            onChange={onChange}\n          />\n        </td>\n        <td>\n          {this.renderActionButtons(field, removeProperty, (props) => (\n            <PropertyForm {...props} field={field} queryParams={queryParams} />\n          ))}\n        </td>\n      </tr>\n    );\n  };\n\n  renderTable = (fields) => {\n    if (fields.length === 0) {\n      return (\n        <EmptyState\n          icon=\"circular\"\n          text=\"There arent't any fields in this group\"\n        />\n      );\n    }\n\n    return (\n      <Table hover={true}>\n        <thead>\n          <tr>\n            <th>{__(\"Name\")}</th>\n            <th>{__(\"Last Updated By\")}</th>\n            <th>{__(\"Visible\")}</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{fields.map((field) => this.renderTableRow(field))}</tbody>\n      </Table>\n    );\n  };\n\n  render() {\n    const { group, removePropertyGroup, queryParams } = this.props;\n    const { fields = [] } = group;\n\n    return (\n      <li key={group._id}>\n        <CollapseRow>\n          <div style={{ flex: 1 }} onClick={this.handleCollapse}>\n            <DropIcon isOpen={this.state.collapse} />\n            {group.name} <span>{group.description}</span>\n          </div>\n          {this.renderActionButtons(group, removePropertyGroup, (props) => (\n            <PropertyGroupForm\n              {...props}\n              group={group}\n              queryParams={queryParams}\n            />\n          ))}\n        </CollapseRow>\n        <Collapse in={this.state.collapse}>\n          <div>{this.renderTable(fields)}</div>\n        </Collapse>\n      </li>\n    );\n  }\n}\n\nexport default PropertyRow;\n"]},"metadata":{},"sourceType":"module"}