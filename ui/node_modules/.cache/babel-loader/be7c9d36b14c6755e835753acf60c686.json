{"ast":null,"code":"// Wrap\n// wraps a string by a certain width\nvar makeString = require('./helper/makeString');\n\nmodule.exports = function wrap(str, options) {\n  str = makeString(str);\n  options = options || {};\n  var width = options.width || 75;\n  var seperator = options.seperator || '\\n';\n  var cut = options.cut || false;\n  var preserveSpaces = options.preserveSpaces || false;\n  var trailingSpaces = options.trailingSpaces || false;\n  var result;\n\n  if (width <= 0) {\n    return str;\n  } else if (!cut) {\n    var words = str.split(' ');\n    var current_column = 0;\n    result = '';\n\n    while (words.length > 0) {\n      // if adding a space and the next word would cause this line to be longer than width...\n      if (1 + words[0].length + current_column > width) {\n        //start a new line if this line is not already empty\n        if (current_column > 0) {\n          // add a space at the end of the line is preserveSpaces is true\n          if (preserveSpaces) {\n            result += ' ';\n            current_column++;\n          } // fill the rest of the line with spaces if trailingSpaces option is true\n          else if (trailingSpaces) {\n              while (current_column < width) {\n                result += ' ';\n                current_column++;\n              }\n            } //start new line\n\n\n          result += seperator;\n          current_column = 0;\n        }\n      } // if not at the begining of the line, add a space in front of the word\n\n\n      if (current_column > 0) {\n        result += ' ';\n        current_column++;\n      } // tack on the next word, update current column, a pop words array\n\n\n      result += words[0];\n      current_column += words[0].length;\n      words.shift();\n    } // fill the rest of the line with spaces if trailingSpaces option is true\n\n\n    if (trailingSpaces) {\n      while (current_column < width) {\n        result += ' ';\n        current_column++;\n      }\n    }\n\n    return result;\n  } else {\n    var index = 0;\n    result = ''; // walk through each character and add seperators where appropriate\n\n    while (index < str.length) {\n      if (index % width == 0 && index > 0) {\n        result += seperator;\n      }\n\n      result += str.charAt(index);\n      index++;\n    } // fill the rest of the line with spaces if trailingSpaces option is true\n\n\n    if (trailingSpaces) {\n      while (index % width > 0) {\n        result += ' ';\n        index++;\n      }\n    }\n\n    return result;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}