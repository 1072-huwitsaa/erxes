{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/pagination/Pagination.tsx\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport { router } from \"modules/common/utils\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { difference, intersection, range, union } from \"../../utils\";\nimport PerPageChooser from \"./PerPageChooser\";\nimport { PaginationList, PaginationWrapper } from \"./styles\"; // pages calculation\n\nvar generatePages = function generatePages(pageCount, currentPage) {\n  var w = 4; // Create an array with pageCount numbers, starting from 1\n\n  var pages = range(1, pageCount);\n  var diff;\n  var first = pages.slice(0, w);\n  var last = pages.slice(-w);\n  var currentStart = currentPage - 1 - w;\n\n  if (currentStart < 0) {\n    currentStart = 0;\n  }\n\n  var currentEnd = currentPage - 1 + w;\n\n  if (currentEnd < 0) {\n    currentEnd = 0;\n  }\n\n  var current = pages.slice(currentStart, currentEnd);\n  pages = [];\n\n  if (intersection(first, current).length === 0) {\n    pages = pages.concat(first);\n    diff = current[0] - first[first.length - 1];\n\n    if (diff === 2) {\n      pages.push(current[0] - 1);\n    } else if (diff !== 1) {\n      pages.push(-1);\n    }\n\n    pages = pages.concat(current);\n  } else {\n    pages = union(first, current);\n  }\n\n  if (intersection(current, last).length === 0) {\n    diff = last[0] - pages[pages.length - 1];\n\n    if (diff === 2) {\n      pages.push(last[0] - 1);\n    } else if (diff !== 1) {\n      pages.push(-1);\n    }\n\n    pages = pages.concat(last);\n  } else {\n    diff = difference(last, current);\n    pages = pages.concat(diff);\n  }\n\n  return pages;\n}; // page chooser component\n\n\nvar Page =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Page, _React$Component);\n\n  function Page() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Page);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Page)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onClick = function (e) {\n      e.preventDefault();\n\n      _this.goto(_this.props.page);\n    };\n\n    return _this;\n  }\n\n  _createClass(Page, [{\n    key: \"goto\",\n    value: function goto(page) {\n      router.setParams(this.props.history, {\n        page: page\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          currentPage = _this$props.currentPage,\n          page = _this$props.page;\n\n      if (page !== -1) {\n        var className = \"\";\n\n        if (page === currentPage) {\n          className += \" active disabled\";\n        }\n\n        return React.createElement(\"li\", {\n          className: className,\n          onClick: this.onClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#page\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, page));\n      }\n\n      return React.createElement(\"li\", {\n        className: \"disabled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"...\"));\n    }\n  }]);\n\n  return Page;\n}(React.Component);\n\n// main pagination component\nvar Pagination =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Pagination, _React$Component2);\n\n  function Pagination() {\n    var _getPrototypeOf3;\n\n    var _this2;\n\n    _classCallCheck(this, Pagination);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(Pagination)).call.apply(_getPrototypeOf3, [this].concat(args)));\n\n    _this2.onPrev = function (e) {\n      e.preventDefault();\n      var page = (_this2.props.currentPage || 1) - 1;\n\n      if (page > 0) {\n        _this2.goto(page);\n      }\n    };\n\n    _this2.onNext = function (e) {\n      e.preventDefault();\n      var _this2$props = _this2.props,\n          totalPagesCount = _this2$props.totalPagesCount,\n          currentPage = _this2$props.currentPage;\n      var page = (currentPage || 1) + 1;\n\n      if (page <= totalPagesCount) {\n        _this2.goto(page);\n      }\n    };\n\n    return _this2;\n  }\n\n  _createClass(Pagination, [{\n    key: \"goto\",\n    value: function goto(page) {\n      router.setParams(this.props.history, {\n        page: page\n      });\n    }\n  }, {\n    key: \"renderBar\",\n    value: function renderBar() {\n      var _this$props2 = this.props,\n          history = _this$props2.history,\n          totalPagesCount = _this$props2.totalPagesCount,\n          _this$props2$pages = _this$props2.pages,\n          pages = _this$props2$pages === void 0 ? [] : _this$props2$pages,\n          _this$props2$currentP = _this$props2.currentPage,\n          currentPage = _this$props2$currentP === void 0 ? 1 : _this$props2$currentP,\n          isPaginated = _this$props2.isPaginated;\n\n      if (!isPaginated) {\n        return null;\n      }\n\n      var prevClass = \"\";\n      var nextClass = \"\";\n\n      if (currentPage <= 1) {\n        prevClass = \"disabled\";\n      }\n\n      if (currentPage >= totalPagesCount) {\n        nextClass = \"disabled\";\n      }\n\n      return React.createElement(PaginationList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: prevClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#prev\",\n        onClick: this.onPrev,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"arrow-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }))), pages.map(function (page, index) {\n        return React.createElement(Page, {\n          key: index,\n          history: history,\n          currentPage: currentPage,\n          page: page,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        });\n      }), React.createElement(\"li\", {\n        className: nextClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#next\",\n        onClick: this.onNext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"arrow-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }))), this.renderPerPageChooser());\n    }\n  }, {\n    key: \"renderPerPageChooser\",\n    value: function renderPerPageChooser() {\n      return React.createElement(PerPageChooser, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PaginationWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, this.renderBar());\n    }\n  }]);\n\n  return Pagination;\n}(React.Component);\n\nvar PaginationContainer = function PaginationContainer(props) {\n  var history = props.history,\n      _props$count = props.count,\n      count = _props$count === void 0 ? 100 : _props$count;\n  var currentPage = Number(router.getParam(history, \"page\")) || 1;\n  var perPage = Number(router.getParam(history, \"perPage\")) || 20;\n  var totalPagesCount = parseInt((count / perPage).toString(), 10) + 1;\n\n  if (count % perPage === 0) {\n    totalPagesCount -= 1;\n  } // calculate page numbers\n\n\n  var pages = generatePages(totalPagesCount, currentPage);\n\n  var childProps = _objectSpread({}, props, {\n    currentPage: currentPage,\n    isPaginated: totalPagesCount > 1,\n    totalPagesCount: totalPagesCount,\n    pages: pages\n  });\n\n  return React.createElement(Pagination, Object.assign({}, childProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }));\n};\n\nexport default withRouter(PaginationContainer);","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/pagination/Pagination.tsx"],"names":["Icon","router","React","withRouter","difference","intersection","range","union","PerPageChooser","PaginationList","PaginationWrapper","generatePages","pageCount","currentPage","w","pages","diff","first","slice","last","currentStart","currentEnd","current","length","concat","push","Page","onClick","e","preventDefault","goto","props","page","setParams","history","className","Component","Pagination","onPrev","onNext","totalPagesCount","isPaginated","prevClass","nextClass","map","index","renderPerPageChooser","renderBar","PaginationContainer","count","Number","getParam","perPage","parseInt","toString","childProps"],"mappings":"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","sourcesContent":["import Icon from \"erxes-common-ui/lib/components/icon\";\nimport { router } from \"modules/common/utils\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { IRouterProps } from \"../../types\";\nimport { difference, intersection, range, union } from \"../../utils\";\nimport PerPageChooser from \"./PerPageChooser\";\nimport { PaginationList, PaginationWrapper } from \"./styles\";\n\n// pages calculation\nconst generatePages = (pageCount: number, currentPage: number): number[] => {\n  const w = 4;\n\n  // Create an array with pageCount numbers, starting from 1\n  let pages = range(1, pageCount);\n\n  let diff;\n  const first = pages.slice(0, w);\n\n  const last = pages.slice(-w);\n\n  let currentStart = currentPage - 1 - w;\n\n  if (currentStart < 0) {\n    currentStart = 0;\n  }\n\n  let currentEnd = currentPage - 1 + w;\n\n  if (currentEnd < 0) {\n    currentEnd = 0;\n  }\n\n  const current = pages.slice(currentStart, currentEnd);\n\n  pages = [];\n\n  if (intersection(first, current).length === 0) {\n    pages = pages.concat(first);\n    diff = current[0] - first[first.length - 1];\n\n    if (diff === 2) {\n      pages.push(current[0] - 1);\n    } else if (diff !== 1) {\n      pages.push(-1);\n    }\n\n    pages = pages.concat(current);\n  } else {\n    pages = union(first, current);\n  }\n\n  if (intersection(current, last).length === 0) {\n    diff = last[0] - pages[pages.length - 1];\n\n    if (diff === 2) {\n      pages.push(last[0] - 1);\n    } else if (diff !== 1) {\n      pages.push(-1);\n    }\n\n    pages = pages.concat(last);\n  } else {\n    diff = difference(last, current);\n    pages = pages.concat(diff);\n  }\n\n  return pages;\n};\n\n// page chooser component\nclass Page extends React.Component<{\n  history: any;\n  page: number;\n  currentPage: number;\n}> {\n  goto(page) {\n    router.setParams(this.props.history, { page });\n  }\n\n  onClick = (e) => {\n    e.preventDefault();\n\n    this.goto(this.props.page);\n  };\n\n  render() {\n    const { currentPage, page } = this.props;\n\n    if (page !== -1) {\n      let className = \"\";\n\n      if (page === currentPage) {\n        className += \" active disabled\";\n      }\n\n      return (\n        <li className={className} onClick={this.onClick}>\n          <a href=\"#page\">{page}</a>\n        </li>\n      );\n    }\n\n    return (\n      <li className=\"disabled\">\n        <span>...</span>\n      </li>\n    );\n  }\n}\n\ninterface IPaginationProps extends IRouterProps {\n  totalPagesCount: number;\n  pages?: number[];\n  currentPage?: number;\n  isPaginated?: boolean;\n}\n\n// main pagination component\nclass Pagination extends React.Component<IPaginationProps> {\n  goto(page) {\n    router.setParams(this.props.history, { page });\n  }\n\n  onPrev = (e) => {\n    e.preventDefault();\n\n    const page = (this.props.currentPage || 1) - 1;\n\n    if (page > 0) {\n      this.goto(page);\n    }\n  };\n\n  onNext = (e) => {\n    e.preventDefault();\n\n    const { totalPagesCount, currentPage } = this.props;\n\n    const page = (currentPage || 1) + 1;\n\n    if (page <= totalPagesCount) {\n      this.goto(page);\n    }\n  };\n\n  renderBar() {\n    const {\n      history,\n      totalPagesCount,\n      pages = [],\n      currentPage = 1,\n      isPaginated,\n    } = this.props;\n\n    if (!isPaginated) {\n      return null;\n    }\n\n    let prevClass = \"\";\n    let nextClass = \"\";\n\n    if (currentPage <= 1) {\n      prevClass = \"disabled\";\n    }\n\n    if (currentPage >= totalPagesCount) {\n      nextClass = \"disabled\";\n    }\n\n    return (\n      <PaginationList>\n        <li className={prevClass}>\n          <a href=\"#prev\" onClick={this.onPrev}>\n            <Icon icon=\"arrow-left\" />\n          </a>\n        </li>\n\n        {pages.map((page, index) => (\n          <Page\n            key={index}\n            history={history}\n            currentPage={currentPage}\n            page={page}\n          />\n        ))}\n\n        <li className={nextClass}>\n          <a href=\"#next\" onClick={this.onNext}>\n            <Icon icon=\"arrow-right\" />\n          </a>\n        </li>\n\n        {this.renderPerPageChooser()}\n      </PaginationList>\n    );\n  }\n\n  renderPerPageChooser() {\n    return <PerPageChooser />;\n  }\n\n  render() {\n    return <PaginationWrapper>{this.renderBar()}</PaginationWrapper>;\n  }\n}\n\ninterface IPaginationContainerProps extends IRouterProps {\n  count?: number;\n}\n\nconst PaginationContainer = (props: IPaginationContainerProps) => {\n  const { history, count = 100 } = props;\n\n  const currentPage = Number(router.getParam(history, \"page\")) || 1;\n  const perPage = Number(router.getParam(history, \"perPage\")) || 20;\n\n  let totalPagesCount = parseInt((count / perPage).toString(), 10) + 1;\n\n  if (count % perPage === 0) {\n    totalPagesCount -= 1;\n  }\n\n  // calculate page numbers\n  const pages = generatePages(totalPagesCount, currentPage);\n\n  const childProps = {\n    ...props,\n    currentPage,\n    isPaginated: totalPagesCount > 1,\n    totalPagesCount,\n    pages,\n  };\n\n  return <Pagination {...childProps} />;\n};\n\nexport default withRouter<IPaginationContainerProps>(PaginationContainer);\n"]},"metadata":{},"sourceType":"module"}