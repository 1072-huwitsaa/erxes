{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _draftJs = require('draft-js');\n\nexports.default = {\n  createLinkAtSelection: function createLinkAtSelection(editorState, url) {\n    var contentState = editorState.getCurrentContent().createEntity('LINK', 'MUTABLE', {\n      url: url\n    });\n    var entityKey = contentState.getLastCreatedEntityKey();\n\n    var withLink = _draftJs.RichUtils.toggleLink(editorState, editorState.getSelection(), entityKey);\n\n    return _draftJs.EditorState.forceSelection(withLink, editorState.getSelection());\n  },\n  removeLinkAtSelection: function removeLinkAtSelection(editorState) {\n    var selection = editorState.getSelection();\n    return _draftJs.RichUtils.toggleLink(editorState, selection, null);\n  },\n  getCurrentEntityKey: function getCurrentEntityKey(editorState) {\n    var selection = editorState.getSelection();\n    var anchorKey = selection.getAnchorKey();\n    var contentState = editorState.getCurrentContent();\n    var anchorBlock = contentState.getBlockForKey(anchorKey);\n    var offset = selection.anchorOffset;\n    var index = selection.isBackward ? offset - 1 : offset;\n    return anchorBlock.getEntityAt(index);\n  },\n  getCurrentEntity: function getCurrentEntity(editorState) {\n    var contentState = editorState.getCurrentContent();\n    var entityKey = this.getCurrentEntityKey(editorState);\n    return entityKey ? contentState.getEntity(entityKey) : null;\n  },\n  hasEntity: function hasEntity(editorState, entityType) {\n    var entity = this.getCurrentEntity(editorState);\n    return entity && entity.getType() === entityType;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}