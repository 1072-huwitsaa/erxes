{"ast":null,"code":"import dayjs from 'dayjs';\nimport { __ } from '.';\nvar MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n/**\n * Get columns of months\n * @param date - current date\n * @param range - range of months to get\n */\n\nexport var monthColumns = function monthColumns(date, range) {\n  var currentDate = date.clone(); // deep copy prevent mutability\n\n  var months = [getMonthYear(currentDate)];\n\n  for (var i = 0; i < range; i++) {\n    currentDate = nextMonth(currentDate);\n    months.push(getMonthYear(currentDate));\n  }\n\n  return months;\n};\nexport var getCurrentDate = function getCurrentDate() {\n  return dayjs();\n};\nexport var nextMonth = function nextMonth(date) {\n  return date.add(1, 'month');\n};\nexport var previousMonth = function previousMonth(date) {\n  return date.subtract(1, 'month');\n};\nexport var getMonthTitle = function getMonthTitle(month) {\n  return __(MONTHS[month]);\n};\nexport var getFullTitle = function getFullTitle(date) {\n  var month = date.month,\n      year = date.year;\n  return __(MONTHS[month]) + ' - ' + year;\n};\nexport var getMonthYear = function getMonthYear(date) {\n  var month = date.month();\n  var year = date.year();\n  return {\n    month: month,\n    year: year\n  };\n};","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/utils/calendar.ts"],"names":["dayjs","__","MONTHS","monthColumns","date","range","currentDate","clone","months","getMonthYear","i","nextMonth","push","getCurrentDate","add","previousMonth","subtract","getMonthTitle","month","getFullTitle","year"],"mappings":"AAAA,OAAOA,KAAP,MAA6B,OAA7B;AACA,SAASC,EAAT,QAAmB,GAAnB;AAGA,IAAMC,MAAM,GAAG,CACb,SADa,EAEb,UAFa,EAGb,OAHa,EAIb,OAJa,EAKb,KALa,EAMb,MANa,EAOb,MAPa,EAQb,QARa,EASb,WATa,EAUb,SAVa,EAWb,UAXa,EAYb,UAZa,CAAf;AAeA;;;;;;AAKA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAcC,KAAd,EAA+C;AACzE,MAAIC,WAAW,GAAGF,IAAI,CAACG,KAAL,EAAlB,CADyE,CACzC;;AAEhC,MAAMC,MAAW,GAAG,CAACC,YAAY,CAACH,WAAD,CAAb,CAApB;;AAEA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAApB,EAA2BK,CAAC,EAA5B,EAAgC;AAC9BJ,IAAAA,WAAW,GAAGK,SAAS,CAACL,WAAD,CAAvB;AACAE,IAAAA,MAAM,CAACI,IAAP,CAAYH,YAAY,CAACH,WAAD,CAAxB;AACD;;AAED,SAAOE,MAAP;AACD,CAXM;AAaP,OAAO,IAAMK,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAab,KAAK,EAAlB;AAAA,CAAvB;AAEP,OAAO,IAAMW,SAAS,GAAG,SAAZA,SAAY,CAACP,IAAD,EAAwB;AAC/C,SAAOA,IAAI,CAACU,GAAL,CAAS,CAAT,EAAY,OAAZ,CAAP;AACD,CAFM;AAIP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACX,IAAD,EAAwB;AACnD,SAAOA,IAAI,CAACY,QAAL,CAAc,CAAd,EAAiB,OAAjB,CAAP;AACD,CAFM;AAIP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,SAA2BjB,EAAE,CAACC,MAAM,CAACgB,KAAD,CAAP,CAA7B;AAAA,CAAtB;AAEP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACf,IAAD,EAA+B;AAAA,MACjDc,KADiD,GACjCd,IADiC,CACjDc,KADiD;AAAA,MAC1CE,IAD0C,GACjChB,IADiC,CAC1CgB,IAD0C;AAEzD,SAAOnB,EAAE,CAACC,MAAM,CAACgB,KAAD,CAAP,CAAF,GAAoB,KAApB,GAA4BE,IAAnC;AACD,CAHM;AAKP,OAAO,IAAMX,YAAY,GAAG,SAAfA,YAAe,CAACL,IAAD,EAAkD;AAC5E,MAAMc,KAAK,GAAGd,IAAI,CAACc,KAAL,EAAd;AACA,MAAME,IAAI,GAAGhB,IAAI,CAACgB,IAAL,EAAb;AAEA,SAAO;AAAEF,IAAAA,KAAK,EAALA,KAAF;AAASE,IAAAA,IAAI,EAAJA;AAAT,GAAP;AACD,CALM","sourcesContent":["import dayjs, { Dayjs } from 'dayjs';\nimport { __ } from '.';\nimport { IDateColumn } from '../types';\n\nconst MONTHS = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December'\n];\n\n/**\n * Get columns of months\n * @param date - current date\n * @param range - range of months to get\n */\nexport const monthColumns = (date: Dayjs, range: number): [IDateColumn] => {\n  let currentDate = date.clone(); // deep copy prevent mutability\n\n  const months: any = [getMonthYear(currentDate)];\n\n  for (let i = 0; i < range; i++) {\n    currentDate = nextMonth(currentDate);\n    months.push(getMonthYear(currentDate));\n  }\n\n  return months;\n};\n\nexport const getCurrentDate = (): Dayjs => dayjs();\n\nexport const nextMonth = (date: Dayjs): Dayjs => {\n  return date.add(1, 'month');\n};\n\nexport const previousMonth = (date: Dayjs): Dayjs => {\n  return date.subtract(1, 'month');\n};\n\nexport const getMonthTitle = (month: number): string => __(MONTHS[month]);\n\nexport const getFullTitle = (date: IDateColumn): string => {\n  const { month, year } = date;\n  return __(MONTHS[month]) + ' - ' + year;\n};\n\nexport const getMonthYear = (date: Dayjs): { month: number; year: number } => {\n  const month = date.month();\n  const year = date.year();\n\n  return { month, year };\n};\n"]},"metadata":{},"sourceType":"module"}