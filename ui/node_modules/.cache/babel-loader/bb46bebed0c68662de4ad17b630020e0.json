{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nvar PropTypes = _interopDefault(require('prop-types'));\n\nvar compose = _interopDefault(require('recompose/compose'));\n\nvar withPropsOnChange = _interopDefault(require('recompose/withPropsOnChange'));\n\nvar pure = _interopDefault(require('recompose/pure'));\n\nvar core = require('@nivo/core');\n\nvar reactMotion = require('react-motion');\n\nvar d3Shape = require('d3-shape');\n\nrequire('lodash');\n\nvar legends = require('@nivo/legends');\n\nvar defaultProps = _interopDefault(require('recompose/defaultProps'));\n\nvar PieSlice = function PieSlice(_ref) {\n  var data = _ref.data,\n      path = _ref.path,\n      color = _ref.color,\n      fill = _ref.fill,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      showTooltip = _ref.showTooltip,\n      hideTooltip = _ref.hideTooltip,\n      onClick = _ref.onClick,\n      tooltipFormat = _ref.tooltipFormat,\n      theme = _ref.theme;\n\n  var handleTooltip = function handleTooltip(e) {\n    return showTooltip(React__default.createElement(core.BasicTooltip, {\n      id: data.label,\n      value: data.value,\n      enableChip: true,\n      color: color,\n      theme: theme,\n      format: tooltipFormat\n    }), e);\n  };\n\n  return React__default.createElement('path', {\n    key: data.id,\n    d: path,\n    fill: fill,\n    strokeWidth: borderWidth,\n    stroke: borderColor,\n    onMouseEnter: handleTooltip,\n    onMouseMove: handleTooltip,\n    onMouseLeave: hideTooltip,\n    onClick: onClick\n  });\n};\n\nPieSlice.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    value: PropTypes.number.isRequired\n  }).isRequired,\n  path: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  fill: PropTypes.string.isRequired,\n  borderWidth: PropTypes.number.isRequired,\n  borderColor: PropTypes.string.isRequired,\n  tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  showTooltip: PropTypes.func.isRequired,\n  hideTooltip: PropTypes.func.isRequired,\n  onClick: PropTypes.func,\n  theme: PropTypes.shape({\n    tooltip: PropTypes.shape({}).isRequired\n  }).isRequired\n};\nvar enhance = compose(withPropsOnChange(['data', 'onClick'], function (_ref2) {\n  var data = _ref2.data,\n      _onClick = _ref2.onClick;\n  return {\n    onClick: function onClick(event) {\n      return _onClick(data, event);\n    }\n  };\n}), pure);\nvar PieSlice$1 = enhance(PieSlice);\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar lineGenerator = d3Shape.line().x(function (d) {\n  return d.x;\n}).y(function (d) {\n  return d.y;\n});\n\nvar PieRadialLabels = function (_Component) {\n  inherits(PieRadialLabels, _Component);\n\n  function PieRadialLabels() {\n    classCallCheck(this, PieRadialLabels);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  PieRadialLabels.prototype.render = function render() {\n    var _props = this.props,\n        data = _props.data,\n        label = _props.label,\n        radius = _props.radius,\n        skipAngle = _props.skipAngle,\n        linkOffset = _props.linkOffset,\n        linkDiagonalLength = _props.linkDiagonalLength,\n        linkHorizontalLength = _props.linkHorizontalLength,\n        linkStrokeWidth = _props.linkStrokeWidth,\n        textXOffset = _props.textXOffset,\n        textColor = _props.textColor,\n        linkColor = _props.linkColor,\n        theme = _props.theme;\n    return React__default.createElement('g', null, data.filter(function (d) {\n      return skipAngle === 0 || d.angleDegrees > skipAngle;\n    }).map(function (d) {\n      var angle = core.midAngle(d) - Math.PI / 2;\n      var positionA = core.positionFromAngle(angle, radius + linkOffset);\n      var positionB = core.positionFromAngle(angle, radius + linkOffset + linkDiagonalLength);\n      var positionC = void 0;\n      var labelPosition = void 0;\n      var textAnchor = void 0;\n\n      if (angle + Math.PI / 2 < Math.PI) {\n        positionC = {\n          x: positionB.x + linkHorizontalLength,\n          y: positionB.y\n        };\n        labelPosition = {\n          x: positionB.x + linkHorizontalLength + textXOffset,\n          y: positionB.y\n        };\n        textAnchor = 'start';\n      } else {\n        positionC = {\n          x: positionB.x - linkHorizontalLength,\n          y: positionB.y\n        };\n        labelPosition = {\n          x: positionB.x - linkHorizontalLength - textXOffset,\n          y: positionB.y\n        };\n        textAnchor = 'end';\n      }\n\n      return React__default.createElement('g', {\n        key: d.data.id\n      }, React__default.createElement('path', {\n        d: lineGenerator([positionA, positionB, positionC]),\n        fill: 'none',\n        style: {\n          fill: 'none',\n          stroke: linkColor(d.data, theme)\n        },\n        strokeWidth: linkStrokeWidth\n      }), React__default.createElement('g', {\n        transform: 'translate(' + labelPosition.x + ', ' + labelPosition.y + ')'\n      }, React__default.createElement('text', {\n        textAnchor: textAnchor,\n        dy: '0.3em',\n        style: {\n          fill: textColor(d.data, theme),\n          fontSize: theme.axis.fontSize\n        }\n      }, label(d.data))));\n    }));\n  };\n\n  return PieRadialLabels;\n}(React.Component);\n\nPieRadialLabels.propTypes = {\n  label: PropTypes.func.isRequired,\n  skipAngle: PropTypes.number.isRequired,\n  radius: PropTypes.number.isRequired,\n  linkOffset: PropTypes.number.isRequired,\n  linkDiagonalLength: PropTypes.number.isRequired,\n  linkHorizontalLength: PropTypes.number.isRequired,\n  linkStrokeWidth: PropTypes.number.isRequired,\n  textXOffset: PropTypes.number.isRequired,\n  textColor: PropTypes.func.isRequired,\n  linkColor: PropTypes.func.isRequired,\n  theme: PropTypes.shape({\n    axis: PropTypes.shape({\n      tickColor: PropTypes.string.isRequired,\n      fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n    }).isRequired\n  }).isRequired\n};\nPieRadialLabels.defaultProps = {\n  skipAngle: 0,\n  linkOffset: 0,\n  linkDiagonalLength: 16,\n  linkHorizontalLength: 24,\n  linkStrokeWidth: 1,\n  textXOffset: 6\n};\nvar sliceStyle = {\n  pointerEvents: 'none'\n};\n\nvar PieSlicesLabels = function (_Component) {\n  inherits(PieSlicesLabels, _Component);\n\n  function PieSlicesLabels() {\n    classCallCheck(this, PieSlicesLabels);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  PieSlicesLabels.prototype.render = function render() {\n    var _props = this.props,\n        data = _props.data,\n        label = _props.label,\n        radius = _props.radius,\n        skipAngle = _props.skipAngle,\n        innerRadius = _props.innerRadius,\n        textColor = _props.textColor,\n        theme = _props.theme;\n    var centerRadius = innerRadius + (radius - innerRadius) / 2;\n    return React__default.createElement('g', null, data.filter(function (d) {\n      return skipAngle === 0 || d.angleDegrees > skipAngle;\n    }).map(function (d) {\n      var angle = core.midAngle(d) - Math.PI / 2;\n      var position = core.positionFromAngle(angle, centerRadius);\n      return React__default.createElement('g', {\n        key: d.data.id,\n        transform: 'translate(' + position.x + ', ' + position.y + ')',\n        style: sliceStyle\n      }, React__default.createElement('text', {\n        textAnchor: 'middle',\n        style: {\n          fill: textColor(d.data, theme),\n          fontSize: theme.axis.fontSize\n        }\n      }, label(d.data)));\n    }));\n  };\n\n  return PieSlicesLabels;\n}(React.Component);\n\nPieSlicesLabels.propTypes = {\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  skipAngle: PropTypes.number.isRequired,\n  radius: PropTypes.number.isRequired,\n  innerRadius: PropTypes.number.isRequired,\n  textColor: PropTypes.func.isRequired,\n  theme: PropTypes.shape({\n    axis: PropTypes.shape({\n      textColor: PropTypes.string.isRequired,\n      fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n    }).isRequired\n  }).isRequired\n};\nPieSlicesLabels.defaultProps = {\n  skipAngle: 0\n};\nvar PiePropTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })).isRequired,\n  sortByValue: PropTypes.bool.isRequired,\n  innerRadius: PropTypes.number.isRequired,\n  padAngle: PropTypes.number.isRequired,\n  cornerRadius: PropTypes.number.isRequired,\n  // border\n  borderWidth: PropTypes.number.isRequired,\n  borderColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  // radial labels\n  enableRadialLabels: PropTypes.bool.isRequired,\n  radialLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  radialLabelsSkipAngle: PropTypes.number,\n  radialLabelsTextXOffset: PropTypes.number,\n  radialLabelsTextColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  radialLabelsLinkOffset: PropTypes.number,\n  radialLabelsLinkDiagonalLength: PropTypes.number,\n  radialLabelsLinkHorizontalLength: PropTypes.number,\n  radialLabelsLinkStrokeWidth: PropTypes.number,\n  radialLabelsLinkColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  // slices labels\n  enableSlicesLabels: PropTypes.bool.isRequired,\n  sliceLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  slicesLabelsSkipAngle: PropTypes.number,\n  slicesLabelsTextColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  // styling\n  defs: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired\n  })).isRequired,\n  fill: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    match: PropTypes.oneOfType([PropTypes.oneOf(['*']), PropTypes.object, PropTypes.func]).isRequired\n  })).isRequired,\n  // interactivity\n  isInteractive: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  legends: PropTypes.arrayOf(PropTypes.shape(legends.LegendPropShape)).isRequired\n};\nvar PieDefaultProps = {\n  sortByValue: false,\n  innerRadius: 0,\n  padAngle: 0,\n  cornerRadius: 0,\n  // border\n  borderWidth: 0,\n  borderColor: 'inherit:darker(1)',\n  // radial labels\n  enableRadialLabels: true,\n  radialLabel: 'id',\n  radialLabelsTextColor: 'theme',\n  radialLabelsLinkColor: 'theme',\n  // slices labels\n  enableSlicesLabels: true,\n  sliceLabel: 'value',\n  slicesLabelsTextColor: 'theme',\n  // styling\n  defs: [],\n  fill: [],\n  // interactivity\n  isInteractive: true,\n  onClick: core.noop,\n  legends: []\n};\n\nvar enhance$1 = function enhance$1(Component) {\n  return compose(defaultProps(PieDefaultProps), core.withTheme(), core.withDimensions(), core.withColors(), pure)(Component);\n};\n\nvar Pie = function Pie(_ref) {\n  var data = _ref.data,\n      margin = _ref.margin,\n      width = _ref.width,\n      height = _ref.height,\n      outerWidth = _ref.outerWidth,\n      outerHeight = _ref.outerHeight,\n      sortByValue = _ref.sortByValue,\n      _innerRadius = _ref.innerRadius,\n      _padAngle = _ref.padAngle,\n      cornerRadius = _ref.cornerRadius,\n      borderWidth = _ref.borderWidth,\n      _borderColor = _ref.borderColor,\n      enableRadialLabels = _ref.enableRadialLabels,\n      radialLabel = _ref.radialLabel,\n      radialLabelsSkipAngle = _ref.radialLabelsSkipAngle,\n      radialLabelsLinkOffset = _ref.radialLabelsLinkOffset,\n      radialLabelsLinkDiagonalLength = _ref.radialLabelsLinkDiagonalLength,\n      radialLabelsLinkHorizontalLength = _ref.radialLabelsLinkHorizontalLength,\n      radialLabelsLinkStrokeWidth = _ref.radialLabelsLinkStrokeWidth,\n      radialLabelsTextXOffset = _ref.radialLabelsTextXOffset,\n      radialLabelsTextColor = _ref.radialLabelsTextColor,\n      radialLabelsLinkColor = _ref.radialLabelsLinkColor,\n      enableSlicesLabels = _ref.enableSlicesLabels,\n      sliceLabel = _ref.sliceLabel,\n      slicesLabelsSkipAngle = _ref.slicesLabelsSkipAngle,\n      slicesLabelsTextColor = _ref.slicesLabelsTextColor,\n      theme = _ref.theme,\n      getColor = _ref.getColor,\n      defs = _ref.defs,\n      fill = _ref.fill,\n      animate = _ref.animate,\n      motionStiffness = _ref.motionStiffness,\n      motionDamping = _ref.motionDamping,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      tooltipFormat = _ref.tooltipFormat,\n      legends$$1 = _ref.legends;\n  var centerX = width / 2;\n  var centerY = height / 2;\n  var padAngle = core.degreesToRadians(_padAngle);\n  var borderColor = core.getInheritedColorGenerator(_borderColor);\n  var motionProps = {\n    animate: animate,\n    motionDamping: motionDamping,\n    motionStiffness: motionStiffness\n  };\n  var radialLabelsProps = {\n    label: core.getLabelGenerator(radialLabel),\n    skipAngle: radialLabelsSkipAngle,\n    linkOffset: radialLabelsLinkOffset,\n    linkDiagonalLength: radialLabelsLinkDiagonalLength,\n    linkHorizontalLength: radialLabelsLinkHorizontalLength,\n    linkStrokeWidth: radialLabelsLinkStrokeWidth,\n    textXOffset: radialLabelsTextXOffset,\n    textColor: core.getInheritedColorGenerator(radialLabelsTextColor, 'labels.textColor'),\n    linkColor: core.getInheritedColorGenerator(radialLabelsLinkColor, 'axis.tickColor')\n  };\n  var slicesLabelsProps = {\n    label: core.getLabelGenerator(sliceLabel),\n    skipAngle: slicesLabelsSkipAngle,\n    textColor: core.getInheritedColorGenerator(slicesLabelsTextColor, 'labels.textColor')\n  };\n  var radius = Math.min(width, height) / 2;\n  var innerRadius = radius * Math.min(_innerRadius, 1);\n  var pie = d3Shape.pie();\n  pie.value(function (d) {\n    return d.value;\n  });\n  if (sortByValue !== true) pie.sortValues(null);\n  var arc = d3Shape.arc();\n  arc.outerRadius(radius);\n  var enhancedData = data.map(function (d) {\n    return _extends({}, d, {\n      color: getColor(d)\n    });\n  });\n  var legendData = enhancedData.map(function (d) {\n    return {\n      label: d.label,\n      fill: d.color\n    };\n  });\n  var boundDefs = core.bindDefs(defs, enhancedData, fill);\n  return React__default.createElement(core.Container, {\n    isInteractive: isInteractive,\n    theme: theme\n  }, function (_ref2) {\n    var showTooltip = _ref2.showTooltip,\n        hideTooltip = _ref2.hideTooltip;\n    return React__default.createElement(core.SvgWrapper, {\n      width: outerWidth,\n      height: outerHeight,\n      margin: margin,\n      defs: boundDefs\n    }, React__default.createElement(reactMotion.Motion, {\n      style: {\n        centerX: reactMotion.spring(centerX, motionProps),\n        centerY: reactMotion.spring(centerY, motionProps),\n        innerRadius: reactMotion.spring(innerRadius),\n        padAngle: reactMotion.spring(padAngle, motionProps),\n        cornerRadius: reactMotion.spring(cornerRadius, motionProps)\n      }\n    }, function (interpolatingStyle) {\n      var interpolatedPie = pie.padAngle(interpolatingStyle.padAngle);\n      var interpolatedArc = arc.cornerRadius(interpolatingStyle.cornerRadius).innerRadius(interpolatingStyle.innerRadius);\n      var arcsData = interpolatedPie(enhancedData).map(function (d) {\n        var angle = d.endAngle - d.startAngle;\n        return _extends({}, d, {\n          angle: angle,\n          angleDegrees: core.radiansToDegrees(angle),\n          data: d.data\n        });\n      });\n      return React__default.createElement('g', {\n        transform: 'translate(' + interpolatingStyle.centerX + ', ' + interpolatingStyle.centerY + ')'\n      }, arcsData.map(function (d) {\n        return React__default.createElement(PieSlice$1, {\n          key: d.data.id,\n          data: d.data,\n          path: interpolatedArc(d),\n          color: d.data.color,\n          fill: d.data.fill ? d.data.fill : d.data.color,\n          borderWidth: borderWidth,\n          borderColor: borderColor(d.data),\n          showTooltip: showTooltip,\n          hideTooltip: hideTooltip,\n          theme: theme,\n          onClick: onClick\n        });\n      }), enableSlicesLabels && React__default.createElement(PieSlicesLabels, _extends({\n        data: arcsData,\n        radius: radius,\n        innerRadius: interpolatingStyle.innerRadius,\n        theme: theme\n      }, slicesLabelsProps)), enableRadialLabels && React__default.createElement(PieRadialLabels, _extends({\n        data: arcsData,\n        radius: radius,\n        theme: theme\n      }, radialLabelsProps)));\n    }), legends$$1.map(function (legend, i) {\n      return React__default.createElement(legends.BoxLegendSvg, _extends({\n        key: i\n      }, legend, {\n        containerWidth: width,\n        containerHeight: height,\n        data: legendData\n      }));\n    }));\n  });\n};\n\nPie.propTypes = PiePropTypes;\nvar enhancedPie = enhance$1(Pie);\nenhancedPie.displayName = 'enhance(Pie)';\n\nvar ResponsivePie = function ResponsivePie(props) {\n  return React__default.createElement(core.ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React__default.createElement(enhancedPie, _extends({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nexports.Pie = enhancedPie;\nexports.ResponsivePie = ResponsivePie;\nexports.PiePropTypes = PiePropTypes;\nexports.PieDefaultProps = PieDefaultProps;","map":null,"metadata":{},"sourceType":"script"}