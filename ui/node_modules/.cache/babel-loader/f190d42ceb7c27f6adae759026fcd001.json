{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/leftSidebar/ConversationList.tsx\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport EmptyState from \"modules/common/components/EmptyState\";\nimport LoadMore from \"modules/common/components/LoadMore\";\nimport { __ } from \"modules/common/utils\";\nimport ConversationItem from \"modules/inbox/containers/leftSidebar/ConversationItem\";\nimport React from \"react\";\nimport { IntegrationModal } from \"./IntegrationModal\";\nimport { ConversationItems } from \"./styles\";\n\nvar ConversationList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConversationList, _React$Component);\n\n  function ConversationList() {\n    _classCallCheck(this, ConversationList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ConversationList).apply(this, arguments));\n  }\n\n  _createClass(ConversationList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          conversations = _this$props.conversations,\n          currentConversationId = _this$props.currentConversationId,\n          selectedConversations = _this$props.selectedConversations,\n          onChangeConversation = _this$props.onChangeConversation,\n          toggleRowCheckbox = _this$props.toggleRowCheckbox,\n          loading = _this$props.loading,\n          totalCount = _this$props.totalCount;\n      var popupTrigger = React.createElement(Button, {\n        uppercase: false,\n        icon: \"processor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, __(\"Connect Integration\"));\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(ConversationItems, {\n        id: \"conversations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, conversations.map(function (conv) {\n        return React.createElement(ConversationItem, {\n          key: conv._id,\n          conversation: conv,\n          toggleCheckbox: toggleRowCheckbox,\n          onClick: onChangeConversation,\n          selectedIds: (selectedConversations || []).map(function (conversation) {\n            return conversation._id;\n          }),\n          currentConversationId: currentConversationId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      })), !loading && conversations.length === 0 && React.createElement(EmptyState, {\n        text: \"Let's get you messaging away!\",\n        size: \"full\",\n        image: \"/images/actions/6.svg\",\n        extra: React.createElement(IntegrationModal, {\n          trigger: popupTrigger,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(LoadMore, {\n        all: totalCount,\n        perPage: 10,\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ConversationList;\n}(React.Component);\n\nexport { ConversationList as default };","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/leftSidebar/ConversationList.tsx"],"names":["Button","EmptyState","LoadMore","__","ConversationItem","React","IntegrationModal","ConversationItems","ConversationList","props","conversations","currentConversationId","selectedConversations","onChangeConversation","toggleRowCheckbox","loading","totalCount","popupTrigger","map","conv","_id","conversation","length","Component"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,uCAAnB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAASC,EAAT,QAAmB,sBAAnB;AACA,OAAOC,gBAAP,MAA6B,uDAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,iBAAT,QAAkC,UAAlC;;IAYqBC,gB;;;;;;;;;;;;;6BACV;AAAA,wBASH,KAAKC,KATF;AAAA,UAELC,aAFK,eAELA,aAFK;AAAA,UAGLC,qBAHK,eAGLA,qBAHK;AAAA,UAILC,qBAJK,eAILA,qBAJK;AAAA,UAKLC,oBALK,eAKLA,oBALK;AAAA,UAMLC,iBANK,eAMLA,iBANK;AAAA,UAOLC,OAPK,eAOLA,OAPK;AAAA,UAQLC,UARK,eAQLA,UARK;AAWP,UAAMC,YAAY,GAChB,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAE,KAAnB;AAA0B,QAAA,IAAI,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGd,EAAE,CAAC,qBAAD,CADL,CADF;AAMA,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,EAAE,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGO,aAAa,CAACQ,GAAd,CAAkB,UAACC,IAAD;AAAA,eACjB,oBAAC,gBAAD;AACE,UAAA,GAAG,EAAEA,IAAI,CAACC,GADZ;AAEE,UAAA,YAAY,EAAED,IAFhB;AAGE,UAAA,cAAc,EAAEL,iBAHlB;AAIE,UAAA,OAAO,EAAED,oBAJX;AAKE,UAAA,WAAW,EAAE,CAACD,qBAAqB,IAAI,EAA1B,EAA8BM,GAA9B,CACX,UAACG,YAAD;AAAA,mBAAkBA,YAAY,CAACD,GAA/B;AAAA,WADW,CALf;AAQE,UAAA,qBAAqB,EAAET,qBARzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADiB;AAAA,OAAlB,CADH,CADF,EAeG,CAACI,OAAD,IAAYL,aAAa,CAACY,MAAd,KAAyB,CAArC,IACC,oBAAC,UAAD;AACE,QAAA,IAAI,EAAC,+BADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAC,uBAHR;AAIE,QAAA,KAAK,EAAE,oBAAC,gBAAD;AAAkB,UAAA,OAAO,EAAEL,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,EAwBE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAED,UAAf;AAA2B,QAAA,OAAO,EAAE,EAApC;AAAwC,QAAA,OAAO,EAAED,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBF,CADF;AA4BD;;;;EA9C2CV,KAAK,CAACkB,S;;SAA/Bf,gB","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport EmptyState from \"modules/common/components/EmptyState\";\nimport LoadMore from \"modules/common/components/LoadMore\";\nimport { __ } from \"modules/common/utils\";\nimport ConversationItem from \"modules/inbox/containers/leftSidebar/ConversationItem\";\nimport React from \"react\";\nimport { IConversation } from \"../../types\";\nimport { IntegrationModal } from \"./IntegrationModal\";\nimport { ConversationItems } from \"./styles\";\n\ntype Props = {\n  conversations: IConversation[];\n  currentConversationId?: string;\n  selectedConversations?: IConversation[];\n  onChangeConversation: (conversation: IConversation) => void;\n  toggleRowCheckbox: (conversation: IConversation[], checked: boolean) => void;\n  loading: boolean;\n  totalCount: number;\n};\n\nexport default class ConversationList extends React.Component<Props> {\n  render() {\n    const {\n      conversations,\n      currentConversationId,\n      selectedConversations,\n      onChangeConversation,\n      toggleRowCheckbox,\n      loading,\n      totalCount,\n    } = this.props;\n\n    const popupTrigger = (\n      <Button uppercase={false} icon=\"processor\">\n        {__(\"Connect Integration\")}\n      </Button>\n    );\n\n    return (\n      <React.Fragment>\n        <ConversationItems id=\"conversations\">\n          {conversations.map((conv) => (\n            <ConversationItem\n              key={conv._id}\n              conversation={conv}\n              toggleCheckbox={toggleRowCheckbox}\n              onClick={onChangeConversation}\n              selectedIds={(selectedConversations || []).map(\n                (conversation) => conversation._id\n              )}\n              currentConversationId={currentConversationId}\n            />\n          ))}\n        </ConversationItems>\n        {!loading && conversations.length === 0 && (\n          <EmptyState\n            text=\"Let's get you messaging away!\"\n            size=\"full\"\n            image=\"/images/actions/6.svg\"\n            extra={<IntegrationModal trigger={popupTrigger} />}\n          />\n        )}\n\n        <LoadMore all={totalCount} perPage={10} loading={loading} />\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}