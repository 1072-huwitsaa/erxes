{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/components/detail/CustomerDetails.tsx\";\nimport ActivityInputs from 'modules/activityLogs/components/ActivityInputs';\nimport ActivityLogs from 'modules/activityLogs/containers/ActivityLogs';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport { TabTitle } from 'modules/common/components/tabs';\nimport { __, renderFullName } from 'modules/common/utils';\nimport ActionSection from 'modules/customers/containers/common/ActionSection';\nimport LeadState from 'modules/customers/containers/LeadState';\nimport { MailBox, UserHeader } from 'modules/customers/styles';\nimport Widget from 'modules/engage/containers/Widget';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport MailForm from 'modules/settings/integrations/containers/mail/MailForm';\nimport React from 'react';\nimport InfoSection from '../common/InfoSection';\nimport LeftSidebar from './LeftSidebar';\nimport RightSidebar from './RightSidebar';\n\nvar CustomerDetails =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomerDetails, _React$Component);\n\n  function CustomerDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomerDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomerDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderEmailTab = function () {\n      var customer = _this.props.customer;\n\n      if (!customer.primaryEmail) {\n        return null;\n      }\n\n      var triggerEmail = React.createElement(TabTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"envelope-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), \" \", __('New email'));\n\n      var content = function content(props) {\n        return React.createElement(MailBox, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(MailForm, {\n          fromEmail: customer.primaryEmail,\n          refetchQueries: ['activityLogsCustomer'],\n          closeModal: props.closeModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }));\n      };\n\n      return React.createElement(ModalTrigger, {\n        dialogClassName: \"middle\",\n        title: \"Email\",\n        trigger: triggerEmail,\n        size: \"lg\",\n        content: content,\n        paddingContent: \"less-padding\",\n        enforceFocus: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    };\n\n    _this.renderExtraTabs = function () {\n      var triggerMessenger = React.createElement(TabTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"comment-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), \" \", __('New message'));\n      return React.createElement(React.Fragment, null, React.createElement(Widget, {\n        customers: [_this.props.customer],\n        modalTrigger: triggerMessenger,\n        channelType: \"messenger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), _this.renderEmailTab());\n    };\n\n    return _this;\n  }\n\n  _createClass(CustomerDetails, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          customer = _this$props.customer,\n          taggerRefetchQueries = _this$props.taggerRefetchQueries;\n      var breadcrumb = [{\n        title: __('Contacts'),\n        link: '/contacts'\n      }, {\n        title: renderFullName(customer)\n      }];\n      var content = React.createElement(React.Fragment, null, React.createElement(ActivityInputs, {\n        contentTypeId: customer._id,\n        contentType: \"customer\",\n        toEmail: customer.primaryEmail,\n        showEmail: false,\n        extraTabs: this.renderExtraTabs(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(ActivityLogs, {\n        target: customer.firstName,\n        contentId: customer._id,\n        contentType: \"customer\",\n        extraTabs: [{\n          name: 'conversation',\n          label: 'Conversation'\n        }, {\n          name: 'email',\n          label: 'Email'\n        }, {\n          name: 'task',\n          label: 'Task'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }));\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          title: renderFullName(customer),\n          breadcrumb: breadcrumb,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }),\n        mainHead: React.createElement(UserHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(InfoSection, {\n          nameSize: 16,\n          avatarSize: 60,\n          customer: customer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(ActionSection, {\n          customer: customer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        })), React.createElement(LeadState, {\n          customer: customer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        })),\n        leftSidebar: React.createElement(LeftSidebar, {\n          wide: true,\n          customer: customer,\n          taggerRefetchQueries: taggerRefetchQueries,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }),\n        rightSidebar: React.createElement(RightSidebar, {\n          customer: customer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }),\n        content: content,\n        transparent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CustomerDetails;\n}(React.Component);\n\nexport default CustomerDetails;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/components/detail/CustomerDetails.tsx"],"names":["ActivityInputs","ActivityLogs","Icon","ModalTrigger","TabTitle","__","renderFullName","ActionSection","LeadState","MailBox","UserHeader","Widget","Wrapper","MailForm","React","InfoSection","LeftSidebar","RightSidebar","CustomerDetails","renderEmailTab","customer","props","primaryEmail","triggerEmail","content","closeModal","renderExtraTabs","triggerMessenger","taggerRefetchQueries","breadcrumb","title","link","_id","firstName","name","label","Component"],"mappings":"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","sourcesContent":["import ActivityInputs from 'modules/activityLogs/components/ActivityInputs';\nimport ActivityLogs from 'modules/activityLogs/containers/ActivityLogs';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport { TabTitle } from 'modules/common/components/tabs';\nimport { __, renderFullName } from 'modules/common/utils';\nimport ActionSection from 'modules/customers/containers/common/ActionSection';\nimport LeadState from 'modules/customers/containers/LeadState';\nimport { MailBox, UserHeader } from 'modules/customers/styles';\nimport Widget from 'modules/engage/containers/Widget';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport MailForm from 'modules/settings/integrations/containers/mail/MailForm';\nimport React from 'react';\nimport { ICustomer } from '../../types';\nimport InfoSection from '../common/InfoSection';\nimport LeftSidebar from './LeftSidebar';\nimport RightSidebar from './RightSidebar';\n\ntype Props = {\n  customer: ICustomer;\n  taggerRefetchQueries?: any[];\n};\n\nclass CustomerDetails extends React.Component<Props> {\n  renderEmailTab = () => {\n    const { customer } = this.props;\n\n    if (!customer.primaryEmail) {\n      return null;\n    }\n\n    const triggerEmail = (\n      <TabTitle>\n        <Icon icon=\"envelope-add\" /> {__('New email')}\n      </TabTitle>\n    );\n\n    const content = props => (\n      <MailBox>\n        <MailForm\n          fromEmail={customer.primaryEmail}\n          refetchQueries={['activityLogsCustomer']}\n          closeModal={props.closeModal}\n        />\n      </MailBox>\n    );\n\n    return (\n      <ModalTrigger\n        dialogClassName=\"middle\"\n        title=\"Email\"\n        trigger={triggerEmail}\n        size=\"lg\"\n        content={content}\n        paddingContent=\"less-padding\"\n        enforceFocus={false}\n      />\n    );\n  };\n\n  renderExtraTabs = () => {\n    const triggerMessenger = (\n      <TabTitle>\n        <Icon icon=\"comment-plus\" /> {__('New message')}\n      </TabTitle>\n    );\n\n    return (\n      <>\n        <Widget\n          customers={[this.props.customer]}\n          modalTrigger={triggerMessenger}\n          channelType=\"messenger\"\n        />\n        {this.renderEmailTab()}\n      </>\n    );\n  };\n\n  render() {\n    const { customer, taggerRefetchQueries } = this.props;\n\n    const breadcrumb = [\n      { title: __('Contacts'), link: '/contacts' },\n      { title: renderFullName(customer) }\n    ];\n\n    const content = (\n      <>\n        <ActivityInputs\n          contentTypeId={customer._id}\n          contentType=\"customer\"\n          toEmail={customer.primaryEmail}\n          showEmail={false}\n          extraTabs={this.renderExtraTabs()}\n        />\n        <ActivityLogs\n          target={customer.firstName}\n          contentId={customer._id}\n          contentType=\"customer\"\n          extraTabs={[\n            { name: 'conversation', label: 'Conversation' },\n            { name: 'email', label: 'Email' },\n            { name: 'task', label: 'Task' }\n          ]}\n        />\n      </>\n    );\n\n    return (\n      <Wrapper\n        header={\n          <Wrapper.Header\n            title={renderFullName(customer)}\n            breadcrumb={breadcrumb}\n          />\n        }\n        mainHead={\n          <UserHeader>\n            <InfoSection nameSize={16} avatarSize={60} customer={customer}>\n              <ActionSection customer={customer} />\n            </InfoSection>\n            <LeadState customer={customer} />\n          </UserHeader>\n        }\n        leftSidebar={\n          <LeftSidebar\n            wide={true}\n            customer={customer}\n            taggerRefetchQueries={taggerRefetchQueries}\n          />\n        }\n        rightSidebar={<RightSidebar customer={customer} />}\n        content={content}\n        transparent={true}\n      />\n    );\n  }\n}\n\nexport default CustomerDetails;\n"]},"metadata":{},"sourceType":"module"}