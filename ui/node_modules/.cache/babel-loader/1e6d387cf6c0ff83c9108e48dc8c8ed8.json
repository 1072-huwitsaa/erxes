{"ast":null,"code":"import _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/leads/components/step/SuccessStep.tsx\";\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { LeftItem, Preview } from 'modules/common/components/step/styles';\nimport EditorCK from 'modules/common/containers/EditorCK';\nimport React from 'react';\nimport SuccessPreview from './preview/SuccessPreview';\nimport { FlexItem } from './style';\n\nvar SuccessStep =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SuccessStep, _React$Component);\n\n  function SuccessStep(props) {\n    var _this;\n\n    _classCallCheck(this, SuccessStep);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SuccessStep).call(this, props));\n\n    _this.handleSuccessActionChange = function () {\n      var element = document.getElementById('successAction');\n      var value = element.value;\n\n      _this.setState({\n        successAction: value\n      });\n\n      _this.props.onChange('successAction', value);\n    };\n\n    _this.onChangeFunction = function (name, value) {\n      _this.setState(_defineProperty({}, name, value));\n\n      _this.props.onChange(name, value);\n    };\n\n    _this.onEditorChange = function (e) {\n      var propName = 'adminEmailContent';\n\n      if (e.editor.id === 'cke_1') {\n        propName = 'userEmailContent';\n      }\n\n      _this.props.onChange(propName, e.editor.getData());\n    };\n\n    var leadData = props.leadData || {};\n    _this.state = {\n      successAction: leadData.successAction || 'onPage'\n    };\n    return _this;\n  }\n\n  _createClass(SuccessStep, [{\n    key: \"renderEmailFields\",\n    value: function renderEmailFields(leadData) {\n      var _this2 = this;\n\n      if (this.state.successAction !== 'email') {\n        return null;\n      }\n\n      var fromEmailOnChange = function fromEmailOnChange(e) {\n        return _this2.onChangeFunction('fromEmail', e.currentTarget.value);\n      };\n\n      var userEmailTitle = function userEmailTitle(e) {\n        return _this2.onChangeFunction('userEmailTitle', e.currentTarget.value);\n      };\n\n      var adminEmails = function adminEmails(e) {\n        return _this2.onChangeFunction('adminEmails', e.currentTarget.value);\n      };\n\n      var adminEmailTitle = function adminEmailTitle(e) {\n        return _this2.onChangeFunction('adminEmailTitle', e.currentTarget.value);\n      };\n\n      var _this$props = this.props,\n          type = _this$props.type,\n          formId = _this$props.formId;\n      var editorSubName = \"\".concat(type, \"_\").concat(formId || 'create');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"From email\"), React.createElement(FormControl, {\n        type: \"text\",\n        id: \"fromEmail\",\n        defaultValue: leadData.fromEmail,\n        onChange: fromEmailOnChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"User email title\"), React.createElement(FormControl, {\n        type: \"text\",\n        id: \"userEmailTitle\",\n        defaultValue: leadData.userEmailTitle,\n        onChange: userEmailTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"User email content\"), React.createElement(EditorCK, {\n        content: leadData.userEmailContent || '',\n        onChange: this.onEditorChange,\n        height: 500,\n        name: \"lead_user_email_\".concat(editorSubName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Admin emails\"), React.createElement(FormControl, {\n        id: \"adminEmails\",\n        type: \"text\",\n        defaultValue: leadData.adminEmails ? leadData.adminEmails.join(',') : '',\n        onChange: adminEmails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Admin email title\"), React.createElement(FormControl, {\n        type: \"text\",\n        defaultValue: leadData.adminEmailTitle,\n        id: \"adminEmailTitle\",\n        onChange: adminEmailTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Admin email content\"), React.createElement(EditorCK, {\n        content: leadData.adminEmailContent || '',\n        onChange: this.onEditorChange,\n        height: 500,\n        name: \"lead_admin_email_\".concat(editorSubName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderRedirectUrl\",\n    value: function renderRedirectUrl(leadData) {\n      var _this3 = this;\n\n      if (this.state.successAction !== 'redirect') {\n        return null;\n      }\n\n      var onChange = function onChange(e) {\n        return _this3.onChangeFunction('redirectUrl', e.currentTarget.value);\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Redirect url\"), React.createElement(FormControl, {\n        type: \"text\",\n        defaultValue: leadData.redirectUrl,\n        id: \"redirectUrl\",\n        onChange: onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderThankContent\",\n    value: function renderThankContent() {\n      var _this4 = this;\n\n      var thankContent = this.props.thankContent;\n      var successAction = this.state.successAction;\n\n      var onChange = function onChange(e) {\n        return _this4.onChangeFunction('thankContent', e.currentTarget.value);\n      };\n\n      if (successAction !== 'onPage') {\n        return null;\n      }\n\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Thank content\"), React.createElement(FormControl, {\n        id: \"thankContent\",\n        type: \"text\",\n        componentClass: \"textarea\",\n        defaultValue: thankContent,\n        onChange: onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var leadData = this.props.leadData || {};\n      var successAction = this.state.successAction;\n      return React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(LeftItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"On success\"), React.createElement(FormControl, {\n        componentClass: \"select\",\n        defaultValue: successAction,\n        onChange: this.handleSuccessActionChange,\n        id: \"successAction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"email\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"redirect\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"onPage\"))), this.renderEmailFields(leadData), this.renderRedirectUrl(leadData), this.renderThankContent()), React.createElement(Preview, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(SuccessPreview, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SuccessStep;\n}(React.Component);\n\nexport default SuccessStep;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/leads/components/step/SuccessStep.tsx"],"names":["FormControl","FormGroup","ControlLabel","LeftItem","Preview","EditorCK","React","SuccessPreview","FlexItem","SuccessStep","props","handleSuccessActionChange","element","document","getElementById","value","setState","successAction","onChange","onChangeFunction","name","onEditorChange","e","propName","editor","id","getData","leadData","state","fromEmailOnChange","currentTarget","userEmailTitle","adminEmails","adminEmailTitle","type","formId","editorSubName","fromEmail","userEmailContent","join","adminEmailContent","redirectUrl","thankContent","renderEmailFields","renderRedirectUrl","renderThankContent","Component"],"mappings":"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","sourcesContent":["import FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { LeftItem, Preview } from 'modules/common/components/step/styles';\nimport EditorCK from 'modules/common/containers/EditorCK';\nimport { ILeadData } from 'modules/leads/types';\nimport React from 'react';\nimport SuccessPreview from './preview/SuccessPreview';\nimport { FlexItem } from './style';\n\ntype Name =\n  | 'successAction'\n  | 'fromEmail'\n  | 'userEmailTitle'\n  | 'userEmailContent'\n  | 'adminEmails'\n  | 'adminEmailTitle'\n  | 'adminEmailContent'\n  | 'redirectUrl'\n  | 'thankContent';\n\ntype Props = {\n  type: string;\n  color: string;\n  theme: string;\n  thankContent?: string;\n  successAction?: string;\n  onChange: (name: Name, value: string) => void;\n  leadData?: ILeadData;\n  formId?: string;\n};\n\ntype State = {\n  successAction?: string;\n};\n\nclass SuccessStep extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const leadData = props.leadData || {};\n\n    this.state = {\n      successAction: leadData.successAction || 'onPage'\n    };\n  }\n\n  handleSuccessActionChange = () => {\n    const element = document.getElementById(\n      'successAction'\n    ) as HTMLInputElement;\n    const value = element.value;\n\n    this.setState({ successAction: value });\n    this.props.onChange('successAction', value);\n  };\n\n  onChangeFunction = (name: Name, value: string) => {\n    this.setState({ [name]: value });\n    this.props.onChange(name, value);\n  };\n\n  onEditorChange = e => {\n    let propName: Name = 'adminEmailContent';\n\n    if (e.editor.id === 'cke_1') {\n      propName = 'userEmailContent';\n    }\n    this.props.onChange(propName, e.editor.getData());\n  };\n\n  renderEmailFields(leadData: ILeadData) {\n    if (this.state.successAction !== 'email') {\n      return null;\n    }\n\n    const fromEmailOnChange = e =>\n      this.onChangeFunction(\n        'fromEmail',\n        (e.currentTarget as HTMLInputElement).value\n      );\n\n    const userEmailTitle = e =>\n      this.onChangeFunction(\n        'userEmailTitle',\n        (e.currentTarget as HTMLInputElement).value\n      );\n\n    const adminEmails = e =>\n      this.onChangeFunction(\n        'adminEmails',\n        (e.currentTarget as HTMLInputElement).value\n      );\n\n    const adminEmailTitle = e =>\n      this.onChangeFunction(\n        'adminEmailTitle',\n        (e.currentTarget as HTMLInputElement).value\n      );\n\n    const { type, formId } = this.props;\n    const editorSubName = `${type}_${formId || 'create'}`;\n\n    return (\n      <div>\n        <FormGroup>\n          <ControlLabel>From email</ControlLabel>\n          <FormControl\n            type=\"text\"\n            id=\"fromEmail\"\n            defaultValue={leadData.fromEmail}\n            onChange={fromEmailOnChange}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>User email title</ControlLabel>\n          <FormControl\n            type=\"text\"\n            id=\"userEmailTitle\"\n            defaultValue={leadData.userEmailTitle}\n            onChange={userEmailTitle}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>User email content</ControlLabel>\n          <EditorCK\n            content={leadData.userEmailContent || ''}\n            onChange={this.onEditorChange}\n            height={500}\n            name={`lead_user_email_${editorSubName}`}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Admin emails</ControlLabel>\n          <FormControl\n            id=\"adminEmails\"\n            type=\"text\"\n            defaultValue={\n              leadData.adminEmails ? leadData.adminEmails.join(',') : ''\n            }\n            onChange={adminEmails}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Admin email title</ControlLabel>\n          <FormControl\n            type=\"text\"\n            defaultValue={leadData.adminEmailTitle}\n            id=\"adminEmailTitle\"\n            onChange={adminEmailTitle}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Admin email content</ControlLabel>\n          <EditorCK\n            content={leadData.adminEmailContent || ''}\n            onChange={this.onEditorChange}\n            height={500}\n            name={`lead_admin_email_${editorSubName}`}\n          />\n        </FormGroup>\n      </div>\n    );\n  }\n\n  renderRedirectUrl(leadData) {\n    if (this.state.successAction !== 'redirect') {\n      return null;\n    }\n\n    const onChange = e =>\n      this.onChangeFunction(\n        'redirectUrl',\n        (e.currentTarget as HTMLInputElement).value\n      );\n\n    return (\n      <div>\n        <FormGroup>\n          <ControlLabel>Redirect url</ControlLabel>\n          <FormControl\n            type=\"text\"\n            defaultValue={leadData.redirectUrl}\n            id=\"redirectUrl\"\n            onChange={onChange}\n          />\n        </FormGroup>\n      </div>\n    );\n  }\n\n  renderThankContent() {\n    const { thankContent } = this.props;\n    const { successAction } = this.state;\n\n    const onChange = e =>\n      this.onChangeFunction(\n        'thankContent',\n        (e.currentTarget as HTMLInputElement).value\n      );\n\n    if (successAction !== 'onPage') {\n      return null;\n    }\n\n    return (\n      <FormGroup>\n        <ControlLabel>Thank content</ControlLabel>\n        <FormControl\n          id=\"thankContent\"\n          type=\"text\"\n          componentClass=\"textarea\"\n          defaultValue={thankContent}\n          onChange={onChange}\n        />\n      </FormGroup>\n    );\n  }\n\n  render() {\n    const leadData = this.props.leadData || {};\n    const { successAction } = this.state;\n\n    return (\n      <FlexItem>\n        <LeftItem>\n          <FormGroup>\n            <ControlLabel>On success</ControlLabel>\n            <FormControl\n              componentClass=\"select\"\n              defaultValue={successAction}\n              onChange={this.handleSuccessActionChange}\n              id=\"successAction\"\n            >\n              <option />\n              <option>email</option>\n              <option>redirect</option>\n              <option>onPage</option>\n            </FormControl>\n          </FormGroup>\n\n          {this.renderEmailFields(leadData)}\n          {this.renderRedirectUrl(leadData)}\n          {this.renderThankContent()}\n        </LeftItem>\n\n        <Preview>\n          <SuccessPreview {...this.props} />\n        </Preview>\n      </FlexItem>\n    );\n  }\n}\n\nexport default SuccessStep;\n"]},"metadata":{},"sourceType":"module"}