{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/auth/containers/ResetPassword.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { Alert, withProps } from 'modules/common/utils';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\nimport ResetPassword from '../components/ResetPassword';\nimport { mutations } from '../graphql';\n\nvar ResetPasswordContainer = function ResetPasswordContainer(props) {\n  var resetPasswordMutation = props.resetPasswordMutation,\n      history = props.history,\n      token = props.token;\n\n  var resetPassword = function resetPassword(newPassword) {\n    resetPasswordMutation({\n      variables: {\n        newPassword: newPassword,\n        token: token\n      }\n    }).then(function () {\n      history.push('/sign-in');\n    }).catch(function (error) {\n      Alert.error(error.message);\n    });\n  };\n\n  var updatedProps = _objectSpread({}, props, {\n    resetPassword: resetPassword\n  });\n\n  return React.createElement(ResetPassword, Object.assign({}, updatedProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n};\n\nexport default withProps(compose(graphql(gql(mutations.resetPassword), {\n  name: 'resetPasswordMutation'\n}))(withRouter(ResetPasswordContainer)));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/auth/containers/ResetPassword.tsx"],"names":["gql","compose","Alert","withProps","React","graphql","withRouter","ResetPassword","mutations","ResetPasswordContainer","props","resetPasswordMutation","history","token","resetPassword","newPassword","variables","then","push","catch","error","message","updatedProps","name"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,sBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAYA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAAuB;AAAA,MAC5CC,qBAD4C,GACFD,KADE,CAC5CC,qBAD4C;AAAA,MACrBC,OADqB,GACFF,KADE,CACrBE,OADqB;AAAA,MACZC,KADY,GACFH,KADE,CACZG,KADY;;AAGpD,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,WAAW,EAAI;AACnCJ,IAAAA,qBAAqB,CAAC;AACpBK,MAAAA,SAAS,EAAE;AACTD,QAAAA,WAAW,EAAXA,WADS;AAETF,QAAAA,KAAK,EAALA;AAFS;AADS,KAAD,CAArB,CAMGI,IANH,CAMQ,YAAM;AACVL,MAAAA,OAAO,CAACM,IAAR,CAAa,UAAb;AACD,KARH,EASGC,KATH,CASS,UAAAC,KAAK,EAAI;AACdlB,MAAAA,KAAK,CAACkB,KAAN,CAAYA,KAAK,CAACC,OAAlB;AACD,KAXH;AAYD,GAbD;;AAeA,MAAMC,YAAY,qBACbZ,KADa;AAEhBI,IAAAA,aAAa,EAAbA;AAFgB,IAAlB;;AAKA,SAAO,oBAAC,aAAD,oBAAmBQ,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAxBD;;AA0BA,eAAenB,SAAS,CACtBF,OAAO,CACLI,OAAO,CAILL,GAAG,CAACQ,SAAS,CAACM,aAAX,CAJE,EAIyB;AAC9BS,EAAAA,IAAI,EAAE;AADwB,CAJzB,CADF,CAAP,CAQEjB,UAAU,CAAaG,sBAAb,CARZ,CADsB,CAAxB","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { Alert, withProps } from 'modules/common/utils';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\nimport { IRouterProps } from '../../common/types';\nimport ResetPassword from '../components/ResetPassword';\nimport { mutations } from '../graphql';\nimport {\n  ResetPasswordMutationResponse,\n  ResetPasswordMutationVariables\n} from '../types';\n\ntype Props = {\n  token: string;\n};\n\nexport type FinalProps = ResetPasswordMutationResponse & Props & IRouterProps;\n\nconst ResetPasswordContainer = (props: FinalProps) => {\n  const { resetPasswordMutation, history, token } = props;\n\n  const resetPassword = newPassword => {\n    resetPasswordMutation({\n      variables: {\n        newPassword,\n        token\n      }\n    })\n      .then(() => {\n        history.push('/sign-in');\n      })\n      .catch(error => {\n        Alert.error(error.message);\n      });\n  };\n\n  const updatedProps = {\n    ...props,\n    resetPassword\n  };\n\n  return <ResetPassword {...updatedProps} />;\n};\n\nexport default withProps<Props>(\n  compose(\n    graphql<\n      Props,\n      ResetPasswordMutationResponse,\n      ResetPasswordMutationVariables\n    >(gql(mutations.resetPassword), {\n      name: 'resetPasswordMutation'\n    })\n  )(withRouter<FinalProps>(ResetPasswordContainer))\n);\n"]},"metadata":{},"sourceType":"module"}