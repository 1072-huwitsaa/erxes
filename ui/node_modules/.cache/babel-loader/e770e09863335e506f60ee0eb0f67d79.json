{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/boards/components/Pipelines.tsx\";\nimport { collectOrders } from 'modules/boards/utils';\nimport Button from 'modules/common/components/Button';\nimport EmptyContent from 'modules/common/components/empty/EmptyContent';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Table from 'modules/common/components/table';\nimport { Count, Title } from 'modules/common/styles/main';\nimport { __ } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport { EMPTY_CONTENT_DEAL_PIPELINE, EMPTY_CONTENT_TASK_PIPELINE } from 'modules/settings/constants';\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PipelineForm from '../containers/PipelineForm';\nimport PipelineRow from './PipelineRow';\n\nvar Pipelines =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Pipelines, _React$Component);\n\n  function Pipelines(props) {\n    var _this;\n\n    _classCallCheck(this, Pipelines);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pipelines).call(this, props));\n\n    _this.renderAddForm = function () {\n      var _this$props = _this.props,\n          boardId = _this$props.boardId,\n          renderButton = _this$props.renderButton,\n          type = _this$props.type,\n          options = _this$props.options;\n\n      var closeModal = function closeModal() {\n        return _this.setState({\n          showModal: false\n        });\n      };\n\n      return React.createElement(PipelineForm, {\n        options: options,\n        type: type,\n        boardId: boardId,\n        renderButton: renderButton,\n        show: _this.state.showModal,\n        closeModal: closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    };\n\n    _this.addPipeline = function () {\n      _this.setState({\n        showModal: true\n      });\n    };\n\n    _this.onChangePipelines = function (pipelines) {\n      _this.setState({\n        pipelines: pipelines\n      });\n\n      _this.props.updateOrder(collectOrders(pipelines));\n    };\n\n    _this.onTogglePopup = function () {\n      var isDragDisabled = _this.state.isDragDisabled;\n\n      _this.setState({\n        isDragDisabled: !isDragDisabled\n      });\n    };\n\n    _this.renderAdditionalButton = function () {\n      var options = _this.props.options;\n\n      if (options && options.additionalButton) {\n        return React.createElement(Link, {\n          to: options.additionalButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(Button, {\n          uppercase: false,\n          icon: \"arrow-to-right\",\n          btnStyle: \"simple\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, options.additionalButtonText));\n      }\n\n      return null;\n    };\n\n    var history = props.history;\n    var showModal = history.location.hash.includes('showPipelineModal');\n    _this.state = {\n      showModal: showModal,\n      pipelines: props.pipelines,\n      isDragDisabled: false\n    };\n    return _this;\n  }\n\n  _createClass(Pipelines, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.pipelines !== this.props.pipelines) {\n        this.setState({\n          pipelines: nextProps.pipelines\n        });\n      }\n    }\n  }, {\n    key: \"renderRows\",\n    value: function renderRows() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          renderButton = _this$props2.renderButton,\n          type = _this$props2.type,\n          options = _this$props2.options;\n      var pipelines = this.state.pipelines;\n      return pipelines.map(function (pipeline) {\n        return React.createElement(PipelineRow, {\n          key: pipeline._id,\n          pipeline: pipeline,\n          renderButton: renderButton,\n          remove: _this2.props.remove,\n          type: type,\n          options: options,\n          onTogglePopup: _this2.onTogglePopup,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$props3 = this.props,\n          pipelines = _this$props3.pipelines,\n          options = _this$props3.options,\n          type = _this$props3.type;\n      var pipelineName = options ? options.pipelineName : 'pipeline';\n\n      if (pipelines.length === 0) {\n        if (type === 'deal' || type === 'task') {\n          return React.createElement(EmptyContent, {\n            content: type === 'deal' ? EMPTY_CONTENT_DEAL_PIPELINE : EMPTY_CONTENT_TASK_PIPELINE,\n            maxItemWidth: \"420px\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(EmptyState, {\n          text: \"Get started on your \".concat(pipelineName.toLowerCase()),\n          image: \"/images/actions/16.svg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(Count, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, pipelines.length, \" \", __(pipelineName), pipelines.length > 1 && 's'), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, __(pipelineName)), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, __('Actions')))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, this.renderRows())));\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      var _this$props4 = this.props,\n          options = _this$props4.options,\n          boardId = _this$props4.boardId;\n      var pipelineName = options ? options.pipelineName : 'pipeline';\n\n      if (!boardId) {\n        return null;\n      }\n\n      return React.createElement(React.Fragment, null, this.renderAdditionalButton(), React.createElement(Button, {\n        btnStyle: \"primary\",\n        uppercase: false,\n        icon: \"plus-circle\",\n        onClick: this.addPipeline,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Add \", pipelineName));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var currentBoard = this.props.currentBoard;\n      var leftActionBar = React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, currentBoard ? currentBoard.name : '');\n      return React.createElement(\"div\", {\n        id: \"pipelines-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Wrapper.ActionBar, {\n        left: leftActionBar,\n        right: this.renderButton(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), this.renderContent(), this.renderAddForm());\n    }\n  }]);\n\n  return Pipelines;\n}(React.Component);\n\nexport default withRouter(Pipelines);","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/boards/components/Pipelines.tsx"],"names":["collectOrders","Button","EmptyContent","EmptyState","Table","Count","Title","__","Wrapper","EMPTY_CONTENT_DEAL_PIPELINE","EMPTY_CONTENT_TASK_PIPELINE","React","Link","withRouter","PipelineForm","PipelineRow","Pipelines","props","renderAddForm","boardId","renderButton","type","options","closeModal","setState","showModal","state","addPipeline","onChangePipelines","pipelines","updateOrder","onTogglePopup","isDragDisabled","renderAdditionalButton","additionalButton","additionalButtonText","history","location","hash","includes","nextProps","map","pipeline","_id","remove","pipelineName","length","toLowerCase","renderRows","currentBoard","leftActionBar","name","renderContent","Component"],"mappings":"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","sourcesContent":["import { IBoard, IPipeline } from 'modules/boards/types';\nimport { collectOrders } from 'modules/boards/utils';\nimport Button from 'modules/common/components/Button';\nimport EmptyContent from 'modules/common/components/empty/EmptyContent';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Table from 'modules/common/components/table';\nimport { Count, Title } from 'modules/common/styles/main';\nimport { IButtonMutateProps, IRouterProps } from 'modules/common/types';\nimport { __ } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport {\n  EMPTY_CONTENT_DEAL_PIPELINE,\n  EMPTY_CONTENT_TASK_PIPELINE\n} from 'modules/settings/constants';\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PipelineForm from '../containers/PipelineForm';\nimport { IOption } from '../types';\nimport PipelineRow from './PipelineRow';\n\ntype Props = {\n  type: string;\n  pipelines: IPipeline[];\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  updateOrder?: any;\n  remove: (pipelineId: string) => void;\n  boardId: string;\n  options?: IOption;\n  refetch: ({ boardId }: { boardId?: string }) => Promise<any>;\n  currentBoard?: IBoard;\n} & IRouterProps;\n\ntype State = {\n  showModal: boolean;\n  pipelines: IPipeline[];\n  isDragDisabled: boolean;\n};\n\nclass Pipelines extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const { history } = props;\n\n    const showModal = history.location.hash.includes('showPipelineModal');\n\n    this.state = {\n      showModal,\n      pipelines: props.pipelines,\n      isDragDisabled: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.pipelines !== this.props.pipelines) {\n      this.setState({ pipelines: nextProps.pipelines });\n    }\n  }\n\n  renderAddForm = () => {\n    const { boardId, renderButton, type, options } = this.props;\n\n    const closeModal = () => this.setState({ showModal: false });\n\n    return (\n      <PipelineForm\n        options={options}\n        type={type}\n        boardId={boardId}\n        renderButton={renderButton}\n        show={this.state.showModal}\n        closeModal={closeModal}\n      />\n    );\n  };\n\n  addPipeline = () => {\n    this.setState({\n      showModal: true\n    });\n  };\n\n  onChangePipelines = pipelines => {\n    this.setState({ pipelines });\n\n    this.props.updateOrder(collectOrders(pipelines));\n  };\n\n  onTogglePopup = () => {\n    const { isDragDisabled } = this.state;\n\n    this.setState({ isDragDisabled: !isDragDisabled });\n  };\n\n  renderRows() {\n    const { renderButton, type, options } = this.props;\n    const { pipelines } = this.state;\n\n    return pipelines.map(pipeline => (\n      <PipelineRow\n        key={pipeline._id}\n        pipeline={pipeline}\n        renderButton={renderButton}\n        remove={this.props.remove}\n        type={type}\n        options={options}\n        onTogglePopup={this.onTogglePopup}\n      />\n    ));\n  }\n\n  renderContent() {\n    const { pipelines, options, type } = this.props;\n    const pipelineName = options ? options.pipelineName : 'pipeline';\n\n    if (pipelines.length === 0) {\n      if (type === 'deal' || type === 'task') {\n        return (\n          <EmptyContent\n            content={\n              type === 'deal'\n                ? EMPTY_CONTENT_DEAL_PIPELINE\n                : EMPTY_CONTENT_TASK_PIPELINE\n            }\n            maxItemWidth=\"420px\"\n          />\n        );\n      }\n\n      return (\n        <EmptyState\n          text={`Get started on your ${pipelineName.toLowerCase()}`}\n          image=\"/images/actions/16.svg\"\n        />\n      );\n    }\n\n    return (\n      <>\n        <Count>\n          {pipelines.length} {__(pipelineName)}\n          {pipelines.length > 1 && 's'}\n        </Count>\n        <Table>\n          <thead>\n            <tr>\n              <th>{__(pipelineName)}</th>\n              <th>{__('Actions')}</th>\n            </tr>\n          </thead>\n          <tbody>{this.renderRows()}</tbody>\n        </Table>\n      </>\n    );\n  }\n\n  renderAdditionalButton = () => {\n    const { options } = this.props;\n\n    if (options && options.additionalButton) {\n      return (\n        <Link to={options.additionalButton}>\n          <Button uppercase={false} icon=\"arrow-to-right\" btnStyle=\"simple\">\n            {options.additionalButtonText}\n          </Button>\n        </Link>\n      );\n    }\n\n    return null;\n  };\n\n  renderButton() {\n    const { options, boardId } = this.props;\n    const pipelineName = options ? options.pipelineName : 'pipeline';\n\n    if (!boardId) {\n      return null;\n    }\n\n    return (\n      <>\n        {this.renderAdditionalButton()}\n        <Button\n          btnStyle=\"primary\"\n          uppercase={false}\n          icon=\"plus-circle\"\n          onClick={this.addPipeline}\n        >\n          Add {pipelineName}\n        </Button>\n      </>\n    );\n  }\n\n  render() {\n    const { currentBoard } = this.props;\n\n    const leftActionBar = (\n      <Title>{currentBoard ? currentBoard.name : ''}</Title>\n    );\n\n    return (\n      <div id=\"pipelines-content\">\n        <Wrapper.ActionBar left={leftActionBar} right={this.renderButton()} />\n\n        {this.renderContent()}\n        {this.renderAddForm()}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Pipelines);\n"]},"metadata":{},"sourceType":"module"}