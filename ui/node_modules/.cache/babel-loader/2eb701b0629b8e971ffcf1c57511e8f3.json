{"ast":null,"code":"import _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/general/components/EngageSettingsContent.tsx\";\nimport Button from 'modules/common/components/Button';\nimport CollapseContent from 'modules/common/components/CollapseContent';\nimport { FormControl } from 'modules/common/components/form';\nimport Form from 'modules/common/components/form/Form';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Info from 'modules/common/components/Info';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { __, Alert } from 'modules/common/utils';\nimport { Recipient, Recipients } from 'modules/engage/styles';\nimport { ContentBox } from 'modules/settings/styles';\nimport React from 'react';\nimport { Verify } from './styles';\n\nvar EngageSettingsContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EngageSettingsContent, _React$Component);\n\n  function EngageSettingsContent(props) {\n    var _this;\n\n    _classCallCheck(this, EngageSettingsContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EngageSettingsContent).call(this, props));\n\n    _this.generateDoc = function (values) {\n      return {\n        configsMap: values\n      };\n    };\n\n    _this.onChangeCommon = function (name, e) {\n      _this.setState(_defineProperty({}, name, e.currentTarget.value));\n    };\n\n    _this.onVerifyEmail = function () {\n      var emailToVerify = _this.state.emailToVerify;\n\n      if (emailToVerify) {\n        return _this.props.verifyEmail(emailToVerify);\n      }\n\n      return Alert.error('Write your email to verify!');\n    };\n\n    _this.onSendTestEmail = function () {\n      var _this$state = _this.state,\n          testFrom = _this$state.testFrom,\n          testTo = _this$state.testTo,\n          testContent = _this$state.testContent;\n\n      _this.props.sendTestEmail(testFrom || '', testTo || '', testContent || '');\n    };\n\n    _this.onRemoveVerifiedEmail = function (email) {\n      _this.props.removeVerifiedEmail(email);\n    };\n\n    _this.renderVerifiedEmails = function () {\n      var verifiedEmails = _this.props.verifiedEmails;\n\n      if (verifiedEmails.length === 0) {\n        return;\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, __('Verified emails'), \":\"), React.createElement(Recipients, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, verifiedEmails.map(function (email, index) {\n        return React.createElement(Recipient, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, email, React.createElement(\"span\", {\n          onClick: _this.onRemoveVerifiedEmail.bind(_assertThisInitialized(_this), email),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"times\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        })));\n      })));\n    };\n\n    _this.renderContent = function (formProps) {\n      var _this$props = _this.props,\n          configsMap = _this$props.configsMap,\n          renderButton = _this$props.renderButton;\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted;\n      return React.createElement(React.Fragment, null, React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, __('Amazon Simple Email Service enables you to send and receive email using a reliable and scalable email platform. Set up your custom amazon simple email service account') + '.'), React.createElement(\"a\", {\n        target: \"_blank\",\n        href: \"https://docs.erxes.io/administrator/system-config#aws-ses\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, __('Learn more about Amazon SES configuration'))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"AWS SES Access key ID\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        max: 140,\n        name: \"accessKeyId\",\n        defaultValue: configsMap.accessKeyId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"AWS SES Secret access key\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        max: 140,\n        name: \"secretAccessKey\",\n        defaultValue: configsMap.secretAccessKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"AWS SES Region\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        max: 140,\n        name: \"region\",\n        defaultValue: configsMap.region,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"AWS SES Config set\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        max: 140,\n        name: \"configSet\",\n        defaultValue: configsMap.configSet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Unverified emails limit\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        max: 140,\n        name: \"unverifiedEmailsLimit\",\n        defaultValue: configsMap.unverifiedEmailsLimit || 100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, renderButton({\n        name: 'configsMap',\n        values: _this.generateDoc(values),\n        isSubmitted: isSubmitted,\n        object: _this.props.configsMap\n      })));\n    };\n\n    var _configsMap = props.configsMap;\n    _this.state = {\n      secretAccessKey: _configsMap.secretAccessKey || '',\n      accessKeyId: _configsMap.accessKeyId || '',\n      region: _configsMap.region || '',\n      configSet: _configsMap.configSet || '',\n      emailVerificationType: _configsMap.emailVerificationType || '',\n      trueMailApiKey: _configsMap.trueMailApiKey || '',\n      telnyxApiKey: _configsMap.telnyxApiKey || '',\n      telnyxPhone: _configsMap.telnyxPhone || '',\n      telnyxProfileId: _configsMap.telnyxProfileId || ''\n    };\n    return _this;\n  }\n\n  _createClass(EngageSettingsContent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ContentBox, {\n        id: 'EngageSettingsMenu',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(CollapseContent, {\n        title: \"General settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Form, {\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), React.createElement(CollapseContent, {\n        title: __('Verify the email addresses that you send email from'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, this.renderVerifiedEmails(), React.createElement(Verify, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"shield-check\",\n        size: 36,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Email\"), React.createElement(FormControl, {\n        type: \"email\",\n        onChange: this.onChangeCommon.bind(this, 'emailToVerify'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.onVerifyEmail,\n        btnStyle: \"primary\",\n        icon: \"check-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Verify\"))), React.createElement(CollapseContent, {\n        title: __('Send your first testing email'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"From\"), React.createElement(FormControl, {\n        placeholder: \"from@email.com\",\n        onChange: this.onChangeCommon.bind(this, 'testFrom'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"To\"), React.createElement(FormControl, {\n        placeholder: \"to@email.com\",\n        onChange: this.onChangeCommon.bind(this, 'testTo'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Content\"), React.createElement(FormControl, {\n        placeholder: __('Write your content') + '...',\n        componentClass: \"textarea\",\n        onChange: this.onChangeCommon.bind(this, 'testContent'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      })), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"primary\",\n        icon: \"message\",\n        onClick: this.onSendTestEmail,\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Send test email\"))));\n    }\n  }]);\n\n  return EngageSettingsContent;\n}(React.Component);\n\nexport default EngageSettingsContent;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/general/components/EngageSettingsContent.tsx"],"names":["Button","CollapseContent","FormControl","Form","FormGroup","ControlLabel","Icon","Info","ModalFooter","__","Alert","Recipient","Recipients","ContentBox","React","Verify","EngageSettingsContent","props","generateDoc","values","configsMap","onChangeCommon","name","e","setState","currentTarget","value","onVerifyEmail","emailToVerify","state","verifyEmail","error","onSendTestEmail","testFrom","testTo","testContent","sendTestEmail","onRemoveVerifiedEmail","email","removeVerifiedEmail","renderVerifiedEmails","verifiedEmails","length","map","index","bind","renderContent","formProps","renderButton","isSubmitted","accessKeyId","secretAccessKey","region","configSet","unverifiedEmailsLimit","object","emailVerificationType","trueMailApiKey","telnyxApiKey","telnyxPhone","telnyxProfileId","Component"],"mappings":"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","sourcesContent":["import Button from 'modules/common/components/Button';\nimport CollapseContent from 'modules/common/components/CollapseContent';\nimport { FormControl } from 'modules/common/components/form';\nimport Form from 'modules/common/components/form/Form';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Info from 'modules/common/components/Info';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { IButtonMutateProps, IFormProps } from 'modules/common/types';\nimport { __, Alert } from 'modules/common/utils';\nimport { Recipient, Recipients } from 'modules/engage/styles';\nimport { ContentBox } from 'modules/settings/styles';\nimport React from 'react';\nimport { IConfigsMap } from '../types';\nimport { Verify } from './styles';\n\ntype Props = {\n  configsMap: IConfigsMap;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  verifyEmail: (email: string) => void;\n  removeVerifiedEmail: (email: string) => void;\n  sendTestEmail: (from: string, to: string, content: string) => void;\n  verifiedEmails: string[];\n};\n\ntype State = {\n  secretAccessKey?: string;\n  accessKeyId?: string;\n  region?: string;\n  emailToVerify?: string;\n  testFrom?: string;\n  testTo?: string;\n  testContent?: string;\n  configSet?: string;\n  emailVerificationType?: string;\n  trueMailApiKey?: string;\n  telnyxApiKey?: string;\n  telnyxPhone?: string;\n  telnyxProfileId?: string;\n};\n\ntype CommonFields =\n  | 'emailToVerify'\n  | 'testFrom'\n  | 'testTo'\n  | 'testContent'\n  | 'telnyxApiKey'\n  | 'telnyxPhone'\n  | 'telnyxProfileId';\n\nclass EngageSettingsContent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const { configsMap } = props;\n\n    this.state = {\n      secretAccessKey: configsMap.secretAccessKey || '',\n      accessKeyId: configsMap.accessKeyId || '',\n      region: configsMap.region || '',\n      configSet: configsMap.configSet || '',\n      emailVerificationType: configsMap.emailVerificationType || '',\n      trueMailApiKey: configsMap.trueMailApiKey || '',\n      telnyxApiKey: configsMap.telnyxApiKey || '',\n      telnyxPhone: configsMap.telnyxPhone || '',\n      telnyxProfileId: configsMap.telnyxProfileId || ''\n    };\n  }\n\n  generateDoc = values => {\n    return { configsMap: values };\n  };\n\n  onChangeCommon = (name: CommonFields, e) => {\n    this.setState({ [name]: e.currentTarget.value });\n  };\n\n  onVerifyEmail = () => {\n    const { emailToVerify } = this.state;\n\n    if (emailToVerify) {\n      return this.props.verifyEmail(emailToVerify);\n    }\n\n    return Alert.error('Write your email to verify!');\n  };\n\n  onSendTestEmail = () => {\n    const { testFrom, testTo, testContent } = this.state;\n\n    this.props.sendTestEmail(testFrom || '', testTo || '', testContent || '');\n  };\n\n  onRemoveVerifiedEmail = (email: string) => {\n    this.props.removeVerifiedEmail(email);\n  };\n\n  renderVerifiedEmails = () => {\n    const { verifiedEmails } = this.props;\n\n    if (verifiedEmails.length === 0) {\n      return;\n    }\n\n    return (\n      <>\n        <h4>{__('Verified emails')}:</h4>\n\n        <Recipients>\n          {verifiedEmails.map((email, index) => (\n            <Recipient key={index}>\n              {email}\n              <span onClick={this.onRemoveVerifiedEmail.bind(this, email)}>\n                <Icon icon=\"times\" />\n              </span>\n            </Recipient>\n          ))}\n        </Recipients>\n      </>\n    );\n  };\n\n  renderContent = (formProps: IFormProps) => {\n    const { configsMap, renderButton } = this.props;\n    const { values, isSubmitted } = formProps;\n\n    return (\n      <>\n        <Info>\n          <p>\n            {__(\n              'Amazon Simple Email Service enables you to send and receive email using a reliable and scalable email platform. Set up your custom amazon simple email service account'\n            ) + '.'}\n          </p>\n          <a\n            target=\"_blank\"\n            href=\"https://docs.erxes.io/administrator/system-config#aws-ses\"\n            rel=\"noopener noreferrer\"\n          >\n            {__('Learn more about Amazon SES configuration')}\n          </a>\n        </Info>\n        <FormGroup>\n          <ControlLabel>AWS SES Access key ID</ControlLabel>\n          <FormControl\n            {...formProps}\n            max={140}\n            name=\"accessKeyId\"\n            defaultValue={configsMap.accessKeyId}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>AWS SES Secret access key</ControlLabel>\n          <FormControl\n            {...formProps}\n            max={140}\n            name=\"secretAccessKey\"\n            defaultValue={configsMap.secretAccessKey}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>AWS SES Region</ControlLabel>\n          <FormControl\n            {...formProps}\n            max={140}\n            name=\"region\"\n            defaultValue={configsMap.region}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>AWS SES Config set</ControlLabel>\n          <FormControl\n            {...formProps}\n            max={140}\n            name=\"configSet\"\n            defaultValue={configsMap.configSet}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Unverified emails limit</ControlLabel>\n          <FormControl\n            {...formProps}\n            max={140}\n            name=\"unverifiedEmailsLimit\"\n            defaultValue={configsMap.unverifiedEmailsLimit || 100}\n          />\n        </FormGroup>\n\n        <ModalFooter>\n          {renderButton({\n            name: 'configsMap',\n            values: this.generateDoc(values),\n            isSubmitted,\n            object: this.props.configsMap\n          })}\n        </ModalFooter>\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <ContentBox id={'EngageSettingsMenu'}>\n        <CollapseContent title=\"General settings\">\n          <Form renderContent={this.renderContent} />\n        </CollapseContent>\n\n        <CollapseContent\n          title={__('Verify the email addresses that you send email from')}\n        >\n          {this.renderVerifiedEmails()}\n\n          <Verify>\n            <Icon icon=\"shield-check\" size={36} />\n            <ControlLabel required={true}>Email</ControlLabel>\n            <FormControl\n              type=\"email\"\n              onChange={this.onChangeCommon.bind(this, 'emailToVerify')}\n            />\n\n            <Button\n              onClick={this.onVerifyEmail}\n              btnStyle=\"primary\"\n              icon=\"check-circle\"\n              uppercase={false}\n            >\n              Verify\n            </Button>\n          </Verify>\n        </CollapseContent>\n        <CollapseContent title={__('Send your first testing email')}>\n          <FormGroup>\n            <ControlLabel>From</ControlLabel>\n            <FormControl\n              placeholder=\"from@email.com\"\n              onChange={this.onChangeCommon.bind(this, 'testFrom')}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <ControlLabel>To</ControlLabel>\n            <FormControl\n              placeholder=\"to@email.com\"\n              onChange={this.onChangeCommon.bind(this, 'testTo')}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <ControlLabel>Content</ControlLabel>\n            <FormControl\n              placeholder={__('Write your content') + '...'}\n              componentClass=\"textarea\"\n              onChange={this.onChangeCommon.bind(this, 'testContent')}\n            />\n          </FormGroup>\n\n          <ModalFooter>\n            <Button\n              btnStyle=\"primary\"\n              icon=\"message\"\n              onClick={this.onSendTestEmail}\n              uppercase={false}\n            >\n              Send test email\n            </Button>\n          </ModalFooter>\n        </CollapseContent>\n      </ContentBox>\n    );\n  }\n}\n\nexport default EngageSettingsContent;\n"]},"metadata":{},"sourceType":"module"}