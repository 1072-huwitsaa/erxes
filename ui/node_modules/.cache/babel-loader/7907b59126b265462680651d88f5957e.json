{"ast":null,"code":"import _toConsumableArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/forms/components/Form.tsx\";\nimport FormControl from 'modules/common/components/form/Control';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { LeftItem } from 'modules/common/components/step/styles';\nimport { __ } from 'modules/common/utils';\nimport { FlexContent } from 'modules/layout/styles';\nimport React from 'react';\nimport FormGroup from '../../common/components/form/Group';\nimport { Title } from '../styles';\nimport FieldChoices from './FieldChoices';\nimport FieldForm from './FieldForm';\nimport FieldsPreview from './FieldsPreview';\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n\n    _this.renderOptionalFields = function () {\n      if (_this.props.hideOptionalFields) {\n        return null;\n      }\n\n      var onDocChange = _this.props.onDocChange;\n      var _this$state = _this.state,\n          title = _this$state.title,\n          btnText = _this$state.btnText,\n          desc = _this$state.desc;\n\n      var onChangeField = function onChangeField(e) {\n        var name = e.target.name;\n        var value = e.currentTarget.value;\n\n        _this.setState(_defineProperty({}, name, value), function () {\n          if (onDocChange) {\n            onDocChange(_this.state);\n          }\n        });\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, __('Form title')), React.createElement(FormControl, {\n        required: true,\n        name: \"title\",\n        value: title,\n        onChange: onChangeField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, __('Form description')), React.createElement(FormControl, {\n        componentClass: \"textarea\",\n        name: \"desc\",\n        value: desc,\n        onChange: onChangeField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, __('Form button text')), React.createElement(FormControl, {\n        name: \"btnText\",\n        value: btnText,\n        onChange: onChangeField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })));\n    };\n\n    _this.onChoiceClick = function (choice) {\n      _this.setState({\n        currentMode: 'create',\n        currentField: {\n          _id: Math.random().toString(),\n          contentType: 'form',\n          type: choice\n        }\n      });\n    };\n\n    _this.onFieldClick = function (field) {\n      _this.setState({\n        currentMode: 'update',\n        currentField: field\n      });\n    };\n\n    _this.onFieldSubmit = function (field) {\n      var onDocChange = _this.props.onDocChange;\n      var _this$state2 = _this.state,\n          fields = _this$state2.fields,\n          currentMode = _this$state2.currentMode;\n      var selector = {\n        fields: fields,\n        currentField: undefined\n      };\n\n      if (currentMode === 'create') {\n        selector = {\n          fields: [].concat(_toConsumableArray(fields), [field]),\n          currentField: undefined\n        };\n      }\n\n      _this.setState(selector, function () {\n        if (onDocChange) {\n          onDocChange(_this.state);\n        }\n      });\n    };\n\n    _this.onFieldDelete = function (field) {\n      // remove field from state\n      var fields = _this.state.fields.filter(function (f) {\n        return f._id !== field._id;\n      });\n\n      _this.setState({\n        fields: fields,\n        currentField: undefined\n      });\n    };\n\n    _this.onFieldFormCancel = function () {\n      _this.setState({\n        currentField: undefined\n      });\n    };\n\n    _this.onChangeFieldsOrder = function (fields) {\n      var onDocChange = _this.props.onDocChange;\n\n      _this.setState({\n        fields: fields\n      }, function () {\n        if (onDocChange) {\n          onDocChange(_this.state);\n        }\n      });\n    };\n\n    var _props$form = props.form,\n        form = _props$form === void 0 ? {} : _props$form;\n    _this.state = {\n      fields: props.fields || [],\n      title: form.title || '',\n      desc: form.description || '',\n      btnText: form.buttonText || 'Send',\n      currentMode: undefined,\n      currentField: undefined\n    };\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          saveForm = _this$props.saveForm,\n          type = _this$props.type,\n          isReadyToSave = _this$props.isReadyToSave;\n      var _this$state3 = this.state,\n          title = _this$state3.title,\n          btnText = _this$state3.btnText,\n          desc = _this$state3.desc,\n          fields = _this$state3.fields;\n\n      if (nextProps.isReadyToSave && isReadyToSave !== nextProps.isReadyToSave) {\n        saveForm({\n          title: title,\n          desc: desc,\n          btnText: btnText,\n          fields: fields,\n          type: type\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var renderPreviewWrapper = this.props.renderPreviewWrapper;\n      var _this$state4 = this.state,\n          currentMode = _this$state4.currentMode,\n          currentField = _this$state4.currentField,\n          fields = _this$state4.fields,\n          desc = _this$state4.desc;\n\n      if (currentField) {\n        return React.createElement(FieldForm, {\n          mode: currentMode || 'create',\n          field: currentField,\n          onSubmit: this.onFieldSubmit,\n          onDelete: this.onFieldDelete,\n          onCancel: this.onFieldFormCancel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        });\n      }\n\n      var renderer = function renderer() {\n        return React.createElement(FieldsPreview, {\n          formDesc: desc,\n          fields: fields,\n          onFieldClick: _this2.onFieldClick,\n          onChangeFieldsOrder: _this2.onChangeFieldsOrder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        });\n      };\n\n      return React.createElement(FlexContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(LeftItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, this.renderOptionalFields(), React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, __('New field')), React.createElement(FieldChoices, {\n        onChoiceClick: this.onChoiceClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })), renderPreviewWrapper(renderer, fields));\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nexport default Form;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/forms/components/Form.tsx"],"names":["FormControl","ControlLabel","LeftItem","__","FlexContent","React","FormGroup","Title","FieldChoices","FieldForm","FieldsPreview","Form","props","renderOptionalFields","hideOptionalFields","onDocChange","state","title","btnText","desc","onChangeField","e","name","target","value","currentTarget","setState","onChoiceClick","choice","currentMode","currentField","_id","Math","random","toString","contentType","type","onFieldClick","field","onFieldSubmit","fields","selector","undefined","onFieldDelete","filter","f","onFieldFormCancel","onChangeFieldsOrder","form","description","buttonText","nextProps","saveForm","isReadyToSave","renderPreviewWrapper","renderer","Component"],"mappings":"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","sourcesContent":["import FormControl from 'modules/common/components/form/Control';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { LeftItem } from 'modules/common/components/step/styles';\nimport { __ } from 'modules/common/utils';\nimport { FlexContent } from 'modules/layout/styles';\nimport { IField } from 'modules/settings/properties/types';\nimport React from 'react';\nimport FormGroup from '../../common/components/form/Group';\nimport { Title } from '../styles';\nimport { IForm, IFormData } from '../types';\nimport FieldChoices from './FieldChoices';\nimport FieldForm from './FieldForm';\nimport FieldsPreview from './FieldsPreview';\n\ntype Props = {\n  fields: IField[];\n  renderPreviewWrapper: (previewRenderer, fields: IField[]) => void;\n  onDocChange?: (doc: IFormData) => void;\n  saveForm: (params: IFormData) => void;\n  isReadyToSave: boolean;\n  type: string;\n  form?: IForm;\n  hideOptionalFields?: boolean;\n};\n\ntype State = {\n  fields: IField[];\n  currentMode: 'create' | 'update' | undefined;\n  currentField?: IField;\n  title: string;\n  desc: string;\n  btnText: string;\n};\n\nclass Form extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const { form = {} as IForm } = props;\n\n    this.state = {\n      fields: props.fields || [],\n      title: form.title || '',\n      desc: form.description || '',\n      btnText: form.buttonText || 'Send',\n      currentMode: undefined,\n      currentField: undefined\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    const { saveForm, type, isReadyToSave } = this.props;\n    const { title, btnText, desc, fields } = this.state;\n\n    if (nextProps.isReadyToSave && isReadyToSave !== nextProps.isReadyToSave) {\n      saveForm({\n        title,\n        desc,\n        btnText,\n        fields,\n        type\n      });\n    }\n  }\n\n  renderOptionalFields = () => {\n    if (this.props.hideOptionalFields) {\n      return null;\n    }\n\n    const { onDocChange } = this.props;\n    const { title, btnText, desc } = this.state;\n\n    const onChangeField = e => {\n      const name: keyof State = e.target.name;\n      const value = (e.currentTarget as HTMLInputElement).value;\n\n      this.setState({ [name]: value } as any, () => {\n        if (onDocChange) {\n          onDocChange(this.state);\n        }\n      });\n    };\n\n    return (\n      <>\n        <FormGroup>\n          <ControlLabel required={true}>{__('Form title')}</ControlLabel>\n          <FormControl\n            required={true}\n            name=\"title\"\n            value={title}\n            onChange={onChangeField}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>{__('Form description')}</ControlLabel>\n          <FormControl\n            componentClass=\"textarea\"\n            name=\"desc\"\n            value={desc}\n            onChange={onChangeField}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>{__('Form button text')}</ControlLabel>\n          <FormControl\n            name=\"btnText\"\n            value={btnText}\n            onChange={onChangeField}\n          />\n        </FormGroup>\n      </>\n    );\n  };\n\n  onChoiceClick = (choice: string) => {\n    this.setState({\n      currentMode: 'create',\n      currentField: {\n        _id: Math.random().toString(),\n        contentType: 'form',\n        type: choice\n      }\n    });\n  };\n\n  onFieldClick = (field: IField) => {\n    this.setState({ currentMode: 'update', currentField: field });\n  };\n\n  onFieldSubmit = (field: IField) => {\n    const { onDocChange } = this.props;\n    const { fields, currentMode } = this.state;\n\n    let selector = { fields, currentField: undefined };\n\n    if (currentMode === 'create') {\n      selector = {\n        fields: [...fields, field],\n        currentField: undefined\n      };\n    }\n\n    this.setState(selector, () => {\n      if (onDocChange) {\n        onDocChange(this.state);\n      }\n    });\n  };\n\n  onFieldDelete = (field: IField) => {\n    // remove field from state\n    const fields = this.state.fields.filter(f => f._id !== field._id);\n\n    this.setState({ fields, currentField: undefined });\n  };\n\n  onFieldFormCancel = () => {\n    this.setState({ currentField: undefined });\n  };\n\n  onChangeFieldsOrder = fields => {\n    const { onDocChange } = this.props;\n\n    this.setState({ fields }, () => {\n      if (onDocChange) {\n        onDocChange(this.state);\n      }\n    });\n  };\n\n  render() {\n    const { renderPreviewWrapper } = this.props;\n    const { currentMode, currentField, fields, desc } = this.state;\n\n    if (currentField) {\n      return (\n        <FieldForm\n          mode={currentMode || 'create'}\n          field={currentField}\n          onSubmit={this.onFieldSubmit}\n          onDelete={this.onFieldDelete}\n          onCancel={this.onFieldFormCancel}\n        />\n      );\n    }\n\n    const renderer = () => {\n      return (\n        <FieldsPreview\n          formDesc={desc}\n          fields={fields}\n          onFieldClick={this.onFieldClick}\n          onChangeFieldsOrder={this.onChangeFieldsOrder}\n        />\n      );\n    };\n\n    return (\n      <FlexContent>\n        <LeftItem>\n          {this.renderOptionalFields()}\n\n          <Title>{__('New field')}</Title>\n\n          <FieldChoices onChoiceClick={this.onChoiceClick} />\n        </LeftItem>\n\n        {renderPreviewWrapper(renderer, fields)}\n      </FlexContent>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}