{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/leads/components/List.tsx\";\nimport Button from 'erxes-common-ui/lib/components/button';\nimport CountsByTag from 'modules/common/components/CountsByTag';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport EmptyContent from 'modules/common/components/empty/EmptyContent';\nimport FormControl from 'modules/common/components/form/Control';\nimport Pagination from 'modules/common/components/pagination/Pagination';\nimport Table from 'modules/common/components/table';\nimport { __ } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport { BarItems } from 'modules/layout/styles';\nimport { EMPTY_CONTENT_POPUPS } from 'modules/settings/constants';\nimport TaggerPopover from 'modules/tags/components/TaggerPopover';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Row from './Row';\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChange = function () {\n      var _this$props = _this.props,\n          toggleAll = _this$props.toggleAll,\n          integrations = _this$props.integrations;\n      toggleAll(integrations, 'integrations');\n    };\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"renderRow\",\n    value: function renderRow() {\n      var _this$props2 = this.props,\n          integrations = _this$props2.integrations,\n          remove = _this$props2.remove,\n          bulk = _this$props2.bulk,\n          toggleBulk = _this$props2.toggleBulk,\n          archive = _this$props2.archive,\n          queryParams = _this$props2.queryParams;\n      return integrations.map(function (integration) {\n        return React.createElement(Row, {\n          key: integration._id,\n          isChecked: bulk.includes(integration),\n          toggleBulk: toggleBulk,\n          integration: integration,\n          remove: remove,\n          archive: archive,\n          showCode: integration._id === queryParams.showInstallCode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          totalCount = _this$props3.totalCount,\n          tagsCount = _this$props3.tagsCount,\n          loading = _this$props3.loading,\n          tags = _this$props3.tags,\n          bulk = _this$props3.bulk,\n          emptyBulk = _this$props3.emptyBulk,\n          isAllSelected = _this$props3.isAllSelected,\n          integrations = _this$props3.integrations;\n      var actionBarLeft;\n\n      if (bulk.length > 0) {\n        var tagButton = React.createElement(Button, {\n          btnStyle: \"simple\",\n          size: \"small\",\n          icon: \"tag-alt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Tag\");\n        actionBarLeft = React.createElement(BarItems, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(TaggerPopover, {\n          type: \"integration\",\n          successCallback: emptyBulk,\n          targets: bulk,\n          trigger: tagButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }));\n      }\n\n      var actionBarRight = React.createElement(Link, {\n        to: \"/leads/create\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"success\",\n        size: \"small\",\n        icon: \"plus-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, __('Create Pop Ups')));\n      var actionBar = React.createElement(Wrapper.ActionBar, {\n        right: actionBarRight,\n        left: actionBarLeft,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      });\n      var sidebar = React.createElement(Wrapper.Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(CountsByTag, {\n        tags: tags,\n        manageUrl: 'tags/integration',\n        counts: tagsCount,\n        loading: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n      var content = React.createElement(Table, {\n        whiteSpace: \"nowrap\",\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        componentClass: \"checkbox\",\n        checked: isAllSelected,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, __('Name')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, __('Brand')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, __('Views')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, __('Conversion rate')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, __('Contacts gathered')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, __('Created at')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, __('Created by')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, __('Tags')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, __('Status')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, __('Actions')))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, this.renderRow()));\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          title: __('Pop Ups'),\n          breadcrumb: [{\n            title: __('Pop Ups')\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }),\n        leftSidebar: sidebar,\n        actionBar: actionBar,\n        footer: React.createElement(Pagination, {\n          count: totalCount,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }),\n        content: React.createElement(DataWithLoader, {\n          data: content,\n          loading: loading,\n          count: integrations.length,\n          emptyContent: React.createElement(EmptyContent, {\n            content: EMPTY_CONTENT_POPUPS,\n            maxItemWidth: \"360px\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nexport default List;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/leads/components/List.tsx"],"names":["Button","CountsByTag","DataWithLoader","EmptyContent","FormControl","Pagination","Table","__","Wrapper","BarItems","EMPTY_CONTENT_POPUPS","TaggerPopover","React","Link","Row","List","onChange","props","toggleAll","integrations","remove","bulk","toggleBulk","archive","queryParams","map","integration","_id","includes","showInstallCode","totalCount","tagsCount","loading","tags","emptyBulk","isAllSelected","actionBarLeft","length","tagButton","actionBarRight","actionBar","sidebar","content","renderRow","title","Component"],"mappings":"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","sourcesContent":["import Button from 'erxes-common-ui/lib/components/button';\nimport CountsByTag from 'modules/common/components/CountsByTag';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport EmptyContent from 'modules/common/components/empty/EmptyContent';\nimport FormControl from 'modules/common/components/form/Control';\nimport Pagination from 'modules/common/components/pagination/Pagination';\nimport Table from 'modules/common/components/table';\nimport { __ } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport { BarItems } from 'modules/layout/styles';\nimport { EMPTY_CONTENT_POPUPS } from 'modules/settings/constants';\nimport TaggerPopover from 'modules/tags/components/TaggerPopover';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ITag } from '../../tags/types';\nimport { ILeadIntegration } from '../types';\nimport Row from './Row';\n\ntype Props = {\n  integrations: ILeadIntegration[];\n  tags: ITag[];\n  bulk: ILeadIntegration[];\n  isAllSelected: boolean;\n  emptyBulk: () => void;\n  totalCount: number;\n  queryParams: any;\n  tagsCount: { [key: string]: number };\n  toggleBulk: (target: ILeadIntegration, toAdd: boolean) => void;\n  toggleAll: (bulk: ILeadIntegration[], name: string) => void;\n  loading: boolean;\n  remove: (integrationId: string) => void;\n  archive: (integrationId: string, status: boolean) => void;\n};\n\nclass List extends React.Component<Props, {}> {\n  onChange = () => {\n    const { toggleAll, integrations } = this.props;\n    toggleAll(integrations, 'integrations');\n  };\n\n  renderRow() {\n    const {\n      integrations,\n      remove,\n      bulk,\n      toggleBulk,\n      archive,\n      queryParams\n    } = this.props;\n\n    return integrations.map(integration => (\n      <Row\n        key={integration._id}\n        isChecked={bulk.includes(integration)}\n        toggleBulk={toggleBulk}\n        integration={integration}\n        remove={remove}\n        archive={archive}\n        showCode={integration._id === queryParams.showInstallCode}\n      />\n    ));\n  }\n\n  render() {\n    const {\n      totalCount,\n      tagsCount,\n      loading,\n      tags,\n      bulk,\n      emptyBulk,\n      isAllSelected,\n      integrations\n    } = this.props;\n\n    let actionBarLeft: React.ReactNode;\n\n    if (bulk.length > 0) {\n      const tagButton = (\n        <Button btnStyle=\"simple\" size=\"small\" icon=\"tag-alt\">\n          Tag\n        </Button>\n      );\n\n      actionBarLeft = (\n        <BarItems>\n          <TaggerPopover\n            type=\"integration\"\n            successCallback={emptyBulk}\n            targets={bulk}\n            trigger={tagButton}\n          />\n        </BarItems>\n      );\n    }\n\n    const actionBarRight = (\n      <Link to=\"/leads/create\">\n        <Button btnStyle=\"success\" size=\"small\" icon=\"plus-circle\">\n          {__('Create Pop Ups')}\n        </Button>\n      </Link>\n    );\n\n    const actionBar = (\n      <Wrapper.ActionBar right={actionBarRight} left={actionBarLeft} />\n    );\n\n    const sidebar = (\n      <Wrapper.Sidebar>\n        <CountsByTag\n          tags={tags}\n          manageUrl={'tags/integration'}\n          counts={tagsCount}\n          loading={false}\n        />\n      </Wrapper.Sidebar>\n    );\n\n    const content = (\n      <Table whiteSpace=\"nowrap\" hover={true}>\n        <thead>\n          <tr>\n            <th>\n              <FormControl\n                componentClass=\"checkbox\"\n                checked={isAllSelected}\n                onChange={this.onChange}\n              />\n            </th>\n            <th>{__('Name')}</th>\n            <th>{__('Brand')}</th>\n            <th>{__('Views')}</th>\n            <th>{__('Conversion rate')}</th>\n            <th>{__('Contacts gathered')}</th>\n            <th>{__('Created at')}</th>\n            <th>{__('Created by')}</th>\n            <th>{__('Tags')}</th>\n            <th>{__('Status')}</th>\n            <th>{__('Actions')}</th>\n          </tr>\n        </thead>\n        <tbody>{this.renderRow()}</tbody>\n      </Table>\n    );\n\n    return (\n      <Wrapper\n        header={\n          <Wrapper.Header\n            title={__('Pop Ups')}\n            breadcrumb={[{ title: __('Pop Ups') }]}\n          />\n        }\n        leftSidebar={sidebar}\n        actionBar={actionBar}\n        footer={<Pagination count={totalCount} />}\n        content={\n          <DataWithLoader\n            data={content}\n            loading={loading}\n            count={integrations.length}\n            emptyContent={\n              <EmptyContent\n                content={EMPTY_CONTENT_POPUPS}\n                maxItemWidth=\"360px\"\n              />\n            }\n          />\n        }\n      />\n    );\n  }\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}