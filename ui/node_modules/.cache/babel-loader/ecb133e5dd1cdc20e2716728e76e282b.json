{"ast":null,"code":"var _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/profile/containers/Profile.tsx\";\nimport { AppConsumer } from 'appContext';\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { Alert, withProps } from 'modules/common/utils';\nimport UserDetailForm from 'modules/settings/team/containers/UserDetailForm';\nimport { mutations, queries } from 'modules/settings/team/graphql';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport EditProfileForm from '../components/EditProfileForm';\n\nvar Profile = function Profile(props) {\n  var currentUser = props.currentUser,\n      usersEditProfile = props.usersEditProfile,\n      queryParams = props.queryParams;\n\n  var save = function save(variables, callback) {\n    usersEditProfile({\n      variables: variables\n    }).then(function () {\n      Alert.success(\"You've successfully updated this profile\");\n      callback();\n    }).catch(function (error) {\n      Alert.error(error.message);\n    });\n  };\n\n  var editForm = function editForm(_ref) {\n    var user = _ref.user,\n        closeModal = _ref.closeModal;\n    return React.createElement(EditProfileForm, {\n      currentUser: user,\n      save: save,\n      closeModal: closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(UserDetailForm, {\n    _id: currentUser._id,\n    queryParams: queryParams,\n    renderEditForm: editForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  });\n};\n\nvar WithQuery = withProps(compose(graphql(gql(mutations.usersEditProfile), {\n  name: 'usersEditProfile',\n  options: function options(_ref2) {\n    var currentUser = _ref2.currentUser;\n    return {\n      refetchQueries: [{\n        query: gql(queries.userDetail),\n        variables: {\n          _id: currentUser._id\n        }\n      }]\n    };\n  }\n}))(Profile));\n\nvar WithConsumer = function WithConsumer(props) {\n  return React.createElement(AppConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, function (_ref3) {\n    var currentUser = _ref3.currentUser;\n    return React.createElement(WithQuery, Object.assign({}, props, {\n      currentUser: currentUser || {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default WithConsumer;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/profile/containers/Profile.tsx"],"names":["AppConsumer","gql","compose","Alert","withProps","UserDetailForm","mutations","queries","React","graphql","EditProfileForm","Profile","props","currentUser","usersEditProfile","queryParams","save","variables","callback","then","success","catch","error","message","editForm","user","closeModal","_id","WithQuery","name","options","refetchQueries","query","userDetail","WithConsumer"],"mappings":";AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,sBAAjC;AACA,OAAOC,cAAP,MAA2B,iDAA3B;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,+BAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,OAAOC,eAAP,MAA4B,+BAA5B;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CACdC,KADc,EAEX;AAAA,MACKC,WADL,GACoDD,KADpD,CACKC,WADL;AAAA,MACkBC,gBADlB,GACoDF,KADpD,CACkBE,gBADlB;AAAA,MACoCC,WADpC,GACoDH,KADpD,CACoCG,WADpC;;AAGH,MAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,SAAD,EAAsBC,QAAtB,EAA+C;AAC1DJ,IAAAA,gBAAgB,CAAC;AAAEG,MAAAA,SAAS,EAATA;AAAF,KAAD,CAAhB,CACGE,IADH,CACQ,YAAM;AACVhB,MAAAA,KAAK,CAACiB,OAAN;AACAF,MAAAA,QAAQ;AACT,KAJH,EAKGG,KALH,CAKS,UAAAC,KAAK,EAAI;AACdnB,MAAAA,KAAK,CAACmB,KAAN,CAAYA,KAAK,CAACC,OAAlB;AACD,KAPH;AAQD,GATD;;AAWA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,QAASC,UAAT,QAASA,UAAT;AAAA,WACf,oBAAC,eAAD;AAAiB,MAAA,WAAW,EAAED,IAA9B;AAAoC,MAAA,IAAI,EAAET,IAA1C;AAAgD,MAAA,UAAU,EAAEU,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe;AAAA,GAAjB;;AAIA,SACE,oBAAC,cAAD;AACE,IAAA,GAAG,EAAEb,WAAW,CAACc,GADnB;AAEE,IAAA,WAAW,EAAEZ,WAFf;AAGE,IAAA,cAAc,EAAES,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD,CA3BD;;AA6BA,IAAMI,SAAS,GAAGxB,SAAS,CACzBF,OAAO,CACLO,OAAO,CAACR,GAAG,CAACK,SAAS,CAACQ,gBAAX,CAAJ,EAAkC;AACvCe,EAAAA,IAAI,EAAE,kBADiC;AAEvCC,EAAAA,OAAO,EAAE;AAAA,QAAGjB,WAAH,SAAGA,WAAH;AAAA,WAA8C;AACrDkB,MAAAA,cAAc,EAAE,CACd;AACEC,QAAAA,KAAK,EAAE/B,GAAG,CAACM,OAAO,CAAC0B,UAAT,CADZ;AAEEhB,QAAAA,SAAS,EAAE;AACTU,UAAAA,GAAG,EAAEd,WAAW,CAACc;AADR;AAFb,OADc;AADqC,KAA9C;AAAA;AAF8B,CAAlC,CADF,CAAP,CAcEhB,OAdF,CADyB,CAA3B;;AAkBA,IAAMuB,YAAY,GAAG,SAAfA,YAAe,CAACtB,KAAD,EAAkB;AACrC,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGC,WAAH,SAAGA,WAAH;AAAA,WACC,oBAAC,SAAD,oBAAeD,KAAf;AAAsB,MAAA,WAAW,EAAEC,WAAW,IAAK,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD;AAAA,GADH,CADF;AAOD,CARD;;AAUA,eAAeqB,YAAf","sourcesContent":["import { AppConsumer } from 'appContext';\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { Alert, withProps } from 'modules/common/utils';\nimport UserDetailForm from 'modules/settings/team/containers/UserDetailForm';\nimport { mutations, queries } from 'modules/settings/team/graphql';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { IUser, IUserDoc } from '../../../auth/types';\nimport EditProfileForm from '../components/EditProfileForm';\nimport { EditProfileMutationResponse } from '../types';\n\ntype Props = {\n  queryParams: any;\n};\n\nconst Profile = (\n  props: Props & EditProfileMutationResponse & { currentUser: IUser }\n) => {\n  const { currentUser, usersEditProfile, queryParams } = props;\n\n  const save = (variables: IUserDoc, callback: () => void) => {\n    usersEditProfile({ variables })\n      .then(() => {\n        Alert.success(`You've successfully updated this profile`);\n        callback();\n      })\n      .catch(error => {\n        Alert.error(error.message);\n      });\n  };\n\n  const editForm = ({ user, closeModal }) => (\n    <EditProfileForm currentUser={user} save={save} closeModal={closeModal} />\n  );\n\n  return (\n    <UserDetailForm\n      _id={currentUser._id}\n      queryParams={queryParams}\n      renderEditForm={editForm}\n    />\n  );\n};\n\nconst WithQuery = withProps<Props & { currentUser: IUser }>(\n  compose(\n    graphql(gql(mutations.usersEditProfile), {\n      name: 'usersEditProfile',\n      options: ({ currentUser }: { currentUser: IUser }) => ({\n        refetchQueries: [\n          {\n            query: gql(queries.userDetail),\n            variables: {\n              _id: currentUser._id\n            }\n          }\n        ]\n      })\n    })\n  )(Profile)\n);\n\nconst WithConsumer = (props: Props) => {\n  return (\n    <AppConsumer>\n      {({ currentUser }) => (\n        <WithQuery {...props} currentUser={currentUser || ({} as IUser)} />\n      )}\n    </AppConsumer>\n  );\n};\n\nexport default WithConsumer;\n"]},"metadata":{},"sourceType":"module"}