{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/knowledgeBase/containers/article/ArticleForm.tsx\";\nimport gql from 'graphql-tag';\nimport ButtonMutate from 'modules/common/components/ButtonMutate';\nimport { generatePaginationParams } from 'modules/common/utils/router';\nimport React from 'react';\nimport ArticleForm from '../../components/article/ArticleForm';\nimport { mutations, queries } from '../../graphql';\n\nvar ArticleContainer = function ArticleContainer(props) {\n  var article = props.article,\n      queryParams = props.queryParams,\n      topicIds = props.topicIds,\n      currentCategoryId = props.currentCategoryId;\n\n  var renderButton = function renderButton(_ref) {\n    var name = _ref.name,\n        values = _ref.values,\n        isSubmitted = _ref.isSubmitted,\n        callback = _ref.callback,\n        object = _ref.object;\n    return React.createElement(ButtonMutate, {\n      mutation: object ? mutations.knowledgeBaseArticlesEdit : mutations.knowledgeBaseArticlesAdd,\n      variables: values,\n      callback: callback,\n      refetchQueries: getRefetchQueries(queryParams, currentCategoryId, topicIds),\n      type: \"submit\",\n      uppercase: false,\n      isSubmitted: isSubmitted,\n      successMessage: \"You successfully \".concat(object ? 'updated' : 'added', \" an \").concat(name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  };\n\n  var extendedProps = _objectSpread({}, props, {\n    renderButton: renderButton,\n    article: article,\n    currentCategoryId: currentCategoryId\n  });\n\n  return React.createElement(ArticleForm, Object.assign({}, extendedProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nvar getRefetchQueries = function getRefetchQueries(queryParams, currentCategoryId, topicIds) {\n  return [{\n    query: gql(queries.knowledgeBaseArticles),\n    variables: _objectSpread({}, generatePaginationParams(queryParams), {\n      categoryIds: [currentCategoryId]\n    })\n  }, {\n    query: gql(queries.knowledgeBaseCategories),\n    variables: {\n      topicIds: [topicIds]\n    }\n  }, {\n    query: gql(queries.knowledgeBaseArticlesTotalCount),\n    variables: {\n      categoryIds: [currentCategoryId]\n    }\n  }];\n};\n\nexport default ArticleContainer;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/knowledgeBase/containers/article/ArticleForm.tsx"],"names":["gql","ButtonMutate","generatePaginationParams","React","ArticleForm","mutations","queries","ArticleContainer","props","article","queryParams","topicIds","currentCategoryId","renderButton","name","values","isSubmitted","callback","object","knowledgeBaseArticlesEdit","knowledgeBaseArticlesAdd","getRefetchQueries","extendedProps","query","knowledgeBaseArticles","variables","categoryIds","knowledgeBaseCategories","knowledgeBaseArticlesTotalCount"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AAEA,SAASC,wBAAT,QAAyC,6BAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;;AAWA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAkB;AAAA,MACjCC,OADiC,GACqBD,KADrB,CACjCC,OADiC;AAAA,MACxBC,WADwB,GACqBF,KADrB,CACxBE,WADwB;AAAA,MACXC,QADW,GACqBH,KADrB,CACXG,QADW;AAAA,MACDC,iBADC,GACqBJ,KADrB,CACDI,iBADC;;AAGzC,MAAMC,YAAY,GAAG,SAAfA,YAAe,OAMK;AAAA,QALxBC,IAKwB,QALxBA,IAKwB;AAAA,QAJxBC,MAIwB,QAJxBA,MAIwB;AAAA,QAHxBC,WAGwB,QAHxBA,WAGwB;AAAA,QAFxBC,QAEwB,QAFxBA,QAEwB;AAAA,QADxBC,MACwB,QADxBA,MACwB;AACxB,WACE,oBAAC,YAAD;AACE,MAAA,QAAQ,EACNA,MAAM,GACFb,SAAS,CAACc,yBADR,GAEFd,SAAS,CAACe,wBAJlB;AAME,MAAA,SAAS,EAAEL,MANb;AAOE,MAAA,QAAQ,EAAEE,QAPZ;AAQE,MAAA,cAAc,EAAEI,iBAAiB,CAC/BX,WAD+B,EAE/BE,iBAF+B,EAG/BD,QAH+B,CARnC;AAaE,MAAA,IAAI,EAAC,QAbP;AAcE,MAAA,SAAS,EAAE,KAdb;AAeE,MAAA,WAAW,EAAEK,WAff;AAgBE,MAAA,cAAc,6BACZE,MAAM,GAAG,SAAH,GAAe,OADT,iBAEPJ,IAFO,CAhBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAsBD,GA7BD;;AA+BA,MAAMQ,aAAa,qBACdd,KADc;AAEjBK,IAAAA,YAAY,EAAZA,YAFiB;AAGjBJ,IAAAA,OAAO,EAAPA,OAHiB;AAIjBG,IAAAA,iBAAiB,EAAjBA;AAJiB,IAAnB;;AAOA,SAAO,oBAAC,WAAD,oBAAiBU,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CA1CD;;AA4CA,IAAMD,iBAAiB,GAAG,SAApBA,iBAAoB,CACxBX,WADwB,EAExBE,iBAFwB,EAGxBD,QAHwB,EAIrB;AACH,SAAO,CACL;AACEY,IAAAA,KAAK,EAAEvB,GAAG,CAACM,OAAO,CAACkB,qBAAT,CADZ;AAEEC,IAAAA,SAAS,oBACJvB,wBAAwB,CAACQ,WAAD,CADpB;AAEPgB,MAAAA,WAAW,EAAE,CAACd,iBAAD;AAFN;AAFX,GADK,EAQL;AACEW,IAAAA,KAAK,EAAEvB,GAAG,CAACM,OAAO,CAACqB,uBAAT,CADZ;AAEEF,IAAAA,SAAS,EAAE;AAAEd,MAAAA,QAAQ,EAAE,CAACA,QAAD;AAAZ;AAFb,GARK,EAYL;AACEY,IAAAA,KAAK,EAAEvB,GAAG,CAACM,OAAO,CAACsB,+BAAT,CADZ;AAEEH,IAAAA,SAAS,EAAE;AAAEC,MAAAA,WAAW,EAAE,CAACd,iBAAD;AAAf;AAFb,GAZK,CAAP;AAiBD,CAtBD;;AAwBA,eAAeL,gBAAf","sourcesContent":["import gql from 'graphql-tag';\nimport ButtonMutate from 'modules/common/components/ButtonMutate';\nimport { IButtonMutateProps } from 'modules/common/types';\nimport { generatePaginationParams } from 'modules/common/utils/router';\nimport React from 'react';\nimport ArticleForm from '../../components/article/ArticleForm';\nimport { mutations, queries } from '../../graphql';\nimport { IArticle } from '../../types';\n\ntype Props = {\n  article: IArticle;\n  currentCategoryId: string;\n  queryParams: any;\n  topicIds: string[];\n  closeModal: () => void;\n};\n\nconst ArticleContainer = (props: Props) => {\n  const { article, queryParams, topicIds, currentCategoryId } = props;\n\n  const renderButton = ({\n    name,\n    values,\n    isSubmitted,\n    callback,\n    object\n  }: IButtonMutateProps) => {\n    return (\n      <ButtonMutate\n        mutation={\n          object\n            ? mutations.knowledgeBaseArticlesEdit\n            : mutations.knowledgeBaseArticlesAdd\n        }\n        variables={values}\n        callback={callback}\n        refetchQueries={getRefetchQueries(\n          queryParams,\n          currentCategoryId,\n          topicIds\n        )}\n        type=\"submit\"\n        uppercase={false}\n        isSubmitted={isSubmitted}\n        successMessage={`You successfully ${\n          object ? 'updated' : 'added'\n        } an ${name}`}\n      />\n    );\n  };\n\n  const extendedProps = {\n    ...props,\n    renderButton,\n    article,\n    currentCategoryId\n  };\n\n  return <ArticleForm {...extendedProps} />;\n};\n\nconst getRefetchQueries = (\n  queryParams,\n  currentCategoryId: string,\n  topicIds: string[]\n) => {\n  return [\n    {\n      query: gql(queries.knowledgeBaseArticles),\n      variables: {\n        ...generatePaginationParams(queryParams),\n        categoryIds: [currentCategoryId]\n      }\n    },\n    {\n      query: gql(queries.knowledgeBaseCategories),\n      variables: { topicIds: [topicIds] }\n    },\n    {\n      query: gql(queries.knowledgeBaseArticlesTotalCount),\n      variables: { categoryIds: [currentCategoryId] }\n    }\n  ];\n};\n\nexport default ArticleContainer;\n"]},"metadata":{},"sourceType":"module"}