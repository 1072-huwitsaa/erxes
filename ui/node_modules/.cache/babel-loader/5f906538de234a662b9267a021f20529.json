{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/components/EmailForm.tsx\";\nimport ErrorMsg from 'modules/common/components/ErrorMsg';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport HelpPopover from 'modules/common/components/HelpPopover';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { FlexItem, FlexPad } from 'modules/common/components/step/styles';\nimport Tip from 'modules/common/components/Tip';\nimport Uploader from 'modules/common/components/Uploader';\nimport EditorCK from 'modules/common/containers/EditorCK';\nimport { __ } from 'modules/common/utils';\nimport { EditorContainer, VerifyCancel, VerifyCheck, VerifyStatus } from 'modules/engage/styles';\nimport React from 'react';\nimport Select from 'react-select-plus';\nimport { generateEmailTemplateParams } from '../utils';\nimport Scheduler from './Scheduler';\n\nvar EmailForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EmailForm, _React$Component);\n\n  function EmailForm(props) {\n    var _this;\n\n    _classCallCheck(this, EmailForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EmailForm).call(this, props));\n\n    _this.changeContent = function (key, value) {\n      var email = _objectSpread({}, _this.state.email);\n\n      email[key] = value;\n\n      _this.setState({\n        email: email\n      });\n\n      _this.props.onChange('email', email);\n    };\n\n    _this.changeUser = function (fromUserId) {\n      _this.setState({\n        fromUserId: fromUserId\n      });\n\n      _this.props.onChange('fromUserId', fromUserId);\n    };\n\n    _this.templateChange = function (value) {\n      var email = _objectSpread({}, _this.state.email);\n\n      email.templateId = value;\n\n      _this.setState({\n        content: _this.findTemplate(value),\n        email: email\n      }, function () {\n        _this.props.onChange('email', _this.state.email);\n      });\n    };\n\n    _this.findTemplate = function (id) {\n      var template = _this.props.templates.find(function (t) {\n        return t._id === id;\n      });\n\n      if (template) {\n        return template.content;\n      }\n\n      return '';\n    };\n\n    _this.onEditorChange = function (e) {\n      _this.props.onChange('content', e.editor.getData());\n    };\n\n    _this.state = {\n      fromUserId: props.fromUserId,\n      content: props.content,\n      email: props.email,\n      scheduleDate: props.scheduleDate\n    };\n    return _this;\n  }\n\n  _createClass(EmailForm, [{\n    key: \"renderScheduler\",\n    value: function renderScheduler() {\n      if (this.props.kind === 'manual') {\n        return null;\n      }\n\n      return React.createElement(Scheduler, {\n        scheduleDate: this.state.scheduleDate || {},\n        onChange: this.props.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderFrom\",\n    value: function renderFrom() {\n      var _this2 = this;\n\n      var error = this.props.error;\n\n      if (error) {\n        return React.createElement(ErrorMsg, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, error);\n      }\n\n      var onChangeUser = function onChangeUser(value) {\n        var userId = value ? value.value : '';\n\n        _this2.changeUser(userId);\n      };\n\n      var selectOptions = function selectOptions() {\n        var _this2$props = _this2.props,\n            users = _this2$props.users,\n            verifiedEmails = _this2$props.verifiedEmails;\n        var options = [];\n        users.map(function (user) {\n          return options.push({\n            value: user._id,\n            label: user.email || user.username,\n            disabled: !verifiedEmails.includes(user.email)\n          });\n        });\n        return options;\n      };\n\n      var optionRenderer = function optionRenderer(option) {\n        return React.createElement(VerifyStatus, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, !option.disabled ? React.createElement(Tip, {\n          placement: \"auto\",\n          text: \"Email verified\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(VerifyCheck, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"check-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }))) : React.createElement(Tip, {\n          placement: \"auto\",\n          text: \"Email not verified\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(VerifyCancel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"times-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }))), option.label);\n      };\n\n      return React.createElement(Select, {\n        placeholder: __('Choose users'),\n        value: this.state.fromUserId,\n        onChange: onChangeUser,\n        optionRenderer: optionRenderer,\n        options: selectOptions(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var attachments = this.state.email.attachments;\n\n      var onChangeSubject = function onChangeSubject(e) {\n        return _this3.changeContent('subject', e.target.value);\n      };\n\n      var onChangeReplyTo = function onChangeReplyTo(e) {\n        return _this3.changeContent('replyTo', e.target.value);\n      };\n\n      var onChangeSender = function onChangeSender(e) {\n        return _this3.changeContent('sender', e.target.value);\n      };\n\n      var onChangeAttachment = function onChangeAttachment(attachmentsArr) {\n        return _this3.changeContent('attachments', attachmentsArr);\n      };\n\n      var onChangeTemplate = function onChangeTemplate(e) {\n        _this3.templateChange(e.value);\n      };\n\n      return React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(FlexPad, {\n        direction: \"column\",\n        overflow: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"From:\", React.createElement(HelpPopover, {\n        title: \"The email address is not verified (x) by Amazon Ses services.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"If you want to verify your email:\", React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Log in to your AWS Management Console\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Click on the Services menu from the dropdown menu\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Click on the Simple Email Services menu from the left sidebar\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Click on the Email Addresses menu from the left sidebar\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Finally, click on the button that named \\\"Verify a new email address\\\"\"))))), this.renderFrom()), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Sender:\"), React.createElement(FormControl, {\n        onChange: onChangeSender,\n        defaultValue: this.state.email.sender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Reply to:\"), React.createElement(HelpPopover, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Emails must be space separated\"), React.createElement(FormControl, {\n        onChange: onChangeReplyTo,\n        defaultValue: this.state.email.replyTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Email subject:\"), React.createElement(FormControl, {\n        onChange: onChangeSubject,\n        defaultValue: this.state.email.subject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Email template:\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, __('Insert email template to content')), React.createElement(Select, {\n        onChange: onChangeTemplate,\n        value: this.state.email.templateId,\n        options: generateEmailTemplateParams(this.props.templates),\n        clearable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Attachments: \"), React.createElement(Uploader, {\n        defaultFileList: attachments || [],\n        onChange: onChangeAttachment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      })), this.renderScheduler()), React.createElement(FlexItem, {\n        overflow: \"auto\",\n        count: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(EditorContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Content:\"), React.createElement(EditorCK, {\n        content: this.state.content,\n        onChange: this.onEditorChange,\n        height: 500,\n        name: \"engage_email_\".concat(this.props.kind, \"_\").concat(this.props.fromUserId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return EmailForm;\n}(React.Component);\n\nexport default EmailForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/components/EmailForm.tsx"],"names":["ErrorMsg","FormControl","FormGroup","ControlLabel","HelpPopover","Icon","FlexItem","FlexPad","Tip","Uploader","EditorCK","__","EditorContainer","VerifyCancel","VerifyCheck","VerifyStatus","React","Select","generateEmailTemplateParams","Scheduler","EmailForm","props","changeContent","key","value","email","state","setState","onChange","changeUser","fromUserId","templateChange","templateId","content","findTemplate","id","template","templates","find","t","_id","onEditorChange","e","editor","getData","scheduleDate","kind","error","onChangeUser","userId","selectOptions","users","verifiedEmails","options","map","user","push","label","username","disabled","includes","optionRenderer","option","attachments","onChangeSubject","target","onChangeReplyTo","onChangeSender","onChangeAttachment","attachmentsArr","onChangeTemplate","renderFrom","sender","replyTo","subject","renderScheduler","Component"],"mappings":"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","sourcesContent":["import ErrorMsg from 'modules/common/components/ErrorMsg';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport HelpPopover from 'modules/common/components/HelpPopover';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { FlexItem, FlexPad } from 'modules/common/components/step/styles';\nimport Tip from 'modules/common/components/Tip';\nimport Uploader from 'modules/common/components/Uploader';\nimport EditorCK from 'modules/common/containers/EditorCK';\nimport { ISelectedOption } from 'modules/common/types';\nimport { __ } from 'modules/common/utils';\nimport {\n  EditorContainer,\n  VerifyCancel,\n  VerifyCheck,\n  VerifyStatus\n} from 'modules/engage/styles';\nimport React from 'react';\nimport Select from 'react-select-plus';\nimport { IEmailFormProps, IEngageEmail, IEngageScheduleDate } from '../types';\nimport { generateEmailTemplateParams } from '../utils';\nimport Scheduler from './Scheduler';\n\ntype Props = IEmailFormProps & { verifiedEmails: string[]; error?: string };\n\ntype State = {\n  fromUserId: string;\n  content: string;\n  email: IEngageEmail;\n  scheduleDate?: IEngageScheduleDate;\n};\n\nclass EmailForm extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      fromUserId: props.fromUserId,\n      content: props.content,\n      email: props.email,\n      scheduleDate: props.scheduleDate\n    };\n  }\n\n  changeContent = (key, value) => {\n    const email = { ...this.state.email } as IEngageEmail;\n\n    email[key] = value;\n\n    this.setState({ email });\n\n    this.props.onChange('email', email);\n  };\n\n  changeUser = (fromUserId: string) => {\n    this.setState({ fromUserId });\n    this.props.onChange('fromUserId', fromUserId);\n  };\n\n  templateChange = value => {\n    const email = { ...this.state.email } as IEngageEmail;\n\n    email.templateId = value;\n\n    this.setState({ content: this.findTemplate(value), email }, () => {\n      this.props.onChange('email', this.state.email);\n    });\n  };\n\n  findTemplate = id => {\n    const template = this.props.templates.find(t => t._id === id);\n\n    if (template) {\n      return template.content;\n    }\n\n    return '';\n  };\n\n  renderScheduler() {\n    if (this.props.kind === 'manual') {\n      return null;\n    }\n\n    return (\n      <Scheduler\n        scheduleDate={this.state.scheduleDate || ({} as IEngageScheduleDate)}\n        onChange={this.props.onChange}\n      />\n    );\n  }\n\n  onEditorChange = e => {\n    this.props.onChange('content', e.editor.getData());\n  };\n\n  renderFrom() {\n    const { error } = this.props;\n\n    if (error) {\n      return <ErrorMsg>{error}</ErrorMsg>;\n    }\n\n    const onChangeUser = (value: ISelectedOption) => {\n      const userId = value ? value.value : '';\n\n      this.changeUser(userId);\n    };\n\n    const selectOptions = () => {\n      const { users, verifiedEmails } = this.props;\n      const options: any[] = [];\n\n      users.map(user =>\n        options.push({\n          value: user._id,\n          label: user.email || user.username,\n          disabled: !verifiedEmails.includes(user.email)\n        })\n      );\n\n      return options;\n    };\n\n    const optionRenderer = option => (\n      <VerifyStatus>\n        {!option.disabled ? (\n          <Tip placement=\"auto\" text=\"Email verified\">\n            <VerifyCheck>\n              <Icon icon=\"check-circle\" />\n            </VerifyCheck>\n          </Tip>\n        ) : (\n          <Tip placement=\"auto\" text=\"Email not verified\">\n            <VerifyCancel>\n              <Icon icon=\"times-circle\" />\n            </VerifyCancel>\n          </Tip>\n        )}\n        {option.label}\n      </VerifyStatus>\n    );\n\n    return (\n      <Select\n        placeholder={__('Choose users')}\n        value={this.state.fromUserId}\n        onChange={onChangeUser}\n        optionRenderer={optionRenderer}\n        options={selectOptions()}\n      />\n    );\n  }\n\n  render() {\n    const { attachments } = this.state.email;\n\n    const onChangeSubject = e =>\n      this.changeContent('subject', (e.target as HTMLInputElement).value);\n\n    const onChangeReplyTo = e =>\n      this.changeContent('replyTo', (e.target as HTMLInputElement).value);\n\n    const onChangeSender = e =>\n      this.changeContent('sender', (e.target as HTMLInputElement).value);\n\n    const onChangeAttachment = attachmentsArr =>\n      this.changeContent('attachments', attachmentsArr);\n\n    const onChangeTemplate = e => {\n      this.templateChange(e.value);\n    };\n\n    return (\n      <FlexItem>\n        <FlexPad direction=\"column\" overflow=\"auto\">\n          <FormGroup>\n            <ControlLabel>\n              From:\n              <HelpPopover title=\"The email address is not verified (x) by Amazon Ses services.\">\n                <div>\n                  If you want to verify your email:\n                  <ol>\n                    <li>Log in to your AWS Management Console</li>\n                    <li>Click on the Services menu from the dropdown menu</li>\n                    <li>\n                      Click on the Simple Email Services menu from the left\n                      sidebar\n                    </li>\n                    <li>\n                      Click on the Email Addresses menu from the left sidebar\n                    </li>\n                    <li>\n                      Finally, click on the button that named \"Verify a new\n                      email address\"\n                    </li>\n                  </ol>\n                </div>\n              </HelpPopover>\n            </ControlLabel>\n            {this.renderFrom()}\n          </FormGroup>\n\n          <FormGroup>\n            <ControlLabel>Sender:</ControlLabel>\n            <FormControl\n              onChange={onChangeSender}\n              defaultValue={this.state.email.sender}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <ControlLabel>Reply to:</ControlLabel>\n            <HelpPopover>Emails must be space separated</HelpPopover>\n            <FormControl\n              onChange={onChangeReplyTo}\n              defaultValue={this.state.email.replyTo}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <ControlLabel>Email subject:</ControlLabel>\n            <FormControl\n              onChange={onChangeSubject}\n              defaultValue={this.state.email.subject}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <ControlLabel>Email template:</ControlLabel>\n            <p>{__('Insert email template to content')}</p>\n\n            <Select\n              onChange={onChangeTemplate}\n              value={this.state.email.templateId}\n              options={generateEmailTemplateParams(this.props.templates)}\n              clearable={false}\n            />\n          </FormGroup>\n          <FormGroup>\n            <ControlLabel>Attachments: </ControlLabel>\n            <Uploader\n              defaultFileList={attachments || []}\n              onChange={onChangeAttachment}\n            />\n          </FormGroup>\n\n          {this.renderScheduler()}\n        </FlexPad>\n\n        <FlexItem overflow=\"auto\" count=\"2\">\n          <EditorContainer>\n            <ControlLabel>Content:</ControlLabel>\n            <EditorCK\n              content={this.state.content}\n              onChange={this.onEditorChange}\n              height={500}\n              name={`engage_email_${this.props.kind}_${this.props.fromUserId}`}\n            />\n          </EditorContainer>\n        </FlexItem>\n      </FlexItem>\n    );\n  }\n}\n\nexport default EmailForm;\n"]},"metadata":{},"sourceType":"module"}