{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/growthHacks/components/editForm/Left.tsx\";\nimport ActivityInputs from 'modules/activityLogs/components/ActivityInputs';\nimport ActivityLogs from 'modules/activityLogs/containers/ActivityLogs';\nimport Labels from 'modules/boards/components/label/Labels';\nimport { TitleRow } from 'modules/boards/styles/item';\nimport Checklists from 'modules/checklists/containers/Checklists';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Uploader from 'modules/common/components/Uploader';\nimport { __, extractAttachment } from 'modules/common/utils';\nimport SelectTeamMembers from 'modules/settings/team/containers/SelectTeamMembers';\nimport React from 'react';\nimport Votes from './Votes';\n\nvar Left =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Left, _React$Component);\n\n  function Left() {\n    _classCallCheck(this, Left);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Left).apply(this, arguments));\n  }\n\n  _createClass(Left, [{\n    key: \"renderVoters\",\n    value: function renderVoters() {\n      var item = this.props.item;\n\n      if (item.voteCount === 0) {\n        return null;\n      }\n\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(TitleRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"thumbs-up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), \"Votes\")), React.createElement(Votes, {\n        count: item.voteCount || 0,\n        users: item.votedUsers || [],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          item = _this$props.item,\n          saveItem = _this$props.saveItem,\n          type = _this$props.type,\n          addItem = _this$props.addItem;\n\n      var onDescriptionBlur = function onDescriptionBlur(e) {\n        var value = e.target.value;\n\n        if (item.description !== value) {\n          saveItem({\n            description: value\n          });\n        }\n      };\n\n      var onUserChange = function onUserChange(usrs) {\n        return saveItem({\n          assignedUserIds: usrs\n        });\n      };\n\n      var assignedUserIds = item.assignedUsers.map(function (user) {\n        return user._id;\n      });\n\n      var onAttachmentChange = function onAttachmentChange(files) {\n        return saveItem({\n          attachments: files\n        });\n      };\n\n      var attachments = item.attachments && extractAttachment(item.attachments) || [];\n      return React.createElement(React.Fragment, null, this.renderVoters(), item.labels.length > 0 && React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(TitleRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"label-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), __('Labels'))), React.createElement(Labels, {\n        labels: item.labels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(TitleRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"user-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), \"Assign to\")), React.createElement(SelectTeamMembers, {\n        label: \"Choose users\",\n        name: \"assignedUserIds\",\n        value: assignedUserIds,\n        onSelect: onUserChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(TitleRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"align-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), \"Description\")), React.createElement(FormControl, {\n        componentClass: \"textarea\",\n        name: \"description\",\n        defaultValue: item.description,\n        onBlur: onDescriptionBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(Checklists, {\n        contentType: type,\n        contentTypeId: item._id,\n        stageId: item.stageId,\n        addItem: addItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(TitleRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"paperclip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), \"Attachments\")), React.createElement(Uploader, {\n        defaultFileList: attachments,\n        onChange: onAttachmentChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(ActivityInputs, {\n        contentTypeId: item._id,\n        contentType: type,\n        showEmail: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(ActivityLogs, {\n        target: item.name,\n        contentId: item._id,\n        contentType: type,\n        extraTabs: [],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Left;\n}(React.Component);\n\nexport default Left;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/growthHacks/components/editForm/Left.tsx"],"names":["ActivityInputs","ActivityLogs","Labels","TitleRow","Checklists","FormControl","FormGroup","ControlLabel","Icon","Uploader","__","extractAttachment","SelectTeamMembers","React","Votes","Left","item","props","voteCount","votedUsers","saveItem","type","addItem","onDescriptionBlur","e","value","target","description","onUserChange","usrs","assignedUserIds","assignedUsers","map","user","_id","onAttachmentChange","files","attachments","renderVoters","labels","length","stageId","name","Component"],"mappings":"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","sourcesContent":["import ActivityInputs from 'modules/activityLogs/components/ActivityInputs';\nimport ActivityLogs from 'modules/activityLogs/containers/ActivityLogs';\nimport Labels from 'modules/boards/components/label/Labels';\nimport { TitleRow } from 'modules/boards/styles/item';\nimport { IOptions } from 'modules/boards/types';\nimport Checklists from 'modules/checklists/containers/Checklists';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Uploader from 'modules/common/components/Uploader';\nimport { IAttachment } from 'modules/common/types';\nimport { __, extractAttachment } from 'modules/common/utils';\nimport { IGrowthHack, IGrowthHackParams } from 'modules/growthHacks/types';\nimport SelectTeamMembers from 'modules/settings/team/containers/SelectTeamMembers';\nimport React from 'react';\nimport Votes from './Votes';\n\ntype Props = {\n  item: IGrowthHack;\n  saveItem: (doc: { [key: string]: any }) => void;\n  addItem: (doc: IGrowthHackParams, callback: () => void) => void;\n  type: string;\n  options: IOptions;\n};\n\nclass Left extends React.Component<Props> {\n  renderVoters() {\n    const { item } = this.props;\n\n    if (item.voteCount === 0) {\n      return null;\n    }\n\n    return (\n      <FormGroup>\n        <TitleRow>\n          <ControlLabel>\n            <Icon icon=\"thumbs-up\" />\n            Votes\n          </ControlLabel>\n        </TitleRow>\n        <Votes count={item.voteCount || 0} users={item.votedUsers || []} />\n      </FormGroup>\n    );\n  }\n\n  render() {\n    const { item, saveItem, type, addItem } = this.props;\n\n    const onDescriptionBlur = e => {\n      const value = e.target.value;\n\n      if (item.description !== value) {\n        saveItem({ description: value });\n      }\n    };\n\n    const onUserChange = usrs => saveItem({ assignedUserIds: usrs });\n    const assignedUserIds = item.assignedUsers.map(user => user._id);\n\n    const onAttachmentChange = (files: IAttachment[]) =>\n      saveItem({ attachments: files });\n    const attachments =\n      (item.attachments && extractAttachment(item.attachments)) || [];\n\n    return (\n      <>\n        {this.renderVoters()}\n\n        {item.labels.length > 0 && (\n          <FormGroup>\n            <TitleRow>\n              <ControlLabel>\n                <Icon icon=\"label-alt\" />\n                {__('Labels')}\n              </ControlLabel>\n            </TitleRow>\n\n            <Labels labels={item.labels} />\n          </FormGroup>\n        )}\n\n        <FormGroup>\n          <TitleRow>\n            <ControlLabel>\n              <Icon icon=\"user-check\" />\n              Assign to\n            </ControlLabel>\n          </TitleRow>\n          <SelectTeamMembers\n            label=\"Choose users\"\n            name=\"assignedUserIds\"\n            value={assignedUserIds}\n            onSelect={onUserChange}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <TitleRow>\n            <ControlLabel>\n              <Icon icon=\"align-left\" />\n              Description\n            </ControlLabel>\n          </TitleRow>\n\n          <FormControl\n            componentClass=\"textarea\"\n            name=\"description\"\n            defaultValue={item.description}\n            onBlur={onDescriptionBlur}\n          />\n        </FormGroup>\n\n        <Checklists\n          contentType={type}\n          contentTypeId={item._id}\n          stageId={item.stageId}\n          addItem={addItem}\n        />\n\n        <FormGroup>\n          <TitleRow>\n            <ControlLabel>\n              <Icon icon=\"paperclip\" />\n              Attachments\n            </ControlLabel>\n          </TitleRow>\n\n          <Uploader\n            defaultFileList={attachments}\n            onChange={onAttachmentChange}\n          />\n        </FormGroup>\n\n        <ActivityInputs\n          contentTypeId={item._id}\n          contentType={type}\n          showEmail={false}\n        />\n\n        <ActivityLogs\n          target={item.name}\n          contentId={item._id}\n          contentType={type}\n          extraTabs={[]}\n        />\n      </>\n    );\n  }\n}\n\nexport default Left;\n"]},"metadata":{},"sourceType":"module"}