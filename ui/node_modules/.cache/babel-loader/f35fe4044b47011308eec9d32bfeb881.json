{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/growthHacks/components/GrowthHackMainActionBar.tsx\";\nimport MainActionBar from 'modules/boards/components/MainActionBar';\nimport { ButtonGroup } from 'modules/boards/styles/header';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Tip from 'modules/common/components/Tip';\nimport { __, router } from 'modules/common/utils';\nimport queryString from 'query-string';\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Select from 'react-select-plus';\nimport { HACKSTAGES } from '../constants';\nimport options from '../options';\nvar FILTER_PARAMS = ['sortField', 'sortDirection', 'search', 'assignedUserIds', 'closeDateType', 'hackStage', 'priority', 'userIds'];\n\nvar GrowthHackMainActionBar = function GrowthHackMainActionBar(props) {\n  var currentUrl = window.location.href; // get selected type from URL\n\n  var getCurrentType = function getCurrentType() {\n    if (currentUrl.includes('board')) {\n      return 'board';\n    } else if (currentUrl.includes('weightedScore')) {\n      return 'weightedScore';\n    } else if (currentUrl.includes('priorityMatrix')) {\n      return 'priorityMatrix';\n    }\n\n    return 'funnelImpact';\n  };\n\n  var getActiveClass = function getActiveClass(currentTab) {\n    if (window.location.href.includes(currentTab)) {\n      return 'active';\n    }\n\n    return '';\n  };\n\n  var isFiltered = function isFiltered() {\n    var location = props.history.location;\n    var params = queryString.parse(location.search);\n\n    for (var param in params) {\n      if (FILTER_PARAMS.includes(param)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var viewChooser = function viewChooser() {\n    var onFilterClick = function onFilterClick(type) {\n      var currentBoard = props.currentBoard,\n          currentPipeline = props.currentPipeline;\n\n      if (currentBoard && currentPipeline) {\n        return \"/growthHack/\".concat(type, \"?id=\").concat(currentBoard._id, \"&pipelineId=\").concat(currentPipeline._id);\n      }\n\n      return \"/growthHack/\".concat(type);\n    };\n\n    return React.createElement(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Tip, {\n      text: __('Board'),\n      placement: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: onFilterClick('board'),\n      className: getActiveClass('board'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: \"window-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))), React.createElement(Tip, {\n      text: __('Weighted scoring'),\n      placement: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: onFilterClick('weightedScore'),\n      className: getActiveClass('weightedScore'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: \"web-section-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))), React.createElement(Tip, {\n      text: __('Priority matrix'),\n      placement: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: onFilterClick('priorityMatrix'),\n      className: getActiveClass('priorityMatrix'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: \"th\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }))), React.createElement(Tip, {\n      text: __('Funnel Impact'),\n      placement: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: onFilterClick('funnelImpact'),\n      className: getActiveClass('funnelImpact'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: \"window-maximize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))));\n  };\n\n  var onChangeSort = function onChangeSort(value) {\n    var field = '';\n    var direction = '';\n\n    if (value) {\n      var _values = value.value.split(',');\n\n      field = _values[0];\n      direction = _values[1];\n      router.setParams(props.history, {\n        sortField: field,\n        sortDirection: direction\n      });\n    } else {\n      router.removeParams(props.history, 'sortField', 'sortDirection');\n    }\n  };\n\n  var onChangeHackStage = function onChangeHackStage(ops) {\n    props.onSelect(ops.map(function (option) {\n      return option.value;\n    }), 'hackStage');\n  };\n\n  var _ref = props.currentPipeline || {\n    hackScoringType: 'ice'\n  },\n      hackScoringType = _ref.hackScoringType;\n\n  var effort = hackScoringType === 'rice' ? 'effort' : 'ease';\n  var sortOptions = [{\n    value: 'impact,1',\n    label: 'Low impact'\n  }, {\n    value: 'impact,-1',\n    label: 'High impact'\n  }, {\n    value: 'ease,1',\n    label: \"Low \".concat(effort)\n  }, {\n    value: 'ease,-1',\n    label: \"High \".concat(effort)\n  }];\n  var _props$queryParams = props.queryParams,\n      sortField = _props$queryParams.sortField,\n      sortDirection = _props$queryParams.sortDirection;\n  var growthHackFilter = React.createElement(React.Fragment, null, React.createElement(Select, {\n    placeholder: \"Choose a growth funnel\",\n    value: props.queryParams.hackStage || [],\n    options: HACKSTAGES.map(function (hs) {\n      return {\n        value: hs,\n        label: hs\n      };\n    }),\n    name: \"hackStage\",\n    onChange: onChangeHackStage,\n    multi: true,\n    loadingPlaceholder: __('Loading...'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }));\n  var extraFilter = React.createElement(React.Fragment, null, growthHackFilter, React.createElement(Select, {\n    value: \"\".concat(sortField, \",\").concat(sortDirection),\n    placeholder: \"Sort\",\n    onChange: onChangeSort,\n    options: sortOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }));\n\n  var extendedProps = _objectSpread({}, props, {\n    options: options,\n    boardText: 'Campaign',\n    pipelineText: 'Project',\n    isFiltered: isFiltered,\n    extraFilter: currentUrl.includes('board') ? growthHackFilter : extraFilter,\n    link: \"/growthHack/\".concat(getCurrentType()),\n    rightContent: viewChooser\n  });\n\n  return React.createElement(MainActionBar, Object.assign({}, extendedProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }));\n};\n\nexport default withRouter(GrowthHackMainActionBar);","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/growthHacks/components/GrowthHackMainActionBar.tsx"],"names":["MainActionBar","ButtonGroup","Icon","Tip","__","router","queryString","React","Link","withRouter","Select","HACKSTAGES","options","FILTER_PARAMS","GrowthHackMainActionBar","props","currentUrl","window","location","href","getCurrentType","includes","getActiveClass","currentTab","isFiltered","history","params","parse","search","param","viewChooser","onFilterClick","type","currentBoard","currentPipeline","_id","onChangeSort","value","field","direction","values","split","setParams","sortField","sortDirection","removeParams","onChangeHackStage","ops","onSelect","map","option","hackScoringType","effort","sortOptions","label","queryParams","growthHackFilter","hackStage","hs","extraFilter","extendedProps","boardText","pipelineText","link","rightContent"],"mappings":"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","sourcesContent":["import MainActionBar from 'modules/boards/components/MainActionBar';\nimport { ButtonGroup } from 'modules/boards/styles/header';\nimport { IBoard, IPipeline } from 'modules/boards/types';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Tip from 'modules/common/components/Tip';\nimport { IOption, IRouterProps } from 'modules/common/types';\nimport { __, router } from 'modules/common/utils';\nimport queryString from 'query-string';\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Select from 'react-select-plus';\nimport { HACKSTAGES } from '../constants';\nimport options from '../options';\n\ninterface IProps extends IRouterProps {\n  onSearch: (search: string) => void;\n  onSelect: (values: string[] | string, name: string) => void;\n  onDateFilterSelect: (name: string, value: string) => void;\n  onClear: (name: string, values) => void;\n  isFiltered: () => boolean;\n  clearFilter: () => void;\n  currentBoard?: IBoard;\n  currentPipeline?: IPipeline;\n  boards: IBoard[];\n  middleContent?: () => React.ReactNode;\n  history: any;\n  queryParams: any;\n  assignedUserIds?: string[];\n  type: string;\n}\n\nconst FILTER_PARAMS = [\n  'sortField',\n  'sortDirection',\n  'search',\n  'assignedUserIds',\n  'closeDateType',\n  'hackStage',\n  'priority',\n  'userIds'\n];\n\nconst GrowthHackMainActionBar = (props: IProps) => {\n  const currentUrl = window.location.href;\n\n  // get selected type from URL\n  const getCurrentType = () => {\n    if (currentUrl.includes('board')) {\n      return 'board';\n    } else if (currentUrl.includes('weightedScore')) {\n      return 'weightedScore';\n    } else if (currentUrl.includes('priorityMatrix')) {\n      return 'priorityMatrix';\n    }\n\n    return 'funnelImpact';\n  };\n\n  const getActiveClass = (currentTab: string) => {\n    if (window.location.href.includes(currentTab)) {\n      return 'active';\n    }\n\n    return '';\n  };\n\n  const isFiltered = (): boolean => {\n    const { location } = props.history;\n    const params = queryString.parse(location.search);\n\n    for (const param in params) {\n      if (FILTER_PARAMS.includes(param)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const viewChooser = () => {\n    const onFilterClick = (type: string) => {\n      const { currentBoard, currentPipeline } = props;\n\n      if (currentBoard && currentPipeline) {\n        return `/growthHack/${type}?id=${currentBoard._id}&pipelineId=${currentPipeline._id}`;\n      }\n\n      return `/growthHack/${type}`;\n    };\n\n    return (\n      <ButtonGroup>\n        <Tip text={__('Board')} placement=\"bottom\">\n          <Link to={onFilterClick('board')} className={getActiveClass('board')}>\n            <Icon icon=\"window-section\" />\n          </Link>\n        </Tip>\n        <Tip text={__('Weighted scoring')} placement=\"bottom\">\n          <Link\n            to={onFilterClick('weightedScore')}\n            className={getActiveClass('weightedScore')}\n          >\n            <Icon icon=\"web-section-alt\" />\n          </Link>\n        </Tip>\n        <Tip text={__('Priority matrix')} placement=\"bottom\">\n          <Link\n            to={onFilterClick('priorityMatrix')}\n            className={getActiveClass('priorityMatrix')}\n          >\n            <Icon icon=\"th\" />\n          </Link>\n        </Tip>\n        <Tip text={__('Funnel Impact')} placement=\"bottom\">\n          <Link\n            to={onFilterClick('funnelImpact')}\n            className={getActiveClass('funnelImpact')}\n          >\n            <Icon icon=\"window-maximize\" />\n          </Link>\n        </Tip>\n      </ButtonGroup>\n    );\n  };\n\n  const onChangeSort = value => {\n    let field: string = '';\n    let direction: string = '';\n\n    if (value) {\n      const values = value.value.split(',');\n\n      field = values[0];\n      direction = values[1];\n\n      router.setParams(props.history, {\n        sortField: field,\n        sortDirection: direction\n      });\n    } else {\n      router.removeParams(props.history, 'sortField', 'sortDirection');\n    }\n  };\n\n  const onChangeHackStage = (ops: IOption[]) => {\n    props.onSelect(\n      ops.map(option => option.value),\n      'hackStage'\n    );\n  };\n\n  const { hackScoringType } = props.currentPipeline || {\n    hackScoringType: 'ice'\n  };\n\n  const effort = hackScoringType === 'rice' ? 'effort' : 'ease';\n\n  const sortOptions = [\n    { value: 'impact,1', label: 'Low impact' },\n    { value: 'impact,-1', label: 'High impact' },\n    { value: 'ease,1', label: `Low ${effort}` },\n    { value: 'ease,-1', label: `High ${effort}` }\n  ];\n\n  const { sortField, sortDirection } = props.queryParams;\n\n  const growthHackFilter = (\n    <>\n      <Select\n        placeholder=\"Choose a growth funnel\"\n        value={props.queryParams.hackStage || []}\n        options={HACKSTAGES.map(hs => ({ value: hs, label: hs }))}\n        name=\"hackStage\"\n        onChange={onChangeHackStage}\n        multi={true}\n        loadingPlaceholder={__('Loading...')}\n      />\n    </>\n  );\n\n  const extraFilter = (\n    <>\n      {growthHackFilter}\n      <Select\n        value={`${sortField},${sortDirection}`}\n        placeholder=\"Sort\"\n        onChange={onChangeSort}\n        options={sortOptions}\n      />\n    </>\n  );\n\n  const extendedProps = {\n    ...props,\n    options,\n    boardText: 'Campaign',\n    pipelineText: 'Project',\n    isFiltered,\n    extraFilter: currentUrl.includes('board') ? growthHackFilter : extraFilter,\n    link: `/growthHack/${getCurrentType()}`,\n    rightContent: viewChooser\n  };\n\n  return <MainActionBar {...extendedProps} />;\n};\n\nexport default withRouter<IProps>(GrowthHackMainActionBar);\n"]},"metadata":{},"sourceType":"module"}