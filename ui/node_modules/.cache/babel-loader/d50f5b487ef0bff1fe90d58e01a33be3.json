{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/telnyx/TelnyxForm.tsx\";\nimport Button from 'erxes-common-ui/lib/components/button';\nimport FormControl from 'modules/common/components/form/Control';\nimport Form from 'modules/common/components/form/Form';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { INTEGRATION_KINDS } from '../../constants';\nimport SelectBrand from '../../containers/SelectBrand';\nimport SelectChannels from '../../containers/SelectChannels';\n\nvar TelnyxForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TelnyxForm, _React$Component);\n\n  function TelnyxForm(props) {\n    var _this;\n\n    _classCallCheck(this, TelnyxForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TelnyxForm).call(this, props));\n\n    _this.onChangeChannel = function (values) {\n      _this.setState({\n        channelIds: values\n      });\n    };\n\n    _this.generateDoc = function (values) {\n      return {\n        name: values.name,\n        brandId: values.brandId,\n        kind: INTEGRATION_KINDS.TELNYX,\n        channelIds: _this.state.channelIds,\n        data: {\n          telnyxProfileId: values.telnyxProfileId,\n          telnyxPhoneNumber: values.telnyxPhoneNumber\n        }\n      };\n    };\n\n    _this.renderContent = function (formProps) {\n      var _this$props = _this.props,\n          renderButton = _this$props.renderButton,\n          closeModal = _this$props.closeModal;\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted;\n      return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Name\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"name\",\n        required: true,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Telnyx messaging profile id\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        type: \"text\",\n        name: \"telnyxProfileId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Telnyx phone number\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        type: \"text\",\n        name: \"telnyxPhoneNumber\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }))), React.createElement(SelectBrand, {\n        isRequired: true,\n        formProps: formProps,\n        description: __('Which specific Brand does this integration belong to?'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(SelectChannels, {\n        defaultValue: _this.state.channelIds,\n        isRequired: true,\n        onChange: _this.onChangeChannel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        type: \"button\",\n        onClick: closeModal,\n        icon: \"times-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Cancel\"), renderButton({\n        name: 'integration',\n        values: _this.generateDoc(values),\n        isSubmitted: isSubmitted,\n        callback: closeModal\n      })));\n    };\n\n    _this.state = {\n      channelIds: []\n    };\n    return _this;\n  }\n\n  _createClass(TelnyxForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TelnyxForm;\n}(React.Component);\n\nexport default TelnyxForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/telnyx/TelnyxForm.tsx"],"names":["Button","FormControl","Form","FormGroup","ControlLabel","ModalFooter","__","React","INTEGRATION_KINDS","SelectBrand","SelectChannels","TelnyxForm","props","onChangeChannel","values","setState","channelIds","generateDoc","name","brandId","kind","TELNYX","state","data","telnyxProfileId","telnyxPhoneNumber","renderContent","formProps","renderButton","closeModal","isSubmitted","callback","Component"],"mappings":"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","sourcesContent":["import Button from 'erxes-common-ui/lib/components/button';\nimport FormControl from 'modules/common/components/form/Control';\nimport Form from 'modules/common/components/form/Form';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { IButtonMutateProps, IFormProps } from 'modules/common/types';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { INTEGRATION_KINDS } from '../../constants';\nimport SelectBrand from '../../containers/SelectBrand';\nimport SelectChannels from '../../containers/SelectChannels';\n\ntype Props = {\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  closeModal: () => void;\n};\n\ntype State = {\n  channelIds: string[];\n};\n\nclass TelnyxForm extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      channelIds: []\n    };\n  }\n\n  onChangeChannel = (values: string[]) => {\n    this.setState({ channelIds: values });\n  };\n\n  generateDoc = (values: {\n    name: string;\n    brandId: string;\n    telnyxProfileId: string;\n    telnyxPhoneNumber: string;\n  }) => {\n    return {\n      name: values.name,\n      brandId: values.brandId,\n      kind: INTEGRATION_KINDS.TELNYX,\n      channelIds: this.state.channelIds,\n      data: {\n        telnyxProfileId: values.telnyxProfileId,\n        telnyxPhoneNumber: values.telnyxPhoneNumber\n      }\n    };\n  };\n\n  renderContent = (formProps: IFormProps) => {\n    const { renderButton, closeModal } = this.props;\n    const { values, isSubmitted } = formProps;\n\n    return (\n      <>\n        <FormGroup>\n          <ControlLabel required={true}>Name</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"name\"\n            required={true}\n            autoFocus={true}\n          />\n        </FormGroup>\n        <FormGroup>\n          <ControlLabel>Telnyx messaging profile id</ControlLabel>\n          <FormControl {...formProps} type=\"text\" name=\"telnyxProfileId\" />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel required={true}>Telnyx phone number</ControlLabel>\n          <FormControl\n            {...formProps}\n            type=\"text\"\n            name=\"telnyxPhoneNumber\"\n            required={true}\n          />\n        </FormGroup>\n\n        <SelectBrand\n          isRequired={true}\n          formProps={formProps}\n          description={__(\n            'Which specific Brand does this integration belong to?'\n          )}\n        />\n        <SelectChannels\n          defaultValue={this.state.channelIds}\n          isRequired={true}\n          onChange={this.onChangeChannel}\n        />\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            type=\"button\"\n            onClick={closeModal}\n            icon=\"times-circle\"\n            uppercase={false}\n          >\n            Cancel\n          </Button>\n          {renderButton({\n            name: 'integration',\n            values: this.generateDoc(values),\n            isSubmitted,\n            callback: closeModal\n          })}\n        </ModalFooter>\n      </>\n    );\n  };\n\n  render() {\n    return <Form renderContent={this.renderContent} />;\n  }\n}\n\nexport default TelnyxForm;\n"]},"metadata":{},"sourceType":"module"}