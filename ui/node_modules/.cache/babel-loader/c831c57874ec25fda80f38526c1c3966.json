{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/notifications/components/NotificationList.tsx\";\nimport Button from 'modules/common/components/Button';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport FormControl from 'modules/common/components/form/Control';\nimport Pagination from 'modules/common/components/pagination/Pagination';\nimport { __, Alert, router } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport NotificationRow from './NotificationRow';\nimport { NotifList } from './styles';\n\nvar NotificationList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NotificationList, _React$Component);\n\n  function NotificationList(props) {\n    var _this;\n\n    _classCallCheck(this, NotificationList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NotificationList).call(this, props));\n\n    _this.markAllRead = function (isPageRead) {\n      if (!isPageRead) {\n        return _this.props.markAsRead();\n      }\n\n      var unreadNotifications = [];\n\n      _this.props.notifications.forEach(function (notification) {\n        if (!notification.isRead) {\n          unreadNotifications.push(notification._id);\n        }\n      });\n\n      if (unreadNotifications.length === 0) {\n        Alert.success('This page has no notification');\n        return;\n      }\n\n      _this.props.markAsRead(unreadNotifications);\n    };\n\n    _this.filterByUnread = function () {\n      var filterByUnread = _this.state.filterByUnread;\n\n      _this.setState({\n        filterByUnread: !filterByUnread\n      }, function () {\n        router.setParams(_this.props.history, {\n          requireRead: filterByUnread\n        });\n      });\n    };\n\n    _this.state = {\n      filterByUnread: true\n    };\n    return _this;\n  }\n\n  _createClass(NotificationList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          notifications = _this$props.notifications,\n          count = _this$props.count,\n          markAsRead = _this$props.markAsRead,\n          loading = _this$props.loading;\n      var content = React.createElement(NotifList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, notifications.map(function (notif, key) {\n        return React.createElement(NotificationRow, {\n          notification: notif,\n          key: key,\n          markAsRead: markAsRead,\n          isList: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      }));\n      var actionBarLeft = React.createElement(FormControl, {\n        id: \"isFilter\",\n        componentClass: \"checkbox\",\n        onClick: this.filterByUnread,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, __('Show unread'));\n      var actionBarRight = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"primary\",\n        size: \"small\",\n        onClick: this.markAllRead.bind(this, true),\n        icon: \"window-maximize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Mark Page Read\"), React.createElement(Button, {\n        btnStyle: \"success\",\n        size: \"small\",\n        onClick: this.markAllRead.bind(this, false),\n        icon: \"eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Mark All Read\"));\n      var actionBar = React.createElement(Wrapper.ActionBar, {\n        left: actionBarLeft,\n        right: actionBarRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      });\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          title: __('Notifications'),\n          breadcrumb: [{\n            title: __('Notifications')\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }),\n        actionBar: actionBar,\n        content: React.createElement(DataWithLoader, {\n          data: content,\n          loading: loading,\n          count: count,\n          emptyText: \"Looks like you are all caught up!\",\n          emptyImage: \"/images/actions/17.svg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }),\n        center: true,\n        footer: React.createElement(Pagination, {\n          count: count,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return NotificationList;\n}(React.Component);\n\nexport default withRouter(NotificationList);","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/notifications/components/NotificationList.tsx"],"names":["Button","DataWithLoader","FormControl","Pagination","__","Alert","router","Wrapper","React","withRouter","NotificationRow","NotifList","NotificationList","props","markAllRead","isPageRead","markAsRead","unreadNotifications","notifications","forEach","notification","isRead","push","_id","length","success","filterByUnread","state","setState","setParams","history","requireRead","count","loading","content","map","notif","key","actionBarLeft","actionBarRight","bind","actionBar","title","Component"],"mappings":"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","sourcesContent":["import Button from 'modules/common/components/Button';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport FormControl from 'modules/common/components/form/Control';\nimport Pagination from 'modules/common/components/pagination/Pagination';\nimport { __, Alert, router } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport { INotification } from 'modules/notifications/types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { IRouterProps } from '../../common/types';\nimport NotificationRow from './NotificationRow';\nimport { NotifList } from './styles';\n\ntype Props = {\n  notifications: INotification[];\n  markAsRead: (notificationIds?: string[]) => void;\n  loading: boolean;\n  count: number;\n} & IRouterProps;\n\ntype State = {\n  filterByUnread: boolean;\n};\n\nclass NotificationList extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = { filterByUnread: true };\n  }\n\n  markAllRead = isPageRead => {\n    if (!isPageRead) {\n      return this.props.markAsRead();\n    }\n\n    const unreadNotifications: string[] = [];\n\n    this.props.notifications.forEach(notification => {\n      if (!notification.isRead) {\n        unreadNotifications.push(notification._id);\n      }\n    });\n\n    if (unreadNotifications.length === 0) {\n      Alert.success('This page has no notification');\n      return;\n    }\n\n    this.props.markAsRead(unreadNotifications);\n  };\n\n  filterByUnread = () => {\n    const { filterByUnread } = this.state;\n\n    this.setState({ filterByUnread: !filterByUnread }, () => {\n      router.setParams(this.props.history, { requireRead: filterByUnread });\n    });\n  };\n\n  render() {\n    const { notifications, count, markAsRead, loading } = this.props;\n\n    const content = (\n      <NotifList>\n        {notifications.map((notif, key) => (\n          <NotificationRow\n            notification={notif}\n            key={key}\n            markAsRead={markAsRead}\n            isList={true}\n          />\n        ))}\n      </NotifList>\n    );\n\n    const actionBarLeft = (\n      <FormControl\n        id=\"isFilter\"\n        componentClass=\"checkbox\"\n        onClick={this.filterByUnread}\n      >\n        {__('Show unread')}\n      </FormControl>\n    );\n\n    const actionBarRight = (\n      <div>\n        <Button\n          btnStyle=\"primary\"\n          size=\"small\"\n          onClick={this.markAllRead.bind(this, true)}\n          icon=\"window-maximize\"\n        >\n          Mark Page Read\n        </Button>\n        <Button\n          btnStyle=\"success\"\n          size=\"small\"\n          onClick={this.markAllRead.bind(this, false)}\n          icon=\"eye\"\n        >\n          Mark All Read\n        </Button>\n      </div>\n    );\n\n    const actionBar = (\n      <Wrapper.ActionBar left={actionBarLeft} right={actionBarRight} />\n    );\n\n    return (\n      <Wrapper\n        header={\n          <Wrapper.Header\n            title={__('Notifications')}\n            breadcrumb={[{ title: __('Notifications') }]}\n          />\n        }\n        actionBar={actionBar}\n        content={\n          <DataWithLoader\n            data={content}\n            loading={loading}\n            count={count}\n            emptyText=\"Looks like you are all caught up!\"\n            emptyImage=\"/images/actions/17.svg\"\n          />\n        }\n        center={true}\n        footer={<Pagination count={count} />}\n      />\n    );\n  }\n}\n\nexport default withRouter<Props>(NotificationList);\n"]},"metadata":{},"sourceType":"module"}