{"ast":null,"code":"import _slicedToArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/emailDelivery/components/EmailDelivery.tsx\";\nimport dayjs from 'dayjs';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport { FormControl } from 'modules/common/components/form';\nimport Label from 'modules/common/components/Label';\nimport Pagination from 'modules/common/components/pagination/Pagination';\nimport Table from 'modules/common/components/table';\nimport { DateWrapper, Title } from 'modules/common/styles/main';\nimport { __, router } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport { BarItems } from 'modules/layout/styles';\nimport * as React from 'react';\nimport Select from 'react-select-plus';\nimport { EMAIL_TYPES } from '../containers/EmailDelivery';\nvar breadcrumb = [{\n  title: 'Settings',\n  link: '/settings'\n}, {\n  title: __('Email deliveries')\n}];\nvar emailTypeOptions = [{\n  value: 'transaction',\n  label: __('Transaction')\n}, {\n  value: 'engage',\n  label: __('SES Engage')\n}];\nvar tableHeaders = {\n  transaction: ['Subject', 'To', 'Cc', 'Bcc', 'From', 'Status', 'Created at'],\n  engage: ['Customer id', 'Title', 'Status', 'Created at']\n};\n\nfunction EmailDelivery(_ref) {\n  var emailType = _ref.emailType,\n      loading = _ref.loading,\n      count = _ref.count,\n      _ref$list = _ref.list,\n      list = _ref$list === void 0 ? [] : _ref$list,\n      handleSelectEmailType = _ref.handleSelectEmailType,\n      searchValue = _ref.searchValue,\n      history = _ref.history;\n\n  var _React$useState = React.useState(searchValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      search = _React$useState2[0],\n      setSearch = _React$useState2[1];\n\n  var handleSearch = function handleSearch(e) {\n    var value = e.target.value;\n    setSearch(value);\n    router.removeParams(history, 'page');\n    router.setParams(history, {\n      searchValue: value\n    });\n  };\n\n  var handleEmailtype = function handleEmailtype(_ref2) {\n    var value = _ref2.value;\n    setSearch('');\n    return handleSelectEmailType(value);\n  };\n\n  function renderItems() {\n    if (!emailType) {\n      return null;\n    }\n\n    if (emailType === EMAIL_TYPES.TRANSACTION) {\n      return list.map(function (item) {\n        return React.createElement(\"tr\", {\n          key: item._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, item.subject || '-'), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, item.to || '-'), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, item.cc || '-'), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, item.bcc || '-'), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, item.from || '-'), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(Label, {\n          lblStyle: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, item.status || '-')), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(DateWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, dayjs(item.createdAt).format('LLL') || '-')));\n      });\n    }\n\n    return list.map(function (item) {\n      return React.createElement(\"tr\", {\n        key: item._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, item.customerId || '-'), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, item.engage ? item.engage.title : '-'), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Label, {\n        lblStyle: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, item.status || '-')), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(DateWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, item.createdAt ? dayjs(item.createdAt).format('LLL') : '-')));\n    });\n  }\n\n  function renderContent() {\n    return React.createElement(Table, {\n      whiteSpace: \"wrap\",\n      hover: true,\n      bordered: true,\n      condensed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, (tableHeaders[emailType] || []).map(function (item, idx) {\n      return React.createElement(\"th\", {\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, __(item));\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, renderItems()));\n  }\n\n  function renderActionBar() {\n    var content = React.createElement(BarItems, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, emailType === EMAIL_TYPES.TRANSACTION ? React.createElement(FormControl, {\n      type: \"text\",\n      placeholder: __('Type to search'),\n      onChange: handleSearch,\n      value: search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }) : null, React.createElement(Select, {\n      placeholder: __('Choose Email type'),\n      value: emailType,\n      options: emailTypeOptions,\n      onChange: handleEmailtype,\n      resetValue: [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }));\n    return React.createElement(Wrapper.ActionBar, {\n      left: React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, __('Email Deliveries')),\n      right: content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Wrapper, {\n    header: React.createElement(Wrapper.Header, {\n      title: __('Email Deliveries'),\n      breadcrumb: breadcrumb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }),\n    actionBar: renderActionBar(),\n    footer: React.createElement(Pagination, {\n      count: count,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }),\n    content: React.createElement(DataWithLoader, {\n      data: renderContent(),\n      loading: loading,\n      count: count,\n      emptyText: __('There are no logs'),\n      emptyImage: \"/images/actions/21.svg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  });\n}\n\nexport default EmailDelivery;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/emailDelivery/components/EmailDelivery.tsx"],"names":["dayjs","DataWithLoader","FormControl","Label","Pagination","Table","DateWrapper","Title","__","router","Wrapper","BarItems","React","Select","EMAIL_TYPES","breadcrumb","title","link","emailTypeOptions","value","label","tableHeaders","transaction","engage","EmailDelivery","emailType","loading","count","list","handleSelectEmailType","searchValue","history","useState","search","setSearch","handleSearch","e","target","removeParams","setParams","handleEmailtype","renderItems","TRANSACTION","map","item","_id","subject","to","cc","bcc","from","status","createdAt","format","customerId","renderContent","idx","renderActionBar","content"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,UAAP,MAAuB,iDAAvB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,4BAAnC;AACA,SAASC,EAAT,EAAaC,MAAb,QAA2B,sBAA3B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAYA,IAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,IAAI,EAAE;AAA3B,CADiB,EAEjB;AAAED,EAAAA,KAAK,EAAER,EAAE,CAAC,kBAAD;AAAX,CAFiB,CAAnB;AAKA,IAAMU,gBAAgB,GAAG,CACvB;AAAEC,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,KAAK,EAAEZ,EAAE,CAAC,aAAD;AAAjC,CADuB,EAEvB;AAAEW,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAEZ,EAAE,CAAC,YAAD;AAA5B,CAFuB,CAAzB;AAKA,IAAMa,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,CAAC,SAAD,EAAY,IAAZ,EAAkB,IAAlB,EAAwB,KAAxB,EAA+B,MAA/B,EAAuC,QAAvC,EAAiD,YAAjD,CADM;AAEnBC,EAAAA,MAAM,EAAE,CAAC,aAAD,EAAgB,OAAhB,EAAyB,QAAzB,EAAmC,YAAnC;AAFW,CAArB;;AAKA,SAASC,aAAT,OAQU;AAAA,MAPRC,SAOQ,QAPRA,SAOQ;AAAA,MANRC,OAMQ,QANRA,OAMQ;AAAA,MALRC,KAKQ,QALRA,KAKQ;AAAA,uBAJRC,IAIQ;AAAA,MAJRA,IAIQ,0BAJD,EAIC;AAAA,MAHRC,qBAGQ,QAHRA,qBAGQ;AAAA,MAFRC,WAEQ,QAFRA,WAEQ;AAAA,MADRC,OACQ,QADRA,OACQ;;AAAA,wBACoBnB,KAAK,CAACoB,QAAN,CAAeF,WAAf,CADpB;AAAA;AAAA,MACDG,MADC;AAAA,MACOC,SADP;;AAGR,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AACxB,QAAMjB,KAAK,GAAGiB,CAAC,CAACC,MAAF,CAASlB,KAAvB;AAEAe,IAAAA,SAAS,CAACf,KAAD,CAAT;AAEAV,IAAAA,MAAM,CAAC6B,YAAP,CAAoBP,OAApB,EAA6B,MAA7B;AACAtB,IAAAA,MAAM,CAAC8B,SAAP,CAAiBR,OAAjB,EAA0B;AAAED,MAAAA,WAAW,EAAEX;AAAf,KAA1B;AACD,GAPD;;AASA,MAAMqB,eAAe,GAAG,SAAlBA,eAAkB,QAAkC;AAAA,QAA/BrB,KAA+B,SAA/BA,KAA+B;AACxDe,IAAAA,SAAS,CAAC,EAAD,CAAT;AACA,WAAOL,qBAAqB,CAACV,KAAD,CAA5B;AACD,GAHD;;AAKA,WAASsB,WAAT,GAAuB;AACrB,QAAI,CAAChB,SAAL,EAAgB;AACd,aAAO,IAAP;AACD;;AAED,QAAIA,SAAS,KAAKX,WAAW,CAAC4B,WAA9B,EAA2C;AACzC,aAAOd,IAAI,CAACe,GAAL,CAAS,UAAAC,IAAI;AAAA,eAClB;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,IAAI,CAACE,OAAL,IAAgB,GAArB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,IAAI,CAACG,EAAL,IAAW,GAAhB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,IAAI,CAACI,EAAL,IAAW,GAAhB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKJ,IAAI,CAACK,GAAL,IAAY,GAAjB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKL,IAAI,CAACM,IAAL,IAAa,GAAlB,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAO,UAAA,QAAQ,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BN,IAAI,CAACO,MAAL,IAAe,GAA1C,CADF,CANF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGnD,KAAK,CAAC4C,IAAI,CAACQ,SAAN,CAAL,CAAsBC,MAAtB,CAA6B,KAA7B,KAAuC,GAD1C,CADF,CATF,CADkB;AAAA,OAAb,CAAP;AAiBD;;AAED,WAAOzB,IAAI,CAACe,GAAL,CAAS,UAAAC,IAAI;AAAA,aAClB;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAI,CAACU,UAAL,IAAmB,GAAxB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKV,IAAI,CAACrB,MAAL,GAAcqB,IAAI,CAACrB,MAAL,CAAYP,KAA1B,GAAkC,GAAvC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B4B,IAAI,CAACO,MAAL,IAAe,GAA1C,CADF,CAHF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,IAAI,CAACQ,SAAL,GAAiBpD,KAAK,CAAC4C,IAAI,CAACQ,SAAN,CAAL,CAAsBC,MAAtB,CAA6B,KAA7B,CAAjB,GAAuD,GAD1D,CADF,CANF,CADkB;AAAA,KAAb,CAAP;AAcD;;AAED,WAASE,aAAT,GAAyB;AACvB,WACE,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAC,MAAlB;AAAyB,MAAA,KAAK,EAAE,IAAhC;AAAsC,MAAA,QAAQ,EAAE,IAAhD;AAAsD,MAAA,SAAS,EAAE,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAClC,YAAY,CAACI,SAAD,CAAZ,IAA2B,EAA5B,EAAgCkB,GAAhC,CAAoC,UAACC,IAAD,EAAOY,GAAP;AAAA,aACnC;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAehD,EAAE,CAACoC,IAAD,CAAjB,CADmC;AAAA,KAApC,CADH,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQH,WAAW,EAAnB,CARF,CADF;AAYD;;AAED,WAASgB,eAAT,GAA2B;AACzB,QAAMC,OAAO,GACX,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjC,SAAS,KAAKX,WAAW,CAAC4B,WAA1B,GACC,oBAAC,WAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAElC,EAAE,CAAC,gBAAD,CAFjB;AAGE,MAAA,QAAQ,EAAE2B,YAHZ;AAIE,MAAA,KAAK,EAAEF,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAOG,IARN,EAUE,oBAAC,MAAD;AACE,MAAA,WAAW,EAAEzB,EAAE,CAAC,mBAAD,CADjB;AAEE,MAAA,KAAK,EAAEiB,SAFT;AAGE,MAAA,OAAO,EAAEP,gBAHX;AAIE,MAAA,QAAQ,EAAEsB,eAJZ;AAKE,MAAA,UAAU,EAAE,EALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAqBA,WACE,oBAAC,OAAD,CAAS,SAAT;AACE,MAAA,IAAI,EAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQhC,EAAE,CAAC,kBAAD,CAAV,CADR;AAEE,MAAA,KAAK,EAAEkD,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAED,SACE,oBAAC,OAAD;AACE,IAAA,MAAM,EACJ,oBAAC,OAAD,CAAS,MAAT;AACE,MAAA,KAAK,EAAElD,EAAE,CAAC,kBAAD,CADX;AAEE,MAAA,UAAU,EAAEO,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAOE,IAAA,SAAS,EAAE0C,eAAe,EAP5B;AAQE,IAAA,MAAM,EAAE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE9B,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARV;AASE,IAAA,OAAO,EACL,oBAAC,cAAD;AACE,MAAA,IAAI,EAAE4B,aAAa,EADrB;AAEE,MAAA,OAAO,EAAE7B,OAFX;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,SAAS,EAAEnB,EAAE,CAAC,mBAAD,CAJf;AAKE,MAAA,UAAU,EAAC,wBALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAqBD;;AAED,eAAegB,aAAf","sourcesContent":["import dayjs from 'dayjs';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport { FormControl } from 'modules/common/components/form';\nimport Label from 'modules/common/components/Label';\nimport Pagination from 'modules/common/components/pagination/Pagination';\nimport Table from 'modules/common/components/table';\nimport { DateWrapper, Title } from 'modules/common/styles/main';\nimport { __, router } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport { BarItems } from 'modules/layout/styles';\nimport * as React from 'react';\nimport Select from 'react-select-plus';\nimport { EMAIL_TYPES } from '../containers/EmailDelivery';\n\ntype Props = {\n  list: any;\n  history: any;\n  searchValue?: string;\n  loading: boolean;\n  count: number;\n  emailType: string;\n  handleSelectEmailType: (type: string) => void;\n};\n\nconst breadcrumb = [\n  { title: 'Settings', link: '/settings' },\n  { title: __('Email deliveries') }\n];\n\nconst emailTypeOptions = [\n  { value: 'transaction', label: __('Transaction') },\n  { value: 'engage', label: __('SES Engage') }\n];\n\nconst tableHeaders = {\n  transaction: ['Subject', 'To', 'Cc', 'Bcc', 'From', 'Status', 'Created at'],\n  engage: ['Customer id', 'Title', 'Status', 'Created at']\n};\n\nfunction EmailDelivery({\n  emailType,\n  loading,\n  count,\n  list = [],\n  handleSelectEmailType,\n  searchValue,\n  history\n}: Props) {\n  const [search, setSearch] = React.useState(searchValue);\n\n  const handleSearch = e => {\n    const value = e.target.value;\n\n    setSearch(value);\n\n    router.removeParams(history, 'page');\n    router.setParams(history, { searchValue: value });\n  };\n\n  const handleEmailtype = ({ value }: { value: string }) => {\n    setSearch('');\n    return handleSelectEmailType(value);\n  };\n\n  function renderItems() {\n    if (!emailType) {\n      return null;\n    }\n\n    if (emailType === EMAIL_TYPES.TRANSACTION) {\n      return list.map(item => (\n        <tr key={item._id}>\n          <td>{item.subject || '-'}</td>\n          <td>{item.to || '-'}</td>\n          <td>{item.cc || '-'}</td>\n          <td>{item.bcc || '-'}</td>\n          <td>{item.from || '-'}</td>\n          <td>\n            <Label lblStyle=\"primary\">{item.status || '-'}</Label>\n          </td>\n          <td>\n            <DateWrapper>\n              {dayjs(item.createdAt).format('LLL') || '-'}\n            </DateWrapper>\n          </td>\n        </tr>\n      ));\n    }\n\n    return list.map(item => (\n      <tr key={item._id}>\n        <td>{item.customerId || '-'}</td>\n        <td>{item.engage ? item.engage.title : '-'}</td>\n        <td>\n          <Label lblStyle=\"success\">{item.status || '-'}</Label>\n        </td>\n        <td>\n          <DateWrapper>\n            {item.createdAt ? dayjs(item.createdAt).format('LLL') : '-'}\n          </DateWrapper>\n        </td>\n      </tr>\n    ));\n  }\n\n  function renderContent() {\n    return (\n      <Table whiteSpace=\"wrap\" hover={true} bordered={true} condensed={true}>\n        <thead>\n          <tr>\n            {(tableHeaders[emailType] || []).map((item, idx) => (\n              <th key={idx}>{__(item)}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>{renderItems()}</tbody>\n      </Table>\n    );\n  }\n\n  function renderActionBar() {\n    const content = (\n      <BarItems>\n        {emailType === EMAIL_TYPES.TRANSACTION ? (\n          <FormControl\n            type=\"text\"\n            placeholder={__('Type to search')}\n            onChange={handleSearch}\n            value={search}\n          />\n        ) : null}\n\n        <Select\n          placeholder={__('Choose Email type')}\n          value={emailType}\n          options={emailTypeOptions}\n          onChange={handleEmailtype}\n          resetValue={[]}\n        />\n      </BarItems>\n    );\n\n    return (\n      <Wrapper.ActionBar\n        left={<Title>{__('Email Deliveries')}</Title>}\n        right={content}\n      />\n    );\n  }\n\n  return (\n    <Wrapper\n      header={\n        <Wrapper.Header\n          title={__('Email Deliveries')}\n          breadcrumb={breadcrumb}\n        />\n      }\n      actionBar={renderActionBar()}\n      footer={<Pagination count={count} />}\n      content={\n        <DataWithLoader\n          data={renderContent()}\n          loading={loading}\n          count={count}\n          emptyText={__('There are no logs')}\n          emptyImage=\"/images/actions/21.svg\"\n        />\n      }\n    />\n  );\n}\n\nexport default EmailDelivery;\n"]},"metadata":{},"sourceType":"module"}