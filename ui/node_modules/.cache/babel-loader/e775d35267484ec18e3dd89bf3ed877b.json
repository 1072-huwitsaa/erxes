{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/tickets/components/TicketMainActionBar.tsx\";\nimport MainActionBar from 'modules/boards/components/MainActionBar';\nimport { __ } from 'modules/common/utils';\nimport SelectCompanies from 'modules/companies/containers/SelectCompanies';\nimport SelectCustomers from 'modules/customers/containers/common/SelectCustomers';\nimport { INTEGRATION_KINDS } from 'modules/settings/integrations/constants';\nimport React from 'react';\nimport Select from 'react-select-plus';\nimport options from '../options';\n\nvar TicketMainActionBar = function TicketMainActionBar(props) {\n  var queryParams = props.queryParams,\n      onSelect = props.onSelect;\n  var sourceValues = INTEGRATION_KINDS.ALL.map(function (kind) {\n    return {\n      label: kind.text,\n      value: kind.value\n    };\n  });\n  sourceValues.push({\n    label: 'Other',\n    value: 'other'\n  });\n  var sources = queryParams ? queryParams.source : [];\n\n  var onSourceSelect = function onSourceSelect(ops) {\n    return onSelect(ops.map(function (option) {\n      return option.value;\n    }), 'source');\n  };\n\n  var extraFilter = React.createElement(React.Fragment, null, React.createElement(Select, {\n    placeholder: \"Choose a source\",\n    value: sources,\n    options: sourceValues,\n    name: \"source\",\n    onChange: onSourceSelect,\n    multi: true,\n    loadingPlaceholder: __('Loading...'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(SelectCompanies, {\n    label: \"Choose companies\",\n    name: \"companyIds\",\n    queryParams: queryParams,\n    onSelect: onSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(SelectCustomers, {\n    label: \"Choose customers\",\n    name: \"customerIds\",\n    queryParams: queryParams,\n    onSelect: onSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }));\n\n  var extendedProps = _objectSpread({}, props, {\n    options: options,\n    extraFilter: extraFilter,\n    link: '/inbox/ticket/board'\n  });\n\n  return React.createElement(MainActionBar, Object.assign({}, extendedProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }));\n};\n\nexport default TicketMainActionBar;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/tickets/components/TicketMainActionBar.tsx"],"names":["MainActionBar","__","SelectCompanies","SelectCustomers","INTEGRATION_KINDS","React","Select","options","TicketMainActionBar","props","queryParams","onSelect","sourceValues","ALL","map","kind","label","text","value","push","sources","source","onSourceSelect","ops","option","extraFilter","extendedProps","link"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,yCAA1B;AAGA,SAASC,EAAT,QAAmB,sBAAnB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,eAAP,MAA4B,qDAA5B;AACA,SAASC,iBAAT,QAAkC,yCAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAmBA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAkB;AAAA,MACpCC,WADoC,GACVD,KADU,CACpCC,WADoC;AAAA,MACvBC,QADuB,GACVF,KADU,CACvBE,QADuB;AAG5C,MAAMC,YAAY,GAAGR,iBAAiB,CAACS,GAAlB,CAAsBC,GAAtB,CAA0B,UAAAC,IAAI;AAAA,WAAK;AACtDC,MAAAA,KAAK,EAAED,IAAI,CAACE,IAD0C;AAEtDC,MAAAA,KAAK,EAAEH,IAAI,CAACG;AAF0C,KAAL;AAAA,GAA9B,CAArB;AAKAN,EAAAA,YAAY,CAACO,IAAb,CAAkB;AAChBH,IAAAA,KAAK,EAAE,OADS;AAEhBE,IAAAA,KAAK,EAAE;AAFS,GAAlB;AAKA,MAAME,OAAO,GAAGV,WAAW,GAAGA,WAAW,CAACW,MAAf,GAAwB,EAAnD;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD;AAAA,WACrBZ,QAAQ,CACNY,GAAG,CAACT,GAAJ,CAAQ,UAAAU,MAAM;AAAA,aAAIA,MAAM,CAACN,KAAX;AAAA,KAAd,CADM,EAEN,QAFM,CADa;AAAA,GAAvB;;AAMA,MAAMO,WAAW,GACf,0CACE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,iBADd;AAEE,IAAA,KAAK,EAAEL,OAFT;AAGE,IAAA,OAAO,EAAER,YAHX;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,QAAQ,EAAEU,cALZ;AAME,IAAA,KAAK,EAAE,IANT;AAOE,IAAA,kBAAkB,EAAErB,EAAE,CAAC,YAAD,CAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,oBAAC,eAAD;AACE,IAAA,KAAK,EAAC,kBADR;AAEE,IAAA,IAAI,EAAC,YAFP;AAGE,IAAA,WAAW,EAAES,WAHf;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAkBE,oBAAC,eAAD;AACE,IAAA,KAAK,EAAC,kBADR;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,WAAW,EAAED,WAHf;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;;AA4BA,MAAMe,aAAa,qBACdjB,KADc;AAEjBF,IAAAA,OAAO,EAAPA,OAFiB;AAGjBkB,IAAAA,WAAW,EAAXA,WAHiB;AAIjBE,IAAAA,IAAI,EAAE;AAJW,IAAnB;;AAOA,SAAO,oBAAC,aAAD,oBAAmBD,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAxDD;;AA0DA,eAAelB,mBAAf","sourcesContent":["import MainActionBar from 'modules/boards/components/MainActionBar';\nimport { IBoard, IPipeline } from 'modules/boards/types';\nimport { IOption } from 'modules/common/types';\nimport { __ } from 'modules/common/utils';\nimport SelectCompanies from 'modules/companies/containers/SelectCompanies';\nimport SelectCustomers from 'modules/customers/containers/common/SelectCustomers';\nimport { INTEGRATION_KINDS } from 'modules/settings/integrations/constants';\nimport React from 'react';\nimport Select from 'react-select-plus';\nimport options from '../options';\n\ntype Props = {\n  onSearch: (search: string) => void;\n  onSelect: (values: string[] | string, name: string) => void;\n  onDateFilterSelect: (name: string, value: string) => void;\n  onClear: (name: string, values) => void;\n  isFiltered: () => boolean;\n  clearFilter: () => void;\n  currentBoard?: IBoard;\n  currentPipeline?: IPipeline;\n  boards: IBoard[];\n  middleContent?: () => React.ReactNode;\n  history: any;\n  queryParams: any;\n  assignedUserIds?: string[];\n  type: string;\n};\n\nconst TicketMainActionBar = (props: Props) => {\n  const { queryParams, onSelect } = props;\n\n  const sourceValues = INTEGRATION_KINDS.ALL.map(kind => ({\n    label: kind.text,\n    value: kind.value\n  }));\n\n  sourceValues.push({\n    label: 'Other',\n    value: 'other'\n  });\n\n  const sources = queryParams ? queryParams.source : [];\n  const onSourceSelect = (ops: IOption[]) =>\n    onSelect(\n      ops.map(option => option.value),\n      'source'\n    );\n\n  const extraFilter = (\n    <>\n      <Select\n        placeholder=\"Choose a source\"\n        value={sources}\n        options={sourceValues}\n        name=\"source\"\n        onChange={onSourceSelect}\n        multi={true}\n        loadingPlaceholder={__('Loading...')}\n      />\n\n      <SelectCompanies\n        label=\"Choose companies\"\n        name=\"companyIds\"\n        queryParams={queryParams}\n        onSelect={onSelect}\n      />\n\n      <SelectCustomers\n        label=\"Choose customers\"\n        name=\"customerIds\"\n        queryParams={queryParams}\n        onSelect={onSelect}\n      />\n    </>\n  );\n\n  const extendedProps = {\n    ...props,\n    options,\n    extraFilter,\n    link: '/inbox/ticket/board'\n  };\n\n  return <MainActionBar {...extendedProps} />;\n};\n\nexport default TicketMainActionBar;\n"]},"metadata":{},"sourceType":"module"}