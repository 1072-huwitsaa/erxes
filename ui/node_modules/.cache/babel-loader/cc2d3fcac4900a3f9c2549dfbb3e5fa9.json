{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/SelectWithSearch.tsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  right: 18px;\\n  font-size: 16px;\\n  top: 50%;\\n  width: 18px;\\n  z-index: 2;\\n  color: #999;\\n  line-height: 24px;\\n  margin-top: -14px;\\n\\n  &:hover {\\n    color: #ea475d;\\n    cursor: pointer;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n\\n  .Select-clear-zone {\\n    visibility: hidden;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport * as compose from \"lodash.flowright\";\nimport debounce from \"lodash/debounce\";\nimport { Avatar, SelectOption, SelectValue } from \"modules/boards/styles/item\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport React from \"react\";\nimport { graphql } from \"react-apollo\";\nimport Select from \"react-select-plus\";\nimport styled from \"styled-components\";\nimport { __, confirm, readFile, withProps } from \"../utils\";\nvar SelectWrapper = styled.div(_templateObject());\nvar ClearButton = styled.div(_templateObject2());\n\nvar content = function content(option) {\n  return React.createElement(React.Fragment, null, React.createElement(Avatar, {\n    src: option.avatar ? readFile(option.avatar) : \"/images/avatar-colored.svg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), option.label);\n};\n\nexport var selectItemRenderer = function selectItemRenderer(option, showAvatar, OptionWrapper) {\n  if (!showAvatar) {\n    return option.label;\n  }\n\n  return React.createElement(OptionWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, content(option));\n};\n\nvar SelectWithSearch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SelectWithSearch, _React$Component);\n\n  function SelectWithSearch(props) {\n    var _this;\n\n    _classCallCheck(this, SelectWithSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectWithSearch).call(this, props));\n\n    _this.renderClearButton = function () {\n      if (!_this.props.multi) {\n        return null;\n      }\n\n      var _this$props$values = _this.props.values,\n          values = _this$props$values === void 0 ? [] : _this$props$values;\n\n      if (values.length > 0) {\n        return React.createElement(ClearButton, {\n          onClick: _this.onClear,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"times\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }));\n      }\n\n      return null;\n    };\n\n    _this.onClear = function (e) {\n      confirm().then(function () {\n        _this.props.onSelect([], _this.props.name);\n\n        _this.setState({\n          selectedOptions: []\n        });\n      });\n    };\n\n    _this.state = {\n      selectedOptions: undefined\n    };\n    return _this;\n  }\n\n  _createClass(SelectWithSearch, [{\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps) {\n      var queryName = nextProps.queryName,\n          customQuery = nextProps.customQuery,\n          generateOptions = nextProps.generateOptions,\n          _nextProps$values = nextProps.values,\n          values = _nextProps$values === void 0 ? [] : _nextProps$values;\n      var datas = customQuery[queryName] || [];\n      var loading = customQuery.loading;\n\n      if (!this.state.selectedOptions && !loading) {\n        this.setState({\n          selectedOptions: generateOptions(datas.filter(function (data) {\n            return values.includes(data._id);\n          }))\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          queryName = _this$props.queryName,\n          customQuery = _this$props.customQuery,\n          generateOptions = _this$props.generateOptions,\n          label = _this$props.label,\n          onSelect = _this$props.onSelect,\n          name = _this$props.name,\n          values = _this$props.values,\n          search = _this$props.search,\n          multi = _this$props.multi,\n          customOption = _this$props.customOption,\n          _this$props$showAvata = _this$props.showAvatar,\n          showAvatar = _this$props$showAvata === void 0 ? true : _this$props$showAvata;\n      var selectedOptions = this.state.selectedOptions;\n      var datas = customQuery[queryName] || [];\n\n      var selectMultiple = function selectMultiple(ops) {\n        onSelect(ops.map(function (option) {\n          return option.value;\n        }), name);\n\n        _this2.setState({\n          selectedOptions: _toConsumableArray(ops)\n        });\n      };\n\n      var selectSingle = function selectSingle(option) {\n        onSelect(option ? option.value : \"\", name);\n\n        _this2.setState({\n          selectedOptions: option ? [option] : []\n        });\n      };\n\n      var onChange = multi ? selectMultiple : selectSingle;\n\n      var onSearch = function onSearch(searchValue) {\n        if (searchValue) {\n          debounce(function () {\n            return search(searchValue);\n          }, 1000)();\n        }\n      };\n\n      var onOpen = function onOpen() {\n        return search(\"reload\");\n      };\n\n      var ids = datas.map(function (data) {\n        return data._id;\n      });\n      var uniqueSelectedOptions = (selectedOptions || []).filter(function (option) {\n        return !ids.includes(option.value);\n      });\n      var selectOptions = [].concat(_toConsumableArray(uniqueSelectedOptions), _toConsumableArray(generateOptions(datas)));\n\n      if (customOption) {\n        selectOptions.unshift(customOption);\n      }\n\n      var optionRenderer;\n      var valueRenderer;\n\n      if (multi) {\n        valueRenderer = function valueRenderer(option) {\n          return selectItemRenderer(option, showAvatar, SelectValue);\n        };\n\n        optionRenderer = function optionRenderer(option) {\n          return selectItemRenderer(option, showAvatar, SelectOption);\n        };\n      }\n\n      return React.createElement(SelectWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Select, {\n        placeholder: __(label),\n        value: values,\n        loadingPlaceholder: __(\"Loading...\"),\n        isLoading: customQuery.loading,\n        onOpen: onOpen,\n        onChange: onChange,\n        optionRenderer: optionRenderer,\n        valueRenderer: valueRenderer,\n        onInputChange: onSearch,\n        options: selectOptions,\n        multi: multi,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), this.renderClearButton());\n    }\n  }]);\n\n  return SelectWithSearch;\n}(React.Component);\n\nvar withQuery = function withQuery(_ref) {\n  var customQuery = _ref.customQuery;\n  return withProps(compose(graphql(gql(customQuery), {\n    name: \"customQuery\",\n    options: function options(_ref2) {\n      var searchValue = _ref2.searchValue,\n          filterParams = _ref2.filterParams,\n          values = _ref2.values,\n          abortController = _ref2.abortController;\n      var context = {\n        fetchOptions: {\n          signal: abortController.signal\n        }\n      };\n\n      if (searchValue === \"reload\") {\n        return {\n          context: context,\n          variables: _objectSpread({\n            ids: typeof values === \"string\" ? [values] : values\n          }, filterParams),\n          fetchPolicy: \"network-only\",\n          notifyOnNetworkStatusChange: true\n        };\n      }\n\n      if (searchValue) {\n        return {\n          context: context,\n          variables: _objectSpread({\n            searchValue: searchValue\n          }, filterParams)\n        };\n      }\n\n      return {\n        context: context,\n        variables: _objectSpread({\n          ids: typeof values === \"string\" ? [values] : values\n        }, filterParams)\n      };\n    }\n  }))(SelectWithSearch));\n};\n\nvar Wrapper =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Wrapper, _React$Component2);\n\n  function Wrapper(props) {\n    var _this3;\n\n    _classCallCheck(this, Wrapper);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Wrapper).call(this, props));\n    _this3.withQuery = void 0;\n\n    _this3.search = function (searchValue) {\n      var abortController = _this3.state.abortController;\n\n      if (abortController) {\n        abortController.abort();\n      }\n\n      _this3.setState({\n        searchValue: searchValue,\n        abortController: new AbortController()\n      });\n    };\n\n    _this3.withQuery = withQuery({\n      customQuery: _this3.props.customQuery\n    });\n    _this3.state = {\n      searchValue: \"\",\n      abortController: new AbortController()\n    };\n    return _this3;\n  }\n\n  _createClass(Wrapper, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          searchValue = _this$state.searchValue,\n          abortController = _this$state.abortController;\n      var Component = this.withQuery;\n      return React.createElement(Component, Object.assign({}, this.props, {\n        abortController: abortController,\n        search: this.search,\n        searchValue: searchValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Wrapper;\n}(React.Component);\n\nexport default Wrapper;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/SelectWithSearch.tsx"],"names":["gql","compose","debounce","Avatar","SelectOption","SelectValue","Icon","React","graphql","Select","styled","__","confirm","readFile","withProps","SelectWrapper","div","ClearButton","content","option","avatar","label","selectItemRenderer","showAvatar","OptionWrapper","SelectWithSearch","props","renderClearButton","multi","values","length","onClear","e","then","onSelect","name","setState","selectedOptions","state","undefined","nextProps","queryName","customQuery","generateOptions","datas","loading","filter","data","includes","_id","search","customOption","selectMultiple","ops","map","value","selectSingle","onChange","onSearch","searchValue","onOpen","ids","uniqueSelectedOptions","selectOptions","unshift","optionRenderer","valueRenderer","Component","withQuery","options","filterParams","abortController","context","fetchOptions","signal","variables","fetchPolicy","notifyOnNetworkStatusChange","Wrapper","abort","AbortController"],"mappings":"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","sourcesContent":["import gql from \"graphql-tag\";\nimport * as compose from \"lodash.flowright\";\nimport debounce from \"lodash/debounce\";\nimport { Avatar, SelectOption, SelectValue } from \"modules/boards/styles/item\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport React from \"react\";\nimport { graphql } from \"react-apollo\";\nimport Select from \"react-select-plus\";\nimport styled from \"styled-components\";\nimport { IOption } from \"../types\";\nimport { __, confirm, readFile, withProps } from \"../utils\";\n\nconst SelectWrapper = styled.div`\n  position: relative;\n\n  .Select-clear-zone {\n    visibility: hidden;\n  }\n`;\n\nconst ClearButton = styled.div`\n  position: absolute;\n  right: 18px;\n  font-size: 16px;\n  top: 50%;\n  width: 18px;\n  z-index: 2;\n  color: #999;\n  line-height: 24px;\n  margin-top: -14px;\n\n  &:hover {\n    color: #ea475d;\n    cursor: pointer;\n  }\n`;\n\ntype Props = {\n  searchValue: string;\n  values: string | string[] | undefined;\n  search: (search: string, loadMore?: boolean) => void;\n  abortController;\n} & WrapperProps;\n\nconst content = (option: IOption): React.ReactNode => (\n  <>\n    <Avatar\n      src={\n        option.avatar ? readFile(option.avatar) : \"/images/avatar-colored.svg\"\n      }\n    />\n    {option.label}\n  </>\n);\n\nexport const selectItemRenderer = (\n  option: IOption,\n  showAvatar: boolean,\n  OptionWrapper\n): React.ReactNode => {\n  if (!showAvatar) {\n    return option.label;\n  }\n\n  return <OptionWrapper>{content(option)}</OptionWrapper>;\n};\n\nclass SelectWithSearch extends React.Component<\n  Props,\n  { selectedOptions?: IOption[] }\n> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      selectedOptions: undefined,\n    };\n  }\n\n  componentWillUpdate(nextProps: Props) {\n    const { queryName, customQuery, generateOptions, values = [] } = nextProps;\n\n    const datas = customQuery[queryName] || [];\n    const loading = customQuery.loading;\n\n    if (!this.state.selectedOptions && !loading) {\n      this.setState({\n        selectedOptions: generateOptions(\n          datas.filter((data) => values.includes(data._id))\n        ),\n      });\n    }\n  }\n\n  renderClearButton = () => {\n    if (!this.props.multi) {\n      return null;\n    }\n\n    const { values = [] } = this.props;\n    if (values.length > 0) {\n      return (\n        <ClearButton onClick={this.onClear}>\n          <Icon icon=\"times\" />\n        </ClearButton>\n      );\n    }\n\n    return null;\n  };\n\n  onClear = (e) => {\n    confirm().then(() => {\n      this.props.onSelect([], this.props.name);\n      this.setState({ selectedOptions: [] });\n    });\n  };\n\n  render() {\n    const {\n      queryName,\n      customQuery,\n      generateOptions,\n      label,\n      onSelect,\n      name,\n      values,\n      search,\n      multi,\n      customOption,\n      showAvatar = true,\n    } = this.props;\n\n    const { selectedOptions } = this.state;\n\n    const datas = customQuery[queryName] || [];\n\n    const selectMultiple = (ops: IOption[]) => {\n      onSelect(\n        ops.map((option) => option.value),\n        name\n      );\n\n      this.setState({ selectedOptions: [...ops] });\n    };\n\n    const selectSingle = (option: IOption) => {\n      onSelect(option ? option.value : \"\", name);\n\n      this.setState({ selectedOptions: option ? [option] : [] });\n    };\n\n    const onChange = multi ? selectMultiple : selectSingle;\n\n    const onSearch = (searchValue: string) => {\n      if (searchValue) {\n        debounce(() => search(searchValue), 1000)();\n      }\n    };\n\n    const onOpen = () => search(\"reload\");\n\n    const ids = datas.map((data) => data._id);\n    const uniqueSelectedOptions = (selectedOptions || []).filter(\n      (option) => !ids.includes(option.value)\n    );\n    const selectOptions = [...uniqueSelectedOptions, ...generateOptions(datas)];\n\n    if (customOption) {\n      selectOptions.unshift(customOption);\n    }\n\n    let optionRenderer;\n    let valueRenderer;\n\n    if (multi) {\n      valueRenderer = (option: IOption) =>\n        selectItemRenderer(option, showAvatar, SelectValue);\n      optionRenderer = (option: IOption) =>\n        selectItemRenderer(option, showAvatar, SelectOption);\n    }\n\n    return (\n      <SelectWrapper>\n        <Select\n          placeholder={__(label)}\n          value={values}\n          loadingPlaceholder={__(\"Loading...\")}\n          isLoading={customQuery.loading}\n          onOpen={onOpen}\n          onChange={onChange}\n          optionRenderer={optionRenderer}\n          valueRenderer={valueRenderer}\n          onInputChange={onSearch}\n          options={selectOptions}\n          multi={multi}\n        />\n        {this.renderClearButton()}\n      </SelectWrapper>\n    );\n  }\n}\n\nconst withQuery = ({ customQuery }) =>\n  withProps<Props>(\n    compose(\n      graphql<\n        Props,\n        {},\n        { searchValue?: string; ids?: string[]; filterParams?: any }\n      >(gql(customQuery), {\n        name: \"customQuery\",\n        options: ({ searchValue, filterParams, values, abortController }) => {\n          const context = { fetchOptions: { signal: abortController.signal } };\n\n          if (searchValue === \"reload\") {\n            return {\n              context,\n              variables: {\n                ids: typeof values === \"string\" ? [values] : values,\n                ...filterParams,\n              },\n              fetchPolicy: \"network-only\",\n              notifyOnNetworkStatusChange: true,\n            };\n          }\n\n          if (searchValue) {\n            return { context, variables: { searchValue, ...filterParams } };\n          }\n\n          return {\n            context,\n            variables: {\n              ids: typeof values === \"string\" ? [values] : values,\n              ...filterParams,\n            },\n          };\n        },\n      })\n    )(SelectWithSearch)\n  );\n\ntype WrapperProps = {\n  values: string | string[] | undefined;\n  queryName: string;\n  name: string;\n  label: string;\n  onSelect: (values: string[] | string, name: string) => void;\n  generateOptions: (datas: any[]) => IOption[];\n  customQuery?: any;\n  multi?: boolean;\n  filterParams?: any;\n  showAvatar?: boolean;\n  customOption?: {\n    value: string;\n    label: string;\n    avatar?: string;\n  };\n};\n\nclass Wrapper extends React.Component<\n  WrapperProps,\n  { searchValue: string; abortController },\n  { WithQuery: React.ReactNode }\n> {\n  private withQuery;\n\n  constructor(props) {\n    super(props);\n\n    this.withQuery = withQuery({ customQuery: this.props.customQuery });\n\n    this.state = { searchValue: \"\", abortController: new AbortController() };\n  }\n\n  search = (searchValue: string) => {\n    const { abortController } = this.state;\n\n    if (abortController) {\n      abortController.abort();\n    }\n\n    this.setState({ searchValue, abortController: new AbortController() });\n  };\n\n  render() {\n    const { searchValue, abortController } = this.state;\n\n    const Component = this.withQuery;\n\n    return (\n      <Component\n        {...this.props}\n        abortController={abortController}\n        search={this.search}\n        searchValue={searchValue}\n      />\n    );\n  }\n}\n\nexport default Wrapper;\n"]},"metadata":{},"sourceType":"module"}