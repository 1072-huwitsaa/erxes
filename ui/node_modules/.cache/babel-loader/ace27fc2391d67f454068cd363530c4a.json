{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/common/components/List.tsx\";\nimport Button from 'modules/common/components/Button';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport Pagination from 'modules/common/components/pagination/Pagination';\nimport { __ } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport React from 'react';\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List() {\n    _classCallCheck(this, List);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(List).apply(this, arguments));\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          formTitle = _this$props.formTitle,\n          size = _this$props.size,\n          renderContent = _this$props.renderContent,\n          renderForm = _this$props.renderForm,\n          renderFilter = _this$props.renderFilter,\n          leftActionBar = _this$props.leftActionBar,\n          breadcrumb = _this$props.breadcrumb,\n          totalCount = _this$props.totalCount,\n          objects = _this$props.objects,\n          loading = _this$props.loading,\n          save = _this$props.save,\n          refetch = _this$props.refetch,\n          center = _this$props.center,\n          remove = _this$props.remove,\n          additionalButton = _this$props.additionalButton,\n          emptyContent = _this$props.emptyContent;\n      var trigger = React.createElement(Button, {\n        btnStyle: \"success\",\n        icon: \"plus-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, formTitle);\n\n      var content = function content(props) {\n        return renderForm(_objectSpread({}, props, {\n          save: save\n        }));\n      };\n\n      var actionBarRight = React.createElement(React.Fragment, null, additionalButton, React.createElement(ModalTrigger, {\n        title: formTitle || '',\n        size: size,\n        enforceFocus: false,\n        trigger: trigger,\n        autoOpenKey: \"showListFormModal\",\n        content: content,\n        dialogClassName: \"transform\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          title: title,\n          breadcrumb: breadcrumb,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }),\n        actionBar: React.createElement(Wrapper.ActionBar, {\n          left: leftActionBar,\n          right: actionBarRight,\n          bottom: renderFilter && renderFilter(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }),\n        footer: React.createElement(Pagination, {\n          count: totalCount,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }),\n        center: center,\n        content: React.createElement(DataWithLoader, {\n          data: renderContent({\n            objects: objects,\n            save: save,\n            refetch: refetch,\n            remove: remove\n          }),\n          loading: loading,\n          count: totalCount,\n          emptyText: __('Oops! No data here'),\n          emptyImage: \"/images/actions/5.svg\",\n          emptyContent: emptyContent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nexport default List;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/common/components/List.tsx"],"names":["Button","DataWithLoader","ModalTrigger","Pagination","__","Wrapper","React","List","props","title","formTitle","size","renderContent","renderForm","renderFilter","leftActionBar","breadcrumb","totalCount","objects","loading","save","refetch","center","remove","additionalButton","emptyContent","trigger","content","actionBarRight","Component"],"mappings":"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","sourcesContent":["import Button from 'modules/common/components/Button';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport Pagination from 'modules/common/components/pagination/Pagination';\nimport { __ } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport React from 'react';\nimport { IBreadCrumbItem } from '../../../common/types';\nimport { ICommonListProps } from '../types';\n\ntype Props = {\n  title: string;\n  formTitle?: string;\n  size?: 'sm' | 'lg' | 'xl';\n  renderForm: (doc: { save: () => void; closeModal: () => void }) => any;\n  renderContent: (params: any) => any;\n  leftActionBar: React.ReactNode;\n  breadcrumb?: IBreadCrumbItem[];\n  center?: boolean;\n  renderFilter?: () => any;\n  additionalButton?: React.ReactNode;\n  emptyContent?: React.ReactNode;\n};\n\nclass List extends React.Component<Props & ICommonListProps, {}> {\n  render() {\n    const {\n      title,\n      formTitle,\n      size,\n      renderContent,\n      renderForm,\n      renderFilter,\n      leftActionBar,\n      breadcrumb,\n      totalCount,\n      objects,\n      loading,\n      save,\n      refetch,\n      center,\n      remove,\n      additionalButton,\n      emptyContent\n    } = this.props;\n\n    const trigger = (\n      <Button btnStyle=\"success\" icon=\"plus-circle\" uppercase={false}>\n        {formTitle}\n      </Button>\n    );\n\n    const content = props => {\n      return renderForm({ ...props, save });\n    };\n\n    const actionBarRight = (\n      <>\n        {additionalButton}\n        <ModalTrigger\n          title={formTitle || ''}\n          size={size}\n          enforceFocus={false}\n          trigger={trigger}\n          autoOpenKey=\"showListFormModal\"\n          content={content}\n          dialogClassName=\"transform\"\n        />\n      </>\n    );\n\n    return (\n      <Wrapper\n        header={<Wrapper.Header title={title} breadcrumb={breadcrumb} />}\n        actionBar={\n          <Wrapper.ActionBar\n            left={leftActionBar}\n            right={actionBarRight}\n            bottom={renderFilter && renderFilter()}\n          />\n        }\n        footer={<Pagination count={totalCount} />}\n        center={center}\n        content={\n          <DataWithLoader\n            data={renderContent({ objects, save, refetch, remove })}\n            loading={loading}\n            count={totalCount}\n            emptyText={__('Oops! No data here')}\n            emptyImage=\"/images/actions/5.svg\"\n            emptyContent={emptyContent}\n          />\n        }\n      />\n    );\n  }\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}