{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/conversation/messages/MessageBot.tsx\";\nimport dayjs from 'dayjs';\nimport ImageWithPreview from 'modules/common/components/ImageWithPreview';\nimport NameCard from 'modules/common/components/nameCard/NameCard';\nimport Tip from 'modules/common/components/Tip';\nimport { urlify } from 'modules/inbox/utils';\nimport React from 'react';\nimport xss from 'xss';\nimport { MessageBody, MessageContent, MessageItem } from '../styles';\nimport Carousel from './bot/Carousel';\nimport CustomMessage from './bot/CustomMessage';\n\nvar SimpleMessage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SimpleMessage, _React$Component);\n\n  function SimpleMessage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SimpleMessage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SimpleMessage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderTextMessage = function (message, index) {\n      return React.createElement(MessageContent, {\n        staff: true,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: xss(urlify(message.text || ''))\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }));\n    };\n\n    _this.renderFileMessage = function (message, index) {\n      return React.createElement(MessageContent, {\n        staff: true,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(ImageWithPreview, {\n        src: message.url,\n        alt: message.title || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    };\n\n    _this.renderCustomMessage = function (message, index) {\n      return React.createElement(CustomMessage, {\n        key: index,\n        botData: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    };\n\n    _this.renderCarouselMessage = function (elements, index) {\n      return React.createElement(Carousel, {\n        key: index,\n        items: elements,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SimpleMessage, [{\n    key: \"renderAvatar\",\n    value: function renderAvatar() {\n      return React.createElement(NameCard.Avatar, {\n        user: {\n          _id: 'erxes_bot',\n          username: 'bot',\n          email: 'info@erxes.io'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderBotMessage\",\n    value: function renderBotMessage() {\n      var _this2 = this;\n\n      var message = this.props.message;\n      var botData = message.botData;\n      return botData.map(function (item, index) {\n        switch (item.type) {\n          case 'text':\n            return _this2.renderTextMessage(item, index);\n\n          case 'file':\n            return _this2.renderFileMessage(item, index);\n\n          case 'carousel':\n            return _this2.renderCarouselMessage(item.elements, index);\n\n          case 'custom':\n            return _this2.renderCustomMessage(item, index);\n\n          default:\n            return null;\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var createdAt = this.props.message.createdAt;\n      return React.createElement(MessageItem, {\n        staff: false,\n        isBot: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.renderAvatar(), React.createElement(MessageBody, {\n        staff: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Tip, {\n        text: dayjs(createdAt).format('lll'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"footer\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, dayjs(createdAt).format('LT'))), this.renderBotMessage()));\n    }\n  }]);\n\n  return SimpleMessage;\n}(React.Component);\n\nexport { SimpleMessage as default };","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/conversation/messages/MessageBot.tsx"],"names":["dayjs","ImageWithPreview","NameCard","Tip","urlify","React","xss","MessageBody","MessageContent","MessageItem","Carousel","CustomMessage","SimpleMessage","renderTextMessage","message","index","__html","text","renderFileMessage","url","title","renderCustomMessage","renderCarouselMessage","elements","_id","username","email","props","botData","map","item","type","createdAt","renderAvatar","format","renderBotMessage","Component"],"mappings":"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","sourcesContent":["import dayjs from 'dayjs';\nimport ImageWithPreview from 'modules/common/components/ImageWithPreview';\nimport NameCard from 'modules/common/components/nameCard/NameCard';\nimport Tip from 'modules/common/components/Tip';\nimport { urlify } from 'modules/inbox/utils';\nimport React from 'react';\nimport xss from 'xss';\nimport { IBotData, IMessage } from '../../../../../types';\nimport { MessageBody, MessageContent, MessageItem } from '../styles';\nimport Carousel from './bot/Carousel';\nimport CustomMessage from './bot/CustomMessage';\n\ntype Props = {\n  message: IMessage;\n};\n\nexport default class SimpleMessage extends React.Component<Props, {}> {\n  renderAvatar() {\n    return (\n      <NameCard.Avatar\n        user={{ _id: 'erxes_bot', username: 'bot', email: 'info@erxes.io' }}\n      />\n    );\n  }\n\n  renderTextMessage = (message: IBotData, index: number) => {\n    return (\n      <MessageContent staff={true} key={index}>\n        <span\n          dangerouslySetInnerHTML={{ __html: xss(urlify(message.text || '')) }}\n        />\n      </MessageContent>\n    );\n  };\n\n  renderFileMessage = (message: IBotData, index: number) => {\n    return (\n      <MessageContent staff={true} key={index}>\n        <ImageWithPreview src={message.url} alt={message.title || ''} />\n      </MessageContent>\n    );\n  };\n\n  renderCustomMessage = (message: IBotData, index: number) => {\n    return <CustomMessage key={index} botData={message} />;\n  };\n\n  renderCarouselMessage = (elements: any, index: number) => {\n    return <Carousel key={index} items={elements} />;\n  };\n\n  renderBotMessage() {\n    const { message } = this.props;\n    const { botData } = message;\n\n    return botData.map((item, index) => {\n      switch (item.type) {\n        case 'text':\n          return this.renderTextMessage(item, index);\n        case 'file':\n          return this.renderFileMessage(item, index);\n        case 'carousel':\n          return this.renderCarouselMessage(item.elements, index);\n        case 'custom':\n          return this.renderCustomMessage(item, index);\n        default:\n          return null;\n      }\n    });\n  }\n\n  render() {\n    const {\n      message: { createdAt }\n    } = this.props;\n\n    return (\n      <MessageItem staff={false} isBot={true}>\n        {this.renderAvatar()}\n        <MessageBody staff={false}>\n          <Tip text={dayjs(createdAt).format('lll')}>\n            <footer>{dayjs(createdAt).format('LT')}</footer>\n          </Tip>\n          {this.renderBotMessage()}\n        </MessageBody>\n      </MessageItem>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}