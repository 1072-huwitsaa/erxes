{"ast":null,"code":"var _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/components/list/CustomerRow.tsx\";\nimport _ from 'lodash';\nimport FormControl from 'modules/common/components/form/Control';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport NameCard from 'modules/common/components/nameCard/NameCard';\nimport Tags from 'modules/common/components/Tags';\nimport TextInfo from 'modules/common/components/TextInfo';\nimport { formatValue } from 'modules/common/utils';\nimport { FlexItem } from 'modules/companies/styles';\nimport { GENDER_TYPES, LEAD_STATUS_TYPES } from 'modules/customers/constants';\nimport { BooleanStatus, ClickableRow } from 'modules/customers/styles';\nimport React from 'react';\nimport parse from 'ua-parser-js';\nimport { renderFlag } from '../common/DevicePropertiesSection';\nimport PrimaryEmail from '../common/PrimaryEmail';\nimport PrimaryPhone from '../common/PrimaryPhone';\n\nfunction displayObjectListItem(customer, customerFieldName, subFieldName) {\n  var objectList = customer[customerFieldName] || [];\n  var subFieldKey = subFieldName.replace(\"\".concat(customerFieldName, \".\"), '');\n  var subField = objectList.find ? objectList.find(function (obj) {\n    return obj.field === subFieldKey;\n  }) : [];\n\n  if (!subField) {\n    return null;\n  }\n\n  return formatValue(subField.value);\n}\n\nfunction displayValue(customer, name) {\n  var value = _.get(customer, name);\n\n  if (name === 'firstName') {\n    return React.createElement(FlexItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(NameCard.Avatar, {\n      customer: customer,\n      size: 30,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), \" \\u2003\", formatValue(customer.firstName));\n  }\n\n  if (name.includes('customFieldsData')) {\n    return displayObjectListItem(customer, 'customFieldsData', name);\n  }\n\n  if (name.includes('trackedData')) {\n    return displayObjectListItem(customer, 'trackedData', name);\n  }\n\n  if (name === 'location.country') {\n    if (customer.location && customer.location.country) {\n      return React.createElement(React.Fragment, null, renderFlag(customer.location.countryCode), \" \", value);\n    }\n\n    return '-';\n  }\n\n  if (name.includes('userAgent')) {\n    var ua = parse(value || ' ');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, ua.browser.name, \" \", ua.browser.version, \" / \", ua.os.name, \" \", ua.os.version);\n  }\n\n  if (name === 'primaryEmail') {\n    return React.createElement(PrimaryEmail, {\n      email: value,\n      status: customer.emailValidationStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    });\n  }\n\n  if (name === 'primaryPhone') {\n    return React.createElement(PrimaryPhone, {\n      phone: value,\n      status: customer.phoneValidationStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    });\n  }\n\n  if (name === 'sex') {\n    return GENDER_TYPES()[value];\n  }\n\n  if (name === 'leadStatus') {\n    return LEAD_STATUS_TYPES[value];\n  }\n\n  if (name === 'visitorContactInfo') {\n    var visitorContactInfo = customer.visitorContactInfo;\n\n    if (visitorContactInfo) {\n      return formatValue(visitorContactInfo.email || visitorContactInfo.phone);\n    }\n\n    return '-';\n  }\n\n  if (name === 'sessionCount') {\n    return React.createElement(TextInfo, {\n      textStyle: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, value ? value.toString() : '-');\n  }\n\n  if (name === 'doNotDisturb' || name === 'code' || name === 'hasAuthority') {\n    return React.createElement(TextInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, value);\n  }\n\n  if (typeof value === 'boolean') {\n    return React.createElement(BooleanStatus, {\n      isTrue: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: value ? 'check-1' : 'times',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }));\n  }\n\n  return formatValue(value);\n}\n\nfunction CustomerRow(_ref) {\n  var customer = _ref.customer,\n      columnsConfig = _ref.columnsConfig,\n      toggleBulk = _ref.toggleBulk,\n      isChecked = _ref.isChecked,\n      history = _ref.history;\n  var tags = customer.getTags;\n\n  var onChange = function onChange(e) {\n    if (toggleBulk) {\n      toggleBulk(customer, e.target.checked);\n    }\n  };\n\n  var onClick = function onClick(e) {\n    e.stopPropagation();\n  };\n\n  var onTrClick = function onTrClick() {\n    history.push(\"/contacts/details/\".concat(customer._id));\n  };\n\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    id: \"customersCheckBox\",\n    style: {\n      width: '50px'\n    },\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    checked: isChecked,\n    componentClass: \"checkbox\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })), columnsConfig.map(function (_ref2, index) {\n    var name = _ref2.name;\n    return React.createElement(\"td\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(ClickableRow, {\n      onClick: onTrClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, displayValue(customer, name)));\n  }), React.createElement(\"td\", {\n    onClick: onTrClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Tags, {\n    tags: tags || [],\n    limit: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })));\n}\n\nexport default CustomerRow;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/components/list/CustomerRow.tsx"],"names":["_","FormControl","Icon","NameCard","Tags","TextInfo","formatValue","FlexItem","GENDER_TYPES","LEAD_STATUS_TYPES","BooleanStatus","ClickableRow","React","parse","renderFlag","PrimaryEmail","PrimaryPhone","displayObjectListItem","customer","customerFieldName","subFieldName","objectList","subFieldKey","replace","subField","find","obj","field","value","displayValue","name","get","firstName","includes","location","country","countryCode","ua","browser","version","os","emailValidationStatus","phoneValidationStatus","visitorContactInfo","email","phone","toString","CustomerRow","columnsConfig","toggleBulk","isChecked","history","tags","getTags","onChange","e","target","checked","onClick","stopPropagation","onTrClick","push","_id","width","map","index"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport FormControl from 'modules/common/components/form/Control';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport NameCard from 'modules/common/components/nameCard/NameCard';\nimport Tags from 'modules/common/components/Tags';\nimport TextInfo from 'modules/common/components/TextInfo';\nimport { formatValue } from 'modules/common/utils';\nimport { FlexItem } from 'modules/companies/styles';\nimport { GENDER_TYPES, LEAD_STATUS_TYPES } from 'modules/customers/constants';\nimport { BooleanStatus, ClickableRow } from 'modules/customers/styles';\nimport { ICustomer } from 'modules/customers/types';\nimport { IConfigColumn } from 'modules/settings/properties/types';\nimport React from 'react';\nimport parse from 'ua-parser-js';\nimport { renderFlag } from '../common/DevicePropertiesSection';\nimport PrimaryEmail from '../common/PrimaryEmail';\nimport PrimaryPhone from '../common/PrimaryPhone';\n\ntype Props = {\n  customer: ICustomer;\n  columnsConfig: IConfigColumn[];\n  history: any;\n  isChecked?: boolean;\n  toggleBulk: (target: any, toAdd: boolean) => void;\n};\n\nfunction displayObjectListItem(customer, customerFieldName, subFieldName) {\n  const objectList = customer[customerFieldName] || [];\n  const subFieldKey = subFieldName.replace(`${customerFieldName}.`, '');\n\n  const subField = objectList.find\n    ? objectList.find(obj => obj.field === subFieldKey)\n    : [];\n\n  if (!subField) {\n    return null;\n  }\n\n  return formatValue(subField.value);\n}\n\nfunction displayValue(customer, name) {\n  const value = _.get(customer, name);\n\n  if (name === 'firstName') {\n    return (\n      <FlexItem>\n        <NameCard.Avatar customer={customer} size={30} /> &emsp;\n        {formatValue(customer.firstName)}\n      </FlexItem>\n    );\n  }\n\n  if (name.includes('customFieldsData')) {\n    return displayObjectListItem(customer, 'customFieldsData', name);\n  }\n\n  if (name.includes('trackedData')) {\n    return displayObjectListItem(customer, 'trackedData', name);\n  }\n\n  if (name === 'location.country') {\n    if (customer.location && customer.location.country) {\n      return (\n        <>\n          {renderFlag(customer.location.countryCode)} {value}\n        </>\n      );\n    }\n\n    return '-';\n  }\n\n  if (name.includes('userAgent')) {\n    const ua = parse(value || ' ');\n    return (\n      <div>\n        {ua.browser.name} {ua.browser.version} / {ua.os.name} {ua.os.version}\n      </div>\n    );\n  }\n\n  if (name === 'primaryEmail') {\n    return (\n      <PrimaryEmail email={value} status={customer.emailValidationStatus} />\n    );\n  }\n\n  if (name === 'primaryPhone') {\n    return (\n      <PrimaryPhone phone={value} status={customer.phoneValidationStatus} />\n    );\n  }\n\n  if (name === 'sex') {\n    return GENDER_TYPES()[value];\n  }\n\n  if (name === 'leadStatus') {\n    return LEAD_STATUS_TYPES[value];\n  }\n\n  if (name === 'visitorContactInfo') {\n    const visitorContactInfo = customer.visitorContactInfo;\n\n    if (visitorContactInfo) {\n      return formatValue(visitorContactInfo.email || visitorContactInfo.phone);\n    }\n\n    return '-';\n  }\n\n  if (name === 'sessionCount') {\n    return (\n      <TextInfo textStyle=\"primary\">{value ? value.toString() : '-'}</TextInfo>\n    );\n  }\n\n  if (name === 'doNotDisturb' || name === 'code' || name === 'hasAuthority') {\n    return <TextInfo>{value}</TextInfo>;\n  }\n\n  if (typeof value === 'boolean') {\n    return (\n      <BooleanStatus isTrue={value}>\n        <Icon icon={value ? 'check-1' : 'times'} />\n      </BooleanStatus>\n    );\n  }\n\n  return formatValue(value);\n}\n\nfunction CustomerRow({\n  customer,\n  columnsConfig,\n  toggleBulk,\n  isChecked,\n  history\n}: Props) {\n  const tags = customer.getTags;\n\n  const onChange = e => {\n    if (toggleBulk) {\n      toggleBulk(customer, e.target.checked);\n    }\n  };\n\n  const onClick = e => {\n    e.stopPropagation();\n  };\n\n  const onTrClick = () => {\n    history.push(`/contacts/details/${customer._id}`);\n  };\n\n  return (\n    <tr>\n      <td id=\"customersCheckBox\" style={{ width: '50px' }} onClick={onClick}>\n        <FormControl\n          checked={isChecked}\n          componentClass=\"checkbox\"\n          onChange={onChange}\n        />\n      </td>\n      {columnsConfig.map(({ name }, index) => (\n        <td key={index}>\n          <ClickableRow onClick={onTrClick}>\n            {displayValue(customer, name)}\n          </ClickableRow>\n        </td>\n      ))}\n      <td onClick={onTrClick}>\n        <Tags tags={tags || []} limit={3} />\n      </td>\n    </tr>\n  );\n}\n\nexport default CustomerRow;\n"]},"metadata":{},"sourceType":"module"}