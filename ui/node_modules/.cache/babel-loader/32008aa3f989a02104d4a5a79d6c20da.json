{"ast":null,"code":"var _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/companies/components/common/CompanySection.tsx\";\nimport Box from 'modules/common/components/Box';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport { ButtonRelated } from 'modules/common/styles/main';\nimport { __, urlParser } from 'modules/common/utils';\nimport GetConformity from 'modules/conformity/containers/GetConformity';\nimport { SectionBodyItem } from 'modules/layout/styles';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport CompanyChooser from '../../containers/CompanyChooser';\nimport { queries } from '../../graphql';\n\nfunction Component(_ref) {\n  var name = _ref.name,\n      _ref$items = _ref.items,\n      items = _ref$items === void 0 ? [] : _ref$items,\n      _ref$mainType = _ref.mainType,\n      mainType = _ref$mainType === void 0 ? '' : _ref$mainType,\n      _ref$mainTypeId = _ref.mainTypeId,\n      mainTypeId = _ref$mainTypeId === void 0 ? '' : _ref$mainTypeId,\n      onSelect = _ref.onSelect,\n      collapseCallback = _ref.collapseCallback;\n\n  var renderCompanyChooser = function renderCompanyChooser(props) {\n    return React.createElement(CompanyChooser, Object.assign({}, props, {\n      data: {\n        name: name,\n        companies: items,\n        mainType: mainType,\n        mainTypeId: mainTypeId\n      },\n      onSelect: onSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  };\n\n  var renderRelatedCompanyChooser = function renderRelatedCompanyChooser(props) {\n    return React.createElement(CompanyChooser, Object.assign({}, props, {\n      data: {\n        name: name,\n        companies: items,\n        mainTypeId: mainTypeId,\n        mainType: mainType,\n        isRelated: true\n      },\n      onSelect: onSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  };\n\n  var companyTrigger = React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    icon: \"plus-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }));\n  var relCompanyTrigger = React.createElement(ButtonRelated, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __('See related companies')));\n  var quickButtons = React.createElement(ModalTrigger, {\n    title: \"Associate\",\n    trigger: companyTrigger,\n    size: \"lg\",\n    content: renderCompanyChooser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  });\n  var relQuickButtons = React.createElement(ModalTrigger, {\n    title: \"Related Associate\",\n    trigger: relCompanyTrigger,\n    size: \"lg\",\n    content: renderRelatedCompanyChooser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  });\n\n  var renderExternaleWebsite = function renderExternaleWebsite(links) {\n    if (!links || !links.website) {\n      return null;\n    }\n\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: links.website,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, urlParser.extractRootDomain(links.website)));\n  };\n\n  var content = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, items.map(function (company, index) {\n    return React.createElement(SectionBodyItem, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/companies/details/\".concat(company._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, company.primaryName || 'Unknown'), renderExternaleWebsite(company.links));\n  }), items.length === 0 && React.createElement(EmptyState, {\n    icon: \"building\",\n    text: \"No company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), mainTypeId && mainType && relQuickButtons);\n  return React.createElement(Box, {\n    title: __('Companies'),\n    name: \"showCompanies\",\n    extraButtons: quickButtons,\n    isOpen: true,\n    callback: collapseCallback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, content);\n}\n\nexport default (function (props) {\n  return React.createElement(GetConformity, Object.assign({}, props, {\n    relType: \"company\",\n    component: Component,\n    queryName: \"companies\",\n    itemsQuery: queries.companies,\n    alreadyItems: props.companies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/companies/components/common/CompanySection.tsx"],"names":["Box","EmptyState","Icon","ModalTrigger","ButtonRelated","__","urlParser","GetConformity","SectionBodyItem","React","Link","CompanyChooser","queries","Component","name","items","mainType","mainTypeId","onSelect","collapseCallback","renderCompanyChooser","props","companies","renderRelatedCompanyChooser","isRelated","companyTrigger","relCompanyTrigger","quickButtons","relQuickButtons","renderExternaleWebsite","links","website","extractRootDomain","content","map","company","index","_id","primaryName","length"],"mappings":"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","sourcesContent":["import Box from 'modules/common/components/Box';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport { ButtonRelated } from 'modules/common/styles/main';\nimport { __, urlParser } from 'modules/common/utils';\nimport GetConformity from 'modules/conformity/containers/GetConformity';\nimport { SectionBodyItem } from 'modules/layout/styles';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport CompanyChooser from '../../containers/CompanyChooser';\nimport { queries } from '../../graphql';\nimport { ICompany } from '../../types';\n\ntype Props = {\n  name: string;\n  items?: ICompany[];\n  mainType?: string;\n  mainTypeId?: string;\n  onSelect?: (companies: ICompany[]) => void;\n  collapseCallback?: () => void;\n};\n\nfunction Component(\n  this: any,\n  {\n    name,\n    items = [],\n    mainType = '',\n    mainTypeId = '',\n    onSelect,\n    collapseCallback\n  }: Props\n) {\n  const renderCompanyChooser = props => {\n    return (\n      <CompanyChooser\n        {...props}\n        data={{ name, companies: items, mainType, mainTypeId }}\n        onSelect={onSelect}\n      />\n    );\n  };\n\n  const renderRelatedCompanyChooser = props => {\n    return (\n      <CompanyChooser\n        {...props}\n        data={{ name, companies: items, mainTypeId, mainType, isRelated: true }}\n        onSelect={onSelect}\n      />\n    );\n  };\n\n  const companyTrigger = (\n    <button>\n      <Icon icon=\"plus-circle\" />\n    </button>\n  );\n\n  const relCompanyTrigger = (\n    <ButtonRelated>\n      <span>{__('See related companies')}</span>\n    </ButtonRelated>\n  );\n\n  const quickButtons = (\n    <ModalTrigger\n      title=\"Associate\"\n      trigger={companyTrigger}\n      size=\"lg\"\n      content={renderCompanyChooser}\n    />\n  );\n\n  const relQuickButtons = (\n    <ModalTrigger\n      title=\"Related Associate\"\n      trigger={relCompanyTrigger}\n      size=\"lg\"\n      content={renderRelatedCompanyChooser}\n    />\n  );\n\n  const renderExternaleWebsite = links => {\n    if (!links || !links.website) {\n      return null;\n    }\n\n    return (\n      <span>\n        <a href={links.website} target=\"_blank\" rel=\"noopener noreferrer\">\n          {urlParser.extractRootDomain(links.website)}\n        </a>\n      </span>\n    );\n  };\n\n  const content = (\n    <div>\n      {items.map((company, index) => (\n        <SectionBodyItem key={index}>\n          <Link to={`/companies/details/${company._id}`}>\n            {company.primaryName || 'Unknown'}\n          </Link>\n          {renderExternaleWebsite(company.links)}\n        </SectionBodyItem>\n      ))}\n      {items.length === 0 && <EmptyState icon=\"building\" text=\"No company\" />}\n      {mainTypeId && mainType && relQuickButtons}\n    </div>\n  );\n\n  return (\n    <Box\n      title={__('Companies')}\n      name=\"showCompanies\"\n      extraButtons={quickButtons}\n      isOpen={true}\n      callback={collapseCallback}\n    >\n      {content}\n    </Box>\n  );\n}\n\ntype IProps = {\n  mainType?: string;\n  mainTypeId?: string;\n  isOpen?: boolean;\n  companies?: ICompany[];\n  onSelect?: (datas: ICompany[]) => void;\n  collapseCallback?: () => void;\n};\n\nexport default (props: IProps) => {\n  return (\n    <GetConformity\n      {...props}\n      relType=\"company\"\n      component={Component}\n      queryName=\"companies\"\n      itemsQuery={queries.companies}\n      alreadyItems={props.companies}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}