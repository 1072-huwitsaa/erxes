{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/Tags.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  > span {\\n    margin-right: \", \"px;\\n\\n    &:last-child {\\n      margin: 0;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Label from 'modules/common/components/Label';\nimport { colors, dimensions } from 'modules/common/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport styledTS from 'styled-components-ts';\nvar TagList = styledTS(styled.div).attrs({\n  className: function className(props) {\n    return props.length > 0 ? 'tags' : '';\n  }\n})(_templateObject(), dimensions.unitSpacing / 2);\n\nfunction Tags(_ref) {\n  var tags = _ref.tags,\n      limit = _ref.limit;\n  var length = tags.length;\n  return React.createElement(TagList, {\n    length: length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, tags.slice(0, limit ? limit : length).map(function (tag) {\n    return React.createElement(Label, {\n      key: tag.name,\n      lblColor: tag.colorCode,\n      ignoreTrans: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, tag.name));\n  }), limit && length - limit > 0 && React.createElement(Label, {\n    lblColor: colors.colorCoreGray,\n    ignoreTrans: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"+\".concat(length - limit))));\n}\n\nexport default Tags;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/Tags.tsx"],"names":["Label","colors","dimensions","React","styled","styledTS","TagList","div","attrs","className","props","length","unitSpacing","Tags","tags","limit","slice","map","tag","name","colorCode","colorCoreGray"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,iCAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,uBAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAGA,IAAMC,OAAO,GAAGD,QAAQ,CAAqBD,MAAM,CAACG,GAA5B,CAAR,CAAyCC,KAAzC,CAA+C;AAC7DC,EAAAA,SAAS,EAAE,mBAAAC,KAAK;AAAA,WAAKA,KAAK,CAACC,MAAN,GAAe,CAAf,GAAmB,MAAnB,GAA4B,EAAjC;AAAA;AAD6C,CAA/C,CAAH,oBAIOT,UAAU,CAACU,WAAX,GAAyB,CAJhC,CAAb;;AAkBA,SAASC,IAAT,OAAsC;AAAA,MAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,MAAhBC,KAAgB,QAAhBA,KAAgB;AACpC,MAAMJ,MAAM,GAAGG,IAAI,CAACH,MAApB;AAEA,SACE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEA,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcD,KAAK,GAAGA,KAAH,GAAWJ,MAA9B,EAAsCM,GAAtC,CAA0C,UAAAC,GAAG,EAAI;AAChD,WACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,GAAG,CAACC,IAAhB;AAAsB,MAAA,QAAQ,EAAED,GAAG,CAACE,SAApC;AAA+C,MAAA,WAAW,EAAE,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,GAAG,CAACC,IAAX,CADF,CADF;AAKD,GANA,CADH,EAQGJ,KAAK,IAAIJ,MAAM,GAAGI,KAAT,GAAiB,CAA1B,IACC,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEd,MAAM,CAACoB,aAAxB;AAAuC,IAAA,WAAW,EAAE,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWV,MAAM,GAAGI,KAApB,EADF,CATJ,CADF;AAgBD;;AAED,eAAeF,IAAf","sourcesContent":["import Label from 'modules/common/components/Label';\nimport { colors, dimensions } from 'modules/common/styles';\nimport React from 'react';\nimport styled from 'styled-components';\nimport styledTS from 'styled-components-ts';\nimport { ITag } from '../../tags/types';\n\nconst TagList = styledTS<{ length: number }>(styled.div).attrs({\n  className: props => (props.length > 0 ? 'tags' : '')\n})`\n  > span {\n    margin-right: ${dimensions.unitSpacing / 2}px;\n\n    &:last-child {\n      margin: 0;\n    }\n  }\n`;\n\ntype Props = {\n  tags: ITag[];\n  size?: string;\n  limit?: number;\n};\n\nfunction Tags({ tags, limit }: Props) {\n  const length = tags.length;\n\n  return (\n    <TagList length={length}>\n      {tags.slice(0, limit ? limit : length).map(tag => {\n        return (\n          <Label key={tag.name} lblColor={tag.colorCode} ignoreTrans={true}>\n            <span>{tag.name}</span>\n          </Label>\n        );\n      })}\n      {limit && length - limit > 0 && (\n        <Label lblColor={colors.colorCoreGray} ignoreTrans={true}>\n          <span>{`+${length - limit}`}</span>\n        </Label>\n      )}\n    </TagList>\n  );\n}\n\nexport default Tags;\n"]},"metadata":{},"sourceType":"module"}