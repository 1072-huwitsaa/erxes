{"ast":null,"code":"var _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/containers/common/SelectCustomers.tsx\";\nimport SelectWithSearch from 'modules/common/components/SelectWithSearch';\nimport { renderFullName } from 'modules/common/utils';\nimport { queries } from 'modules/customers/graphql';\nimport React from 'react';\n\nfunction generateCustomerOptions() {\n  var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return array.map(function (item) {\n    var customer = item || {};\n    return {\n      value: customer._id,\n      label: renderFullName(customer),\n      avatar: customer.avatar\n    };\n  });\n}\n\nexport default (function (_ref) {\n  var queryParams = _ref.queryParams,\n      onSelect = _ref.onSelect,\n      value = _ref.value,\n      _ref$multi = _ref.multi,\n      multi = _ref$multi === void 0 ? true : _ref$multi,\n      label = _ref.label,\n      name = _ref.name;\n  var defaultValue = queryParams ? queryParams[name] : value;\n  return React.createElement(SelectWithSearch, {\n    label: label,\n    queryName: \"customers\",\n    name: name,\n    customQuery: queries.customers,\n    values: typeof defaultValue === 'string' ? multi ? [defaultValue] : defaultValue : defaultValue,\n    generateOptions: generateCustomerOptions,\n    onSelect: onSelect,\n    multi: multi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/containers/common/SelectCustomers.tsx"],"names":["SelectWithSearch","renderFullName","queries","React","generateCustomerOptions","array","map","item","customer","value","_id","label","avatar","queryParams","onSelect","multi","name","defaultValue","customers"],"mappings":";AAAA,OAAOA,gBAAP,MAA6B,4CAA7B;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,OAAT,QAAwB,2BAAxB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,uBAAT,GAAqE;AAAA,MAApCC,KAAoC,uEAAf,EAAe;AACnE,SAAOA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI,EAAI;AACvB,QAAMC,QAAQ,GAAGD,IAAI,IAAK,EAA1B;AAEA,WAAO;AACLE,MAAAA,KAAK,EAAED,QAAQ,CAACE,GADX;AAELC,MAAAA,KAAK,EAAEV,cAAc,CAACO,QAAD,CAFhB;AAGLI,MAAAA,MAAM,EAAEJ,QAAQ,CAACI;AAHZ,KAAP;AAKD,GARM,CAAP;AASD;;AAED,gBAAe,gBAeT;AAAA,MAdJC,WAcI,QAdJA,WAcI;AAAA,MAbJC,QAaI,QAbJA,QAaI;AAAA,MAZJL,KAYI,QAZJA,KAYI;AAAA,wBAXJM,KAWI;AAAA,MAXJA,KAWI,2BAXI,IAWJ;AAAA,MAVJJ,KAUI,QAVJA,KAUI;AAAA,MATJK,IASI,QATJA,IASI;AACJ,MAAMC,YAAY,GAAGJ,WAAW,GAAGA,WAAW,CAACG,IAAD,CAAd,GAAuBP,KAAvD;AAEA,SACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEE,KADT;AAEE,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,IAAI,EAAEK,IAHR;AAIE,IAAA,WAAW,EAAEd,OAAO,CAACgB,SAJvB;AAKE,IAAA,MAAM,EACJ,OAAOD,YAAP,KAAwB,QAAxB,GACIF,KAAK,GACH,CAACE,YAAD,CADG,GAEHA,YAHN,GAIIA,YAVR;AAYE,IAAA,eAAe,EAAEb,uBAZnB;AAaE,IAAA,QAAQ,EAAEU,QAbZ;AAcE,IAAA,KAAK,EAAEC,KAdT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAkBD,CApCD","sourcesContent":["import SelectWithSearch from 'modules/common/components/SelectWithSearch';\nimport { IOption, IQueryParams } from 'modules/common/types';\nimport { renderFullName } from 'modules/common/utils';\nimport { queries } from 'modules/customers/graphql';\nimport { ICustomer } from 'modules/customers/types';\nimport React from 'react';\n\nfunction generateCustomerOptions(array: ICustomer[] = []): IOption[] {\n  return array.map(item => {\n    const customer = item || ({} as ICustomer);\n\n    return {\n      value: customer._id,\n      label: renderFullName(customer),\n      avatar: customer.avatar\n    };\n  });\n}\n\nexport default ({\n  queryParams,\n  onSelect,\n  value,\n  multi = true,\n  label,\n  name\n}: {\n  queryParams?: IQueryParams;\n  label: string;\n  onSelect: (values: string[] | string, name: string) => void;\n  multi?: boolean;\n  customOption?: IOption;\n  value?: string | string[];\n  name: string;\n}) => {\n  const defaultValue = queryParams ? queryParams[name] : value;\n\n  return (\n    <SelectWithSearch\n      label={label}\n      queryName=\"customers\"\n      name={name}\n      customQuery={queries.customers}\n      values={\n        typeof defaultValue === 'string'\n          ? multi\n            ? [defaultValue]\n            : defaultValue\n          : defaultValue\n      }\n      generateOptions={generateCustomerOptions}\n      onSelect={onSelect}\n      multi={multi}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}