{"ast":null,"code":"import _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/permissions/components/PermissionForm.tsx\";\nimport Button from 'erxes-common-ui/lib/components/button';\nimport ButtonMutate from 'modules/common/components/ButtonMutate';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { __, Alert } from 'modules/common/utils';\nimport SelectTeamMembers from 'modules/settings/team/containers/SelectTeamMembers';\nimport React from 'react';\nimport Select from 'react-select-plus';\nimport { mutations } from '../graphql';\nimport { Divider, StepBody, StepHeader, StepItem } from '../styles';\nimport { correctValue, filterActions, generateListParams, generateModuleParams } from './utils';\n\nvar PermissionForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PermissionForm, _React$Component);\n\n  function PermissionForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PermissionForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PermissionForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedModule: '',\n      selectedActions: [],\n      selectedUserIds: [],\n      selectedGroups: [],\n      valueChanged: false,\n      isSubmitted: false\n    };\n\n    _this.save = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          selectedModule = _this$state.selectedModule,\n          selectedActions = _this$state.selectedActions,\n          selectedUserIds = _this$state.selectedUserIds,\n          selectedGroups = _this$state.selectedGroups;\n\n      if (!selectedModule) {\n        return Alert.error('Please select the module!');\n      }\n\n      if (!_this.hasItems(selectedActions)) {\n        return Alert.error('Please select at least one action!');\n      }\n\n      if (!_this.hasItems(selectedGroups) && !_this.hasItems(selectedUserIds)) {\n        return Alert.error('Please select at least one group or user!');\n      }\n\n      return _this.setState({\n        isSubmitted: true\n      });\n    };\n\n    _this.getVariables = function () {\n      var _this$state2 = _this.state,\n          selectedModule = _this$state2.selectedModule,\n          selectedActions = _this$state2.selectedActions,\n          selectedUserIds = _this$state2.selectedUserIds,\n          selectedGroups = _this$state2.selectedGroups,\n          valueChanged = _this$state2.valueChanged;\n      return {\n        module: selectedModule,\n        actions: _this.collectValues(selectedActions),\n        userIds: selectedUserIds,\n        groupIds: _this.collectValues(selectedGroups),\n        allowed: valueChanged\n      };\n    };\n\n    _this.onChange = function () {\n      _this.setState({\n        valueChanged: true\n      });\n    };\n\n    _this.hasItems = function (items) {\n      return items.length > 0 ? true : false;\n    };\n\n    _this.isModuleSelected = function () {\n      if (_this.state.selectedModule) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.select = function (name, value) {\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.changeModule = function (item) {\n      var selectedModule = correctValue(item);\n\n      _this.setState({\n        selectedModule: selectedModule,\n        selectedActions: []\n      });\n    };\n\n    _this.collectValues = function (items) {\n      return items.map(function (item) {\n        return item.value;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PermissionForm, [{\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          modules = _this$props.modules,\n          actions = _this$props.actions,\n          groups = _this$props.groups;\n      var _this$state3 = this.state,\n          selectedModule = _this$state3.selectedModule,\n          selectedActions = _this$state3.selectedActions,\n          selectedUserIds = _this$state3.selectedUserIds,\n          selectedGroups = _this$state3.selectedGroups,\n          valueChanged = _this$state3.valueChanged;\n\n      var usersOnChange = function usersOnChange(users) {\n        return _this2.select('selectedUserIds', users);\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(StepItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(StepHeader, {\n        number: \"1\",\n        isDone: this.isModuleSelected() && this.hasItems(selectedActions),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, __('What action can do')), React.createElement(StepBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Choose the module\"), React.createElement(Select, {\n        placeholder: __('Choose module'),\n        options: generateModuleParams(modules),\n        value: selectedModule,\n        onChange: this.changeModule,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, __('Then')), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Choose the actions\"), React.createElement(Select, {\n        placeholder: __('Choose actions'),\n        options: filterActions(actions, selectedModule),\n        value: selectedActions,\n        disabled: !this.isModuleSelected(),\n        onChange: this.select.bind(this, 'selectedActions'),\n        multi: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })))), React.createElement(StepItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(StepHeader, {\n        number: \"2\",\n        isDone: this.hasItems(selectedGroups) || this.hasItems(selectedUserIds),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, __('Who can')), React.createElement(StepBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Choose the groups\"), React.createElement(Select, {\n        placeholder: __('Choose groups'),\n        options: generateListParams(groups),\n        value: selectedGroups,\n        onChange: this.select.bind(this, 'selectedGroups'),\n        multi: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, __('Or')), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Choose the users\"), React.createElement(SelectTeamMembers, {\n        label: \"Choose users\",\n        name: \"selectedUserIds\",\n        value: selectedUserIds,\n        onSelect: usersOnChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })))), React.createElement(StepItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(StepHeader, {\n        number: \"3\",\n        isDone: valueChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, __('Grant permission')), React.createElement(StepBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Allow\"), React.createElement(FormControl, {\n        componentClass: \"checkbox\",\n        defaultChecked: false,\n        id: \"allowed\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, __('Check if permission is allowed'))))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          closeModal = _this$props2.closeModal,\n          refetchQueries = _this$props2.refetchQueries;\n      return React.createElement(\"form\", {\n        onSubmit: this.save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, this.renderContent(), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        type: \"button\",\n        onClick: closeModal,\n        icon: \"cancel-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(ButtonMutate, {\n        mutation: mutations.permissionAdd,\n        variables: this.getVariables(),\n        callback: closeModal,\n        refetchQueries: refetchQueries,\n        isSubmitted: this.state.isSubmitted,\n        type: \"submit\",\n        successMessage: __(\"You successfully added a permission\") + '.',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PermissionForm;\n}(React.Component);\n\nexport default PermissionForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/permissions/components/PermissionForm.tsx"],"names":["Button","ButtonMutate","FormControl","FormGroup","ControlLabel","ModalFooter","__","Alert","SelectTeamMembers","React","Select","mutations","Divider","StepBody","StepHeader","StepItem","correctValue","filterActions","generateListParams","generateModuleParams","PermissionForm","state","selectedModule","selectedActions","selectedUserIds","selectedGroups","valueChanged","isSubmitted","save","e","preventDefault","error","hasItems","setState","getVariables","module","actions","collectValues","userIds","groupIds","allowed","onChange","items","length","isModuleSelected","select","name","value","changeModule","item","map","props","modules","groups","usersOnChange","users","bind","closeModal","refetchQueries","renderContent","permissionAdd","Component"],"mappings":"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","sourcesContent":["import Button from 'erxes-common-ui/lib/components/button';\nimport ButtonMutate from 'modules/common/components/ButtonMutate';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { __, Alert } from 'modules/common/utils';\nimport SelectTeamMembers from 'modules/settings/team/containers/SelectTeamMembers';\nimport React from 'react';\nimport Select from 'react-select-plus';\nimport { mutations } from '../graphql';\nimport { Divider, StepBody, StepHeader, StepItem } from '../styles';\nimport { IActions, IModule, IUserGroup } from '../types';\nimport {\n  correctValue,\n  filterActions,\n  generatedList,\n  generateListParams,\n  generateModuleParams\n} from './utils';\n\ntype Props = {\n  modules: IModule[];\n  actions: IActions[];\n  groups: IUserGroup[];\n  refetchQueries: any;\n  closeModal: () => void;\n};\n\ntype State = {\n  selectedModule: string;\n  selectedActions: IActions[];\n  selectedUserIds: string[];\n  selectedGroups: IUserGroup[];\n  valueChanged: boolean;\n  isSubmitted: boolean;\n};\n\nclass PermissionForm extends React.Component<Props, State> {\n  state = {\n    selectedModule: '',\n    selectedActions: [],\n    selectedUserIds: [],\n    selectedGroups: [],\n    valueChanged: false,\n    isSubmitted: false\n  };\n\n  save = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const {\n      selectedModule,\n      selectedActions,\n      selectedUserIds,\n      selectedGroups\n    } = this.state;\n\n    if (!selectedModule) {\n      return Alert.error('Please select the module!');\n    }\n\n    if (!this.hasItems(selectedActions)) {\n      return Alert.error('Please select at least one action!');\n    }\n\n    if (!this.hasItems(selectedGroups) && !this.hasItems(selectedUserIds)) {\n      return Alert.error('Please select at least one group or user!');\n    }\n\n    return this.setState({ isSubmitted: true });\n  };\n\n  getVariables = () => {\n    const {\n      selectedModule,\n      selectedActions,\n      selectedUserIds,\n      selectedGroups,\n      valueChanged\n    } = this.state;\n\n    return {\n      module: selectedModule,\n      actions: this.collectValues(selectedActions),\n      userIds: selectedUserIds,\n      groupIds: this.collectValues(selectedGroups),\n      allowed: valueChanged\n    };\n  };\n\n  onChange = () => {\n    this.setState({ valueChanged: true });\n  };\n\n  hasItems = (items: string[]) => {\n    return items.length > 0 ? true : false;\n  };\n\n  isModuleSelected = () => {\n    if (this.state.selectedModule) {\n      return true;\n    }\n\n    return false;\n  };\n\n  select = <T extends keyof State>(name: T, value) => {\n    this.setState({ [name]: value } as Pick<State, keyof State>);\n  };\n\n  changeModule = (item: generatedList) => {\n    const selectedModule = correctValue(item);\n\n    this.setState({\n      selectedModule,\n      selectedActions: []\n    });\n  };\n\n  collectValues = (items: generatedList[]) => {\n    return items.map(item => item.value);\n  };\n\n  renderContent() {\n    const { modules, actions, groups } = this.props;\n    const {\n      selectedModule,\n      selectedActions,\n      selectedUserIds,\n      selectedGroups,\n      valueChanged\n    } = this.state;\n\n    const usersOnChange = users => this.select('selectedUserIds', users);\n\n    return (\n      <>\n        <StepItem>\n          <StepHeader\n            number=\"1\"\n            isDone={this.isModuleSelected() && this.hasItems(selectedActions)}\n          >\n            {__('What action can do')}\n          </StepHeader>\n          <StepBody>\n            <FormGroup>\n              <ControlLabel required={true}>Choose the module</ControlLabel>\n              <Select\n                placeholder={__('Choose module')}\n                options={generateModuleParams(modules)}\n                value={selectedModule}\n                onChange={this.changeModule}\n              />\n            </FormGroup>\n            <Divider>{__('Then')}</Divider>\n            <FormGroup>\n              <ControlLabel required={true}>Choose the actions</ControlLabel>\n              <Select\n                placeholder={__('Choose actions')}\n                options={filterActions(actions, selectedModule)}\n                value={selectedActions}\n                disabled={!this.isModuleSelected()}\n                onChange={this.select.bind(this, 'selectedActions')}\n                multi={true}\n              />\n            </FormGroup>\n          </StepBody>\n        </StepItem>\n\n        <StepItem>\n          <StepHeader\n            number=\"2\"\n            isDone={\n              this.hasItems(selectedGroups) || this.hasItems(selectedUserIds)\n            }\n          >\n            {__('Who can')}\n          </StepHeader>\n          <StepBody>\n            <FormGroup>\n              <ControlLabel required={true}>Choose the groups</ControlLabel>\n              <Select\n                placeholder={__('Choose groups')}\n                options={generateListParams(groups)}\n                value={selectedGroups}\n                onChange={this.select.bind(this, 'selectedGroups')}\n                multi={true}\n              />\n            </FormGroup>\n            <Divider>{__('Or')}</Divider>\n            <FormGroup>\n              <ControlLabel required={true}>Choose the users</ControlLabel>\n\n              <SelectTeamMembers\n                label=\"Choose users\"\n                name=\"selectedUserIds\"\n                value={selectedUserIds}\n                onSelect={usersOnChange}\n              />\n            </FormGroup>\n          </StepBody>\n        </StepItem>\n\n        <StepItem>\n          <StepHeader number=\"3\" isDone={valueChanged}>\n            {__('Grant permission')}\n          </StepHeader>\n          <StepBody>\n            <FormGroup>\n              <ControlLabel>Allow</ControlLabel>\n\n              <FormControl\n                componentClass=\"checkbox\"\n                defaultChecked={false}\n                id=\"allowed\"\n                onChange={this.onChange}\n              />\n              <p>{__('Check if permission is allowed')}</p>\n            </FormGroup>\n          </StepBody>\n        </StepItem>\n      </>\n    );\n  }\n\n  render() {\n    const { closeModal, refetchQueries } = this.props;\n\n    return (\n      <form onSubmit={this.save}>\n        {this.renderContent()}\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            type=\"button\"\n            onClick={closeModal}\n            icon=\"cancel-1\"\n          >\n            Cancel\n          </Button>\n\n          <ButtonMutate\n            mutation={mutations.permissionAdd}\n            variables={this.getVariables()}\n            callback={closeModal}\n            refetchQueries={refetchQueries}\n            isSubmitted={this.state.isSubmitted}\n            type=\"submit\"\n            successMessage={__(`You successfully added a permission`) + '.'}\n          />\n        </ModalFooter>\n      </form>\n    );\n  }\n}\n\nexport default PermissionForm;\n"]},"metadata":{},"sourceType":"module"}