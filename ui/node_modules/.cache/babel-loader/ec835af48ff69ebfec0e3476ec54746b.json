{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/deals/components/product/PaymentForm.tsx\";\nimport { FormControl } from 'modules/common/components/form';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport CURRENCIES from 'modules/common/constants/currencies';\nimport { __ } from 'modules/common/utils';\nimport { selectConfigOptions } from 'modules/deals/utils';\nimport React from 'react';\nimport Select from 'react-select-plus';\nimport { PAYMENT_TYPES } from '../../constants';\nimport { ContentColumn, ContentRow, ContentRowTitle, Divider, WrongLess } from '../../styles';\n\nvar PaymentForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PaymentForm, _React$Component);\n\n  function PaymentForm(props) {\n    var _this;\n\n    _classCallCheck(this, PaymentForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PaymentForm).call(this, props));\n\n    _this.paymentStateChange = function (kind, name, value) {\n      var _this$props = _this.props,\n          onChangePaymentsData = _this$props.onChangePaymentsData,\n          calcChangePay = _this$props.calcChangePay;\n      var paymentsData = _this.state.paymentsData;\n\n      if (!paymentsData[name]) {\n        paymentsData[name] = {};\n      }\n\n      paymentsData[name][kind] = value;\n      calcChangePay();\n\n      _this.setState({\n        paymentsData: paymentsData\n      });\n\n      onChangePaymentsData(paymentsData);\n    };\n\n    _this.selectOption = function (option) {\n      return React.createElement(\"div\", {\n        className: \"simple-option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, option.label));\n    };\n\n    var payments = _this.props.payments;\n    _this.state = {\n      paymentsData: payments || {}\n    };\n    return _this;\n  }\n\n  _createClass(PaymentForm, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.calcChangePay();\n    }\n  }, {\n    key: \"renderAmount\",\n    value: function renderAmount(amount) {\n      if (amount < 0) {\n        return React.createElement(WrongLess, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, amount.toLocaleString());\n      }\n\n      return amount.toLocaleString();\n    }\n  }, {\n    key: \"renderTotal\",\n    value: function renderTotal(value) {\n      var _this2 = this;\n\n      return Object.keys(value).map(function (key) {\n        return React.createElement(\"div\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, _this2.renderAmount(value[key]), \" \", React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, key));\n      });\n    }\n  }, {\n    key: \"renderPaymentsByType\",\n    value: function renderPaymentsByType(type) {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          currencies = _this$props2.currencies,\n          changePayData = _this$props2.changePayData;\n      var paymentsData = this.state.paymentsData;\n\n      var onChange = function onChange(e) {\n        if ((!paymentsData[type.name] || !paymentsData[type.name].currency) && currencies.length > 0) {\n          _this3.paymentStateChange('currency', type.name, currencies[0]);\n        }\n\n        _this3.paymentStateChange('amount', type.name, parseFloat(e.target.value || '0'));\n      };\n\n      var currencyOnChange = function currencyOnChange(currency) {\n        _this3.paymentStateChange('currency', type.name, currency ? currency.value : '');\n      };\n\n      var onClick = function onClick() {\n        Object.keys(changePayData).forEach(function (key) {\n          if (changePayData[key] > 0 && (!paymentsData[type.name] || !paymentsData[type.name].amount)) {\n            if (!paymentsData[type.name]) {\n              paymentsData[type.name] = {};\n            }\n\n            paymentsData[type.name].amount = changePayData[key];\n            paymentsData[type.name].currency = key;\n            changePayData[key] = 0;\n\n            _this3.setState({\n              paymentsData: paymentsData\n            });\n\n            _this3.props.onChangePaymentsData(paymentsData);\n\n            return;\n          }\n        });\n      };\n\n      return React.createElement(ContentRow, {\n        key: type.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(ContentColumn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, __(type.title))), React.createElement(ContentColumn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        value: paymentsData[type.name] ? paymentsData[type.name].amount : '',\n        type: \"number\",\n        placeholder: __('Type amount'),\n        min: 0,\n        name: type.name,\n        onChange: onChange,\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(ContentColumn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Select, {\n        name: type.name,\n        placeholder: __('Choose currency'),\n        value: paymentsData[type.name] ? paymentsData[type.name].currency : 0,\n        onChange: currencyOnChange,\n        optionRenderer: this.selectOption,\n        options: selectConfigOptions(currencies, CURRENCIES),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderPayments\",\n    value: function renderPayments() {\n      var _this4 = this;\n\n      return PAYMENT_TYPES.map(function (type) {\n        return _this4.renderPaymentsByType(type);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var total = this.props.total;\n      return React.createElement(React.Fragment, null, React.createElement(ContentRowTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(ContentColumn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Total\"), this.renderTotal(total)), React.createElement(ContentColumn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Change\"), this.renderTotal(this.props.changePayData))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), this.renderPayments());\n    }\n  }]);\n\n  return PaymentForm;\n}(React.Component);\n\nexport default PaymentForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/deals/components/product/PaymentForm.tsx"],"names":["FormControl","ControlLabel","CURRENCIES","__","selectConfigOptions","React","Select","PAYMENT_TYPES","ContentColumn","ContentRow","ContentRowTitle","Divider","WrongLess","PaymentForm","props","paymentStateChange","kind","name","value","onChangePaymentsData","calcChangePay","paymentsData","state","setState","selectOption","option","label","payments","amount","toLocaleString","Object","keys","map","key","renderAmount","type","currencies","changePayData","onChange","e","currency","length","parseFloat","target","currencyOnChange","onClick","forEach","title","renderPaymentsByType","total","renderTotal","renderPayments","Component"],"mappings":"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","sourcesContent":["import { FormControl } from 'modules/common/components/form';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport CURRENCIES from 'modules/common/constants/currencies';\nimport { __ } from 'modules/common/utils';\nimport { selectConfigOptions } from 'modules/deals/utils';\nimport React from 'react';\nimport Select from 'react-select-plus';\nimport { PAYMENT_TYPES } from '../../constants';\nimport {\n  ContentColumn,\n  ContentRow,\n  ContentRowTitle,\n  Divider,\n  WrongLess\n} from '../../styles';\nimport { IPaymentsData } from '../../types';\n\ntype Props = {\n  total: { currency?: string; amount?: number };\n  payments?: IPaymentsData;\n  currencies: string[];\n  onChangePaymentsData: (paymentsData: IPaymentsData) => void;\n  calcChangePay: () => void;\n  changePayData: { currency?: string; amount?: number };\n};\n\ntype State = {\n  paymentsData: IPaymentsData;\n};\n\nclass PaymentForm extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    const { payments } = this.props;\n\n    this.state = {\n      paymentsData: payments || {}\n    };\n  }\n\n  componentWillMount() {\n    this.props.calcChangePay();\n  }\n\n  renderAmount(amount) {\n    if (amount < 0) {\n      return <WrongLess>{amount.toLocaleString()}</WrongLess>;\n    }\n    return amount.toLocaleString();\n  }\n\n  renderTotal(value) {\n    return Object.keys(value).map(key => (\n      <div key={key}>\n        {this.renderAmount(value[key])} <b>{key}</b>\n      </div>\n    ));\n  }\n\n  paymentStateChange = (kind: string, name: string, value: string | number) => {\n    const { onChangePaymentsData, calcChangePay } = this.props;\n    const { paymentsData } = this.state;\n\n    if (!paymentsData[name]) {\n      paymentsData[name] = {};\n    }\n    paymentsData[name][kind] = value;\n\n    calcChangePay();\n    this.setState({ paymentsData });\n    onChangePaymentsData(paymentsData);\n  };\n\n  selectOption = option => (\n    <div className=\"simple-option\">\n      <span>{option.label}</span>\n    </div>\n  );\n\n  renderPaymentsByType(type) {\n    const { currencies, changePayData } = this.props;\n    const { paymentsData } = this.state;\n\n    const onChange = e => {\n      if (\n        (!paymentsData[type.name] || !paymentsData[type.name].currency) &&\n        currencies.length > 0\n      ) {\n        this.paymentStateChange('currency', type.name, currencies[0]);\n      }\n\n      this.paymentStateChange(\n        'amount',\n        type.name,\n        parseFloat((e.target as HTMLInputElement).value || '0')\n      );\n    };\n\n    const currencyOnChange = (currency: HTMLOptionElement) => {\n      this.paymentStateChange(\n        'currency',\n        type.name,\n        currency ? currency.value : ''\n      );\n    };\n\n    const onClick = () => {\n      Object.keys(changePayData).forEach(key => {\n        if (\n          changePayData[key] > 0 &&\n          (!paymentsData[type.name] || !paymentsData[type.name].amount)\n        ) {\n          if (!paymentsData[type.name]) {\n            paymentsData[type.name] = {};\n          }\n\n          paymentsData[type.name].amount = changePayData[key];\n          paymentsData[type.name].currency = key;\n\n          changePayData[key] = 0;\n\n          this.setState({ paymentsData });\n          this.props.onChangePaymentsData(paymentsData);\n\n          return;\n        }\n      });\n    };\n\n    return (\n      <ContentRow key={type.name}>\n        <ContentColumn>\n          <ControlLabel>{__(type.title)}</ControlLabel>\n        </ContentColumn>\n        <ContentColumn>\n          <FormControl\n            value={\n              paymentsData[type.name] ? paymentsData[type.name].amount : ''\n            }\n            type=\"number\"\n            placeholder={__('Type amount')}\n            min={0}\n            name={type.name}\n            onChange={onChange}\n            onClick={onClick}\n          />\n        </ContentColumn>\n        <ContentColumn>\n          <Select\n            name={type.name}\n            placeholder={__('Choose currency')}\n            value={\n              paymentsData[type.name] ? paymentsData[type.name].currency : 0\n            }\n            onChange={currencyOnChange}\n            optionRenderer={this.selectOption}\n            options={selectConfigOptions(currencies, CURRENCIES)}\n          />\n        </ContentColumn>\n      </ContentRow>\n    );\n  }\n\n  renderPayments() {\n    return PAYMENT_TYPES.map(type => this.renderPaymentsByType(type));\n  }\n\n  render() {\n    const { total } = this.props;\n\n    return (\n      <>\n        <ContentRowTitle>\n          <ContentColumn>\n            <ControlLabel>Total</ControlLabel>\n            {this.renderTotal(total)}\n          </ContentColumn>\n          <ContentColumn>\n            <ControlLabel>Change</ControlLabel>\n            {this.renderTotal(this.props.changePayData)}\n          </ContentColumn>\n        </ContentRowTitle>\n        <Divider />\n\n        {this.renderPayments()}\n      </>\n    );\n  }\n}\n\nexport default PaymentForm;\n"]},"metadata":{},"sourceType":"module"}