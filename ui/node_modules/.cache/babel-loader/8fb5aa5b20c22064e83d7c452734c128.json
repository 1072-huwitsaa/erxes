{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/rule/ConditionsRule.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  text-transform: initial;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport { FlexPad, InlineForm } from \"modules/common/components/step/styles\";\nimport { RULE_CONDITIONS, VISITOR_AUDIENCE_RULES } from \"modules/engage/constants\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nvar RuleDescription = styled.p(_templateObject());\n\nvar ConditionsRule =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConditionsRule, _React$Component);\n\n  function ConditionsRule(props) {\n    var _this;\n\n    _classCallCheck(this, ConditionsRule);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConditionsRule).call(this, props));\n\n    _this.addRule = function (e) {\n      var rules = _this.state.rules;\n      var selectedOption = e.target.options[e.target.selectedIndex];\n\n      if (selectedOption.value) {\n        rules.push({\n          _id: Math.random().toString(),\n          kind: selectedOption.value,\n          text: selectedOption.text,\n          condition: \"\",\n          value: \"\"\n        });\n\n        _this.setState({\n          rules: rules\n        });\n      }\n    };\n\n    _this.state = {\n      rules: _this.props.rules || []\n    };\n    return _this;\n  }\n\n  _createClass(ConditionsRule, [{\n    key: \"renderDescription\",\n    value: function renderDescription(rule) {\n      var description;\n\n      switch (rule.kind) {\n        case \"browserLanguage\":\n          description = \"Recognizes which language is set for visitor’s browser. Insert only Language codes in value field as appointed in ISO-639, i.e “en” for English, “fr” for French, “de” for German etc.\";\n          break;\n\n        case \"currentPageUrl\":\n          description = \"Write your desired page URL, excluding domain name. For example: If you want to place your engagement message on https://office.erxes.io/pricing - then write /pricing\";\n          break;\n\n        case \"country\":\n          description = \"Locates visitor’s physical location in country  resolution. Insert only Country codes in value field as appointed in ISO-3166 standard, i.e “gb” for Great Britain, “fr” for French, “de” for German, “jp” for Japanese etc.\";\n          break;\n\n        case \"city\":\n          description = \"Locates visitor’s physical location in city resolution. Write a name of the City in value field. If Country’s not set, every city with same name will meet the criteria.\";\n          break;\n\n        default:\n          description = \"Counts individual visitor’s visitting number.\";\n      }\n\n      return description;\n    }\n  }, {\n    key: \"renderRule\",\n    value: function renderRule(rule) {\n      var _this2 = this;\n\n      var remove = function remove() {\n        var rules = _this2.state.rules;\n        rules = rules.filter(function (r) {\n          return r._id !== rule._id;\n        });\n\n        _this2.setState({\n          rules: rules\n        });\n\n        _this2.props.onChange(\"rules\", rules);\n      };\n\n      var changeProp = function changeProp(name, value) {\n        var rules = _this2.state.rules; // find current editing one\n\n        var currentRule = rules.find(function (r) {\n          return r._id === rule._id;\n        }); // set new value\n\n        if (currentRule) {\n          currentRule[name] = value;\n        }\n\n        _this2.setState({\n          rules: rules\n        });\n\n        _this2.props.onChange(\"rules\", rules);\n      };\n\n      var onChangeValue = function onChangeValue(e) {\n        changeProp(\"value\", e.target.value);\n      };\n\n      var onChangeCondition = function onChangeCondition(e) {\n        changeProp(\"condition\", e.target.value);\n      };\n\n      return React.createElement(FormGroup, {\n        key: rule._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, rule.text, React.createElement(RuleDescription, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.renderDescription(rule))), React.createElement(InlineForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        componentClass: \"select\",\n        defaultValue: rule.condition,\n        onChange: onChangeCondition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, RULE_CONDITIONS[rule.kind].map(function (cond, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: cond.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, cond.text);\n      })), React.createElement(FormControl, {\n        type: \"text\",\n        value: rule.value,\n        onChange: onChangeValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Button, {\n        size: \"small\",\n        onClick: remove,\n        btnStyle: \"danger\",\n        icon: \"times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(FlexPad, {\n        overflow: \"auto\",\n        direction: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Add rule\"), React.createElement(FormControl, {\n        componentClass: \"select\",\n        onChange: this.addRule,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, VISITOR_AUDIENCE_RULES.map(function (rule, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: rule.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, rule.text);\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, this.state.rules.map(function (rule) {\n        return _this3.renderRule(rule);\n      })));\n    }\n  }]);\n\n  return ConditionsRule;\n}(React.Component);\n\nexport default ConditionsRule;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/rule/ConditionsRule.tsx"],"names":["Button","FormControl","FormGroup","ControlLabel","FlexPad","InlineForm","RULE_CONDITIONS","VISITOR_AUDIENCE_RULES","React","styled","RuleDescription","p","ConditionsRule","props","addRule","e","rules","state","selectedOption","target","options","selectedIndex","value","push","_id","Math","random","toString","kind","text","condition","setState","rule","description","remove","filter","r","onChange","changeProp","name","currentRule","find","onChangeValue","onChangeCondition","renderDescription","map","cond","index","renderRule","Component"],"mappings":"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","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport { FlexPad, InlineForm } from \"modules/common/components/step/styles\";\nimport {\n  RULE_CONDITIONS,\n  VISITOR_AUDIENCE_RULES,\n} from \"modules/engage/constants\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { IConditionsRule } from \"../../types\";\n\nconst RuleDescription = styled.p`\n  text-transform: initial;\n`;\n\ntype Props = {\n  rules: IConditionsRule[];\n  onChange: (name: \"rules\", rules: IConditionsRule[]) => void;\n};\n\ntype State = {\n  rules: IConditionsRule[];\n};\n\nclass ConditionsRule extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      rules: this.props.rules || [],\n    };\n  }\n\n  addRule = (e) => {\n    const rules = this.state.rules;\n    const selectedOption = e.target.options[e.target.selectedIndex];\n\n    if (selectedOption.value) {\n      rules.push({\n        _id: Math.random().toString(),\n        kind: selectedOption.value,\n        text: selectedOption.text,\n        condition: \"\",\n        value: \"\",\n      });\n\n      this.setState({ rules });\n    }\n  };\n\n  renderDescription(rule) {\n    let description;\n    switch (rule.kind) {\n      case \"browserLanguage\":\n        description =\n          \"Recognizes which language is set for visitor’s browser. Insert only Language codes in value field as appointed in ISO-639, i.e “en” for English, “fr” for French, “de” for German etc.\";\n        break;\n      case \"currentPageUrl\":\n        description =\n          \"Write your desired page URL, excluding domain name. For example: If you want to place your engagement message on https://office.erxes.io/pricing - then write /pricing\";\n        break;\n      case \"country\":\n        description =\n          \"Locates visitor’s physical location in country  resolution. Insert only Country codes in value field as appointed in ISO-3166 standard, i.e “gb” for Great Britain, “fr” for French, “de” for German, “jp” for Japanese etc.\";\n        break;\n      case \"city\":\n        description =\n          \"Locates visitor’s physical location in city resolution. Write a name of the City in value field. If Country’s not set, every city with same name will meet the criteria.\";\n        break;\n      default:\n        description = \"Counts individual visitor’s visitting number.\";\n    }\n    return description;\n  }\n\n  renderRule(rule) {\n    const remove = () => {\n      let rules = this.state.rules;\n\n      rules = rules.filter((r) => r._id !== rule._id);\n\n      this.setState({ rules });\n      this.props.onChange(\"rules\", rules);\n    };\n\n    const changeProp = (name, value) => {\n      const rules = this.state.rules;\n\n      // find current editing one\n      const currentRule = rules.find((r) => r._id === rule._id);\n\n      // set new value\n      if (currentRule) {\n        currentRule[name] = value;\n      }\n\n      this.setState({ rules });\n      this.props.onChange(\"rules\", rules);\n    };\n\n    const onChangeValue = (e) => {\n      changeProp(\"value\", e.target.value);\n    };\n\n    const onChangeCondition = (e) => {\n      changeProp(\"condition\", e.target.value);\n    };\n\n    return (\n      <FormGroup key={rule._id}>\n        <ControlLabel>\n          {rule.text}\n          <RuleDescription>{this.renderDescription(rule)}</RuleDescription>\n        </ControlLabel>\n        <InlineForm>\n          <FormControl\n            componentClass=\"select\"\n            defaultValue={rule.condition}\n            onChange={onChangeCondition}\n          >\n            {RULE_CONDITIONS[rule.kind].map((cond, index) => (\n              <option key={index} value={cond.value}>\n                {cond.text}\n              </option>\n            ))}\n          </FormControl>\n\n          <FormControl\n            type=\"text\"\n            value={rule.value}\n            onChange={onChangeValue}\n          />\n          <Button\n            size=\"small\"\n            onClick={remove}\n            btnStyle=\"danger\"\n            icon=\"times\"\n          />\n        </InlineForm>\n      </FormGroup>\n    );\n  }\n\n  render() {\n    return (\n      <FlexPad overflow=\"auto\" direction=\"column\">\n        <FormGroup>\n          <ControlLabel>Add rule</ControlLabel>\n          <FormControl componentClass=\"select\" onChange={this.addRule}>\n            {VISITOR_AUDIENCE_RULES.map((rule, index) => (\n              <option key={index} value={rule.value}>\n                {rule.text}\n              </option>\n            ))}\n          </FormControl>\n        </FormGroup>\n\n        <FormGroup>\n          {this.state.rules.map((rule) => this.renderRule(rule))}\n        </FormGroup>\n      </FlexPad>\n    );\n  }\n}\n\nexport default ConditionsRule;\n"]},"metadata":{},"sourceType":"module"}