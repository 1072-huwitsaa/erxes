{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/boards/components/PipelineForm.tsx\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport { COLORS } from \"modules/boards/constants\";\nimport { FlexContent } from \"modules/boards/styles/item\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport { colors } from \"modules/common/styles\";\nimport { __ } from \"modules/common/utils\";\nimport { ColorPick, ColorPicker, ExpandWrapper } from \"modules/settings/styles\";\nimport SelectTeamMembers from \"modules/settings/team/containers/SelectTeamMembers\";\nimport React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport TwitterPicker from \"react-color/lib/Twitter\";\nimport Select from \"react-select-plus\";\nimport { SelectMemberStyled } from \"../styles\";\nimport Stages from \"./Stages\";\n\nvar PipelineForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PipelineForm, _React$Component);\n\n  function PipelineForm(props) {\n    var _this;\n\n    _classCallCheck(this, PipelineForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PipelineForm).call(this, props));\n\n    _this.onChangeStages = function (stages) {\n      _this.setState({\n        stages: stages\n      });\n    };\n\n    _this.onChangeVisibility = function (e) {\n      _this.setState({\n        visibility: e.currentTarget.value\n      });\n    };\n\n    _this.onChangeMembers = function (items) {\n      _this.setState({\n        selectedMemberIds: items\n      });\n    };\n\n    _this.onChangeDominantUsers = function (items) {\n      _this.setState({\n        excludeCheckUserIds: items\n      });\n    };\n\n    _this.collectValues = function (items) {\n      return items.map(function (item) {\n        return item.value;\n      });\n    };\n\n    _this.onColorChange = function (e) {\n      _this.setState({\n        backgroundColor: e.hex\n      });\n    };\n\n    _this.generateDoc = function (values) {\n      var _this$props = _this.props,\n          pipeline = _this$props.pipeline,\n          type = _this$props.type,\n          extraFields = _this$props.extraFields;\n      var _this$state = _this.state,\n          selectedMemberIds = _this$state.selectedMemberIds,\n          stages = _this$state.stages,\n          backgroundColor = _this$state.backgroundColor,\n          isCheckUser = _this$state.isCheckUser,\n          excludeCheckUserIds = _this$state.excludeCheckUserIds,\n          boardId = _this$state.boardId;\n      var finalValues = values;\n\n      if (pipeline) {\n        finalValues._id = pipeline._id;\n      }\n\n      return _objectSpread({}, finalValues, extraFields, {\n        type: type,\n        boardId: boardId,\n        stages: stages.filter(function (el) {\n          return el.name;\n        }),\n        memberIds: selectedMemberIds,\n        bgColor: backgroundColor,\n        isCheckUser: isCheckUser,\n        excludeCheckUserIds: excludeCheckUserIds\n      });\n    };\n\n    _this.onChangeIsCheckUser = function (e) {\n      var isChecked = e.currentTarget.checked;\n\n      _this.setState({\n        isCheckUser: isChecked\n      });\n    };\n\n    _this.renderContent = function (formProps) {\n      var _this$props2 = _this.props,\n          pipeline = _this$props2.pipeline,\n          renderButton = _this$props2.renderButton,\n          closeModal = _this$props2.closeModal,\n          options = _this$props2.options,\n          renderExtraFields = _this$props2.renderExtraFields;\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted;\n      var object = pipeline || {};\n      var pipelineName = options && options.pipelineName ? options.pipelineName.toLowerCase() : \"pipeline\";\n      var popoverBottom = React.createElement(Popover, {\n        id: \"color-picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(TwitterPicker, {\n        width: \"266px\",\n        triangle: \"hide\",\n        color: _this.state.backgroundColor,\n        onChange: _this.onColorChange,\n        colors: COLORS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        id: \"manage-pipeline-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, pipeline ? \"Edit \".concat(pipelineName) : \"Add \".concat(pipelineName))), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Name\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"name\",\n        defaultValue: object.name,\n        autoFocus: true,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }))), renderExtraFields && renderExtraFields(formProps), React.createElement(FlexContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(ExpandWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Visibility\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"visibility\",\n        componentClass: \"select\",\n        value: _this.state.visibility,\n        onChange: _this.onChangeVisibility,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: \"public\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, __(\"Public\")), React.createElement(\"option\", {\n        value: \"private\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, __(\"Private\"))))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Background\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(OverlayTrigger, {\n        trigger: \"click\",\n        rootClose: true,\n        placement: \"bottom\",\n        overlay: popoverBottom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(ColorPick, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(ColorPicker, {\n        style: {\n          backgroundColor: _this.state.backgroundColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      })))))), _this.renderBoards(), _this.renderSelectMembers(), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, __(\"Show only the user's assigned(created)\"), \" \", _this.props.type, \"s\"), React.createElement(FormControl, {\n        componentClass: \"checkbox\",\n        checked: _this.state.isCheckUser,\n        onChange: _this.onChangeIsCheckUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      })), _this.renderDominantUsers(), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Stages\"), React.createElement(\"div\", {\n        id: \"stages-in-pipeline-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(Stages, {\n        options: options,\n        type: _this.props.type,\n        stages: _this.state.stages,\n        onChangeStages: _this.onChangeStages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        type: \"button\",\n        icon: \"times-circle\",\n        onClick: closeModal,\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"Cancel\"), renderButton({\n        name: pipelineName,\n        values: _this.generateDoc(values),\n        isSubmitted: isSubmitted,\n        callback: closeModal,\n        object: pipeline,\n        confirmationUpdate: true\n      }))));\n    };\n\n    var _this$props3 = _this.props,\n        _pipeline = _this$props3.pipeline,\n        _stages = _this$props3.stages;\n    _this.state = {\n      stages: (_stages || []).map(function (stage) {\n        return _objectSpread({}, stage);\n      }),\n      visibility: _pipeline ? _pipeline.visibility || \"public\" : \"public\",\n      selectedMemberIds: _pipeline ? _pipeline.memberIds || [] : [],\n      backgroundColor: _pipeline && _pipeline.bgColor || colors.colorPrimaryDark,\n      isCheckUser: _pipeline ? _pipeline.isCheckUser || false : false,\n      excludeCheckUserIds: _pipeline ? _pipeline.excludeCheckUserIds || [] : [],\n      boardId: props.boardId || \"\"\n    };\n    return _this;\n  }\n\n  _createClass(PipelineForm, [{\n    key: \"renderSelectMembers\",\n    value: function renderSelectMembers() {\n      var _this$state2 = this.state,\n          visibility = _this$state2.visibility,\n          selectedMemberIds = _this$state2.selectedMemberIds;\n\n      if (visibility === \"public\") {\n        return;\n      }\n\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(SelectMemberStyled, {\n        zIndex: 2002,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Members\"), React.createElement(SelectTeamMembers, {\n        label: \"Choose members\",\n        name: \"selectedMemberIds\",\n        value: selectedMemberIds,\n        onSelect: this.onChangeMembers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderDominantUsers\",\n    value: function renderDominantUsers() {\n      var _this$state3 = this.state,\n          isCheckUser = _this$state3.isCheckUser,\n          excludeCheckUserIds = _this$state3.excludeCheckUserIds;\n\n      if (!isCheckUser) {\n        return;\n      }\n\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(SelectMemberStyled, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Users eligible to see all \", this.props.type, \"s\"), React.createElement(SelectTeamMembers, {\n        label: \"Choose members\",\n        name: \"excludeCheckUserIds\",\n        value: excludeCheckUserIds,\n        onSelect: this.onChangeDominantUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderBoards\",\n    value: function renderBoards() {\n      var _this2 = this;\n\n      var boards = this.props.boards;\n      var boardOptions = boards.map(function (board) {\n        return {\n          value: board._id,\n          label: board.name\n        };\n      });\n\n      var onChange = function onChange(item) {\n        return _this2.setState({\n          boardId: item.value\n        });\n      };\n\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Board\"), React.createElement(Select, {\n        placeholder: __(\"Choose a board\"),\n        value: this.state.boardId,\n        options: boardOptions,\n        onChange: onChange,\n        clearable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          show = _this$props4.show,\n          closeModal = _this$props4.closeModal;\n\n      if (!show) {\n        return null;\n      }\n\n      return React.createElement(Modal, {\n        show: show,\n        onHide: closeModal,\n        enforceFocus: false,\n        animation: false,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(Form, {\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PipelineForm;\n}(React.Component);\n\nexport default PipelineForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/boards/components/PipelineForm.tsx"],"names":["Button","COLORS","FlexContent","FormControl","Form","FormGroup","ControlLabel","colors","__","ColorPick","ColorPicker","ExpandWrapper","SelectTeamMembers","React","Modal","OverlayTrigger","Popover","TwitterPicker","Select","SelectMemberStyled","Stages","PipelineForm","props","onChangeStages","stages","setState","onChangeVisibility","e","visibility","currentTarget","value","onChangeMembers","items","selectedMemberIds","onChangeDominantUsers","excludeCheckUserIds","collectValues","map","item","onColorChange","backgroundColor","hex","generateDoc","values","pipeline","type","extraFields","state","isCheckUser","boardId","finalValues","_id","filter","el","name","memberIds","bgColor","onChangeIsCheckUser","isChecked","checked","renderContent","formProps","renderButton","closeModal","options","renderExtraFields","isSubmitted","object","pipelineName","toLowerCase","popoverBottom","renderBoards","renderSelectMembers","renderDominantUsers","callback","confirmationUpdate","stage","colorPrimaryDark","boards","boardOptions","board","label","onChange","show","Component"],"mappings":"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","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport { COLORS } from \"modules/boards/constants\";\nimport { FlexContent } from \"modules/boards/styles/item\";\nimport { IBoard, IPipeline, IStage } from \"modules/boards/types\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport { colors } from \"modules/common/styles\";\nimport { IButtonMutateProps, IFormProps } from \"modules/common/types\";\nimport { __ } from \"modules/common/utils\";\nimport { ColorPick, ColorPicker, ExpandWrapper } from \"modules/settings/styles\";\nimport SelectTeamMembers from \"modules/settings/team/containers/SelectTeamMembers\";\nimport React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport TwitterPicker from \"react-color/lib/Twitter\";\nimport Select from \"react-select-plus\";\nimport { SelectMemberStyled } from \"../styles\";\nimport { IOption } from \"../types\";\nimport Stages from \"./Stages\";\n\ntype Props = {\n  type: string;\n  show: boolean;\n  boardId: string;\n  pipeline?: IPipeline;\n  stages?: IStage[];\n  boards: IBoard[];\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  closeModal: () => void;\n  options?: IOption;\n  renderExtraFields?: (formProps: IFormProps) => JSX.Element;\n  extraFields?: any;\n};\n\ntype State = {\n  stages: IStage[];\n  visibility: string;\n  selectedMemberIds: string[];\n  backgroundColor: string;\n  isCheckUser: boolean;\n  excludeCheckUserIds: string[];\n  boardId: string;\n};\n\nclass PipelineForm extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const { pipeline, stages } = this.props;\n\n    this.state = {\n      stages: (stages || []).map((stage) => ({ ...stage })),\n      visibility: pipeline ? pipeline.visibility || \"public\" : \"public\",\n      selectedMemberIds: pipeline ? pipeline.memberIds || [] : [],\n      backgroundColor:\n        (pipeline && pipeline.bgColor) || colors.colorPrimaryDark,\n      isCheckUser: pipeline ? pipeline.isCheckUser || false : false,\n      excludeCheckUserIds: pipeline ? pipeline.excludeCheckUserIds || [] : [],\n      boardId: props.boardId || \"\",\n    };\n  }\n\n  onChangeStages = (stages) => {\n    this.setState({ stages });\n  };\n\n  onChangeVisibility = (e: React.FormEvent<HTMLElement>) => {\n    this.setState({\n      visibility: (e.currentTarget as HTMLInputElement).value,\n    });\n  };\n\n  onChangeMembers = (items) => {\n    this.setState({ selectedMemberIds: items });\n  };\n\n  onChangeDominantUsers = (items) => {\n    this.setState({ excludeCheckUserIds: items });\n  };\n\n  collectValues = (items) => {\n    return items.map((item) => item.value);\n  };\n\n  onColorChange = (e) => {\n    this.setState({ backgroundColor: e.hex });\n  };\n\n  generateDoc = (values: {\n    _id?: string;\n    name: string;\n    visibility: string;\n  }) => {\n    const { pipeline, type, extraFields } = this.props;\n    const {\n      selectedMemberIds,\n      stages,\n      backgroundColor,\n      isCheckUser,\n      excludeCheckUserIds,\n      boardId,\n    } = this.state;\n    const finalValues = values;\n\n    if (pipeline) {\n      finalValues._id = pipeline._id;\n    }\n\n    return {\n      ...finalValues,\n      ...extraFields,\n      type,\n      boardId,\n      stages: stages.filter((el) => el.name),\n      memberIds: selectedMemberIds,\n      bgColor: backgroundColor,\n      isCheckUser,\n      excludeCheckUserIds,\n    };\n  };\n\n  renderSelectMembers() {\n    const { visibility, selectedMemberIds } = this.state;\n\n    if (visibility === \"public\") {\n      return;\n    }\n\n    return (\n      <FormGroup>\n        <SelectMemberStyled zIndex={2002}>\n          <ControlLabel>Members</ControlLabel>\n\n          <SelectTeamMembers\n            label=\"Choose members\"\n            name=\"selectedMemberIds\"\n            value={selectedMemberIds}\n            onSelect={this.onChangeMembers}\n          />\n        </SelectMemberStyled>\n      </FormGroup>\n    );\n  }\n\n  onChangeIsCheckUser = (e) => {\n    const isChecked = (e.currentTarget as HTMLInputElement).checked;\n    this.setState({ isCheckUser: isChecked });\n  };\n\n  renderDominantUsers() {\n    const { isCheckUser, excludeCheckUserIds } = this.state;\n\n    if (!isCheckUser) {\n      return;\n    }\n\n    return (\n      <FormGroup>\n        <SelectMemberStyled>\n          <ControlLabel>\n            Users eligible to see all {this.props.type}s\n          </ControlLabel>\n\n          <SelectTeamMembers\n            label=\"Choose members\"\n            name=\"excludeCheckUserIds\"\n            value={excludeCheckUserIds}\n            onSelect={this.onChangeDominantUsers}\n          />\n        </SelectMemberStyled>\n      </FormGroup>\n    );\n  }\n\n  renderBoards() {\n    const { boards } = this.props;\n\n    const boardOptions = boards.map((board) => ({\n      value: board._id,\n      label: board.name,\n    }));\n\n    const onChange = (item) => this.setState({ boardId: item.value });\n\n    return (\n      <FormGroup>\n        <ControlLabel required={true}>Board</ControlLabel>\n        <Select\n          placeholder={__(\"Choose a board\")}\n          value={this.state.boardId}\n          options={boardOptions}\n          onChange={onChange}\n          clearable={false}\n        />\n      </FormGroup>\n    );\n  }\n\n  renderContent = (formProps: IFormProps) => {\n    const {\n      pipeline,\n      renderButton,\n      closeModal,\n      options,\n      renderExtraFields,\n    } = this.props;\n    const { values, isSubmitted } = formProps;\n    const object = pipeline || ({} as IPipeline);\n    const pipelineName =\n      options && options.pipelineName\n        ? options.pipelineName.toLowerCase()\n        : \"pipeline\";\n\n    const popoverBottom = (\n      <Popover id=\"color-picker\">\n        <TwitterPicker\n          width=\"266px\"\n          triangle=\"hide\"\n          color={this.state.backgroundColor}\n          onChange={this.onColorChange}\n          colors={COLORS}\n        />\n      </Popover>\n    );\n\n    return (\n      <div id=\"manage-pipeline-modal\">\n        <Modal.Header closeButton={true}>\n          <Modal.Title>\n            {pipeline ? `Edit ${pipelineName}` : `Add ${pipelineName}`}\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <FormGroup>\n            <ControlLabel required={true}>Name</ControlLabel>\n            <FormControl\n              {...formProps}\n              name=\"name\"\n              defaultValue={object.name}\n              autoFocus={true}\n              required={true}\n            />\n          </FormGroup>\n\n          {renderExtraFields && renderExtraFields(formProps)}\n\n          <FlexContent>\n            <ExpandWrapper>\n              <FormGroup>\n                <ControlLabel required={true}>Visibility</ControlLabel>\n                <FormControl\n                  {...formProps}\n                  name=\"visibility\"\n                  componentClass=\"select\"\n                  value={this.state.visibility}\n                  onChange={this.onChangeVisibility}\n                >\n                  <option value=\"public\">{__(\"Public\")}</option>\n                  <option value=\"private\">{__(\"Private\")}</option>\n                </FormControl>\n              </FormGroup>\n            </ExpandWrapper>\n            <FormGroup>\n              <ControlLabel>Background</ControlLabel>\n              <div>\n                <OverlayTrigger\n                  trigger=\"click\"\n                  rootClose={true}\n                  placement=\"bottom\"\n                  overlay={popoverBottom}\n                >\n                  <ColorPick>\n                    <ColorPicker\n                      style={{ backgroundColor: this.state.backgroundColor }}\n                    />\n                  </ColorPick>\n                </OverlayTrigger>\n              </div>\n            </FormGroup>\n          </FlexContent>\n\n          {this.renderBoards()}\n\n          {this.renderSelectMembers()}\n\n          <FormGroup>\n            <ControlLabel>\n              {__(`Show only the user's assigned(created)`)} {this.props.type}s\n            </ControlLabel>\n            <FormControl\n              componentClass=\"checkbox\"\n              checked={this.state.isCheckUser}\n              onChange={this.onChangeIsCheckUser}\n            />\n          </FormGroup>\n\n          {this.renderDominantUsers()}\n\n          <FormGroup>\n            <ControlLabel>Stages</ControlLabel>\n            <div id=\"stages-in-pipeline-form\">\n              <Stages\n                options={options}\n                type={this.props.type}\n                stages={this.state.stages}\n                onChangeStages={this.onChangeStages}\n              />\n            </div>\n          </FormGroup>\n\n          <Modal.Footer>\n            <Button\n              btnStyle=\"simple\"\n              type=\"button\"\n              icon=\"times-circle\"\n              onClick={closeModal}\n              uppercase={false}\n            >\n              Cancel\n            </Button>\n\n            {renderButton({\n              name: pipelineName,\n              values: this.generateDoc(values),\n              isSubmitted,\n              callback: closeModal,\n              object: pipeline,\n              confirmationUpdate: true,\n            })}\n          </Modal.Footer>\n        </Modal.Body>\n      </div>\n    );\n  };\n\n  render() {\n    const { show, closeModal } = this.props;\n\n    if (!show) {\n      return null;\n    }\n\n    return (\n      <Modal\n        show={show}\n        onHide={closeModal}\n        enforceFocus={false}\n        animation={false}\n        size=\"lg\"\n      >\n        <Form renderContent={this.renderContent} />\n      </Modal>\n    );\n  }\n}\n\nexport default PipelineForm;\n"]},"metadata":{},"sourceType":"module"}