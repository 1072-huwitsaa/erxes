{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/components/list/CustomerForm.tsx\";\nimport AutoCompletionSelect from \"modules/common/components/AutoCompletionSelect\";\nimport AvatarUpload from \"modules/common/components/AvatarUpload\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport CollapseContent from \"modules/common/components/CollapseContent\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport DateControl from \"modules/common/components/form/DateControl\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport { DateContainer, FormColumn, FormWrapper, ModalFooter, ScrollWrapper } from \"modules/common/styles/main\";\nimport { Alert, getConstantFromStore } from \"modules/common/utils\";\nimport { __ } from \"modules/common/utils\";\nimport { EMAIL_VALIDATION_STATUSES, PHONE_VALIDATION_STATUSES } from \"modules/customers/constants\";\nimport SelectTeamMembers from \"modules/settings/team/containers/SelectTeamMembers\";\nimport React from \"react\";\nimport validator from \"validator\";\nimport { genderChoices, isValidPhone } from \"../../utils\";\n\nvar CustomerForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomerForm, _React$Component);\n\n  function CustomerForm(_props) {\n    var _this;\n\n    _classCallCheck(this, CustomerForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomerForm).call(this, _props));\n\n    _this.generateDoc = function (values) {\n      var customer = _this.props.customer;\n      var finalValues = values;\n\n      if (customer) {\n        finalValues._id = customer._id;\n      }\n\n      var links = {};\n      getConstantFromStore(\"social_links\").forEach(function (link) {\n        links[link.value] = finalValues[link.value];\n      });\n      return _objectSpread({\n        _id: finalValues._id\n      }, _this.state, {\n        firstName: finalValues.firstName,\n        lastName: finalValues.lastName,\n        sex: Number(finalValues.sex),\n        position: finalValues.position,\n        department: finalValues.department,\n        leadStatus: finalValues.leadStatus,\n        description: finalValues.description,\n        code: finalValues.code,\n        emailValidationStatus: finalValues.emailValidationStatus,\n        phoneValidationStatus: finalValues.phoneValidationStatus,\n        links: links\n      });\n    };\n\n    _this.onAvatarUpload = function (url) {\n      _this.setState({\n        avatar: url\n      });\n    };\n\n    _this.renderFormGroup = function (label, props) {\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: props.required && true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, label), React.createElement(FormControl, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })));\n    };\n\n    _this.onEmailChange = function (_ref) {\n      var options = _ref.options,\n          selectedOption = _ref.selectedOption;\n\n      _this.setState({\n        emails: options,\n        primaryEmail: selectedOption\n      });\n    };\n\n    _this.onPhoneChange = function (_ref2) {\n      var options = _ref2.options,\n          selectedOption = _ref2.selectedOption;\n\n      _this.setState({\n        phones: options,\n        primaryPhone: selectedOption\n      });\n    };\n\n    _this.onOwnerChange = function (ownerId) {\n      _this.setState({\n        ownerId: ownerId\n      });\n    };\n\n    _this.onDateChange = function (birthDate) {\n      var currentDate = new Date();\n\n      if (currentDate > birthDate) {\n        _this.setState({\n          birthDate: birthDate\n        });\n      } else {\n        Alert.error('Please enter a valid \"Date\".');\n      }\n    };\n\n    _this.saveAndRedirect = function (type) {\n      var changeRedirectType = _this.props.changeRedirectType;\n\n      if (changeRedirectType) {\n        changeRedirectType(type);\n      }\n    };\n\n    _this.onEmailVerificationStatusChange = function (e) {\n      var changeVerificationStatus = _this.props.changeVerificationStatus;\n\n      if (changeVerificationStatus) {\n        changeVerificationStatus(true);\n      }\n    };\n\n    _this.onPhoneVerificationStatusChange = function (e) {\n      var changeVerificationStatus = _this.props.changeVerificationStatus;\n\n      if (changeVerificationStatus) {\n        changeVerificationStatus(true);\n      }\n    };\n\n    _this.hasEmail = function () {\n      var customer = _this.props.customer || {};\n      var _customer$emails = customer.emails,\n          emails = _customer$emails === void 0 ? [] : _customer$emails;\n      return _this.getVisitorInfo(customer, \"email\") || emails.length > 0;\n    };\n\n    _this.renderContent = function (formProps) {\n      var _this$props = _this.props,\n          closeModal = _this$props.closeModal,\n          renderButton = _this$props.renderButton,\n          autoCompletionQuery = _this$props.autoCompletionQuery;\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted,\n          resetSubmit = formProps.resetSubmit;\n      var customer = _this.props.customer || {};\n      var primaryEmail = customer.primaryEmail,\n          primaryPhone = customer.primaryPhone;\n      return React.createElement(React.Fragment, null, React.createElement(ScrollWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(CollapseContent, {\n        title: __(\"General information\"),\n        compact: true,\n        open: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(FormWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(FormColumn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(AvatarUpload, {\n        avatar: customer.avatar,\n        onAvatarUpload: _this.onAvatarUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })), React.createElement(FormColumn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, _this.renderFormGroup(\"Code\", _objectSpread({}, formProps, {\n        name: \"code\",\n        defaultValue: customer.code || \"\"\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Owner\"), React.createElement(SelectTeamMembers, {\n        label: \"Choose an owner\",\n        name: \"ownerId\",\n        value: _this.state.ownerId,\n        onSelect: _this.onOwnerChange,\n        multi: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      })))), React.createElement(FormWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(FormColumn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, _this.renderFormGroup(\"First Name\", _objectSpread({}, formProps, {\n        defaultValue: customer.firstName || \"\",\n        autoFocus: true,\n        required: true,\n        name: \"firstName\"\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"Email\"), React.createElement(AutoCompletionSelect, {\n        required: true,\n        defaultValue: primaryEmail,\n        defaultOptions: _this.getEmailsOptions(customer),\n        autoCompletionType: \"emails\",\n        placeholder: \"Enter an email\",\n        queryName: \"customers\",\n        query: autoCompletionQuery,\n        checkFormat: validator.isEmail,\n        onChange: _this.onEmailChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      })), _this.renderFormGroup(\"Primary email verification status\", _objectSpread({}, formProps, {\n        name: \"emailValidationStatus\",\n        componentClass: \"select\",\n        defaultValue: customer.emailValidationStatus || \"unknown\",\n        options: EMAIL_VALIDATION_STATUSES\n      })), _this.renderFormGroup(\"Pronoun\", _objectSpread({}, formProps, {\n        name: \"sex\",\n        componentClass: \"select\",\n        defaultValue: customer.sex || 0,\n        options: genderChoices(__)\n      })), _this.renderFormGroup(\"Department\", _objectSpread({}, formProps, {\n        name: \"department\",\n        defaultValue: customer.department || \"\"\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"Description\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        max: 140,\n        name: \"description\",\n        componentClass: \"textarea\",\n        defaultValue: customer.description || \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      })))), React.createElement(FormColumn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, _this.renderFormGroup(\"Last Name\", _objectSpread({}, formProps, {\n        name: \"lastName\",\n        defaultValue: customer.lastName || \"\"\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(AutoCompletionSelect, {\n        defaultValue: primaryPhone,\n        defaultOptions: _this.getPhonesOptions(customer),\n        autoCompletionType: \"phones\",\n        placeholder: \"Enter an phone\",\n        queryName: \"customers\",\n        query: autoCompletionQuery,\n        checkFormat: isValidPhone,\n        onChange: _this.onPhoneChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      })), _this.renderFormGroup(\"Primary phone verification status\", _objectSpread({}, formProps, {\n        name: \"phoneValidationStatus\",\n        componentClass: \"select\",\n        defaultValue: customer.phoneValidationStatus || \"unknown\",\n        options: PHONE_VALIDATION_STATUSES\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"Birthday\"), React.createElement(DateContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(DateControl, Object.assign({}, formProps, {\n        required: false,\n        name: \"birthDate\",\n        placeholder: \"Birthday\",\n        value: _this.state.birthDate,\n        onChange: _this.onDateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      })))), _this.renderFormGroup(\"Position\", _objectSpread({}, formProps, {\n        name: \"position\",\n        defaultValue: customer.position || \"\"\n      })), _this.renderFormGroup(\"Has Authority\", _objectSpread({}, formProps, {\n        name: \"hasAuthority\",\n        componentClass: \"radio\",\n        options: [{\n          childNode: \"Yes\",\n          value: \"Yes\",\n          checked: _this.state.hasAuthority === \"Yes\",\n          onChange: function onChange(e) {\n            return _this.setState({\n              hasAuthority: e.target.value\n            });\n          }\n        }, {\n          childNode: \"No\",\n          value: \"No\",\n          checked: _this.state.hasAuthority === \"No\",\n          onChange: function onChange(e) {\n            return _this.setState({\n              hasAuthority: e.target.value\n            });\n          }\n        }]\n      })), _this.renderFormGroup(\"Do not disturb\", _objectSpread({}, formProps, {\n        name: \"doNotDisturb\",\n        componentClass: \"radio\",\n        options: [{\n          childNode: \"Yes\",\n          value: \"Yes\",\n          checked: _this.state.doNotDisturb === \"Yes\",\n          onChange: function onChange(e) {\n            return _this.setState({\n              doNotDisturb: e.target.value\n            });\n          }\n        }, {\n          childNode: \"No\",\n          value: \"No\",\n          checked: _this.state.doNotDisturb === \"No\",\n          onChange: function onChange(e) {\n            return _this.setState({\n              doNotDisturb: e.target.value\n            });\n          }\n        }]\n      }))))), React.createElement(CollapseContent, {\n        title: __(\"Links\"),\n        compact: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(FormWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(FormColumn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, getConstantFromStore(\"social_links\").map(function (link) {\n        return _this.renderLink(formProps, link);\n      }))))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        uppercase: false,\n        onClick: closeModal,\n        icon: \"times-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \"Close\"), renderButton({\n        name: customer.state || \"customer\",\n        values: _this.generateDoc(values),\n        isSubmitted: isSubmitted,\n        object: _this.props.customer,\n        resetSubmit: resetSubmit\n      }), !_this.props.customer && React.createElement(React.Fragment, null, React.createElement(Button, {\n        btnStyle: \"primary\",\n        type: \"submit\",\n        uppercase: false,\n        icon: \"user-square\",\n        onClick: _this.saveAndRedirect.bind(_assertThisInitialized(_this), \"detail\"),\n        disabled: isSubmitted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, \"Save & View\"), React.createElement(Button, {\n        type: \"submit\",\n        uppercase: false,\n        onClick: _this.saveAndRedirect.bind(_assertThisInitialized(_this), \"new\"),\n        disabled: isSubmitted,\n        icon: \"user-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, \"Save & New\"))));\n    };\n\n    var _customer = _props.customer || {};\n\n    var userId = _props.currentUser ? _props.currentUser._id : \"\";\n    _this.state = {\n      ownerId: _customer.ownerId || userId,\n      doNotDisturb: _customer.doNotDisturb || \"No\",\n      hasAuthority: _customer.hasAuthority || \"No\",\n      users: [],\n      birthDate: _customer.birthDate,\n      avatar: _customer.avatar\n    };\n    return _this;\n  }\n\n  _createClass(CustomerForm, [{\n    key: \"getVisitorInfo\",\n    value: function getVisitorInfo(customer, key) {\n      return customer.visitorContactInfo && customer.visitorContactInfo[key];\n    }\n  }, {\n    key: \"getEmailsOptions\",\n    value: function getEmailsOptions(customer) {\n      var emails = customer.emails;\n\n      if (emails && emails.length > 0) {\n        return emails;\n      }\n\n      if (this.getVisitorInfo(customer, \"email\")) {\n        return [this.getVisitorInfo(customer, \"email\")];\n      }\n\n      return [];\n    }\n  }, {\n    key: \"getPhonesOptions\",\n    value: function getPhonesOptions(customer) {\n      var phones = customer.phones;\n\n      if (phones && phones.length > 0) {\n        return phones;\n      }\n\n      if (this.getVisitorInfo(customer, \"phone\")) {\n        return [this.getVisitorInfo(customer, \"phone\")];\n      }\n\n      return [];\n    }\n  }, {\n    key: \"renderLink\",\n    value: function renderLink(formProps, link) {\n      var customer = this.props.customer;\n      var links = (customer ? customer.links : {}) || {};\n      return this.renderFormGroup(link.label, _objectSpread({}, formProps, {\n        name: link.value,\n        defaultValue: links[link.value] || \"\",\n        type: \"url\"\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CustomerForm;\n}(React.Component);\n\nexport default CustomerForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/components/list/CustomerForm.tsx"],"names":["AutoCompletionSelect","AvatarUpload","Button","CollapseContent","FormControl","DateControl","Form","FormGroup","ControlLabel","DateContainer","FormColumn","FormWrapper","ModalFooter","ScrollWrapper","Alert","getConstantFromStore","__","EMAIL_VALIDATION_STATUSES","PHONE_VALIDATION_STATUSES","SelectTeamMembers","React","validator","genderChoices","isValidPhone","CustomerForm","props","generateDoc","values","customer","finalValues","_id","links","forEach","link","value","state","firstName","lastName","sex","Number","position","department","leadStatus","description","code","emailValidationStatus","phoneValidationStatus","onAvatarUpload","url","setState","avatar","renderFormGroup","label","required","onEmailChange","options","selectedOption","emails","primaryEmail","onPhoneChange","phones","primaryPhone","onOwnerChange","ownerId","onDateChange","birthDate","currentDate","Date","error","saveAndRedirect","type","changeRedirectType","onEmailVerificationStatusChange","e","changeVerificationStatus","onPhoneVerificationStatusChange","hasEmail","getVisitorInfo","length","renderContent","formProps","closeModal","renderButton","autoCompletionQuery","isSubmitted","resetSubmit","name","defaultValue","autoFocus","getEmailsOptions","isEmail","componentClass","getPhonesOptions","childNode","checked","hasAuthority","onChange","target","doNotDisturb","map","renderLink","object","bind","userId","currentUser","users","key","visitorContactInfo","Component"],"mappings":"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","sourcesContent":["import { IUser, IUserLinks } from \"modules/auth/types\";\nimport AutoCompletionSelect from \"modules/common/components/AutoCompletionSelect\";\nimport AvatarUpload from \"modules/common/components/AvatarUpload\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport CollapseContent from \"modules/common/components/CollapseContent\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport DateControl from \"modules/common/components/form/DateControl\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport {\n  DateContainer,\n  FormColumn,\n  FormWrapper,\n  ModalFooter,\n  ScrollWrapper,\n} from \"modules/common/styles/main\";\nimport {\n  IButtonMutateProps,\n  IFormProps,\n  IQueryParams,\n} from \"modules/common/types\";\nimport { Alert, getConstantFromStore } from \"modules/common/utils\";\nimport { __ } from \"modules/common/utils\";\nimport {\n  EMAIL_VALIDATION_STATUSES,\n  PHONE_VALIDATION_STATUSES,\n} from \"modules/customers/constants\";\nimport SelectTeamMembers from \"modules/settings/team/containers/SelectTeamMembers\";\nimport React from \"react\";\nimport validator from \"validator\";\nimport { ICustomer, ICustomerDoc } from \"../../types\";\nimport { genderChoices, isValidPhone } from \"../../utils\";\n\ntype Props = {\n  currentUser: IUser;\n  autoCompletionQuery: string;\n  customer?: ICustomer;\n  closeModal: () => void;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  queryParams: IQueryParams;\n  changeRedirectType?: (type: string) => void;\n  changeVerificationStatus?: (isEmail: boolean) => void;\n};\n\ntype State = {\n  ownerId: string;\n  doNotDisturb: string;\n  hasAuthority: string;\n  users: IUser[];\n  avatar: string;\n  phones?: string[];\n  emails?: string[];\n  primaryPhone?: string;\n  birthDate: string;\n  primaryEmail?: string;\n};\n\nclass CustomerForm extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    const customer = props.customer || ({} as ICustomer);\n    const userId = props.currentUser ? props.currentUser._id : \"\";\n\n    this.state = {\n      ownerId: customer.ownerId || userId,\n      doNotDisturb: customer.doNotDisturb || \"No\",\n      hasAuthority: customer.hasAuthority || \"No\",\n      users: [],\n      birthDate: customer.birthDate,\n      avatar: customer.avatar,\n    };\n  }\n\n  generateDoc = (values: { _id: string } & ICustomerDoc & IUserLinks) => {\n    const { customer } = this.props;\n    const finalValues = values;\n\n    if (customer) {\n      finalValues._id = customer._id;\n    }\n\n    const links = {};\n\n    getConstantFromStore(\"social_links\").forEach((link) => {\n      links[link.value] = finalValues[link.value];\n    });\n\n    return {\n      _id: finalValues._id,\n      ...this.state,\n      firstName: finalValues.firstName,\n      lastName: finalValues.lastName,\n      sex: Number(finalValues.sex),\n      position: finalValues.position,\n      department: finalValues.department,\n      leadStatus: finalValues.leadStatus,\n      description: finalValues.description,\n      code: finalValues.code,\n      emailValidationStatus: finalValues.emailValidationStatus,\n      phoneValidationStatus: finalValues.phoneValidationStatus,\n      links,\n    };\n  };\n\n  onAvatarUpload = (url) => {\n    this.setState({ avatar: url });\n  };\n\n  getVisitorInfo(customer, key) {\n    return customer.visitorContactInfo && customer.visitorContactInfo[key];\n  }\n\n  getEmailsOptions(customer) {\n    const { emails } = customer;\n\n    if (emails && emails.length > 0) {\n      return emails;\n    }\n\n    if (this.getVisitorInfo(customer, \"email\")) {\n      return [this.getVisitorInfo(customer, \"email\")];\n    }\n\n    return [];\n  }\n\n  getPhonesOptions(customer) {\n    const { phones } = customer;\n\n    if (phones && phones.length > 0) {\n      return phones;\n    }\n\n    if (this.getVisitorInfo(customer, \"phone\")) {\n      return [this.getVisitorInfo(customer, \"phone\")];\n    }\n\n    return [];\n  }\n\n  renderFormGroup = (label, props) => {\n    return (\n      <FormGroup>\n        <ControlLabel required={props.required && true}>{label}</ControlLabel>\n        <FormControl {...props} />\n      </FormGroup>\n    );\n  };\n\n  onEmailChange = ({ options, selectedOption }) => {\n    this.setState({ emails: options, primaryEmail: selectedOption });\n  };\n\n  onPhoneChange = ({ options, selectedOption }) => {\n    this.setState({ phones: options, primaryPhone: selectedOption });\n  };\n\n  onOwnerChange = (ownerId) => {\n    this.setState({ ownerId });\n  };\n\n  onDateChange = (birthDate) => {\n    const currentDate = new Date();\n    if (currentDate > birthDate) {\n      this.setState({ birthDate });\n    } else {\n      Alert.error('Please enter a valid \"Date\".');\n    }\n  };\n\n  saveAndRedirect = (type: string) => {\n    const { changeRedirectType } = this.props;\n\n    if (changeRedirectType) {\n      changeRedirectType(type);\n    }\n  };\n\n  onEmailVerificationStatusChange = (e) => {\n    const { changeVerificationStatus } = this.props;\n\n    if (changeVerificationStatus) {\n      changeVerificationStatus(true);\n    }\n  };\n\n  onPhoneVerificationStatusChange = (e) => {\n    const { changeVerificationStatus } = this.props;\n\n    if (changeVerificationStatus) {\n      changeVerificationStatus(true);\n    }\n  };\n\n  hasEmail = () => {\n    const customer = this.props.customer || ({} as ICustomer);\n\n    const { emails = [] } = customer;\n\n    return this.getVisitorInfo(customer, \"email\") || emails.length > 0;\n  };\n\n  renderLink(formProps, link) {\n    const { customer } = this.props;\n    const links = (customer ? customer.links : {}) || {};\n\n    return this.renderFormGroup(link.label, {\n      ...formProps,\n      name: link.value,\n      defaultValue: links[link.value] || \"\",\n      type: \"url\",\n    });\n  }\n\n  renderContent = (formProps: IFormProps) => {\n    const { closeModal, renderButton, autoCompletionQuery } = this.props;\n    const { values, isSubmitted, resetSubmit } = formProps;\n\n    const customer = this.props.customer || ({} as ICustomer);\n    const { primaryEmail, primaryPhone } = customer;\n\n    return (\n      <>\n        <ScrollWrapper>\n          <CollapseContent\n            title={__(\"General information\")}\n            compact={true}\n            open={true}\n          >\n            <FormWrapper>\n              <FormColumn>\n                <AvatarUpload\n                  avatar={customer.avatar}\n                  onAvatarUpload={this.onAvatarUpload}\n                />\n              </FormColumn>\n              <FormColumn>\n                {this.renderFormGroup(\"Code\", {\n                  ...formProps,\n                  name: \"code\",\n                  defaultValue: customer.code || \"\",\n                })}\n\n                <FormGroup>\n                  <ControlLabel>Owner</ControlLabel>\n                  <SelectTeamMembers\n                    label=\"Choose an owner\"\n                    name=\"ownerId\"\n                    value={this.state.ownerId}\n                    onSelect={this.onOwnerChange}\n                    multi={false}\n                  />\n                </FormGroup>\n              </FormColumn>\n            </FormWrapper>\n            <FormWrapper>\n              <FormColumn>\n                {this.renderFormGroup(\"First Name\", {\n                  ...formProps,\n                  defaultValue: customer.firstName || \"\",\n                  autoFocus: true,\n                  required: true,\n                  name: \"firstName\",\n                })}\n\n                <FormGroup>\n                  <ControlLabel required={true}>Email</ControlLabel>\n                  <AutoCompletionSelect\n                    required={true}\n                    defaultValue={primaryEmail}\n                    defaultOptions={this.getEmailsOptions(customer)}\n                    autoCompletionType=\"emails\"\n                    placeholder=\"Enter an email\"\n                    queryName=\"customers\"\n                    query={autoCompletionQuery}\n                    checkFormat={validator.isEmail}\n                    onChange={this.onEmailChange}\n                  />\n                </FormGroup>\n\n                {this.renderFormGroup(\"Primary email verification status\", {\n                  ...formProps,\n                  name: \"emailValidationStatus\",\n                  componentClass: \"select\",\n                  defaultValue: customer.emailValidationStatus || \"unknown\",\n                  options: EMAIL_VALIDATION_STATUSES,\n                })}\n\n                {this.renderFormGroup(\"Pronoun\", {\n                  ...formProps,\n                  name: \"sex\",\n                  componentClass: \"select\",\n                  defaultValue: customer.sex || 0,\n                  options: genderChoices(__),\n                })}\n\n                {this.renderFormGroup(\"Department\", {\n                  ...formProps,\n                  name: \"department\",\n                  defaultValue: customer.department || \"\",\n                })}\n\n                <FormGroup>\n                  <ControlLabel>Description</ControlLabel>\n                  <FormControl\n                    {...formProps}\n                    max={140}\n                    name=\"description\"\n                    componentClass=\"textarea\"\n                    defaultValue={customer.description || \"\"}\n                  />\n                </FormGroup>\n              </FormColumn>\n              <FormColumn>\n                {this.renderFormGroup(\"Last Name\", {\n                  ...formProps,\n                  name: \"lastName\",\n                  defaultValue: customer.lastName || \"\",\n                })}\n\n                <FormGroup>\n                  <ControlLabel>Phone</ControlLabel>\n                  <AutoCompletionSelect\n                    defaultValue={primaryPhone}\n                    defaultOptions={this.getPhonesOptions(customer)}\n                    autoCompletionType=\"phones\"\n                    placeholder=\"Enter an phone\"\n                    queryName=\"customers\"\n                    query={autoCompletionQuery}\n                    checkFormat={isValidPhone}\n                    onChange={this.onPhoneChange}\n                  />\n                </FormGroup>\n\n                {this.renderFormGroup(\"Primary phone verification status\", {\n                  ...formProps,\n                  name: \"phoneValidationStatus\",\n                  componentClass: \"select\",\n                  defaultValue: customer.phoneValidationStatus || \"unknown\",\n                  options: PHONE_VALIDATION_STATUSES,\n                })}\n\n                <FormGroup>\n                  <ControlLabel required={false}>Birthday</ControlLabel>\n                  <DateContainer>\n                    <DateControl\n                      {...formProps}\n                      required={false}\n                      name=\"birthDate\"\n                      placeholder={\"Birthday\"}\n                      value={this.state.birthDate}\n                      onChange={this.onDateChange}\n                    />\n                  </DateContainer>\n                </FormGroup>\n\n                {this.renderFormGroup(\"Position\", {\n                  ...formProps,\n                  name: \"position\",\n                  defaultValue: customer.position || \"\",\n                })}\n\n                {this.renderFormGroup(\"Has Authority\", {\n                  ...formProps,\n                  name: \"hasAuthority\",\n                  componentClass: \"radio\",\n                  options: [\n                    {\n                      childNode: \"Yes\",\n                      value: \"Yes\",\n                      checked: this.state.hasAuthority === \"Yes\",\n                      onChange: (e) =>\n                        this.setState({ hasAuthority: e.target.value }),\n                    },\n                    {\n                      childNode: \"No\",\n                      value: \"No\",\n                      checked: this.state.hasAuthority === \"No\",\n                      onChange: (e) =>\n                        this.setState({ hasAuthority: e.target.value }),\n                    },\n                  ],\n                })}\n\n                {this.renderFormGroup(\"Do not disturb\", {\n                  ...formProps,\n                  name: \"doNotDisturb\",\n                  componentClass: \"radio\",\n                  options: [\n                    {\n                      childNode: \"Yes\",\n                      value: \"Yes\",\n                      checked: this.state.doNotDisturb === \"Yes\",\n                      onChange: (e) =>\n                        this.setState({ doNotDisturb: e.target.value }),\n                    },\n                    {\n                      childNode: \"No\",\n                      value: \"No\",\n                      checked: this.state.doNotDisturb === \"No\",\n                      onChange: (e) =>\n                        this.setState({ doNotDisturb: e.target.value }),\n                    },\n                  ],\n                })}\n              </FormColumn>\n            </FormWrapper>\n          </CollapseContent>\n          <CollapseContent title={__(\"Links\")} compact={true}>\n            <FormWrapper>\n              <FormColumn>\n                {getConstantFromStore(\"social_links\").map((link) =>\n                  this.renderLink(formProps, link)\n                )}\n              </FormColumn>\n            </FormWrapper>\n          </CollapseContent>\n        </ScrollWrapper>\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            uppercase={false}\n            onClick={closeModal}\n            icon=\"times-circle\"\n          >\n            Close\n          </Button>\n\n          {renderButton({\n            name: customer.state || \"customer\",\n            values: this.generateDoc(values),\n            isSubmitted,\n            object: this.props.customer,\n            resetSubmit,\n          })}\n\n          {!this.props.customer && (\n            <>\n              <Button\n                btnStyle=\"primary\"\n                type=\"submit\"\n                uppercase={false}\n                icon=\"user-square\"\n                onClick={this.saveAndRedirect.bind(this, \"detail\")}\n                disabled={isSubmitted}\n              >\n                Save & View\n              </Button>\n              <Button\n                type=\"submit\"\n                uppercase={false}\n                onClick={this.saveAndRedirect.bind(this, \"new\")}\n                disabled={isSubmitted}\n                icon=\"user-plus\"\n              >\n                Save & New\n              </Button>\n            </>\n          )}\n        </ModalFooter>\n      </>\n    );\n  };\n\n  render() {\n    return <Form renderContent={this.renderContent} />;\n  }\n}\n\nexport default CustomerForm;\n"]},"metadata":{},"sourceType":"module"}