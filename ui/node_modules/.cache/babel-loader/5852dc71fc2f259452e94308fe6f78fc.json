{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/containers/BoardSelect.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { Alert, withProps } from '../../common/utils';\nimport BoardSelect from '../components/BoardSelect';\nimport { queries } from '../graphql';\n\nvar BoardSelectContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BoardSelectContainer, _React$Component);\n\n  function BoardSelectContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BoardSelectContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BoardSelectContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChangeBoard = function (boardId) {\n      _this.props.onChangeBoard(boardId);\n\n      _this.props.pipelinesQuery.refetch({\n        boardId: boardId\n      }).then(function (_ref) {\n        var data = _ref.data;\n        var pipelines = data.pipelines;\n\n        if (pipelines.length > 0) {\n          _this.onChangePipeline(pipelines[0]._id);\n        }\n      }).catch(function (e) {\n        Alert.error(e.message);\n      });\n    };\n\n    _this.onChangePipeline = function (pipelineId) {\n      var stagesQuery = _this.props.stagesQuery;\n      stagesQuery.refetch({\n        pipelineId: pipelineId\n      }).then(function (_ref2) {\n        var data = _ref2.data;\n        var stages = data.stages;\n\n        _this.props.onChangePipeline(pipelineId, stages);\n\n        if (stages.length > 0 && typeof _this.props.autoSelectStage === 'undefined') {\n          _this.onChangeStage(stages[0]._id);\n        }\n      }).catch(function (e) {\n        Alert.error(e.message);\n      });\n    };\n\n    _this.onChangeStage = function (stageId, callback) {\n      if (_this.props.onChangeStage) {\n        _this.props.onChangeStage(stageId);\n      }\n\n      if (callback) {\n        callback();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(BoardSelectContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          boardsQuery = _this$props.boardsQuery,\n          pipelinesQuery = _this$props.pipelinesQuery,\n          stagesQuery = _this$props.stagesQuery;\n      var boards = boardsQuery.boards || [];\n      var pipelines = pipelinesQuery.pipelines || [];\n      var stages = stagesQuery.stages || [];\n\n      var extendedProps = _objectSpread({}, this.props, {\n        boards: boards,\n        pipelines: pipelines,\n        stages: stages,\n        onChangeBoard: this.onChangeBoard,\n        onChangePipeline: this.onChangePipeline,\n        onChangeStage: this.onChangeStage\n      });\n\n      return React.createElement(BoardSelect, Object.assign({}, extendedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BoardSelectContainer;\n}(React.Component);\n\nexport default withProps(compose(graphql(gql(queries.boards), {\n  name: 'boardsQuery',\n  options: function options(_ref3) {\n    var type = _ref3.type;\n    return {\n      variables: {\n        type: type\n      }\n    };\n  }\n}), graphql(gql(queries.pipelines), {\n  name: 'pipelinesQuery',\n  options: function options(_ref4) {\n    var _ref4$boardId = _ref4.boardId,\n        boardId = _ref4$boardId === void 0 ? '' : _ref4$boardId;\n    return {\n      variables: {\n        boardId: boardId\n      }\n    };\n  }\n}), graphql(gql(queries.stages), {\n  name: 'stagesQuery',\n  options: function options(_ref5) {\n    var _ref5$pipelineId = _ref5.pipelineId,\n        pipelineId = _ref5$pipelineId === void 0 ? '' : _ref5$pipelineId;\n    return {\n      variables: {\n        pipelineId: pipelineId\n      }\n    };\n  }\n}))(BoardSelectContainer));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/containers/BoardSelect.tsx"],"names":["gql","compose","React","graphql","Alert","withProps","BoardSelect","queries","BoardSelectContainer","onChangeBoard","boardId","props","pipelinesQuery","refetch","then","data","pipelines","length","onChangePipeline","_id","catch","e","error","message","pipelineId","stagesQuery","stages","autoSelectStage","onChangeStage","stageId","callback","boardsQuery","boards","extendedProps","Component","name","options","type","variables"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { Alert, withProps } from '../../common/utils';\nimport BoardSelect from '../components/BoardSelect';\nimport { queries } from '../graphql';\nimport {\n  BoardsQueryResponse,\n  IStage,\n  PipelinesQueryResponse,\n  StagesQueryResponse\n} from '../types';\n\ntype Props = {\n  type: string;\n  stageId?: string;\n  boardId: string;\n  pipelineId: string;\n  callback?: () => void;\n  onChangeStage?: (stageId: string) => void;\n  onChangePipeline: (pipelineId: string, stages: IStage[]) => void;\n  onChangeBoard: (boardId: string) => void;\n  autoSelectStage?: boolean;\n};\n\ntype FinalProps = {\n  boardsQuery: BoardsQueryResponse;\n  pipelinesQuery: PipelinesQueryResponse;\n  stagesQuery: StagesQueryResponse;\n} & Props;\n\nclass BoardSelectContainer extends React.Component<FinalProps> {\n  onChangeBoard = (boardId: string) => {\n    this.props.onChangeBoard(boardId);\n\n    this.props.pipelinesQuery\n      .refetch({ boardId })\n      .then(({ data }) => {\n        const pipelines = data.pipelines;\n\n        if (pipelines.length > 0) {\n          this.onChangePipeline(pipelines[0]._id);\n        }\n      })\n      .catch(e => {\n        Alert.error(e.message);\n      });\n  };\n\n  onChangePipeline = (pipelineId: string) => {\n    const { stagesQuery } = this.props;\n\n    stagesQuery\n      .refetch({ pipelineId })\n      .then(({ data }) => {\n        const stages = data.stages;\n\n        this.props.onChangePipeline(pipelineId, stages);\n\n        if (\n          stages.length > 0 &&\n          typeof this.props.autoSelectStage === 'undefined'\n        ) {\n          this.onChangeStage(stages[0]._id);\n        }\n      })\n      .catch(e => {\n        Alert.error(e.message);\n      });\n  };\n\n  onChangeStage = (stageId: string, callback?: any) => {\n    if (this.props.onChangeStage) {\n      this.props.onChangeStage(stageId);\n    }\n\n    if (callback) {\n      callback();\n    }\n  };\n\n  render() {\n    const { boardsQuery, pipelinesQuery, stagesQuery } = this.props;\n\n    const boards = boardsQuery.boards || [];\n    const pipelines = pipelinesQuery.pipelines || [];\n    const stages = stagesQuery.stages || [];\n\n    const extendedProps = {\n      ...this.props,\n      boards,\n      pipelines,\n      stages,\n      onChangeBoard: this.onChangeBoard,\n      onChangePipeline: this.onChangePipeline,\n      onChangeStage: this.onChangeStage\n    };\n\n    return <BoardSelect {...extendedProps} />;\n  }\n}\n\nexport default withProps<Props>(\n  compose(\n    graphql<Props, BoardsQueryResponse>(gql(queries.boards), {\n      name: 'boardsQuery',\n      options: ({ type }) => ({\n        variables: { type }\n      })\n    }),\n    graphql<Props, PipelinesQueryResponse, { boardId: string }>(\n      gql(queries.pipelines),\n      {\n        name: 'pipelinesQuery',\n        options: ({ boardId = '' }) => ({\n          variables: { boardId }\n        })\n      }\n    ),\n    graphql<Props, StagesQueryResponse, { pipelineId: string }>(\n      gql(queries.stages),\n      {\n        name: 'stagesQuery',\n        options: ({ pipelineId = '' }) => ({\n          variables: { pipelineId }\n        })\n      }\n    )\n  )(BoardSelectContainer)\n);\n"]},"metadata":{},"sourceType":"module"}