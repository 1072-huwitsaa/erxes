{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/brands/components/BrandForm.tsx\";\nimport Button from 'modules/common/components/Button';\nimport FormControl from 'modules/common/components/form/Control';\nimport Form from 'modules/common/components/form/Form';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport React from 'react';\n\nvar BrandForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BrandForm, _React$Component);\n\n  function BrandForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BrandForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BrandForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderContent = function (formProps) {\n      var object = _this.props.brand || {};\n      return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Name\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"name\",\n        defaultValue: object.name,\n        required: true,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Description\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"description\",\n        componentClass: \"textarea\",\n        rows: 5,\n        defaultValue: object.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))), _this.renderFooter(_objectSpread({}, formProps)));\n    };\n\n    return _this;\n  }\n\n  _createClass(BrandForm, [{\n    key: \"renderFooter\",\n    value: function renderFooter(formProps) {\n      var _this$props = this.props,\n          brand = _this$props.brand,\n          closeModal = _this$props.closeModal,\n          renderButton = _this$props.renderButton,\n          afterSave = _this$props.afterSave;\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted;\n\n      if (brand) {\n        values._id = brand._id;\n      }\n\n      return React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        type: \"button\",\n        icon: \"times-circle\",\n        uppercase: false,\n        onClick: closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Cancel\"), renderButton({\n        name: 'brand',\n        values: values,\n        isSubmitted: isSubmitted,\n        callback: closeModal || afterSave,\n        object: brand\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return BrandForm;\n}(React.Component);\n\nexport default BrandForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/brands/components/BrandForm.tsx"],"names":["Button","FormControl","Form","FormGroup","ControlLabel","ModalFooter","React","BrandForm","renderContent","formProps","object","props","brand","name","description","renderFooter","closeModal","renderButton","afterSave","values","isSubmitted","_id","callback","Component"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,kCAAnB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;IAWMC,S;;;;;;;;;;;;;;;;;;UAgCJC,a,GAAgB,UAACC,SAAD,EAA2B;AACzC,UAAMC,MAAM,GAAG,MAAKC,KAAL,CAAWC,KAAX,IAAqB,EAApC;AAEA,aACE,0CACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGE,oBAAC,WAAD,oBACMH,SADN;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,YAAY,EAAEC,MAAM,CAACG,IAHvB;AAIE,QAAA,QAAQ,EAAE,IAJZ;AAKE,QAAA,SAAS,EAAE,IALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,CADF,EAaE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGE,oBAAC,WAAD,oBACMJ,SADN;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,QAAA,cAAc,EAAC,UAHjB;AAIE,QAAA,IAAI,EAAE,CAJR;AAKE,QAAA,YAAY,EAAEC,MAAM,CAACI,WALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,CAbF,EAyBG,MAAKC,YAAL,mBAAuBN,SAAvB,EAzBH,CADF;AA6BD,K;;;;;;;iCA/DYA,S,EAAuB;AAAA,wBACqB,KAAKE,KAD1B;AAAA,UAC1BC,KAD0B,eAC1BA,KAD0B;AAAA,UACnBI,UADmB,eACnBA,UADmB;AAAA,UACPC,YADO,eACPA,YADO;AAAA,UACOC,SADP,eACOA,SADP;AAAA,UAE1BC,MAF0B,GAEFV,SAFE,CAE1BU,MAF0B;AAAA,UAElBC,WAFkB,GAEFX,SAFE,CAElBW,WAFkB;;AAIlC,UAAIR,KAAJ,EAAW;AACTO,QAAAA,MAAM,CAACE,GAAP,GAAaT,KAAK,CAACS,GAAnB;AACD;;AAED,aACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,QAAQ,EAAC,QADX;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,IAAI,EAAC,cAHP;AAIE,QAAA,SAAS,EAAE,KAJb;AAKE,QAAA,OAAO,EAAEL,UALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAWGC,YAAY,CAAC;AACZJ,QAAAA,IAAI,EAAE,OADM;AAEZM,QAAAA,MAAM,EAANA,MAFY;AAGZC,QAAAA,WAAW,EAAXA,WAHY;AAIZE,QAAAA,QAAQ,EAAEN,UAAU,IAAIE,SAJZ;AAKZR,QAAAA,MAAM,EAAEE;AALI,OAAD,CAXf,CADF;AAqBD;;;6BAoCQ;AACP,aAAO,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAE,KAAKJ,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EApEqBF,KAAK,CAACiB,S;;AAuE9B,eAAehB,SAAf","sourcesContent":["import Button from 'modules/common/components/Button';\nimport FormControl from 'modules/common/components/form/Control';\nimport Form from 'modules/common/components/form/Form';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { IButtonMutateProps, IFormProps } from 'modules/common/types';\nimport React from 'react';\nimport { IBrand } from '../types';\n\ntype Props = {\n  brand?: IBrand;\n  closeModal?: () => void;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  afterSave?: () => void;\n  modal?: boolean;\n};\n\nclass BrandForm extends React.Component<Props> {\n  renderFooter(formProps: IFormProps) {\n    const { brand, closeModal, renderButton, afterSave } = this.props;\n    const { values, isSubmitted } = formProps;\n\n    if (brand) {\n      values._id = brand._id;\n    }\n\n    return (\n      <ModalFooter>\n        <Button\n          btnStyle=\"simple\"\n          type=\"button\"\n          icon=\"times-circle\"\n          uppercase={false}\n          onClick={closeModal}\n        >\n          Cancel\n        </Button>\n\n        {renderButton({\n          name: 'brand',\n          values,\n          isSubmitted,\n          callback: closeModal || afterSave,\n          object: brand\n        })}\n      </ModalFooter>\n    );\n  }\n\n  renderContent = (formProps: IFormProps) => {\n    const object = this.props.brand || ({} as IBrand);\n\n    return (\n      <>\n        <FormGroup>\n          <ControlLabel required={true}>Name</ControlLabel>\n\n          <FormControl\n            {...formProps}\n            name=\"name\"\n            defaultValue={object.name}\n            required={true}\n            autoFocus={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Description</ControlLabel>\n\n          <FormControl\n            {...formProps}\n            name=\"description\"\n            componentClass=\"textarea\"\n            rows={5}\n            defaultValue={object.description}\n          />\n        </FormGroup>\n\n        {this.renderFooter({ ...formProps })}\n      </>\n    );\n  };\n\n  render() {\n    return <Form renderContent={this.renderContent} />;\n  }\n}\n\nexport default BrandForm;\n"]},"metadata":{},"sourceType":"module"}