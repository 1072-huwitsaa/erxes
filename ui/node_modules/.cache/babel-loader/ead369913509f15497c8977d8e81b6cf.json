{"ast":null,"code":"// check if valid url\nexport var isValidURL = function isValidURL(url) {\n  try {\n    return Boolean(new URL(url));\n  } catch (e) {\n    return false;\n  }\n}; // extract hostname e.g: www.domain.com\n\nvar extractHostname = function extractHostname(url) {\n  var hostname;\n\n  if (!url) {\n    url = '';\n  }\n\n  if (url.indexOf('://') > -1) {\n    hostname = url.split('/')[2];\n  } else {\n    hostname = url.split('/')[0];\n  }\n\n  hostname = hostname.split(':')[0];\n  hostname = hostname.split('?')[0];\n  return hostname;\n}; // extract root domain e.g: domain.com\n\n\nvar extractRootDomain = function extractRootDomain(url) {\n  var domain = extractHostname(url);\n  var splitArr = domain.split('.');\n  var arrLen = splitArr.length;\n\n  if (arrLen > 2) {\n    domain = splitArr[arrLen - 2] + '.' + splitArr[arrLen - 1];\n\n    if (splitArr[arrLen - 1].length === 2 && splitArr[arrLen - 1].length === 2) {\n      domain = splitArr[arrLen - 3] + '.' + domain;\n    }\n  }\n\n  return domain;\n};\n\nexport default {\n  isValidURL: isValidURL,\n  extractHostname: extractHostname,\n  extractRootDomain: extractRootDomain\n};","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/utils/urlParser.ts"],"names":["isValidURL","url","Boolean","URL","e","extractHostname","hostname","indexOf","split","extractRootDomain","domain","splitArr","arrLen","length"],"mappings":"AAAA;AACA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAiB;AACzC,MAAI;AACF,WAAOC,OAAO,CAAC,IAAIC,GAAJ,CAAQF,GAAR,CAAD,CAAd;AACD,GAFD,CAEE,OAAOG,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF,CANM,C,CAQP;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,GAAD,EAAiB;AACvC,MAAIK,QAAJ;;AAEA,MAAI,CAACL,GAAL,EAAU;AACRA,IAAAA,GAAG,GAAG,EAAN;AACD;;AAED,MAAIA,GAAG,CAACM,OAAJ,CAAY,KAAZ,IAAqB,CAAC,CAA1B,EAA6B;AAC3BD,IAAAA,QAAQ,GAAGL,GAAG,CAACO,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAX;AACD,GAFD,MAEO;AACLF,IAAAA,QAAQ,GAAGL,GAAG,CAACO,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAX;AACD;;AAEDF,EAAAA,QAAQ,GAAGA,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAX;AACAF,EAAAA,QAAQ,GAAGA,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAX;AAEA,SAAOF,QAAP;AACD,CAjBD,C,CAmBA;;;AACA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACR,GAAD,EAAiB;AACzC,MAAIS,MAAM,GAAGL,eAAe,CAACJ,GAAD,CAA5B;AACA,MAAMU,QAAQ,GAAGD,MAAM,CAACF,KAAP,CAAa,GAAb,CAAjB;AACA,MAAMI,MAAM,GAAGD,QAAQ,CAACE,MAAxB;;AAEA,MAAID,MAAM,GAAG,CAAb,EAAgB;AACdF,IAAAA,MAAM,GAAGC,QAAQ,CAACC,MAAM,GAAG,CAAV,CAAR,GAAuB,GAAvB,GAA6BD,QAAQ,CAACC,MAAM,GAAG,CAAV,CAA9C;;AACA,QACED,QAAQ,CAACC,MAAM,GAAG,CAAV,CAAR,CAAqBC,MAArB,KAAgC,CAAhC,IACAF,QAAQ,CAACC,MAAM,GAAG,CAAV,CAAR,CAAqBC,MAArB,KAAgC,CAFlC,EAGE;AACAH,MAAAA,MAAM,GAAGC,QAAQ,CAACC,MAAM,GAAG,CAAV,CAAR,GAAuB,GAAvB,GAA6BF,MAAtC;AACD;AACF;;AACD,SAAOA,MAAP;AACD,CAfD;;AAiBA,eAAe;AACbV,EAAAA,UAAU,EAAVA,UADa;AAEbK,EAAAA,eAAe,EAAfA,eAFa;AAGbI,EAAAA,iBAAiB,EAAjBA;AAHa,CAAf","sourcesContent":["// check if valid url\nexport const isValidURL = (url: string) => {\n  try {\n    return Boolean(new URL(url));\n  } catch (e) {\n    return false;\n  }\n};\n\n// extract hostname e.g: www.domain.com\nconst extractHostname = (url: string) => {\n  let hostname;\n\n  if (!url) {\n    url = '';\n  }\n\n  if (url.indexOf('://') > -1) {\n    hostname = url.split('/')[2];\n  } else {\n    hostname = url.split('/')[0];\n  }\n\n  hostname = hostname.split(':')[0];\n  hostname = hostname.split('?')[0];\n\n  return hostname;\n};\n\n// extract root domain e.g: domain.com\nconst extractRootDomain = (url: string) => {\n  let domain = extractHostname(url);\n  const splitArr = domain.split('.');\n  const arrLen = splitArr.length;\n\n  if (arrLen > 2) {\n    domain = splitArr[arrLen - 2] + '.' + splitArr[arrLen - 1];\n    if (\n      splitArr[arrLen - 1].length === 2 &&\n      splitArr[arrLen - 1].length === 2\n    ) {\n      domain = splitArr[arrLen - 3] + '.' + domain;\n    }\n  }\n  return domain;\n};\n\nexport default {\n  isValidURL,\n  extractHostname,\n  extractRootDomain\n};\n"]},"metadata":{},"sourceType":"module"}