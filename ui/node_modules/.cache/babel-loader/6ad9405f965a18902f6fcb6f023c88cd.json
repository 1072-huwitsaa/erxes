{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/deals/components/conversion/table/Stage.tsx\";\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Spinner from 'modules/common/components/Spinner';\nimport * as React from 'react';\nimport Collapse from 'react-bootstrap/Collapse';\nimport { BodyRow, StageName } from '../style';\nimport DealList from './DealList';\n\nvar Stage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Stage, _React$Component);\n\n  function Stage(props) {\n    var _this;\n\n    _classCallCheck(this, Stage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Stage).call(this, props));\n\n    _this.toggleCollapse = function () {\n      _this.setState({\n        showCollapse: !_this.state.showCollapse\n      });\n    };\n\n    _this.loadMore = function () {\n      _this.props.loadMore();\n    };\n\n    _this.calculatePercent = function (a, b) {\n      return parseInt(\"\".concat(b * 100 / a), 10);\n    };\n\n    _this.renderDealList = function () {\n      var _this$props = _this.props,\n          stage = _this$props.stage,\n          deals = _this$props.deals,\n          loadingDeals = _this$props.loadingDeals,\n          hasMore = _this$props.hasMore;\n\n      if (loadingDeals) {\n        return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(DealList, {\n        hasMore: hasMore,\n        loadMore: _this.loadMore,\n        listId: stage._id,\n        listType: \"DEAL\",\n        stageId: stage._id,\n        deals: deals,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    };\n\n    _this.isCollabsible = function () {\n      if (_this.props.stage.initialDealsTotalCount === 0) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.renderLostInfo = function () {\n      var stage = _this.props.stage;\n      var primary = stage.initialDealsTotalCount || 1;\n      var stayed = stage.stayedDealsTotalCount || 0;\n      var inProcess = stage.inProcessDealsTotalCount || 0;\n      var lost = (stage.initialDealsTotalCount || 0) - inProcess - stayed;\n      return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, stayed, \" / \", _this.calculatePercent(primary, stayed), \"%\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, inProcess, \" / \", _this.calculatePercent(primary, inProcess), \"%\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, lost, \" / \", _this.calculatePercent(primary, lost), \"%\"));\n    };\n\n    _this.renderCollapsibleContent = function () {\n      if (!_this.isCollabsible()) {\n        return null;\n      }\n\n      return React.createElement(Collapse, {\n        in: _this.state.showCollapse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, _this.renderDealList()));\n    };\n\n    _this.state = {\n      showCollapse: false\n    };\n    return _this;\n  }\n\n  _createClass(Stage, [{\n    key: \"render\",\n    value: function render() {\n      var stage = this.props.stage;\n      var isCollabsible = this.isCollabsible();\n      return React.createElement(React.Fragment, null, React.createElement(BodyRow, {\n        onClick: isCollabsible ? this.toggleCollapse : undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(StageName, {\n        open: this.state.showCollapse,\n        isCollabsible: isCollabsible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, stage.name, \" \", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"(\", stage.initialDealsTotalCount, \")\"), isCollabsible && React.createElement(Icon, {\n        icon: \"angle-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), this.renderLostInfo()), this.renderCollapsibleContent());\n    }\n  }]);\n\n  return Stage;\n}(React.Component);\n\nexport { Stage as default };","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/deals/components/conversion/table/Stage.tsx"],"names":["Icon","Spinner","React","Collapse","BodyRow","StageName","DealList","Stage","props","toggleCollapse","setState","showCollapse","state","loadMore","calculatePercent","a","b","parseInt","renderDealList","stage","deals","loadingDeals","hasMore","_id","isCollabsible","initialDealsTotalCount","renderLostInfo","primary","stayed","stayedDealsTotalCount","inProcess","inProcessDealsTotalCount","lost","renderCollapsibleContent","undefined","name","Component"],"mappings":";;;;;;AACA,OAAOA,IAAP,MAAiB,qCAAjB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAEA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,UAAnC;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAcqBC,K;;;;;AACnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,UAQnBC,cARmB,GAQF,YAAM;AACrB,YAAKC,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAE,CAAC,MAAKC,KAAL,CAAWD;AADd,OAAd;AAGD,KAZkB;;AAAA,UAcnBE,QAdmB,GAcR,YAAM;AACf,YAAKL,KAAL,CAAWK,QAAX;AACD,KAhBkB;;AAAA,UAkBnBC,gBAlBmB,GAkBA,UAACC,CAAD,EAAYC,CAAZ,EAA0B;AAC3C,aAAOC,QAAQ,WAAKD,CAAC,GAAG,GAAL,GAAYD,CAAhB,GAAqB,EAArB,CAAf;AACD,KApBkB;;AAAA,UAsBnBG,cAtBmB,GAsBF,YAAM;AAAA,wBAC2B,MAAKV,KADhC;AAAA,UACbW,KADa,eACbA,KADa;AAAA,UACNC,KADM,eACNA,KADM;AAAA,UACCC,YADD,eACCA,YADD;AAAA,UACeC,OADf,eACeA,OADf;;AAGrB,UAAID,YAAJ,EAAkB;AAChB,eAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aACE,oBAAC,QAAD;AACE,QAAA,OAAO,EAAEC,OADX;AAEE,QAAA,QAAQ,EAAE,MAAKT,QAFjB;AAGE,QAAA,MAAM,EAAEM,KAAK,CAACI,GAHhB;AAIE,QAAA,QAAQ,EAAC,MAJX;AAKE,QAAA,OAAO,EAAEJ,KAAK,CAACI,GALjB;AAME,QAAA,KAAK,EAAEH,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAvCkB;;AAAA,UAyCnBI,aAzCmB,GAyCH,YAAM;AACpB,UAAI,MAAKhB,KAAL,CAAWW,KAAX,CAAiBM,sBAAjB,KAA4C,CAAhD,EAAmD;AACjD,eAAO,KAAP;AACD;;AAED,aAAO,IAAP;AACD,KA/CkB;;AAAA,UAiDnBC,cAjDmB,GAiDF,YAAM;AAAA,UACbP,KADa,GACH,MAAKX,KADF,CACbW,KADa;AAGrB,UAAMQ,OAAO,GAAGR,KAAK,CAACM,sBAAN,IAAgC,CAAhD;AACA,UAAMG,MAAM,GAAGT,KAAK,CAACU,qBAAN,IAA+B,CAA9C;AACA,UAAMC,SAAS,GAAGX,KAAK,CAACY,wBAAN,IAAkC,CAApD;AACA,UAAMC,IAAI,GAAG,CAACb,KAAK,CAACM,sBAAN,IAAgC,CAAjC,IAAsCK,SAAtC,GAAkDF,MAA/D;AAEA,aACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,MADH,SACc,MAAKd,gBAAL,CAAsBa,OAAtB,EAA+BC,MAA/B,CADd,MADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGE,SADH,SACiB,MAAKhB,gBAAL,CAAsBa,OAAtB,EAA+BG,SAA/B,CADjB,MAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGE,IADH,SACY,MAAKlB,gBAAL,CAAsBa,OAAtB,EAA+BK,IAA/B,CADZ,MAPF,CADF;AAaD,KAtEkB;;AAAA,UAwEnBC,wBAxEmB,GAwEQ,YAAM;AAC/B,UAAI,CAAC,MAAKT,aAAL,EAAL,EAA2B;AACzB,eAAO,IAAP;AACD;;AAED,aACE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,MAAKZ,KAAL,CAAWD,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,MAAKO,cAAL,EAAN,CADF,CADF;AAKD,KAlFkB;;AAGjB,UAAKN,KAAL,GAAa;AACXD,MAAAA,YAAY,EAAE;AADH,KAAb;AAHiB;AAMlB;;;;6BA8EQ;AAAA,UACCQ,KADD,GACW,KAAKX,KADhB,CACCW,KADD;AAEP,UAAMK,aAAa,GAAG,KAAKA,aAAL,EAAtB;AAEA,aACE,0CACE,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAEA,aAAa,GAAG,KAAKf,cAAR,GAAyByB,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWD,YADnB;AAEE,QAAA,aAAa,EAAEa,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGL,KAAK,CAACgB,IAJT,OAIe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAShB,KAAK,CAACM,sBAAf,MAJf,EAKGD,aAAa,IAAI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALpB,CADF,EAQG,KAAKE,cAAL,EARH,CADF,EAWG,KAAKO,wBAAL,EAXH,CADF;AAeD;;;;EAxGgC/B,KAAK,CAACkC,S;;SAApB7B,K","sourcesContent":["import { IConversionStage } from 'modules/boards/types';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Spinner from 'modules/common/components/Spinner';\nimport * as React from 'react';\nimport Collapse from 'react-bootstrap/Collapse';\nimport { IDeal } from '../../../types';\nimport { BodyRow, StageName } from '../style';\nimport DealList from './DealList';\n\ntype Props = {\n  stage: IConversionStage;\n  deals: IDeal[];\n  loadMore: () => void;\n  hasMore: boolean;\n  loadingDeals: boolean;\n};\n\ntype State = {\n  showCollapse: boolean;\n};\n\nexport default class Stage extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showCollapse: false\n    };\n  }\n\n  toggleCollapse = () => {\n    this.setState({\n      showCollapse: !this.state.showCollapse\n    });\n  };\n\n  loadMore = () => {\n    this.props.loadMore();\n  };\n\n  calculatePercent = (a: number, b: number) => {\n    return parseInt(`${(b * 100) / a}`, 10);\n  };\n\n  renderDealList = () => {\n    const { stage, deals, loadingDeals, hasMore } = this.props;\n\n    if (loadingDeals) {\n      return <Spinner />;\n    }\n\n    return (\n      <DealList\n        hasMore={hasMore}\n        loadMore={this.loadMore}\n        listId={stage._id}\n        listType=\"DEAL\"\n        stageId={stage._id}\n        deals={deals}\n      />\n    );\n  };\n\n  isCollabsible = () => {\n    if (this.props.stage.initialDealsTotalCount === 0) {\n      return false;\n    }\n\n    return true;\n  };\n\n  renderLostInfo = () => {\n    const { stage } = this.props;\n\n    const primary = stage.initialDealsTotalCount || 1;\n    const stayed = stage.stayedDealsTotalCount || 0;\n    const inProcess = stage.inProcessDealsTotalCount || 0;\n    const lost = (stage.initialDealsTotalCount || 0) - inProcess - stayed;\n\n    return (\n      <>\n        <span>\n          {stayed} / {this.calculatePercent(primary, stayed)}%\n        </span>\n        <span>\n          {inProcess} / {this.calculatePercent(primary, inProcess)}%\n        </span>\n        <span>\n          {lost} / {this.calculatePercent(primary, lost)}%\n        </span>\n      </>\n    );\n  };\n\n  renderCollapsibleContent = () => {\n    if (!this.isCollabsible()) {\n      return null;\n    }\n\n    return (\n      <Collapse in={this.state.showCollapse}>\n        <div>{this.renderDealList()}</div>\n      </Collapse>\n    );\n  };\n\n  render() {\n    const { stage } = this.props;\n    const isCollabsible = this.isCollabsible();\n\n    return (\n      <>\n        <BodyRow onClick={isCollabsible ? this.toggleCollapse : undefined}>\n          <StageName\n            open={this.state.showCollapse}\n            isCollabsible={isCollabsible}\n          >\n            {stage.name} <label>({stage.initialDealsTotalCount})</label>\n            {isCollabsible && <Icon icon=\"angle-down\" />}\n          </StageName>\n          {this.renderLostInfo()}\n        </BodyRow>\n        {this.renderCollapsibleContent()}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}