{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/productService/components/productCategory/CategoryForm.tsx\";\nimport Button from 'modules/common/components/Button';\nimport FormControl from 'modules/common/components/form/Control';\nimport CommonForm from 'modules/common/components/form/Form';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport React from 'react';\nimport { generateCategoryOptions } from '../../utils';\n\nvar CategoryForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CategoryForm, _React$Component);\n\n  function CategoryForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CategoryForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CategoryForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderContent = function (formProps) {\n      var _this$props = _this.props,\n          renderButton = _this$props.renderButton,\n          closeModal = _this$props.closeModal,\n          category = _this$props.category,\n          categories = _this$props.categories;\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted;\n      var object = category || {};\n\n      if (category) {\n        values._id = category._id;\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Name\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"name\",\n        defaultValue: object.name,\n        autoFocus: true,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Code\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"code\",\n        defaultValue: object.code,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Description\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"description\",\n        componentClass: \"textarea\",\n        rows: 5,\n        defaultValue: object.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Parent Category\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"parentId\",\n        componentClass: \"select\",\n        defaultValue: object.parentId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), generateCategoryOptions(categories, object._id))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        onClick: closeModal,\n        icon: \"times-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Close\"), renderButton({\n        name: 'product & service category',\n        values: values,\n        isSubmitted: isSubmitted,\n        callback: closeModal,\n        object: category\n      })));\n    };\n\n    return _this;\n  }\n\n  _createClass(CategoryForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CommonForm, {\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CategoryForm;\n}(React.Component);\n\nexport default CategoryForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/productService/components/productCategory/CategoryForm.tsx"],"names":["Button","FormControl","CommonForm","FormGroup","ControlLabel","ModalFooter","React","generateCategoryOptions","CategoryForm","renderContent","formProps","props","renderButton","closeModal","category","categories","values","isSubmitted","object","_id","name","code","description","parentId","callback","Component"],"mappings":"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","sourcesContent":["import Button from 'modules/common/components/Button';\nimport FormControl from 'modules/common/components/form/Control';\nimport CommonForm from 'modules/common/components/form/Form';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { IButtonMutateProps, IFormProps } from 'modules/common/types';\nimport React from 'react';\nimport { IProductCategory } from '../../types';\nimport { generateCategoryOptions } from '../../utils';\n\ntype Props = {\n  categories: IProductCategory[];\n  category?: IProductCategory;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  closeModal: () => void;\n};\n\nclass CategoryForm extends React.Component<Props> {\n  renderContent = (formProps: IFormProps) => {\n    const { renderButton, closeModal, category, categories } = this.props;\n    const { values, isSubmitted } = formProps;\n\n    const object = category || ({} as IProductCategory);\n\n    if (category) {\n      values._id = category._id;\n    }\n\n    return (\n      <>\n        <FormGroup>\n          <ControlLabel required={true}>Name</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"name\"\n            defaultValue={object.name}\n            autoFocus={true}\n            required={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel required={true}>Code</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"code\"\n            defaultValue={object.code}\n            required={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Description</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"description\"\n            componentClass=\"textarea\"\n            rows={5}\n            defaultValue={object.description}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Parent Category</ControlLabel>\n\n          <FormControl\n            {...formProps}\n            name=\"parentId\"\n            componentClass=\"select\"\n            defaultValue={object.parentId}\n          >\n            <option value=\"\" />\n            {generateCategoryOptions(categories, object._id)}\n          </FormControl>\n        </FormGroup>\n\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            onClick={closeModal}\n            icon=\"times-circle\"\n            uppercase={false}\n          >\n            Close\n          </Button>\n\n          {renderButton({\n            name: 'product & service category',\n            values,\n            isSubmitted,\n            callback: closeModal,\n            object: category\n          })}\n        </ModalFooter>\n      </>\n    );\n  };\n\n  render() {\n    return <CommonForm renderContent={this.renderContent} />;\n  }\n}\n\nexport default CategoryForm;\n"]},"metadata":{},"sourceType":"module"}