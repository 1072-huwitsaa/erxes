{"ast":null,"code":"var _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/status/containers/Status.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport Spinner from 'modules/common/components/Spinner';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withProps } from '../../../common/utils';\nimport Status from '../components/Status';\nimport { queries } from '../graphql';\n\nvar StatusContainer = function StatusContainer(props) {\n  var statisticsQuery = props.statisticsQuery;\n\n  if (statisticsQuery.loading) {\n    return React.createElement(Spinner, {\n      objective: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n  var statistics = statisticsQuery.configsStatus || {};\n  return React.createElement(Status, {\n    statistics: statistics,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  });\n};\n\nexport default withProps(compose(graphql(gql(queries.configsStatus), {\n  name: 'statisticsQuery'\n}))(StatusContainer));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/status/containers/Status.tsx"],"names":["gql","compose","Spinner","React","graphql","withProps","Status","queries","StatusContainer","props","statisticsQuery","loading","statistics","configsStatus","name"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAkB;AAAA,MAChCC,eADgC,GACZD,KADY,CAChCC,eADgC;;AAGxC,MAAIA,eAAe,CAACC,OAApB,EAA6B;AAC3B,WAAO,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAMC,UAAU,GAAGF,eAAe,CAACG,aAAhB,IAAiC,EAApD;AAEA,SAAO,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAED,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAVD;;AAYA,eAAeP,SAAS,CACtBJ,OAAO,CACLG,OAAO,CAA4BJ,GAAG,CAACO,OAAO,CAACM,aAAT,CAA/B,EAAwD;AAC7DC,EAAAA,IAAI,EAAE;AADuD,CAAxD,CADF,CAAP,CAIEN,eAJF,CADsB,CAAxB","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport Spinner from 'modules/common/components/Spinner';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withProps } from '../../../common/utils';\nimport Status from '../components/Status';\nimport { queries } from '../graphql';\nimport { VersionsQueryResponse } from '../types';\n\ntype Props = {\n  statisticsQuery: VersionsQueryResponse;\n};\n\nconst StatusContainer = (props: Props) => {\n  const { statisticsQuery } = props;\n\n  if (statisticsQuery.loading) {\n    return <Spinner objective={true} />;\n  }\n\n  const statistics = statisticsQuery.configsStatus || {};\n\n  return <Status statistics={statistics} />;\n};\n\nexport default withProps<{}>(\n  compose(\n    graphql<{}, VersionsQueryResponse>(gql(queries.configsStatus), {\n      name: 'statisticsQuery'\n    })\n  )(StatusContainer)\n);\n"]},"metadata":{},"sourceType":"module"}