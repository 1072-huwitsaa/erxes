{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/Attachment.tsx\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  word-wrap: break-word;\\n  word-break: break-word;\\n  line-height: 20px;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  font-weight: 500;\\n  color: \", \";\\n\\n  > * + * {\\n    margin-left: 10px;\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 80px;\\n  width: 110px;\\n  background: \", \";\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 4px;\\n  overflow: hidden;\\n  align-self: center;\\n\\n  i {\\n    font-size: 36px;\\n    color: \", \";\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  margin-left: 10px;\\n\\n  &:hover {\\n    color: \", \";\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 10px 15px;\\n  word-wrap: break-word;\\n\\n  h5 {\\n    margin: 0 0 5px;\\n    font-weight: bold;\\n  }\\n\\n  video {\\n    width: 100%;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  border-radius: 4px;\\n  transition: all 0.3s ease;\\n  display: flex;\\n  color: \", \";\\n  position: relative;\\n\\n  img {\\n    max-width: 100%;\\n  }\\n\\n  &:hover {\\n    background: \", \";\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport ImageWithPreview from 'modules/common/components/ImageWithPreview';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { rgba } from '../styles/color';\nimport colors from '../styles/colors';\nimport { __, readFile } from '../utils';\nexport var AttachmentWrapper = styled.div(_templateObject(), colors.textPrimary, rgba(colors.colorCoreDarkBlue, 0.08));\nvar ItemInfo = styled.div(_templateObject2());\nvar Download = styled.a(_templateObject3(), colors.colorCoreGray, colors.colorCoreBlack);\nvar PreviewWrapper = styled.div(_templateObject4(), rgba(colors.colorCoreDarkBlue, 0.08), colors.colorSecondary);\nexport var Meta = styled.div(_templateObject5(), colors.colorCoreGray);\nvar AttachmentName = styled.span(_templateObject6());\n\nvar Attachment =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Attachment, _React$Component);\n\n  function Attachment() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Attachment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Attachment)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderOtherInfo = function (attachment) {\n      var name = attachment.name || attachment.url || '';\n      return React.createElement(React.Fragment, null, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(AttachmentName, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, name), React.createElement(Download, {\n        rel: \"noopener noreferrer\",\n        href: readFile(attachment.url),\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"external-link-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))), React.createElement(Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, attachment.size && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Size: \", Math.round(attachment.size / 1000), \"kB\"), _this.props.additionalItem));\n    };\n\n    _this.renderOtherFile = function (attachment, icon) {\n      return React.createElement(AttachmentWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(PreviewWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(ItemInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, _this.renderOtherInfo(attachment)));\n    };\n\n    _this.renderVideoFile = function (attachment) {\n      return React.createElement(AttachmentWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(ItemInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        controls: true,\n        loop: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: attachment.url,\n        type: \"video/mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), __('Your browser does not support the video tag'), \".\")));\n    };\n\n    _this.onLoadImage = function () {\n      var scrollBottom = _this.props.scrollBottom;\n\n      if (scrollBottom) {\n        scrollBottom();\n      }\n    };\n\n    _this.renderAtachment = function (_ref) {\n      var attachment = _ref.attachment;\n\n      if (!attachment.type) {\n        return null;\n      }\n\n      var simple = _this.props.simple;\n\n      if (attachment.type.startsWith('image')) {\n        if (simple) {\n          return _this.renderImagePreview(attachment);\n        }\n\n        return React.createElement(AttachmentWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(PreviewWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, _this.renderImagePreview(attachment)), React.createElement(ItemInfo, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, _this.renderOtherInfo(attachment)));\n      }\n\n      var url = attachment.url || attachment.name || '';\n      var fileExtension = url.split('.').pop();\n      var filePreview;\n\n      switch (fileExtension) {\n        case 'docx':\n          filePreview = _this.renderOtherFile(attachment, 'doc');\n          break;\n\n        case 'pptx':\n          filePreview = _this.renderOtherFile(attachment, 'ppt');\n          break;\n\n        case 'xlsx':\n          filePreview = _this.renderOtherFile(attachment, 'xls');\n          break;\n\n        case 'mp4':\n          filePreview = _this.renderVideoFile(attachment);\n          break;\n\n        case 'zip':\n        case 'csv':\n        case 'doc':\n        case 'ppt':\n        case 'psd':\n        case 'avi':\n        case 'txt':\n        case 'rar':\n        case 'mp3':\n        case 'pdf':\n        case 'png':\n        case 'xls':\n        case 'jpeg':\n          filePreview = _this.renderOtherFile(attachment, fileExtension);\n          break;\n\n        default:\n          filePreview = _this.renderOtherFile(attachment, 'file-2');\n      }\n\n      return filePreview;\n    };\n\n    return _this;\n  }\n\n  _createClass(Attachment, [{\n    key: \"renderImagePreview\",\n    value: function renderImagePreview(attachment) {\n      return React.createElement(ImageWithPreview, {\n        onLoad: this.onLoadImage,\n        alt: attachment.url,\n        src: attachment.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.renderAtachment(this.props);\n    }\n  }]);\n\n  return Attachment;\n}(React.Component);\n\nexport default Attachment;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/Attachment.tsx"],"names":["ImageWithPreview","Icon","React","styled","rgba","colors","__","readFile","AttachmentWrapper","div","textPrimary","colorCoreDarkBlue","ItemInfo","Download","a","colorCoreGray","colorCoreBlack","PreviewWrapper","colorSecondary","Meta","AttachmentName","span","Attachment","renderOtherInfo","attachment","name","url","size","Math","round","props","additionalItem","renderOtherFile","icon","renderVideoFile","onLoadImage","scrollBottom","renderAtachment","type","simple","startsWith","renderImagePreview","fileExtension","split","pop","filePreview","Component"],"mappings":"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","sourcesContent":["import ImageWithPreview from 'modules/common/components/ImageWithPreview';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { rgba } from '../styles/color';\nimport colors from '../styles/colors';\nimport { IAttachment } from '../types';\nimport { __, readFile } from '../utils';\n\nexport const AttachmentWrapper = styled.div`\n  border-radius: 4px;\n  transition: all 0.3s ease;\n  display: flex;\n  color: ${colors.textPrimary};\n  position: relative;\n\n  img {\n    max-width: 100%;\n  }\n\n  &:hover {\n    background: ${rgba(colors.colorCoreDarkBlue, 0.08)};\n  }\n`;\n\nconst ItemInfo = styled.div`\n  flex: 1;\n  padding: 10px 15px;\n  word-wrap: break-word;\n\n  h5 {\n    margin: 0 0 5px;\n    font-weight: bold;\n  }\n\n  video {\n    width: 100%;\n  }\n`;\n\nconst Download = styled.a`\n  color: ${colors.colorCoreGray};\n  margin-left: 10px;\n\n  &:hover {\n    color: ${colors.colorCoreBlack};\n  }\n`;\n\nconst PreviewWrapper = styled.div`\n  height: 80px;\n  width: 110px;\n  background: ${rgba(colors.colorCoreDarkBlue, 0.08)};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  overflow: hidden;\n  align-self: center;\n\n  i {\n    font-size: 36px;\n    color: ${colors.colorSecondary};\n  }\n`;\n\nexport const Meta = styled.div`\n  position: relative;\n  font-weight: 500;\n  color: ${colors.colorCoreGray};\n\n  > * + * {\n    margin-left: 10px;\n  }\n`;\n\nconst AttachmentName = styled.span`\n  word-wrap: break-word;\n  word-break: break-word;\n  line-height: 20px;\n`;\n\ntype Props = {\n  attachment: IAttachment;\n  scrollBottom?: () => void;\n  additionalItem?: React.ReactNode;\n  simple?: boolean;\n};\n\nclass Attachment extends React.Component<Props> {\n  renderOtherInfo = attachment => {\n    const name = attachment.name || attachment.url || '';\n\n    return (\n      <>\n        <h5>\n          <AttachmentName>{name}</AttachmentName>\n          <Download\n            rel=\"noopener noreferrer\"\n            href={readFile(attachment.url)}\n            target=\"_blank\"\n          >\n            <Icon icon=\"external-link-alt\" />\n          </Download>\n        </h5>\n        <Meta>\n          {attachment.size && (\n            <span>Size: {Math.round(attachment.size / 1000)}kB</span>\n          )}\n          {this.props.additionalItem}\n        </Meta>\n      </>\n    );\n  };\n\n  renderOtherFile = (attachment, icon) => {\n    return (\n      <AttachmentWrapper>\n        <PreviewWrapper>\n          <Icon icon={icon} />\n        </PreviewWrapper>\n        <ItemInfo>{this.renderOtherInfo(attachment)}</ItemInfo>\n      </AttachmentWrapper>\n    );\n  };\n\n  renderVideoFile = attachment => {\n    return (\n      <AttachmentWrapper>\n        <ItemInfo>\n          <video controls={true} loop={true}>\n            <source src={attachment.url} type=\"video/mp4\" />\n            {__('Your browser does not support the video tag')}.\n          </video>\n        </ItemInfo>\n      </AttachmentWrapper>\n    );\n  };\n\n  onLoadImage = () => {\n    const { scrollBottom } = this.props;\n\n    if (scrollBottom) {\n      scrollBottom();\n    }\n  };\n\n  renderImagePreview(attachment) {\n    return (\n      <ImageWithPreview\n        onLoad={this.onLoadImage}\n        alt={attachment.url}\n        src={attachment.url}\n      />\n    );\n  }\n\n  renderAtachment = ({ attachment }) => {\n    if (!attachment.type) {\n      return null;\n    }\n\n    const { simple } = this.props;\n\n    if (attachment.type.startsWith('image')) {\n      if (simple) {\n        return this.renderImagePreview(attachment);\n      }\n\n      return (\n        <AttachmentWrapper>\n          <PreviewWrapper>{this.renderImagePreview(attachment)}</PreviewWrapper>\n          <ItemInfo>{this.renderOtherInfo(attachment)}</ItemInfo>\n        </AttachmentWrapper>\n      );\n    }\n\n    const url = attachment.url || attachment.name || '';\n    const fileExtension = url.split('.').pop();\n\n    let filePreview;\n\n    switch (fileExtension) {\n      case 'docx':\n        filePreview = this.renderOtherFile(attachment, 'doc');\n        break;\n      case 'pptx':\n        filePreview = this.renderOtherFile(attachment, 'ppt');\n        break;\n      case 'xlsx':\n        filePreview = this.renderOtherFile(attachment, 'xls');\n        break;\n      case 'mp4':\n        filePreview = this.renderVideoFile(attachment);\n        break;\n      case 'zip':\n      case 'csv':\n      case 'doc':\n      case 'ppt':\n      case 'psd':\n      case 'avi':\n      case 'txt':\n      case 'rar':\n      case 'mp3':\n      case 'pdf':\n      case 'png':\n      case 'xls':\n      case 'jpeg':\n        filePreview = this.renderOtherFile(attachment, fileExtension);\n        break;\n      default:\n        filePreview = this.renderOtherFile(attachment, 'file-2');\n    }\n    return filePreview;\n  };\n\n  render() {\n    return this.renderAtachment(this.props);\n  }\n}\n\nexport default Attachment;\n"]},"metadata":{},"sourceType":"module"}