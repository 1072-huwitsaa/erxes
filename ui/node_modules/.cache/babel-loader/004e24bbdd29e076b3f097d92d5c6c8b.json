{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/leads/containers/CreateLead.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { Alert, withProps } from 'modules/common/utils';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\nimport Lead from '../components/Lead';\nimport { mutations } from '../graphql';\n\nvar CreateLeadContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateLeadContainer, _React$Component);\n\n  function CreateLeadContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CreateLeadContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateLeadContainer).call(this, props));\n    _this.state = {\n      isLoading: false,\n      isReadyToSaveForm: false\n    };\n    return _this;\n  }\n\n  _createClass(CreateLeadContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          addIntegrationMutation = _this$props.addIntegrationMutation,\n          history = _this$props.history;\n\n      var afterFormDbSave = function afterFormDbSave(id) {\n        _this2.setState({\n          isReadyToSaveForm: false\n        });\n\n        if (_this2.state.doc) {\n          var _this2$state$doc = _this2.state.doc,\n              leadData = _this2$state$doc.leadData,\n              brandId = _this2$state$doc.brandId,\n              name = _this2$state$doc.name,\n              languageCode = _this2$state$doc.languageCode;\n          addIntegrationMutation({\n            variables: {\n              formId: id,\n              leadData: leadData,\n              brandId: brandId,\n              name: name,\n              languageCode: languageCode\n            }\n          }).then(function (_ref) {\n            var _id = _ref.data.integrationsCreateLeadIntegration._id;\n            Alert.success('You successfully added a lead');\n            history.push({\n              pathname: '/leads',\n              search: \"?popUpRefetchList=true&showInstallCode=\".concat(_id)\n            });\n          }).catch(function (error) {\n            Alert.error(error.message);\n\n            _this2.setState({\n              isLoading: false\n            });\n          });\n        }\n      };\n\n      var save = function save(doc) {\n        _this2.setState({\n          isLoading: true,\n          isReadyToSaveForm: true,\n          doc: doc\n        });\n      };\n\n      var updatedProps = _objectSpread({}, this.props, {\n        fields: [],\n        save: save,\n        afterFormDbSave: afterFormDbSave,\n        isActionLoading: this.state.isLoading,\n        isReadyToSaveForm: this.state.isReadyToSaveForm\n      });\n\n      return React.createElement(Lead, Object.assign({}, updatedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CreateLeadContainer;\n}(React.Component);\n\nexport default withProps(compose(graphql(gql(mutations.integrationsCreateLeadIntegration), {\n  name: 'addIntegrationMutation'\n}))(withRouter(CreateLeadContainer)));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/leads/containers/CreateLead.tsx"],"names":["gql","compose","Alert","withProps","React","graphql","withRouter","Lead","mutations","CreateLeadContainer","props","state","isLoading","isReadyToSaveForm","addIntegrationMutation","history","afterFormDbSave","id","setState","doc","leadData","brandId","name","languageCode","variables","formId","then","_id","data","integrationsCreateLeadIntegration","success","push","pathname","search","catch","error","message","save","updatedProps","fields","isActionLoading","Component"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { Alert, withProps } from 'modules/common/utils';\nimport {\n  AddIntegrationMutationResponse,\n  AddIntegrationMutationVariables\n} from 'modules/settings/integrations/types';\nimport { AddFieldsMutationResponse } from 'modules/settings/properties/types';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\nimport { IRouterProps } from '../../common/types';\nimport Lead from '../components/Lead';\nimport { mutations } from '../graphql';\nimport { ILeadData } from '../types';\n\ntype Props = {} & IRouterProps &\n  AddIntegrationMutationResponse &\n  AddFieldsMutationResponse;\n\ntype State = {\n  isLoading: boolean;\n  isReadyToSaveForm: boolean;\n  doc?: {\n    brandId: string;\n    name: string;\n    languageCode: string;\n    lead: any;\n    leadData: ILeadData;\n  };\n};\n\nclass CreateLeadContainer extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = { isLoading: false, isReadyToSaveForm: false };\n  }\n\n  render() {\n    const { addIntegrationMutation, history } = this.props;\n    const afterFormDbSave = id => {\n      this.setState({ isReadyToSaveForm: false });\n\n      if (this.state.doc) {\n        const { leadData, brandId, name, languageCode } = this.state.doc;\n\n        addIntegrationMutation({\n          variables: {\n            formId: id,\n            leadData,\n            brandId,\n            name,\n            languageCode\n          }\n        })\n          .then(\n            ({\n              data: {\n                integrationsCreateLeadIntegration: { _id }\n              }\n            }) => {\n              Alert.success('You successfully added a lead');\n\n              history.push({\n                pathname: '/leads',\n                search: `?popUpRefetchList=true&showInstallCode=${_id}`\n              });\n            }\n          )\n\n          .catch(error => {\n            Alert.error(error.message);\n\n            this.setState({ isLoading: false });\n          });\n      }\n    };\n\n    const save = doc => {\n      this.setState({ isLoading: true, isReadyToSaveForm: true, doc });\n    };\n\n    const updatedProps = {\n      ...this.props,\n      fields: [],\n      save,\n      afterFormDbSave,\n      isActionLoading: this.state.isLoading,\n      isReadyToSaveForm: this.state.isReadyToSaveForm\n    };\n\n    return <Lead {...updatedProps} />;\n  }\n}\n\nexport default withProps<{}>(\n  compose(\n    graphql<\n      {},\n      AddIntegrationMutationResponse,\n      AddIntegrationMutationVariables\n    >(gql(mutations.integrationsCreateLeadIntegration), {\n      name: 'addIntegrationMutation'\n    })\n  )(withRouter<Props>(CreateLeadContainer))\n);\n"]},"metadata":{},"sourceType":"module"}