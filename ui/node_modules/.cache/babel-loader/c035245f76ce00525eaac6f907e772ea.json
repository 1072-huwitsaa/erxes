{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/general/components/GeneralSettings.tsx\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport CollapseContent from \"modules/common/components/CollapseContent\";\nimport { FormControl } from \"modules/common/components/form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport Info from \"modules/common/components/Info\";\nimport CURRENCIES from \"modules/common/constants/currencies\";\nimport { Title } from \"modules/common/styles/main\";\nimport { __ } from \"modules/common/utils\";\nimport Wrapper from \"modules/layout/components/Wrapper\";\nimport React from \"react\";\nimport Select from \"react-select-plus\";\nimport { ContentBox } from \"../../styles\";\nimport { FILE_MIME_TYPES, FILE_SYSTEM_TYPES, KEY_LABELS, LANGUAGES, MEASUREMENTS, SERVICE_TYPES } from \"../constants\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\n\nvar GeneralSettings =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GeneralSettings, _React$Component);\n\n  function GeneralSettings(props) {\n    var _this;\n\n    _classCallCheck(this, GeneralSettings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GeneralSettings).call(this, props));\n\n    _this.save = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          configsMap = _this$state.configsMap,\n          language = _this$state.language;\n\n      _this.props.save(configsMap);\n\n      _this.props.changeLanguage(language);\n    };\n\n    _this.onChangeConfig = function (code, value) {\n      var configsMap = _this.state.configsMap;\n      configsMap[code] = value;\n\n      _this.setState({\n        configsMap: configsMap\n      });\n    };\n\n    _this.onChangeMultiCombo = function (code, values) {\n      var value = values;\n\n      if (Array.isArray(values)) {\n        value = values.map(function (el) {\n          return el.value;\n        });\n      }\n\n      _this.onChangeConfig(code, value);\n    };\n\n    _this.onChangeSingleCombo = function (code, obj) {\n      _this.onChangeConfig(code, obj.value);\n    };\n\n    _this.onChangeInput = function (code, e) {\n      _this.onChangeConfig(code, e.target.value);\n    };\n\n    _this.onLanguageChange = function (language) {\n      _this.setState({\n        language: language.value\n      });\n    };\n\n    _this.renderItem = function (key, description) {\n      var configsMap = _this.state.configsMap;\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, KEY_LABELS[key]), description && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, __(description)), React.createElement(FormControl, {\n        defaultValue: configsMap[key],\n        onChange: _this.onChangeInput.bind(_assertThisInitialized(_this), key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    };\n\n    _this.state = {\n      configsMap: props.configsMap,\n      language: props.currentLanguage\n    };\n    return _this;\n  }\n\n  _createClass(GeneralSettings, [{\n    key: \"renderConstant\",\n    value: function renderConstant(kind) {\n      var constants = this.props.constants;\n      var configsMap = this.state.configsMap;\n      var allValues = constants.allValues || {};\n      var defaultValues = constants.defaultValues || {};\n      var constant = allValues[kind] || [];\n      var value = configsMap[kind];\n\n      if (!value || value.length === 0) {\n        value = defaultValues[kind] || \"\";\n      }\n\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, KEY_LABELS[kind]), React.createElement(Select, {\n        options: constant,\n        value: value,\n        onChange: this.onChangeMultiCombo.bind(this, kind),\n        multi: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          configsMap = _this$state2.configsMap,\n          language = _this$state2.language;\n      var breadcrumb = [{\n        title: __(\"Settings\"),\n        link: \"/settings\"\n      }, {\n        title: __(\"General system config\")\n      }];\n      var actionButtons = React.createElement(Button, {\n        btnStyle: \"primary\",\n        onClick: this.save,\n        icon: \"check-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Save\");\n      var mimeTypeOptions = FILE_MIME_TYPES.map(function (item) {\n        return {\n          value: item.value,\n          label: \"\".concat(item.label, \" (\").concat(item.extension, \")\")\n        };\n      });\n\n      var mimeTypeDesc = __(\"Comma-separated list of media types. Leave it blank for accepting all media types\");\n\n      var content = React.createElement(ContentBox, {\n        id: \"GeneralSettingsMenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(CollapseContent, {\n        title: __(\"General settings\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Language\"), React.createElement(Select, {\n        options: LANGUAGES,\n        value: language,\n        onChange: this.onLanguageChange,\n        searchable: false,\n        clearable: false,\n        placeholder: __(\"Select\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Currency\"), React.createElement(Select, {\n        options: CURRENCIES,\n        value: configsMap.dealCurrency,\n        onChange: this.onChangeMultiCombo.bind(this, \"dealCurrency\"),\n        multi: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Unit of measurement\"), React.createElement(Select, {\n        options: MEASUREMENTS,\n        value: configsMap.dealUOM,\n        onChange: this.onChangeMultiCombo.bind(this, \"dealUOM\"),\n        multi: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }))), React.createElement(CollapseContent, {\n        title: __(\"File upload\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        href: \"https://docs.erxes.io/administrator/system-config#file-upload\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, __(\"Learn how to set file uploading\") + \".\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, KEY_LABELS.UPLOAD_FILE_TYPES), mimeTypeDesc && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, __(mimeTypeDesc)), React.createElement(Select, {\n        value: configsMap.UPLOAD_FILE_TYPES,\n        options: mimeTypeOptions,\n        onChange: this.onChangeMultiCombo.bind(this, \"UPLOAD_FILE_TYPES\"),\n        multi: true,\n        delimiter: \",\",\n        simpleValue: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, KEY_LABELS.WIDGETS_UPLOAD_FILE_TYPES), mimeTypeDesc && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, __(mimeTypeDesc)), React.createElement(Select, {\n        value: configsMap.WIDGETS_UPLOAD_FILE_TYPES,\n        options: mimeTypeOptions,\n        onChange: this.onChangeMultiCombo.bind(this, \"WIDGETS_UPLOAD_FILE_TYPES\"),\n        multi: true,\n        delimiter: \",\",\n        simpleValue: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, KEY_LABELS.UPLOAD_SERVICE_TYPE), React.createElement(Select, {\n        options: SERVICE_TYPES,\n        value: configsMap.UPLOAD_SERVICE_TYPE || \"AWS\",\n        clearable: false,\n        onChange: this.onChangeSingleCombo.bind(this, \"UPLOAD_SERVICE_TYPE\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, KEY_LABELS.FILE_SYSTEM_PUBLIC), React.createElement(Select, {\n        options: FILE_SYSTEM_TYPES,\n        value: configsMap.FILE_SYSTEM_PUBLIC || \"true\",\n        clearable: false,\n        searchable: false,\n        onChange: this.onChangeSingleCombo.bind(this, \"FILE_SYSTEM_PUBLIC\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }))), React.createElement(CollapseContent, {\n        title: \"Google Cloud Storage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        href: \"https://docs.erxes.io/administrator/system-config#google-cloud-storage\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, __(\"Learn how to create or find your Google Cloud Storage bucket\"))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"Google Bucket Name\"), this.renderItem(\"GOOGLE_CLOUD_STORAGE_BUCKET\"))), React.createElement(CollapseContent, {\n        title: \"AWS S3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        href: \"https://docs.erxes.io/administrator/system-config#aws-s3\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, __(\"Learn how to set AWS S3 Variables\"))), this.renderItem(\"AWS_ACCESS_KEY_ID\"), this.renderItem(\"AWS_SECRET_ACCESS_KEY\"), this.renderItem(\"AWS_BUCKET\"), this.renderItem(\"AWS_PREFIX\"), this.renderItem(\"AWS_COMPATIBLE_SERVICE_ENDPOINT\", __(\"Used when using s3 compatible service\")), this.renderItem(\"AWS_FORCE_PATH_STYLE\")), React.createElement(CollapseContent, {\n        title: \"AWS SES\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, __(\"In this field, the AWS SES configuration is dedicated to providing transaction emails\") + \".\"), React.createElement(\"a\", {\n        target: \"_blank\",\n        href: \"https://docs.erxes.io/administrator/system-config#aws-ses\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, __(\"Learn how to set Amazon SES variables\"))), this.renderItem(\"AWS_SES_ACCESS_KEY_ID\"), this.renderItem(\"AWS_SES_SECRET_ACCESS_KEY\"), this.renderItem(\"AWS_REGION\"), this.renderItem(\"AWS_SES_CONFIG_SET\")), React.createElement(CollapseContent, {\n        title: \"Google\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        href: \"https://docs.erxes.io/administrator/system-config#google\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, __(\"Learn how to set Google variables\"))), this.renderItem(\"GOOGLE_PROJECT_ID\"), this.renderItem(\"GOOGLE_CLIENT_ID\"), this.renderItem(\"GOOGLE_CLIENT_SECRET\"), this.renderItem(\"GOOGLE_GMAIL_TOPIC\", \"The topic value created in Gmail setup\"), this.renderItem(\"GOOGLE_APPLICATION_CREDENTIALS_JSON\", \"Firebase config for notifications\")), React.createElement(CollapseContent, {\n        title: __(\"Common mail config\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        href: \"https://docs.erxes.io/administrator/system-config#common-mail-config\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, __(\"Learn more about Email Settings\"))), this.renderItem(\"COMPANY_EMAIL_FROM\"), this.renderItem(\"DEFAULT_EMAIL_SERVICE\", \"Write your default email service name. Default email service is SES\")), React.createElement(CollapseContent, {\n        title: __(\"Custom mail service\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        href: \"https://docs.erxes.io/administrator/system-config#custom-mail-service\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, __(\"Learn the case of custom email service\"))), this.renderItem(\"MAIL_SERVICE\"), this.renderItem(\"MAIL_PORT\"), this.renderItem(\"MAIL_USER\"), this.renderItem(\"MAIL_PASS\"), this.renderItem(\"MAIL_HOST\")), React.createElement(CollapseContent, {\n        title: __(\"Constants\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, this.renderConstant(\"sex_choices\"), this.renderConstant(\"company_industry_types\"), this.renderConstant(\"social_links\")));\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          title: __(\"General system config\"),\n          breadcrumb: breadcrumb,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390\n          },\n          __self: this\n        }),\n        mainHead: React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395\n          },\n          __self: this\n        }),\n        actionBar: React.createElement(Wrapper.ActionBar, {\n          left: React.createElement(Title, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 398\n            },\n            __self: this\n          }, __(\"General system config\")),\n          right: actionButtons,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397\n          },\n          __self: this\n        }),\n        leftSidebar: React.createElement(Sidebar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402\n          },\n          __self: this\n        }),\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return GeneralSettings;\n}(React.Component);\n\nexport default GeneralSettings;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/general/components/GeneralSettings.tsx"],"names":["Button","CollapseContent","FormControl","FormGroup","ControlLabel","Info","CURRENCIES","Title","__","Wrapper","React","Select","ContentBox","FILE_MIME_TYPES","FILE_SYSTEM_TYPES","KEY_LABELS","LANGUAGES","MEASUREMENTS","SERVICE_TYPES","Header","Sidebar","GeneralSettings","props","save","e","preventDefault","state","configsMap","language","changeLanguage","onChangeConfig","code","value","setState","onChangeMultiCombo","values","Array","isArray","map","el","onChangeSingleCombo","obj","onChangeInput","target","onLanguageChange","renderItem","key","description","bind","currentLanguage","kind","constants","allValues","defaultValues","constant","length","breadcrumb","title","link","actionButtons","mimeTypeOptions","item","label","extension","mimeTypeDesc","content","dealCurrency","dealUOM","UPLOAD_FILE_TYPES","WIDGETS_UPLOAD_FILE_TYPES","UPLOAD_SERVICE_TYPE","FILE_SYSTEM_PUBLIC","renderConstant","Component"],"mappings":"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","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport CollapseContent from \"modules/common/components/CollapseContent\";\nimport { FormControl } from \"modules/common/components/form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport Info from \"modules/common/components/Info\";\nimport CURRENCIES from \"modules/common/constants/currencies\";\nimport { Title } from \"modules/common/styles/main\";\nimport { __ } from \"modules/common/utils\";\nimport Wrapper from \"modules/layout/components/Wrapper\";\nimport React from \"react\";\nimport Select from \"react-select-plus\";\nimport { ContentBox } from \"../../styles\";\nimport {\n  FILE_MIME_TYPES,\n  FILE_SYSTEM_TYPES,\n  KEY_LABELS,\n  LANGUAGES,\n  MEASUREMENTS,\n  SERVICE_TYPES,\n} from \"../constants\";\nimport { IConfigsMap } from \"../types\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\n\ntype Props = {\n  currentLanguage: string;\n  changeLanguage: (language: string) => void;\n  save: (configsMap: IConfigsMap) => void;\n  configsMap: IConfigsMap;\n  constants;\n};\n\ntype State = {\n  configsMap: IConfigsMap;\n  language: string;\n};\n\nclass GeneralSettings extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      configsMap: props.configsMap,\n      language: props.currentLanguage,\n    };\n  }\n\n  save = (e) => {\n    e.preventDefault();\n\n    const { configsMap, language } = this.state;\n\n    this.props.save(configsMap);\n\n    this.props.changeLanguage(language);\n  };\n\n  onChangeConfig = (code: string, value) => {\n    const { configsMap } = this.state;\n\n    configsMap[code] = value;\n\n    this.setState({ configsMap });\n  };\n\n  onChangeMultiCombo = (code: string, values) => {\n    let value = values;\n\n    if (Array.isArray(values)) {\n      value = values.map((el) => el.value);\n    }\n\n    this.onChangeConfig(code, value);\n  };\n\n  onChangeSingleCombo = (code: string, obj) => {\n    this.onChangeConfig(code, obj.value);\n  };\n\n  onChangeInput = (code: string, e) => {\n    this.onChangeConfig(code, e.target.value);\n  };\n\n  onLanguageChange = (language) => {\n    this.setState({ language: language.value });\n  };\n\n  renderItem = (key: string, description?: string) => {\n    const { configsMap } = this.state;\n\n    return (\n      <FormGroup>\n        <ControlLabel>{KEY_LABELS[key]}</ControlLabel>\n        {description && <p>{__(description)}</p>}\n        <FormControl\n          defaultValue={configsMap[key]}\n          onChange={this.onChangeInput.bind(this, key)}\n        />\n      </FormGroup>\n    );\n  };\n\n  renderConstant(kind: string) {\n    const { constants } = this.props;\n    const { configsMap } = this.state;\n    const allValues = constants.allValues || {};\n    const defaultValues = constants.defaultValues || {};\n\n    const constant = allValues[kind] || [];\n\n    let value = configsMap[kind];\n\n    if (!value || value.length === 0) {\n      value = defaultValues[kind] || \"\";\n    }\n\n    return (\n      <FormGroup>\n        <ControlLabel>{KEY_LABELS[kind]}</ControlLabel>\n\n        <Select\n          options={constant}\n          value={value}\n          onChange={this.onChangeMultiCombo.bind(this, kind)}\n          multi={true}\n        />\n      </FormGroup>\n    );\n  }\n\n  render() {\n    const { configsMap, language } = this.state;\n\n    const breadcrumb = [\n      { title: __(\"Settings\"), link: \"/settings\" },\n      { title: __(\"General system config\") },\n    ];\n\n    const actionButtons = (\n      <Button\n        btnStyle=\"primary\"\n        onClick={this.save}\n        icon=\"check-circle\"\n        uppercase={false}\n      >\n        Save\n      </Button>\n    );\n\n    const mimeTypeOptions = FILE_MIME_TYPES.map((item) => ({\n      value: item.value,\n      label: `${item.label} (${item.extension})`,\n    }));\n    const mimeTypeDesc = __(\n      \"Comma-separated list of media types. Leave it blank for accepting all media types\"\n    );\n\n    const content = (\n      <ContentBox id={\"GeneralSettingsMenu\"}>\n        <CollapseContent title={__(\"General settings\")}>\n          <FormGroup>\n            <ControlLabel>Language</ControlLabel>\n            <Select\n              options={LANGUAGES}\n              value={language}\n              onChange={this.onLanguageChange}\n              searchable={false}\n              clearable={false}\n              placeholder={__(\"Select\")}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <ControlLabel>Currency</ControlLabel>\n            <Select\n              options={CURRENCIES}\n              value={configsMap.dealCurrency}\n              onChange={this.onChangeMultiCombo.bind(this, \"dealCurrency\")}\n              multi={true}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <ControlLabel>Unit of measurement</ControlLabel>\n            <Select\n              options={MEASUREMENTS}\n              value={configsMap.dealUOM}\n              onChange={this.onChangeMultiCombo.bind(this, \"dealUOM\")}\n              multi={true}\n            />\n          </FormGroup>\n        </CollapseContent>\n\n        <CollapseContent title={__(\"File upload\")}>\n          <Info>\n            <a\n              target=\"_blank\"\n              href=\"https://docs.erxes.io/administrator/system-config#file-upload\"\n              rel=\"noopener noreferrer\"\n            >\n              {__(\"Learn how to set file uploading\") + \".\"}\n            </a>\n          </Info>\n          <FormGroup>\n            <ControlLabel>{KEY_LABELS.UPLOAD_FILE_TYPES}</ControlLabel>\n            {mimeTypeDesc && <p>{__(mimeTypeDesc)}</p>}\n            <Select\n              value={configsMap.UPLOAD_FILE_TYPES}\n              options={mimeTypeOptions}\n              onChange={this.onChangeMultiCombo.bind(this, \"UPLOAD_FILE_TYPES\")}\n              multi={true}\n              delimiter=\",\"\n              simpleValue={true}\n            />\n          </FormGroup>\n          <FormGroup>\n            <ControlLabel>{KEY_LABELS.WIDGETS_UPLOAD_FILE_TYPES}</ControlLabel>\n            {mimeTypeDesc && <p>{__(mimeTypeDesc)}</p>}\n            <Select\n              value={configsMap.WIDGETS_UPLOAD_FILE_TYPES}\n              options={mimeTypeOptions}\n              onChange={this.onChangeMultiCombo.bind(\n                this,\n                \"WIDGETS_UPLOAD_FILE_TYPES\"\n              )}\n              multi={true}\n              delimiter=\",\"\n              simpleValue={true}\n            />\n          </FormGroup>\n          <FormGroup>\n            <ControlLabel>{KEY_LABELS.UPLOAD_SERVICE_TYPE}</ControlLabel>\n            <Select\n              options={SERVICE_TYPES}\n              value={configsMap.UPLOAD_SERVICE_TYPE || \"AWS\"}\n              clearable={false}\n              onChange={this.onChangeSingleCombo.bind(\n                this,\n                \"UPLOAD_SERVICE_TYPE\"\n              )}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <ControlLabel>{KEY_LABELS.FILE_SYSTEM_PUBLIC}</ControlLabel>\n            <Select\n              options={FILE_SYSTEM_TYPES}\n              value={configsMap.FILE_SYSTEM_PUBLIC || \"true\"}\n              clearable={false}\n              searchable={false}\n              onChange={this.onChangeSingleCombo.bind(\n                this,\n                \"FILE_SYSTEM_PUBLIC\"\n              )}\n            />\n          </FormGroup>\n        </CollapseContent>\n\n        <CollapseContent title=\"Google Cloud Storage\">\n          <Info>\n            <a\n              target=\"_blank\"\n              href=\"https://docs.erxes.io/administrator/system-config#google-cloud-storage\"\n              rel=\"noopener noreferrer\"\n            >\n              {__(\n                \"Learn how to create or find your Google Cloud Storage bucket\"\n              )}\n            </a>\n          </Info>\n          <FormGroup>\n            <ControlLabel>Google Bucket Name</ControlLabel>\n            {this.renderItem(\"GOOGLE_CLOUD_STORAGE_BUCKET\")}\n          </FormGroup>\n        </CollapseContent>\n\n        <CollapseContent title=\"AWS S3\">\n          <Info>\n            <a\n              target=\"_blank\"\n              href=\"https://docs.erxes.io/administrator/system-config#aws-s3\"\n              rel=\"noopener noreferrer\"\n            >\n              {__(\"Learn how to set AWS S3 Variables\")}\n            </a>\n          </Info>\n          {this.renderItem(\"AWS_ACCESS_KEY_ID\")}\n          {this.renderItem(\"AWS_SECRET_ACCESS_KEY\")}\n          {this.renderItem(\"AWS_BUCKET\")}\n          {this.renderItem(\"AWS_PREFIX\")}\n          {this.renderItem(\n            \"AWS_COMPATIBLE_SERVICE_ENDPOINT\",\n            __(\"Used when using s3 compatible service\")\n          )}\n          {this.renderItem(\"AWS_FORCE_PATH_STYLE\")}\n        </CollapseContent>\n\n        <CollapseContent title=\"AWS SES\">\n          <Info>\n            <p>\n              {__(\n                \"In this field, the AWS SES configuration is dedicated to providing transaction emails\"\n              ) + \".\"}\n            </p>\n            <a\n              target=\"_blank\"\n              href=\"https://docs.erxes.io/administrator/system-config#aws-ses\"\n              rel=\"noopener noreferrer\"\n            >\n              {__(\"Learn how to set Amazon SES variables\")}\n            </a>\n          </Info>\n          {this.renderItem(\"AWS_SES_ACCESS_KEY_ID\")}\n          {this.renderItem(\"AWS_SES_SECRET_ACCESS_KEY\")}\n          {this.renderItem(\"AWS_REGION\")}\n          {this.renderItem(\"AWS_SES_CONFIG_SET\")}\n        </CollapseContent>\n\n        <CollapseContent title=\"Google\">\n          <Info>\n            <a\n              target=\"_blank\"\n              href=\"https://docs.erxes.io/administrator/system-config#google\"\n              rel=\"noopener noreferrer\"\n            >\n              {__(\"Learn how to set Google variables\")}\n            </a>\n          </Info>\n          {this.renderItem(\"GOOGLE_PROJECT_ID\")}\n          {this.renderItem(\"GOOGLE_CLIENT_ID\")}\n          {this.renderItem(\"GOOGLE_CLIENT_SECRET\")}\n          {this.renderItem(\n            \"GOOGLE_GMAIL_TOPIC\",\n            \"The topic value created in Gmail setup\"\n          )}\n\n          {this.renderItem(\n            \"GOOGLE_APPLICATION_CREDENTIALS_JSON\",\n            \"Firebase config for notifications\"\n          )}\n        </CollapseContent>\n\n        <CollapseContent title={__(\"Common mail config\")}>\n          <Info>\n            <a\n              target=\"_blank\"\n              href=\"https://docs.erxes.io/administrator/system-config#common-mail-config\"\n              rel=\"noopener noreferrer\"\n            >\n              {__(\"Learn more about Email Settings\")}\n            </a>\n          </Info>\n\n          {this.renderItem(\"COMPANY_EMAIL_FROM\")}\n          {this.renderItem(\n            \"DEFAULT_EMAIL_SERVICE\",\n            \"Write your default email service name. Default email service is SES\"\n          )}\n        </CollapseContent>\n\n        <CollapseContent title={__(\"Custom mail service\")}>\n          <Info>\n            <a\n              target=\"_blank\"\n              href=\"https://docs.erxes.io/administrator/system-config#custom-mail-service\"\n              rel=\"noopener noreferrer\"\n            >\n              {__(\"Learn the case of custom email service\")}\n            </a>\n          </Info>\n          {this.renderItem(\"MAIL_SERVICE\")}\n          {this.renderItem(\"MAIL_PORT\")}\n          {this.renderItem(\"MAIL_USER\")}\n          {this.renderItem(\"MAIL_PASS\")}\n          {this.renderItem(\"MAIL_HOST\")}\n        </CollapseContent>\n\n        <CollapseContent title={__(\"Constants\")}>\n          {this.renderConstant(\"sex_choices\")}\n          {this.renderConstant(\"company_industry_types\")}\n          {this.renderConstant(\"social_links\")}\n        </CollapseContent>\n      </ContentBox>\n    );\n\n    return (\n      <Wrapper\n        header={\n          <Wrapper.Header\n            title={__(\"General system config\")}\n            breadcrumb={breadcrumb}\n          />\n        }\n        mainHead={<Header />}\n        actionBar={\n          <Wrapper.ActionBar\n            left={<Title>{__(\"General system config\")}</Title>}\n            right={actionButtons}\n          />\n        }\n        leftSidebar={<Sidebar />}\n        content={content}\n      />\n    );\n  }\n}\n\nexport default GeneralSettings;\n"]},"metadata":{},"sourceType":"module"}