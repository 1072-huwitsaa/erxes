{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/knowledgeBase/containers/category/CategoryForm.tsx\";\nimport gql from 'graphql-tag';\nimport ButtonMutate from 'modules/common/components/ButtonMutate';\nimport React from 'react';\nimport CategoryForm from '../../components/category/CategoryForm';\nimport { mutations, queries } from '../../graphql';\n\nvar KnowledgeBaseContainer = function KnowledgeBaseContainer(props) {\n  var category = props.category,\n      topicIds = props.topicIds;\n\n  var renderButton = function renderButton(_ref) {\n    var name = _ref.name,\n        values = _ref.values,\n        isSubmitted = _ref.isSubmitted,\n        callback = _ref.callback,\n        object = _ref.object;\n    return React.createElement(ButtonMutate, {\n      mutation: object ? mutations.knowledgeBaseCategoriesEdit : mutations.knowledgeBaseCategoriesAdd,\n      variables: values,\n      callback: callback,\n      refetchQueries: getRefetchQueries(topicIds),\n      isSubmitted: isSubmitted,\n      type: \"submit\",\n      successMessage: \"You successfully \".concat(object ? 'updated' : 'added', \" a \").concat(name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  };\n\n  var extendedProps = _objectSpread({}, props, {\n    renderButton: renderButton,\n    currentTopicId: topicIds,\n    category: category\n  });\n\n  return React.createElement(CategoryForm, Object.assign({}, extendedProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n};\n\nvar getRefetchQueries = function getRefetchQueries(topicIds) {\n  return [{\n    query: gql(queries.knowledgeBaseCategories),\n    variables: {\n      topicIds: [topicIds]\n    }\n  }, {\n    query: gql(queries.knowledgeBaseCategoriesTotalCount),\n    variables: {\n      topicIds: [topicIds]\n    }\n  }, {\n    query: gql(queries.knowledgeBaseTopics)\n  }];\n};\n\nexport default KnowledgeBaseContainer;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/knowledgeBase/containers/category/CategoryForm.tsx"],"names":["gql","ButtonMutate","React","CategoryForm","mutations","queries","KnowledgeBaseContainer","props","category","topicIds","renderButton","name","values","isSubmitted","callback","object","knowledgeBaseCategoriesEdit","knowledgeBaseCategoriesAdd","getRefetchQueries","extendedProps","currentTopicId","query","knowledgeBaseCategories","variables","knowledgeBaseCategoriesTotalCount","knowledgeBaseTopics"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;;AAUA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAAkB;AAAA,MACvCC,QADuC,GAChBD,KADgB,CACvCC,QADuC;AAAA,MAC7BC,QAD6B,GAChBF,KADgB,CAC7BE,QAD6B;;AAG/C,MAAMC,YAAY,GAAG,SAAfA,YAAe,OAMK;AAAA,QALxBC,IAKwB,QALxBA,IAKwB;AAAA,QAJxBC,MAIwB,QAJxBA,MAIwB;AAAA,QAHxBC,WAGwB,QAHxBA,WAGwB;AAAA,QAFxBC,QAEwB,QAFxBA,QAEwB;AAAA,QADxBC,MACwB,QADxBA,MACwB;AACxB,WACE,oBAAC,YAAD;AACE,MAAA,QAAQ,EACNA,MAAM,GACFX,SAAS,CAACY,2BADR,GAEFZ,SAAS,CAACa,0BAJlB;AAME,MAAA,SAAS,EAAEL,MANb;AAOE,MAAA,QAAQ,EAAEE,QAPZ;AAQE,MAAA,cAAc,EAAEI,iBAAiB,CAACT,QAAD,CARnC;AASE,MAAA,WAAW,EAAEI,WATf;AAUE,MAAA,IAAI,EAAC,QAVP;AAWE,MAAA,cAAc,6BACZE,MAAM,GAAG,SAAH,GAAe,OADT,gBAERJ,IAFQ,CAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAiBD,GAxBD;;AA0BA,MAAMQ,aAAa,qBACdZ,KADc;AAEjBG,IAAAA,YAAY,EAAZA,YAFiB;AAGjBU,IAAAA,cAAc,EAAEX,QAHC;AAIjBD,IAAAA,QAAQ,EAARA;AAJiB,IAAnB;;AAOA,SAAO,oBAAC,YAAD,oBAAkBW,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CArCD;;AAuCA,IAAMD,iBAAiB,GAAG,SAApBA,iBAAoB,CAACT,QAAD,EAAsB;AAC9C,SAAO,CACL;AACEY,IAAAA,KAAK,EAAErB,GAAG,CAACK,OAAO,CAACiB,uBAAT,CADZ;AAEEC,IAAAA,SAAS,EAAE;AACTd,MAAAA,QAAQ,EAAE,CAACA,QAAD;AADD;AAFb,GADK,EAOL;AACEY,IAAAA,KAAK,EAAErB,GAAG,CAACK,OAAO,CAACmB,iCAAT,CADZ;AAEED,IAAAA,SAAS,EAAE;AAAEd,MAAAA,QAAQ,EAAE,CAACA,QAAD;AAAZ;AAFb,GAPK,EAWL;AAAEY,IAAAA,KAAK,EAAErB,GAAG,CAACK,OAAO,CAACoB,mBAAT;AAAZ,GAXK,CAAP;AAaD,CAdD;;AAgBA,eAAenB,sBAAf","sourcesContent":["import gql from 'graphql-tag';\nimport ButtonMutate from 'modules/common/components/ButtonMutate';\nimport { IButtonMutateProps } from 'modules/common/types';\nimport React from 'react';\nimport CategoryForm from '../../components/category/CategoryForm';\nimport { mutations, queries } from '../../graphql';\nimport { ICategory } from '../../types';\n\ntype Props = {\n  category: ICategory;\n  topicIds: string;\n  closeModal: () => void;\n  refetchTopics: () => void;\n};\n\nconst KnowledgeBaseContainer = (props: Props) => {\n  const { category, topicIds } = props;\n\n  const renderButton = ({\n    name,\n    values,\n    isSubmitted,\n    callback,\n    object\n  }: IButtonMutateProps) => {\n    return (\n      <ButtonMutate\n        mutation={\n          object\n            ? mutations.knowledgeBaseCategoriesEdit\n            : mutations.knowledgeBaseCategoriesAdd\n        }\n        variables={values}\n        callback={callback}\n        refetchQueries={getRefetchQueries(topicIds)}\n        isSubmitted={isSubmitted}\n        type=\"submit\"\n        successMessage={`You successfully ${\n          object ? 'updated' : 'added'\n        } a ${name}`}\n      />\n    );\n  };\n\n  const extendedProps = {\n    ...props,\n    renderButton,\n    currentTopicId: topicIds,\n    category\n  };\n\n  return <CategoryForm {...extendedProps} />;\n};\n\nconst getRefetchQueries = (topicIds: string) => {\n  return [\n    {\n      query: gql(queries.knowledgeBaseCategories),\n      variables: {\n        topicIds: [topicIds]\n      }\n    },\n    {\n      query: gql(queries.knowledgeBaseCategoriesTotalCount),\n      variables: { topicIds: [topicIds] }\n    },\n    { query: gql(queries.knowledgeBaseTopics) }\n  ];\n};\n\nexport default KnowledgeBaseContainer;\n"]},"metadata":{},"sourceType":"module"}