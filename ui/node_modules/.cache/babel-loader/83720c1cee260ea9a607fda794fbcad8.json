{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/Chart.tsx\";\nimport { ResponsiveLine } from '@nivo/line';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Spinner from 'modules/common/components/Spinner';\nimport { colors } from 'modules/common/styles';\nimport React from 'react';\nimport { ChartWrapper, LoaderWrapper } from '../styles';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chart, _React$Component);\n\n  function Chart() {\n    _classCallCheck(this, Chart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Chart).apply(this, arguments));\n  }\n\n  _createClass(Chart, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          height = _this$props.height,\n          loading = _this$props.loading,\n          type = _this$props.type;\n      var typeId = 'count';\n      var marginLeft = 35;\n\n      if (loading) {\n        return React.createElement(LoaderWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          objective: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }));\n      }\n\n      if (this.props.data.length === 0) {\n        return React.createElement(ChartWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(EmptyState, {\n          text: \"There is no data\",\n          size: \"full\",\n          icon: \"ban\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }));\n      }\n\n      data.filter(function (axis) {\n        if (axis.y > 999) {\n          return marginLeft = 52;\n        }\n\n        return null;\n      });\n\n      if (type === 'conversation-report') {\n        typeId = 'sec';\n      }\n\n      var chartData = [{\n        id: typeId,\n        color: '#eee',\n        data: data\n      }];\n      return React.createElement(ChartWrapper, {\n        height: height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(ResponsiveLine, {\n        data: chartData,\n        margin: {\n          top: 30,\n          right: 30,\n          bottom: 30,\n          left: marginLeft\n        },\n        colors: [colors.colorPrimary],\n        enableArea: true,\n        enableGridX: false,\n        minY: \"auto\",\n        dotSize: 8,\n        dotBorderWidth: 1,\n        dotBorderColor: \"#ffffff\",\n        dotLabel: \"y\",\n        dotLabelYOffset: -12,\n        animate: true,\n        motionStiffness: 90,\n        motionDamping: 15,\n        curve: \"monotoneX\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chart;\n}(React.Component);\n\nexport default Chart;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/Chart.tsx"],"names":["ResponsiveLine","EmptyState","Spinner","colors","React","ChartWrapper","LoaderWrapper","Chart","props","data","height","loading","type","typeId","marginLeft","length","filter","axis","y","chartData","id","color","top","right","bottom","left","colorPrimary","Component"],"mappings":";;;;;;AAAA,SAASA,cAAT,QAA+B,YAA/B;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,WAA5C;;IAWMC,K;;;;;;;;;;;;;6BACK;AAAA,wBACiC,KAAKC,KADtC;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,MADP,eACOA,MADP;AAAA,UACeC,OADf,eACeA,OADf;AAAA,UACwBC,IADxB,eACwBA,IADxB;AAEP,UAAIC,MAAM,GAAG,OAAb;AACA,UAAIC,UAAU,GAAG,EAAjB;;AAEA,UAAIH,OAAJ,EAAa;AACX,eACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,SAAS,EAAE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD;;AAED,UAAI,KAAKH,KAAL,CAAWC,IAAX,CAAgBM,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,eACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AAAY,UAAA,IAAI,EAAC,kBAAjB;AAAoC,UAAA,IAAI,EAAC,MAAzC;AAAgD,UAAA,IAAI,EAAC,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD;;AAEDN,MAAAA,IAAI,CAACO,MAAL,CAAY,UAAAC,IAAI,EAAI;AAClB,YAAIA,IAAI,CAACC,CAAL,GAAS,GAAb,EAAkB;AAChB,iBAAQJ,UAAU,GAAG,EAArB;AACD;;AAED,eAAO,IAAP;AACD,OAND;;AAQA,UAAIF,IAAI,KAAK,qBAAb,EAAoC;AAClCC,QAAAA,MAAM,GAAG,KAAT;AACD;;AAED,UAAMM,SAAS,GAAG,CAAC;AAAEC,QAAAA,EAAE,EAAEP,MAAN;AAAcQ,QAAAA,KAAK,EAAE,MAArB;AAA6BZ,QAAAA,IAAI,EAAJA;AAA7B,OAAD,CAAlB;AAEA,aACE,oBAAC,YAAD;AAAc,QAAA,MAAM,EAAEC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AACE,QAAA,IAAI,EAAES,SADR;AAEE,QAAA,MAAM,EAAE;AACNG,UAAAA,GAAG,EAAE,EADC;AAENC,UAAAA,KAAK,EAAE,EAFD;AAGNC,UAAAA,MAAM,EAAE,EAHF;AAINC,UAAAA,IAAI,EAAEX;AAJA,SAFV;AAQE,QAAA,MAAM,EAAE,CAACX,MAAM,CAACuB,YAAR,CARV;AASE,QAAA,UAAU,EAAE,IATd;AAUE,QAAA,WAAW,EAAE,KAVf;AAWE,QAAA,IAAI,EAAC,MAXP;AAYE,QAAA,OAAO,EAAE,CAZX;AAaE,QAAA,cAAc,EAAE,CAblB;AAcE,QAAA,cAAc,EAAC,SAdjB;AAeE,QAAA,QAAQ,EAAC,GAfX;AAgBE,QAAA,eAAe,EAAE,CAAC,EAhBpB;AAiBE,QAAA,OAAO,EAAE,IAjBX;AAkBE,QAAA,eAAe,EAAE,EAlBnB;AAmBE,QAAA,aAAa,EAAE,EAnBjB;AAoBE,QAAA,KAAK,EAAC,WApBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AA0BD;;;;EA9DiBtB,KAAK,CAACuB,S;;AAiE1B,eAAepB,KAAf","sourcesContent":["import { ResponsiveLine } from '@nivo/line';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Spinner from 'modules/common/components/Spinner';\nimport { colors } from 'modules/common/styles';\nimport React from 'react';\nimport { ChartWrapper, LoaderWrapper } from '../styles';\nimport { IChartParams } from '../types';\n\ninterface IProps {\n  data: IChartParams[];\n  loading?: boolean;\n  width?: number;\n  height: number;\n  type?: string;\n}\n\nclass Chart extends React.Component<IProps> {\n  render() {\n    const { data, height, loading, type } = this.props;\n    let typeId = 'count';\n    let marginLeft = 35;\n\n    if (loading) {\n      return (\n        <LoaderWrapper>\n          <Spinner objective={true} />\n        </LoaderWrapper>\n      );\n    }\n\n    if (this.props.data.length === 0) {\n      return (\n        <ChartWrapper>\n          <EmptyState text=\"There is no data\" size=\"full\" icon=\"ban\" />\n        </ChartWrapper>\n      );\n    }\n\n    data.filter(axis => {\n      if (axis.y > 999) {\n        return (marginLeft = 52);\n      }\n\n      return null;\n    });\n\n    if (type === 'conversation-report') {\n      typeId = 'sec';\n    }\n\n    const chartData = [{ id: typeId, color: '#eee', data }];\n\n    return (\n      <ChartWrapper height={height}>\n        <ResponsiveLine\n          data={chartData}\n          margin={{\n            top: 30,\n            right: 30,\n            bottom: 30,\n            left: marginLeft\n          }}\n          colors={[colors.colorPrimary]}\n          enableArea={true}\n          enableGridX={false}\n          minY=\"auto\"\n          dotSize={8}\n          dotBorderWidth={1}\n          dotBorderColor=\"#ffffff\"\n          dotLabel=\"y\"\n          dotLabelYOffset={-12}\n          animate={true}\n          motionStiffness={90}\n          motionDamping={15}\n          curve=\"monotoneX\"\n        />\n      </ChartWrapper>\n    );\n  }\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}