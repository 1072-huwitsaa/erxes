{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/mail/Form.tsx\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport CommonForm from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport Info from \"modules/common/components/Info\";\nimport { ModalFooter } from \"modules/common/styles/main\";\nimport { __ } from \"modules/common/utils\";\nimport routerUtils from \"modules/common/utils/router\";\nimport * as React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport SelectBrand from \"../../containers/SelectBrand\";\nimport SelectChannels from \"../../containers/SelectChannels\";\nimport ExchangeForm from \"./ExchangeForm\";\nimport ImapForm from \"./ImapForm\";\nimport MailAuthForm from \"./MailAuthForm\";\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n\n    _this.onChannelChange = function (values) {\n      _this.setState({\n        channelIds: values\n      });\n    };\n\n    _this.generateDoc = function (values) {\n      var _this$props = _this.props,\n          kind = _this$props.kind,\n          history = _this$props.history;\n\n      var name = values.name,\n          brandId = values.brandId,\n          args = _objectWithoutProperties(values, [\"name\", \"brandId\"]);\n\n      var uid = routerUtils.getParam(history, \"uid\");\n      return {\n        kind: kind,\n        name: name,\n        brandId: brandId,\n        channelIds: _this.state.channelIds,\n        data: _objectSpread({\n          id: \"requestId\",\n          uid: uid\n        }, args)\n      };\n    };\n\n    _this.renderContent = function (formProps) {\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted;\n      return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, __(\"Email add account description question\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, __(\"Email add account description\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        href: \"https://erxes.io/help/knowledge-base/article/detail?_id=B7LseAvFdKsiLa3kG\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, __(\"Learn how to connect a Gmail using IMAP\"))))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Name\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"name\",\n        required: true,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }))), React.createElement(SelectBrand, {\n        isRequired: true,\n        formProps: formProps,\n        description: __(\"Which specific Brand does this integration belong to?\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(SelectChannels, {\n        defaultValue: _this.state.channelIds,\n        isRequired: true,\n        onChange: _this.onChannelChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), _this.renderProvideForm(formProps), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        type: \"button\",\n        onClick: _this.props.closeModal,\n        icon: \"times-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Cancel\"), _this.props.renderButton({\n        name: \"integration\",\n        values: _this.generateDoc(values),\n        isSubmitted: isSubmitted,\n        callback: _this.props.closeModal\n      })));\n    };\n\n    _this.state = {\n      channelIds: []\n    };\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"renderProvideForm\",\n    value: function renderProvideForm(formProps) {\n      var kind = this.props.kind;\n\n      if ([\"nylas-gmail\", \"nylas-office365\"].includes(kind)) {\n        return null;\n      }\n\n      if (kind === \"nylas-imap\") {\n        return React.createElement(ImapForm, {\n          formProps: formProps,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        });\n      }\n\n      if (kind === \"nylas-exchange\") {\n        return React.createElement(ExchangeForm, {\n          formProps: formProps,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(MailAuthForm, {\n        formProps: formProps,\n        kind: kind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CommonForm, {\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nexport default withRouter(Form);","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/mail/Form.tsx"],"names":["Button","FormControl","CommonForm","FormGroup","ControlLabel","Info","ModalFooter","__","routerUtils","React","withRouter","SelectBrand","SelectChannels","ExchangeForm","ImapForm","MailAuthForm","Form","props","onChannelChange","values","setState","channelIds","generateDoc","kind","history","name","brandId","args","uid","getParam","state","data","id","renderContent","formProps","isSubmitted","renderProvideForm","closeModal","renderButton","callback","includes","Component"],"mappings":"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","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport CommonForm from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport Info from \"modules/common/components/Info\";\nimport { ModalFooter } from \"modules/common/styles/main\";\nimport {\n  IButtonMutateProps,\n  IFormProps,\n  IRouterProps,\n} from \"modules/common/types\";\nimport { __ } from \"modules/common/utils\";\nimport routerUtils from \"modules/common/utils/router\";\nimport * as React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport SelectBrand from \"../../containers/SelectBrand\";\nimport SelectChannels from \"../../containers/SelectChannels\";\nimport { IExchangeForm, IImapForm, IntegrationTypes } from \"../../types\";\nimport ExchangeForm from \"./ExchangeForm\";\nimport ImapForm from \"./ImapForm\";\nimport MailAuthForm from \"./MailAuthForm\";\n\ntype Props = {\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  closeModal: () => void;\n  kind: IntegrationTypes;\n  email?: string;\n} & IRouterProps;\n\ntype State = {\n  channelIds: string[];\n};\n\nclass Form extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      channelIds: [],\n    };\n  }\n\n  onChannelChange = (values: string[]) => {\n    this.setState({ channelIds: values });\n  };\n\n  generateDoc = (\n    values: { name: string; brandId: string } & IImapForm & IExchangeForm\n  ) => {\n    const { kind, history } = this.props;\n    const { name, brandId, ...args } = values;\n\n    const uid = routerUtils.getParam(history, \"uid\");\n\n    return {\n      kind,\n      name,\n      brandId,\n      channelIds: this.state.channelIds,\n      data: {\n        id: \"requestId\",\n        uid,\n        ...args,\n      },\n    };\n  };\n\n  renderProvideForm(formProps: IFormProps) {\n    const { kind } = this.props;\n\n    if ([\"nylas-gmail\", \"nylas-office365\"].includes(kind)) {\n      return null;\n    }\n\n    if (kind === \"nylas-imap\") {\n      return <ImapForm formProps={formProps} />;\n    }\n\n    if (kind === \"nylas-exchange\") {\n      return <ExchangeForm formProps={formProps} />;\n    }\n\n    return <MailAuthForm formProps={formProps} kind={kind} />;\n  }\n\n  renderContent = (formProps: IFormProps) => {\n    const { values, isSubmitted } = formProps;\n\n    return (\n      <>\n        <FormGroup>\n          <Info>\n            <strong>{__(\"Email add account description question\")}</strong>\n            <br />\n            <p>{__(\"Email add account description\")}</p>\n            <p>\n              <a\n                target=\"_blank\"\n                href=\"https://erxes.io/help/knowledge-base/article/detail?_id=B7LseAvFdKsiLa3kG\"\n                rel=\"noopener noreferrer\"\n              >\n                {__(\"Learn how to connect a Gmail using IMAP\")}\n              </a>\n            </p>\n          </Info>\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel required={true}>Name</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"name\"\n            required={true}\n            autoFocus={true}\n          />\n        </FormGroup>\n\n        <SelectBrand\n          isRequired={true}\n          formProps={formProps}\n          description={__(\n            \"Which specific Brand does this integration belong to?\"\n          )}\n        />\n\n        <SelectChannels\n          defaultValue={this.state.channelIds}\n          isRequired={true}\n          onChange={this.onChannelChange}\n        />\n\n        {this.renderProvideForm(formProps)}\n\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            type=\"button\"\n            onClick={this.props.closeModal}\n            icon=\"times-circle\"\n            uppercase={false}\n          >\n            Cancel\n          </Button>\n          {this.props.renderButton({\n            name: \"integration\",\n            values: this.generateDoc(values),\n            isSubmitted,\n            callback: this.props.closeModal,\n          })}\n        </ModalFooter>\n      </>\n    );\n  };\n\n  render() {\n    return <CommonForm renderContent={this.renderContent} />;\n  }\n}\n\nexport default withRouter(Form);\n"]},"metadata":{},"sourceType":"module"}