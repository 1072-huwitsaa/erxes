{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/store/Row.tsx\";\nimport Pagination from 'modules/common/components/pagination/Pagination';\nimport IntegrationList from 'modules/settings/integrations/containers/common/IntegrationList';\nimport React from 'react';\nimport Collapse from 'react-bootstrap/Collapse';\nimport Entry from './Entry';\nimport { CollapsibleContent, IntegrationRow } from './styles';\n\nvar Row =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Row, _React$Component);\n\n  function Row(props) {\n    var _this;\n\n    _classCallCheck(this, Row);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Row).call(this, props));\n\n    _this.getClassName = function (selectedKind) {\n      var _this$state = _this.state,\n          kind = _this$state.kind,\n          isContentVisible = _this$state.isContentVisible;\n\n      if (!isContentVisible) {\n        return '';\n      }\n\n      if (selectedKind === kind) {\n        return 'active';\n      }\n\n      return '';\n    };\n\n    _this.toggleBox = function (selectedKind) {\n      if (!selectedKind || selectedKind === 'amazon-ses') {\n        return false;\n      }\n\n      var _this$state2 = _this.state,\n          isContentVisible = _this$state2.isContentVisible,\n          kind = _this$state2.kind;\n\n      _this.setState(function (prevState) {\n        if (prevState.kind === selectedKind || kind === null || !isContentVisible) {\n          return {\n            isContentVisible: !isContentVisible,\n            kind: selectedKind\n          };\n        }\n\n        return {\n          kind: selectedKind,\n          isContentVisible: prevState.isContentVisible\n        };\n      });\n\n      return null;\n    };\n\n    var _kind = props.queryParams.kind;\n    _this.state = {\n      isContentVisible: Boolean(_kind) || false,\n      kind: _kind\n    };\n    return _this;\n  }\n\n  _createClass(Row, [{\n    key: \"renderPagination\",\n    value: function renderPagination(totalCount) {\n      if (!totalCount || totalCount <= 20) {\n        return null;\n      }\n\n      return React.createElement(Pagination, {\n        count: totalCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderEntry\",\n    value: function renderEntry(integration, totalCount, queryParams) {\n      var commonProp = {\n        key: integration.name,\n        integration: integration,\n        toggleBox: this.toggleBox,\n        getClassName: this.getClassName,\n        totalCount: totalCount,\n        queryParams: queryParams\n      };\n      return React.createElement(Entry, Object.assign({}, commonProp, {\n        customLink: this.props.customLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var _this$props = this.props,\n          queryParams = _this$props.queryParams,\n          totalCount = _this$props.totalCount;\n      var kind = this.state.kind;\n      return React.createElement(React.Fragment, null, React.createElement(IntegrationList, {\n        kind: kind,\n        queryParams: queryParams,\n        integrationsCount: totalCount[kind || ''],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), this.renderPagination(totalCount[kind || '']));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          integrations = _this$props2.integrations,\n          totalCount = _this$props2.totalCount,\n          queryParams = _this$props2.queryParams;\n      var selected = integrations.find(function (integration) {\n        return integration.kind === _this2.state.kind;\n      });\n      return React.createElement(React.Fragment, null, React.createElement(IntegrationRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, integrations.map(function (integration) {\n        return _this2.renderEntry(integration, totalCount, queryParams);\n      })), React.createElement(Collapse, {\n        in: this.state.isContentVisible && selected ? true : false,\n        unmountOnExit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(CollapsibleContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.renderList())));\n    }\n  }]);\n\n  return Row;\n}(React.Component);\n\nexport default Row;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/store/Row.tsx"],"names":["Pagination","IntegrationList","React","Collapse","Entry","CollapsibleContent","IntegrationRow","Row","props","getClassName","selectedKind","state","kind","isContentVisible","toggleBox","setState","prevState","queryParams","Boolean","totalCount","integration","commonProp","key","name","customLink","renderPagination","integrations","selected","find","map","renderEntry","renderList","Component"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,iDAAvB;AACA,OAAOC,eAAP,MAA4B,iEAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,UAAnD;;IAcMC,G;;;;;AACJ,eAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACxB,6EAAMA,KAAN;;AADwB,UAa1BC,YAb0B,GAaX,UAAAC,YAAY,EAAI;AAAA,wBACM,MAAKC,KADX;AAAA,UACrBC,IADqB,eACrBA,IADqB;AAAA,UACfC,gBADe,eACfA,gBADe;;AAG7B,UAAI,CAACA,gBAAL,EAAuB;AACrB,eAAO,EAAP;AACD;;AAED,UAAIH,YAAY,KAAKE,IAArB,EAA2B;AACzB,eAAO,QAAP;AACD;;AAED,aAAO,EAAP;AACD,KAzByB;;AAAA,UA2B1BE,SA3B0B,GA2Bd,UAAAJ,YAAY,EAAI;AAC1B,UAAI,CAACA,YAAD,IAAiBA,YAAY,KAAK,YAAtC,EAAoD;AAClD,eAAO,KAAP;AACD;;AAHyB,yBAKS,MAAKC,KALd;AAAA,UAKlBE,gBALkB,gBAKlBA,gBALkB;AAAA,UAKAD,IALA,gBAKAA,IALA;;AAO1B,YAAKG,QAAL,CAAc,UAAAC,SAAS,EAAI;AACzB,YACEA,SAAS,CAACJ,IAAV,KAAmBF,YAAnB,IACAE,IAAI,KAAK,IADT,IAEA,CAACC,gBAHH,EAIE;AACA,iBAAO;AAAEA,YAAAA,gBAAgB,EAAE,CAACA,gBAArB;AAAuCD,YAAAA,IAAI,EAAEF;AAA7C,WAAP;AACD;;AAED,eAAO;AACLE,UAAAA,IAAI,EAAEF,YADD;AAELG,UAAAA,gBAAgB,EAAEG,SAAS,CAACH;AAFvB,SAAP;AAID,OAbD;;AAeA,aAAO,IAAP;AACD,KAlDyB;;AAAA,QAIPD,KAJO,GAKpBJ,KALoB,CAItBS,WAJsB,CAIPL,IAJO;AAOxB,UAAKD,KAAL,GAAa;AACXE,MAAAA,gBAAgB,EAAEK,OAAO,CAACN,KAAD,CAAP,IAAiB,KADxB;AAEXA,MAAAA,IAAI,EAAJA;AAFW,KAAb;AAPwB;AAWzB;;;;qCAyCgBO,U,EAAY;AAC3B,UAAI,CAACA,UAAD,IAAeA,UAAU,IAAI,EAAjC,EAAqC;AACnC,eAAO,IAAP;AACD;;AAED,aAAO,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;gCAEWC,W,EAAaD,U,EAAYF,W,EAAa;AAChD,UAAMI,UAAU,GAAG;AACjBC,QAAAA,GAAG,EAAEF,WAAW,CAACG,IADA;AAEjBH,QAAAA,WAAW,EAAXA,WAFiB;AAGjBN,QAAAA,SAAS,EAAE,KAAKA,SAHC;AAIjBL,QAAAA,YAAY,EAAE,KAAKA,YAJF;AAKjBU,QAAAA,UAAU,EAAVA,UALiB;AAMjBF,QAAAA,WAAW,EAAXA;AANiB,OAAnB;AASA,aAAO,oBAAC,KAAD,oBAAWI,UAAX;AAAuB,QAAA,UAAU,EAAE,KAAKb,KAAL,CAAWgB,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;iCAEY;AAAA,wBACyB,KAAKhB,KAD9B;AAAA,UACHS,WADG,eACHA,WADG;AAAA,UACUE,UADV,eACUA,UADV;AAAA,UAEHP,IAFG,GAEM,KAAKD,KAFX,CAEHC,IAFG;AAIX,aACE,0CACE,oBAAC,eAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,WAAW,EAAEK,WAFf;AAGE,QAAA,iBAAiB,EAAEE,UAAU,CAACP,IAAI,IAAI,EAAT,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAMG,KAAKa,gBAAL,CAAsBN,UAAU,CAACP,IAAI,IAAI,EAAT,CAAhC,CANH,CADF;AAUD;;;6BAEQ;AAAA;;AAAA,yBAC2C,KAAKJ,KADhD;AAAA,UACCkB,YADD,gBACCA,YADD;AAAA,UACeP,UADf,gBACeA,UADf;AAAA,UAC2BF,WAD3B,gBAC2BA,WAD3B;AAGP,UAAMU,QAAQ,GAAGD,YAAY,CAACE,IAAb,CACf,UAAAR,WAAW;AAAA,eAAIA,WAAW,CAACR,IAAZ,KAAqB,MAAI,CAACD,KAAL,CAAWC,IAApC;AAAA,OADI,CAAjB;AAIA,aACE,0CACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGc,YAAY,CAACG,GAAb,CAAiB,UAAAT,WAAW;AAAA,eAC3B,MAAI,CAACU,WAAL,CAAiBV,WAAjB,EAA8BD,UAA9B,EAA0CF,WAA1C,CAD2B;AAAA,OAA5B,CADH,CADF,EAME,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE,KAAKN,KAAL,CAAWE,gBAAX,IAA+Bc,QAA/B,GAA0C,IAA1C,GAAiD,KADvD;AAEE,QAAA,aAAa,EAAE,IAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB,KAAKI,UAAL,EAArB,CAJF,CANF,CADF;AAeD;;;;EAhHe7B,KAAK,CAAC8B,S;;AAmHxB,eAAezB,GAAf","sourcesContent":["import Pagination from 'modules/common/components/pagination/Pagination';\nimport IntegrationList from 'modules/settings/integrations/containers/common/IntegrationList';\nimport React from 'react';\nimport Collapse from 'react-bootstrap/Collapse';\nimport { ByKindTotalCount } from '../../types';\nimport Entry from './Entry';\nimport { CollapsibleContent, IntegrationRow } from './styles';\n\ntype Props = {\n  integrations: any[];\n  totalCount: ByKindTotalCount;\n  queryParams: any;\n  customLink: (kind: string, addLink: string) => void;\n};\n\ntype State = {\n  isContentVisible: boolean;\n  kind: string | null;\n};\n\nclass Row extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const {\n      queryParams: { kind }\n    } = props;\n\n    this.state = {\n      isContentVisible: Boolean(kind) || false,\n      kind\n    };\n  }\n\n  getClassName = selectedKind => {\n    const { kind, isContentVisible } = this.state;\n\n    if (!isContentVisible) {\n      return '';\n    }\n\n    if (selectedKind === kind) {\n      return 'active';\n    }\n\n    return '';\n  };\n\n  toggleBox = selectedKind => {\n    if (!selectedKind || selectedKind === 'amazon-ses') {\n      return false;\n    }\n\n    const { isContentVisible, kind } = this.state;\n\n    this.setState(prevState => {\n      if (\n        prevState.kind === selectedKind ||\n        kind === null ||\n        !isContentVisible\n      ) {\n        return { isContentVisible: !isContentVisible, kind: selectedKind };\n      }\n\n      return {\n        kind: selectedKind,\n        isContentVisible: prevState.isContentVisible\n      };\n    });\n\n    return null;\n  };\n\n  renderPagination(totalCount) {\n    if (!totalCount || totalCount <= 20) {\n      return null;\n    }\n\n    return <Pagination count={totalCount} />;\n  }\n\n  renderEntry(integration, totalCount, queryParams) {\n    const commonProp = {\n      key: integration.name,\n      integration,\n      toggleBox: this.toggleBox,\n      getClassName: this.getClassName,\n      totalCount,\n      queryParams\n    };\n\n    return <Entry {...commonProp} customLink={this.props.customLink} />;\n  }\n\n  renderList() {\n    const { queryParams, totalCount } = this.props;\n    const { kind } = this.state;\n\n    return (\n      <>\n        <IntegrationList\n          kind={kind}\n          queryParams={queryParams}\n          integrationsCount={totalCount[kind || '']}\n        />\n        {this.renderPagination(totalCount[kind || ''])}\n      </>\n    );\n  }\n\n  render() {\n    const { integrations, totalCount, queryParams } = this.props;\n\n    const selected = integrations.find(\n      integration => integration.kind === this.state.kind\n    );\n\n    return (\n      <>\n        <IntegrationRow>\n          {integrations.map(integration =>\n            this.renderEntry(integration, totalCount, queryParams)\n          )}\n        </IntegrationRow>\n        <Collapse\n          in={this.state.isContentVisible && selected ? true : false}\n          unmountOnExit={true}\n        >\n          <CollapsibleContent>{this.renderList()}</CollapsibleContent>\n        </Collapse>\n      </>\n    );\n  }\n}\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}