{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/knowledgeBase/components/knowledge/KnowledgeRow.tsx\";\nimport DropdownToggle from 'modules/common/components/DropdownToggle';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport { DropIcon } from 'modules/common/styles/main';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport CategoryForm from '../../containers/category/CategoryForm';\nimport CategoryList from '../../containers/category/CategoryList';\nimport KnowledgeForm from '../../containers/knowledge/KnowledgeForm';\nimport { KnowledgeBaseRow, RowActions, SectionHead, SectionTitle } from './styles';\nvar STORAGE_KEY = \"erxes_knowledgebase_accordion\";\n\nvar collapse = function collapse(id, click, isCurrent) {\n  var data = localStorage.getItem(STORAGE_KEY);\n  var values = [];\n\n  if (data) {\n    values = JSON.parse(data);\n  }\n\n  if (click) {\n    values.includes(id) ? values = values.filter(function (key) {\n      return key !== id;\n    }) : values.push(id);\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(values));\n  }\n\n  return isCurrent ? true : values.includes(id);\n};\n\nvar KnowledgeRow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(KnowledgeRow, _React$Component);\n\n  function KnowledgeRow(props) {\n    var _this;\n\n    _classCallCheck(this, KnowledgeRow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(KnowledgeRow).call(this, props));\n\n    _this.toggle = function () {\n      var topic = _this.props.topic;\n\n      _this.setState({\n        detailed: collapse(topic._id, true)\n      });\n    };\n\n    _this.state = {\n      detailed: collapse(props.topic._id)\n    };\n    return _this;\n  }\n\n  _createClass(KnowledgeRow, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var categories = this.props.topic.categories;\n\n      if (categories.includes(nextProps.currentCategoryId)) {\n        this.setState({\n          detailed: collapse('', false, true)\n        });\n      }\n    }\n  }, {\n    key: \"renderManage\",\n    value: function renderManage() {\n      var _this$props = this.props,\n          topic = _this$props.topic,\n          renderButton = _this$props.renderButton,\n          remove = _this$props.remove,\n          refetchTopics = _this$props.refetchTopics;\n      var addCategory = React.createElement(Dropdown.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, __('Add category'));\n      var manageTopic = React.createElement(Dropdown.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, __('Edit Knowledge Base'));\n\n      var content = function content(props) {\n        return React.createElement(KnowledgeForm, Object.assign({}, props, {\n          renderButton: renderButton,\n          topic: topic,\n          remove: remove,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }));\n      };\n\n      var categoryContent = function categoryContent(props) {\n        return React.createElement(CategoryForm, Object.assign({}, props, {\n          topicIds: topic._id,\n          refetchTopics: refetchTopics,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }));\n      };\n\n      return React.createElement(RowActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        alignRight: true,\n        style: {\n          float: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        as: DropdownToggle,\n        id: \"dropdown-knowledgebase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"cog\",\n        size: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(ModalTrigger, {\n        title: \"Manage Knowledge Base\",\n        trigger: manageTopic,\n        content: content,\n        enforceFocus: false,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(ModalTrigger, {\n        title: \"Add Category\",\n        trigger: addCategory,\n        autoOpenKey: \"showKBAddCategoryModal\",\n        content: categoryContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }))), React.createElement(DropIcon, {\n        onClick: this.toggle,\n        isOpen: this.state.detailed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          topic = _this$props2.topic,\n          currentCategoryId = _this$props2.currentCategoryId,\n          queryParams = _this$props2.queryParams,\n          articlesCount = _this$props2.articlesCount;\n      return React.createElement(KnowledgeBaseRow, {\n        key: topic._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(SectionHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(SectionTitle, {\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, topic.title, \" (\", topic.categories.length, \")\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, topic.description)), this.renderManage()), this.state.detailed && React.createElement(CategoryList, {\n        currentCategoryId: currentCategoryId,\n        articlesCount: articlesCount,\n        topicIds: topic._id,\n        queryParams: queryParams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return KnowledgeRow;\n}(React.Component);\n\nexport default KnowledgeRow;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/knowledgeBase/components/knowledge/KnowledgeRow.tsx"],"names":["DropdownToggle","Icon","ModalTrigger","DropIcon","__","React","Dropdown","CategoryForm","CategoryList","KnowledgeForm","KnowledgeBaseRow","RowActions","SectionHead","SectionTitle","STORAGE_KEY","collapse","id","click","isCurrent","data","localStorage","getItem","values","JSON","parse","includes","filter","key","push","setItem","stringify","KnowledgeRow","props","toggle","topic","setState","detailed","_id","state","nextProps","categories","currentCategoryId","renderButton","remove","refetchTopics","addCategory","manageTopic","content","categoryContent","float","queryParams","articlesCount","title","length","description","renderManage","Component"],"mappings":"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","sourcesContent":["import DropdownToggle from 'modules/common/components/DropdownToggle';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport { DropIcon } from 'modules/common/styles/main';\nimport { IButtonMutateProps } from 'modules/common/types';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport CategoryForm from '../../containers/category/CategoryForm';\nimport CategoryList from '../../containers/category/CategoryList';\nimport KnowledgeForm from '../../containers/knowledge/KnowledgeForm';\nimport { ITopic } from '../../types';\nimport {\n  KnowledgeBaseRow,\n  RowActions,\n  SectionHead,\n  SectionTitle\n} from './styles';\n\ntype Props = {\n  queryParams: any;\n  currentCategoryId: string;\n  topic: ITopic;\n  articlesCount: number;\n  remove: (knowledgeBaseId: string) => void;\n  refetchTopics: () => void;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n};\n\ntype State = {\n  detailed: boolean;\n};\n\nconst STORAGE_KEY = `erxes_knowledgebase_accordion`;\n\nconst collapse = (id: string, click?: boolean, isCurrent?: boolean) => {\n  const data = localStorage.getItem(STORAGE_KEY);\n  let values: string[] = [];\n\n  if (data) {\n    values = JSON.parse(data);\n  }\n\n  if (click) {\n    values.includes(id)\n      ? (values = values.filter(key => key !== id))\n      : values.push(id);\n\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(values));\n  }\n\n  return isCurrent ? true : values.includes(id);\n};\n\nclass KnowledgeRow extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = { detailed: collapse(props.topic._id) };\n  }\n\n  toggle = () => {\n    const { topic } = this.props;\n\n    this.setState({ detailed: collapse(topic._id, true) });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const { categories } = this.props.topic;\n\n    if (categories.includes(nextProps.currentCategoryId)) {\n      this.setState({ detailed: collapse('', false, true) });\n    }\n  }\n\n  renderManage() {\n    const { topic, renderButton, remove, refetchTopics } = this.props;\n\n    const addCategory = <Dropdown.Item>{__('Add category')}</Dropdown.Item>;\n    const manageTopic = (\n      <Dropdown.Item>{__('Edit Knowledge Base')}</Dropdown.Item>\n    );\n\n    const content = props => (\n      <KnowledgeForm\n        {...props}\n        renderButton={renderButton}\n        topic={topic}\n        remove={remove}\n      />\n    );\n\n    const categoryContent = props => (\n      <CategoryForm\n        {...props}\n        topicIds={topic._id}\n        refetchTopics={refetchTopics}\n      />\n    );\n\n    return (\n      <RowActions>\n        <Dropdown alignRight={true} style={{ float: 'left' }}>\n          <Dropdown.Toggle as={DropdownToggle} id=\"dropdown-knowledgebase\">\n            <Icon icon=\"cog\" size={15} />\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <ModalTrigger\n              title=\"Manage Knowledge Base\"\n              trigger={manageTopic}\n              content={content}\n              enforceFocus={false}\n              size=\"lg\"\n            />\n            <ModalTrigger\n              title=\"Add Category\"\n              trigger={addCategory}\n              autoOpenKey=\"showKBAddCategoryModal\"\n              content={categoryContent}\n            />\n          </Dropdown.Menu>\n        </Dropdown>\n        <DropIcon onClick={this.toggle} isOpen={this.state.detailed} />\n      </RowActions>\n    );\n  }\n\n  render() {\n    const { topic, currentCategoryId, queryParams, articlesCount } = this.props;\n\n    return (\n      <KnowledgeBaseRow key={topic._id}>\n        <SectionHead>\n          <SectionTitle onClick={this.toggle}>\n            {topic.title} ({topic.categories.length})\n            <span>{topic.description}</span>\n          </SectionTitle>\n          {this.renderManage()}\n        </SectionHead>\n        {this.state.detailed && (\n          <CategoryList\n            currentCategoryId={currentCategoryId}\n            articlesCount={articlesCount}\n            topicIds={topic._id}\n            queryParams={queryParams}\n          />\n        )}\n      </KnowledgeBaseRow>\n    );\n  }\n}\n\nexport default KnowledgeRow;\n"]},"metadata":{},"sourceType":"module"}