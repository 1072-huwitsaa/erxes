{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/messenger/Form.tsx\";\nimport Button from 'modules/common/components/Button';\nimport { Step, Steps } from 'modules/common/components/step';\nimport { ControlWrapper, Indicator, Preview, StepWrapper } from 'modules/common/components/step/styles';\nimport { __, Alert } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport { LANGUAGES } from 'modules/settings/general/constants';\nimport { Content, LeftContent, MessengerPreview } from 'modules/settings/integrations/styles';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport AddOns from '../../containers/messenger/AddOns';\nimport { Appearance, Availability, Greeting, Intro, Options } from './steps';\nimport Connection from './steps/Connection';\nimport CommonPreview from './widgetPreview/CommonPreview';\n\nvar CreateMessenger =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateMessenger, _React$Component);\n\n  function CreateMessenger(props) {\n    var _this;\n\n    _classCallCheck(this, CreateMessenger);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateMessenger).call(this, props));\n\n    _this.onChange = function (key, value) {\n      _this.setState(_defineProperty({}, key, value));\n    };\n\n    _this.handleMessengerApps = function (messengerApps) {\n      _this.setState({\n        messengerApps: messengerApps\n      });\n    };\n\n    _this.save = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          title = _this$state.title,\n          botEndpointUrl = _this$state.botEndpointUrl,\n          brandId = _this$state.brandId,\n          languageCode = _this$state.languageCode,\n          channelIds = _this$state.channelIds,\n          messages = _this$state.messages,\n          facebook = _this$state.facebook,\n          twitter = _this$state.twitter,\n          youtube = _this$state.youtube,\n          requireAuth = _this$state.requireAuth,\n          showChat = _this$state.showChat,\n          showLauncher = _this$state.showLauncher,\n          forceLogoutWhenResolve = _this$state.forceLogoutWhenResolve,\n          showVideoCallRequest = _this$state.showVideoCallRequest,\n          messengerApps = _this$state.messengerApps;\n\n      if (!languageCode) {\n        return Alert.error('Set language');\n      }\n\n      if (!title) {\n        return Alert.error('Write title');\n      }\n\n      if (!brandId) {\n        return Alert.error('Choose a brand');\n      }\n\n      var links = {\n        facebook: facebook,\n        twitter: twitter,\n        youtube: youtube\n      };\n\n      _this.props.save({\n        name: title,\n        brandId: brandId,\n        channelIds: channelIds,\n        languageCode: _this.state.languageCode,\n        messengerData: {\n          botEndpointUrl: botEndpointUrl,\n          notifyCustomer: _this.state.notifyCustomer,\n          availabilityMethod: _this.state.availabilityMethod,\n          isOnline: _this.state.isOnline,\n          timezone: _this.state.timezone,\n          onlineHours: (_this.state.onlineHours || []).map(function (oh) {\n            return {\n              day: oh.day,\n              from: oh.from,\n              to: oh.to\n            };\n          }),\n          supporterIds: _this.state.supporterIds,\n          messages: messages,\n          requireAuth: requireAuth,\n          showChat: showChat,\n          showLauncher: showLauncher,\n          forceLogoutWhenResolve: forceLogoutWhenResolve,\n          showVideoCallRequest: showVideoCallRequest,\n          links: links\n        },\n        uiOptions: {\n          color: _this.state.color,\n          textColor: _this.state.textColor,\n          wallpaper: _this.state.wallpaper,\n          logo: _this.state.logo\n        },\n        messengerApps: messengerApps\n      });\n    };\n\n    _this.onStepClick = function (name) {\n      if (name !== 'greeting') {\n        return _this.setState({\n          isStepActive: false\n        });\n      }\n\n      return _this.setState({\n        isStepActive: true\n      });\n    };\n\n    var integration = props.integration || {};\n\n    var _languageCode = integration.languageCode || 'en';\n\n    var configData = integration.messengerData || {\n      notifyCustomer: false,\n      requireAuth: true,\n      showChat: true,\n      showLauncher: true,\n      forceLogoutWhenResolve: false,\n      showVideoCallRequest: false,\n      botEndpointUrl: ''\n    };\n\n    var _links = configData.links || {};\n\n    var _messages = configData.messages || {};\n\n    var uiOptions = integration.uiOptions || {};\n    var channels = integration.channels || [];\n    var _messengerApps = {};\n    _this.state = {\n      title: integration.name,\n      botEndpointUrl: configData.botEndpointUrl,\n      brandId: integration.brandId || '',\n      languageCode: _languageCode,\n      channelIds: channels.map(function (item) {\n        return item._id;\n      }) || [],\n      color: uiOptions.color || '#6569DF',\n      textColor: uiOptions.textColor || '#fff',\n      wallpaper: uiOptions.wallpaper || '1',\n      notifyCustomer: configData.notifyCustomer || false,\n      requireAuth: configData.requireAuth,\n      showChat: configData.showChat,\n      showLauncher: configData.showLauncher,\n      forceLogoutWhenResolve: configData.forceLogoutWhenResolve,\n      supporterIds: configData.supporterIds || [],\n      availabilityMethod: configData.availabilityMethod || 'manual',\n      isOnline: configData.isOnline || false,\n      timezone: configData.timezone || '',\n      onlineHours: (configData.onlineHours || []).map(function (h) {\n        return _objectSpread({\n          _id: Math.random()\n        }, h);\n      }),\n      showVideoCallRequest: configData.showVideoCallRequest,\n      logo: uiOptions.logo || '',\n      logoPreviewStyle: {},\n      logoPreviewUrl: uiOptions.logo || '/images/erxes.png',\n      facebook: _links.facebook || '',\n      twitter: _links.twitter || '',\n      youtube: _links.youtube || '',\n      messages: _objectSpread({}, _this.generateMessages(_messages)),\n      messengerApps: _messengerApps\n    };\n    return _this;\n  }\n\n  _createClass(CreateMessenger, [{\n    key: \"generateMessages\",\n    value: function generateMessages(integrationMessages) {\n      var messages = {};\n      LANGUAGES.forEach(function (item) {\n        var message = integrationMessages[item.value] || {};\n        messages[item.value] = {\n          greetings: {\n            title: message && message.greetings ? message.greetings.title || '' : '',\n            message: message && message.greetings ? message.greetings.message || '' : ''\n          },\n          welcome: message.welcome || '',\n          away: message.away || '',\n          thank: message.thank || ''\n        };\n      });\n      return messages;\n    }\n  }, {\n    key: \"renderButtons\",\n    value: function renderButtons() {\n      var cancelButton = React.createElement(Link, {\n        to: \"/settings/integrations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        icon: \"times-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Cancel\"));\n      return React.createElement(Button.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, cancelButton, React.createElement(Button, {\n        btnStyle: \"success\",\n        uppercase: false,\n        icon: \"check-circle\",\n        onClick: this.save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Save\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          title = _this$state2.title,\n          botEndpointUrl = _this$state2.botEndpointUrl,\n          supporterIds = _this$state2.supporterIds,\n          isOnline = _this$state2.isOnline,\n          availabilityMethod = _this$state2.availabilityMethod,\n          onlineHours = _this$state2.onlineHours,\n          timezone = _this$state2.timezone,\n          color = _this$state2.color,\n          textColor = _this$state2.textColor,\n          logoPreviewUrl = _this$state2.logoPreviewUrl,\n          wallpaper = _this$state2.wallpaper,\n          brandId = _this$state2.brandId,\n          languageCode = _this$state2.languageCode,\n          notifyCustomer = _this$state2.notifyCustomer,\n          logoPreviewStyle = _this$state2.logoPreviewStyle,\n          facebook = _this$state2.facebook,\n          twitter = _this$state2.twitter,\n          youtube = _this$state2.youtube,\n          messages = _this$state2.messages,\n          isStepActive = _this$state2.isStepActive,\n          requireAuth = _this$state2.requireAuth,\n          showChat = _this$state2.showChat,\n          showLauncher = _this$state2.showLauncher,\n          forceLogoutWhenResolve = _this$state2.forceLogoutWhenResolve,\n          showVideoCallRequest = _this$state2.showVideoCallRequest,\n          channelIds = _this$state2.channelIds;\n      var integration = this.props.integration;\n      var message = messages[languageCode];\n      var breadcrumb = [{\n        title: __('Settings'),\n        link: '/settings'\n      }, {\n        title: __('App store'),\n        link: '/settings/integrations'\n      }, {\n        title: __('Messenger')\n      }];\n      return React.createElement(StepWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(Wrapper.Header, {\n        title: __('Messenger'),\n        breadcrumb: breadcrumb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(LeftContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(Steps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(Step, {\n        img: \"/images/icons/erxes-04.svg\",\n        title: \"Appearance\",\n        onClick: this.onStepClick.bind(null, 'appearance'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(Appearance, {\n        onChange: this.onChange,\n        color: color,\n        textColor: textColor,\n        logoPreviewUrl: logoPreviewUrl,\n        wallpaper: wallpaper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      })), React.createElement(Step, {\n        img: \"/images/icons/erxes-09.svg\",\n        title: \"Greeting\",\n        onClick: this.onStepClick.bind(null, 'greeting'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(Greeting, {\n        teamMembers: this.props.teamMembers,\n        onChange: this.onChange,\n        supporterIds: supporterIds,\n        messages: messages,\n        facebook: facebook,\n        languageCode: languageCode,\n        twitter: twitter,\n        youtube: youtube,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      })), React.createElement(Step, {\n        img: \"/images/icons/erxes-07.svg\",\n        title: \"Intro\",\n        onClick: this.onStepClick.bind(null, 'intro'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(Intro, {\n        onChange: this.onChange,\n        messages: messages,\n        languageCode: languageCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      })), React.createElement(Step, {\n        img: \"/images/icons/erxes-03.svg\",\n        title: __('Hours & Availability'),\n        onClick: this.onStepClick.bind(null, 'hours'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(Availability, {\n        onChange: this.onChange,\n        isOnline: isOnline,\n        availabilityMethod: availabilityMethod,\n        timezone: timezone,\n        onlineHours: onlineHours,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      })), React.createElement(Step, {\n        img: \"/images/icons/erxes-06.svg\",\n        title: \"Default Settings\",\n        onClick: this.onStepClick.bind(null, 'default'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(Options, {\n        onChange: this.onChange,\n        notifyCustomer: notifyCustomer,\n        languageCode: languageCode,\n        requireAuth: requireAuth,\n        showChat: showChat,\n        showLauncher: showLauncher,\n        forceLogoutWhenResolve: forceLogoutWhenResolve,\n        showVideoCallRequest: showVideoCallRequest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      })), React.createElement(Step, {\n        img: \"/images/icons/erxes-16.svg\",\n        title: __('Integration Setup'),\n        onClick: this.onStepClick.bind(null, 'setup'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(Connection, {\n        title: title,\n        botEndpointUrl: botEndpointUrl,\n        channelIds: channelIds,\n        brandId: brandId,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      })), React.createElement(Step, {\n        img: \"/images/icons/erxes-15.svg\",\n        title: __('Add Ons'),\n        onClick: this.onStepClick.bind(null, 'addon'),\n        noButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, React.createElement(AddOns, {\n        selectedBrand: brandId,\n        websiteMessengerApps: integration && integration.websiteMessengerApps,\n        leadMessengerApps: integration && integration.leadMessengerApps,\n        knowledgeBaseMessengerApps: integration && integration.knowledgeBaseMessengerApps,\n        handleMessengerApps: this.handleMessengerApps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }))), React.createElement(ControlWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, React.createElement(Indicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, __('You are'), ' ', this.props.integration ? 'editing' : 'creating', ' ', React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, title), \" \", __('integration')), this.renderButtons())), React.createElement(MessengerPreview, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, React.createElement(Preview, {\n        fullHeight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(CommonPreview, {\n        teamMembers: this.props.teamMembers,\n        message: message,\n        supporterIds: supporterIds,\n        isOnline: isOnline,\n        wallpaper: wallpaper,\n        color: color,\n        textColor: textColor,\n        brands: this.props.brands,\n        brandId: brandId,\n        logoPreviewStyle: logoPreviewStyle,\n        logoPreviewUrl: logoPreviewUrl,\n        isGreeting: isStepActive,\n        facebook: facebook,\n        twitter: twitter,\n        youtube: youtube,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return CreateMessenger;\n}(React.Component);\n\nexport default CreateMessenger;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/messenger/Form.tsx"],"names":["Button","Step","Steps","ControlWrapper","Indicator","Preview","StepWrapper","__","Alert","Wrapper","LANGUAGES","Content","LeftContent","MessengerPreview","React","Link","AddOns","Appearance","Availability","Greeting","Intro","Options","Connection","CommonPreview","CreateMessenger","props","onChange","key","value","setState","handleMessengerApps","messengerApps","save","e","preventDefault","state","title","botEndpointUrl","brandId","languageCode","channelIds","messages","facebook","twitter","youtube","requireAuth","showChat","showLauncher","forceLogoutWhenResolve","showVideoCallRequest","error","links","name","messengerData","notifyCustomer","availabilityMethod","isOnline","timezone","onlineHours","map","oh","day","from","to","supporterIds","uiOptions","color","textColor","wallpaper","logo","onStepClick","isStepActive","integration","configData","channels","item","_id","h","Math","random","logoPreviewStyle","logoPreviewUrl","generateMessages","integrationMessages","forEach","message","greetings","welcome","away","thank","cancelButton","breadcrumb","link","bind","teamMembers","websiteMessengerApps","leadMessengerApps","knowledgeBaseMessengerApps","renderButtons","brands","Component"],"mappings":";;;;;;;;AACA,OAAOA,MAAP,MAAmB,kCAAnB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,gCAA5B;AACA,SACEC,cADF,EAEEC,SAFF,EAGEC,OAHF,EAIEC,WAJF,QAKO,uCALP;AAMA,SAASC,EAAT,EAAaC,KAAb,QAA0B,sBAA1B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AAEA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SACEC,OADF,EAEEC,WAFF,EAGEC,gBAHF,QAIO,sCAJP;AAYA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,QAAnC,EAA6CC,KAA7C,EAAoDC,OAApD,QAAmE,SAAnE;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;IAgDMC,e;;;;;AACJ,2BAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACxB,yFAAMA,KAAN;;AADwB,UA4E1BC,QA5E0B,GA4Ef,UAAwBC,GAAxB,EAAgCC,KAAhC,EAAoD;AAC7D,YAAKC,QAAL,qBAAkBF,GAAlB,EAAwBC,KAAxB;AACD,KA9EyB;;AAAA,UAgF1BE,mBAhF0B,GAgFJ,UAACC,aAAD,EAAmC;AACvD,YAAKF,QAAL,CAAc;AAAEE,QAAAA,aAAa,EAAbA;AAAF,OAAd;AACD,KAlFyB;;AAAA,UAoF1BC,IApF0B,GAoFnB,UAAAC,CAAC,EAAI;AACVA,MAAAA,CAAC,CAACC,cAAF;AADU,wBAmBN,MAAKC,KAnBC;AAAA,UAIRC,KAJQ,eAIRA,KAJQ;AAAA,UAKRC,cALQ,eAKRA,cALQ;AAAA,UAMRC,OANQ,eAMRA,OANQ;AAAA,UAORC,YAPQ,eAORA,YAPQ;AAAA,UAQRC,UARQ,eAQRA,UARQ;AAAA,UASRC,QATQ,eASRA,QATQ;AAAA,UAURC,QAVQ,eAURA,QAVQ;AAAA,UAWRC,OAXQ,eAWRA,OAXQ;AAAA,UAYRC,OAZQ,eAYRA,OAZQ;AAAA,UAaRC,WAbQ,eAaRA,WAbQ;AAAA,UAcRC,QAdQ,eAcRA,QAdQ;AAAA,UAeRC,YAfQ,eAeRA,YAfQ;AAAA,UAgBRC,sBAhBQ,eAgBRA,sBAhBQ;AAAA,UAiBRC,oBAjBQ,eAiBRA,oBAjBQ;AAAA,UAkBRlB,aAlBQ,eAkBRA,aAlBQ;;AAqBV,UAAI,CAACQ,YAAL,EAAmB;AACjB,eAAO/B,KAAK,CAAC0C,KAAN,CAAY,cAAZ,CAAP;AACD;;AAED,UAAI,CAACd,KAAL,EAAY;AACV,eAAO5B,KAAK,CAAC0C,KAAN,CAAY,aAAZ,CAAP;AACD;;AAED,UAAI,CAACZ,OAAL,EAAc;AACZ,eAAO9B,KAAK,CAAC0C,KAAN,CAAY,gBAAZ,CAAP;AACD;;AAED,UAAMC,KAAK,GAAG;AAAET,QAAAA,QAAQ,EAARA,QAAF;AAAYC,QAAAA,OAAO,EAAPA,OAAZ;AAAqBC,QAAAA,OAAO,EAAPA;AAArB,OAAd;;AAEA,YAAKnB,KAAL,CAAWO,IAAX,CAAgB;AACdoB,QAAAA,IAAI,EAAEhB,KADQ;AAEdE,QAAAA,OAAO,EAAPA,OAFc;AAGdE,QAAAA,UAAU,EAAVA,UAHc;AAIdD,QAAAA,YAAY,EAAE,MAAKJ,KAAL,CAAWI,YAJX;AAKdc,QAAAA,aAAa,EAAE;AACbhB,UAAAA,cAAc,EAAdA,cADa;AAEbiB,UAAAA,cAAc,EAAE,MAAKnB,KAAL,CAAWmB,cAFd;AAGbC,UAAAA,kBAAkB,EAAE,MAAKpB,KAAL,CAAWoB,kBAHlB;AAIbC,UAAAA,QAAQ,EAAE,MAAKrB,KAAL,CAAWqB,QAJR;AAKbC,UAAAA,QAAQ,EAAE,MAAKtB,KAAL,CAAWsB,QALR;AAMbC,UAAAA,WAAW,EAAE,CAAC,MAAKvB,KAAL,CAAWuB,WAAX,IAA0B,EAA3B,EAA+BC,GAA/B,CAAmC,UAAAC,EAAE;AAAA,mBAAK;AACrDC,cAAAA,GAAG,EAAED,EAAE,CAACC,GAD6C;AAErDC,cAAAA,IAAI,EAAEF,EAAE,CAACE,IAF4C;AAGrDC,cAAAA,EAAE,EAAEH,EAAE,CAACG;AAH8C,aAAL;AAAA,WAArC,CANA;AAWbC,UAAAA,YAAY,EAAE,MAAK7B,KAAL,CAAW6B,YAXZ;AAYbvB,UAAAA,QAAQ,EAARA,QAZa;AAabI,UAAAA,WAAW,EAAXA,WAba;AAcbC,UAAAA,QAAQ,EAARA,QAda;AAebC,UAAAA,YAAY,EAAZA,YAfa;AAgBbC,UAAAA,sBAAsB,EAAtBA,sBAhBa;AAiBbC,UAAAA,oBAAoB,EAApBA,oBAjBa;AAkBbE,UAAAA,KAAK,EAALA;AAlBa,SALD;AAyBdc,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE,MAAK/B,KAAL,CAAW+B,KADT;AAETC,UAAAA,SAAS,EAAE,MAAKhC,KAAL,CAAWgC,SAFb;AAGTC,UAAAA,SAAS,EAAE,MAAKjC,KAAL,CAAWiC,SAHb;AAITC,UAAAA,IAAI,EAAE,MAAKlC,KAAL,CAAWkC;AAJR,SAzBG;AA+BdtC,QAAAA,aAAa,EAAbA;AA/Bc,OAAhB;AAiCD,KAxJyB;;AAAA,UA0J1BuC,WA1J0B,GA0JZ,UAAAlB,IAAI,EAAI;AACpB,UAAIA,IAAI,KAAK,UAAb,EAAyB;AACvB,eAAO,MAAKvB,QAAL,CAAc;AAAE0C,UAAAA,YAAY,EAAE;AAAhB,SAAd,CAAP;AACD;;AAED,aAAO,MAAK1C,QAAL,CAAc;AAAE0C,QAAAA,YAAY,EAAE;AAAhB,OAAd,CAAP;AACD,KAhKyB;;AAGxB,QAAMC,WAAW,GAAG/C,KAAK,CAAC+C,WAAN,IAAsB,EAA1C;;AACA,QAAMjC,aAAY,GAAGiC,WAAW,CAACjC,YAAZ,IAA4B,IAAjD;;AACA,QAAMkC,UAAU,GAAGD,WAAW,CAACnB,aAAZ,IAA6B;AAC9CC,MAAAA,cAAc,EAAE,KAD8B;AAE9CT,MAAAA,WAAW,EAAE,IAFiC;AAG9CC,MAAAA,QAAQ,EAAE,IAHoC;AAI9CC,MAAAA,YAAY,EAAE,IAJgC;AAK9CC,MAAAA,sBAAsB,EAAE,KALsB;AAM9CC,MAAAA,oBAAoB,EAAE,KANwB;AAO9CZ,MAAAA,cAAc,EAAE;AAP8B,KAAhD;;AASA,QAAMc,MAAK,GAAGsB,UAAU,CAACtB,KAAX,IAAoB,EAAlC;;AACA,QAAMV,SAAQ,GAAGgC,UAAU,CAAChC,QAAX,IAAuB,EAAxC;;AACA,QAAMwB,SAAS,GAAGO,WAAW,CAACP,SAAZ,IAAyB,EAA3C;AACA,QAAMS,QAAQ,GAAGF,WAAW,CAACE,QAAZ,IAAwB,EAAzC;AACA,QAAM3C,cAAa,GAAG,EAAtB;AAEA,UAAKI,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEoC,WAAW,CAACpB,IADR;AAEXf,MAAAA,cAAc,EAAEoC,UAAU,CAACpC,cAFhB;AAGXC,MAAAA,OAAO,EAAEkC,WAAW,CAAClC,OAAZ,IAAuB,EAHrB;AAIXC,MAAAA,YAAY,EAAZA,aAJW;AAKXC,MAAAA,UAAU,EAAEkC,QAAQ,CAACf,GAAT,CAAa,UAAAgB,IAAI;AAAA,eAAIA,IAAI,CAACC,GAAT;AAAA,OAAjB,KAAkC,EALnC;AAMXV,MAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,IAAmB,SANf;AAOXC,MAAAA,SAAS,EAAEF,SAAS,CAACE,SAAV,IAAuB,MAPvB;AAQXC,MAAAA,SAAS,EAAEH,SAAS,CAACG,SAAV,IAAuB,GARvB;AASXd,MAAAA,cAAc,EAAEmB,UAAU,CAACnB,cAAX,IAA6B,KATlC;AAUXT,MAAAA,WAAW,EAAE4B,UAAU,CAAC5B,WAVb;AAWXC,MAAAA,QAAQ,EAAE2B,UAAU,CAAC3B,QAXV;AAYXC,MAAAA,YAAY,EAAE0B,UAAU,CAAC1B,YAZd;AAaXC,MAAAA,sBAAsB,EAAEyB,UAAU,CAACzB,sBAbxB;AAcXgB,MAAAA,YAAY,EAAES,UAAU,CAACT,YAAX,IAA2B,EAd9B;AAeXT,MAAAA,kBAAkB,EAAEkB,UAAU,CAAClB,kBAAX,IAAiC,QAf1C;AAgBXC,MAAAA,QAAQ,EAAEiB,UAAU,CAACjB,QAAX,IAAuB,KAhBtB;AAiBXC,MAAAA,QAAQ,EAAEgB,UAAU,CAAChB,QAAX,IAAuB,EAjBtB;AAkBXC,MAAAA,WAAW,EAAE,CAACe,UAAU,CAACf,WAAX,IAA0B,EAA3B,EAA+BC,GAA/B,CAAmC,UAAAkB,CAAC;AAAA;AAC/CD,UAAAA,GAAG,EAAEE,IAAI,CAACC,MAAL;AAD0C,WAE5CF,CAF4C;AAAA,OAApC,CAlBF;AAsBX5B,MAAAA,oBAAoB,EAAEwB,UAAU,CAACxB,oBAtBtB;AAuBXoB,MAAAA,IAAI,EAAEJ,SAAS,CAACI,IAAV,IAAkB,EAvBb;AAwBXW,MAAAA,gBAAgB,EAAE,EAxBP;AAyBXC,MAAAA,cAAc,EAAEhB,SAAS,CAACI,IAAV,IAAkB,mBAzBvB;AA0BX3B,MAAAA,QAAQ,EAAES,MAAK,CAACT,QAAN,IAAkB,EA1BjB;AA2BXC,MAAAA,OAAO,EAAEQ,MAAK,CAACR,OAAN,IAAiB,EA3Bf;AA4BXC,MAAAA,OAAO,EAAEO,MAAK,CAACP,OAAN,IAAiB,EA5Bf;AA6BXH,MAAAA,QAAQ,oBAAO,MAAKyC,gBAAL,CAAsBzC,SAAtB,CAAP,CA7BG;AA8BXV,MAAAA,aAAa,EAAbA;AA9BW,KAAb;AApBwB;AAoDzB;;;;qCAEgBoD,mB,EAAqB;AACpC,UAAM1C,QAAQ,GAAG,EAAjB;AAEA/B,MAAAA,SAAS,CAAC0E,OAAV,CAAkB,UAAAT,IAAI,EAAI;AACxB,YAAMU,OAAO,GAAGF,mBAAmB,CAACR,IAAI,CAAC/C,KAAN,CAAnB,IAAmC,EAAnD;AAEAa,QAAAA,QAAQ,CAACkC,IAAI,CAAC/C,KAAN,CAAR,GAAuB;AACrB0D,UAAAA,SAAS,EAAE;AACTlD,YAAAA,KAAK,EACHiD,OAAO,IAAIA,OAAO,CAACC,SAAnB,GAA+BD,OAAO,CAACC,SAAR,CAAkBlD,KAAlB,IAA2B,EAA1D,GAA+D,EAFxD;AAGTiD,YAAAA,OAAO,EACLA,OAAO,IAAIA,OAAO,CAACC,SAAnB,GAA+BD,OAAO,CAACC,SAAR,CAAkBD,OAAlB,IAA6B,EAA5D,GAAiE;AAJ1D,WADU;AAOrBE,UAAAA,OAAO,EAAEF,OAAO,CAACE,OAAR,IAAmB,EAPP;AAQrBC,UAAAA,IAAI,EAAEH,OAAO,CAACG,IAAR,IAAgB,EARD;AASrBC,UAAAA,KAAK,EAAEJ,OAAO,CAACI,KAAR,IAAiB;AATH,SAAvB;AAWD,OAdD;AAgBA,aAAOhD,QAAP;AACD;;;oCAwFe;AACd,UAAMiD,YAAY,GAChB,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,wBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,QAAjB;AAA0B,QAAA,IAAI,EAAC,cAA/B;AAA8C,QAAA,SAAS,EAAE,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF;AAQA,aACE,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,YADH,EAEE,oBAAC,MAAD;AACE,QAAA,QAAQ,EAAC,SADX;AAEE,QAAA,SAAS,EAAE,KAFb;AAGE,QAAA,IAAI,EAAC,cAHP;AAIE,QAAA,OAAO,EAAE,KAAK1D,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAaD;;;6BAEQ;AAAA,yBA4BH,KAAKG,KA5BF;AAAA,UAELC,KAFK,gBAELA,KAFK;AAAA,UAGLC,cAHK,gBAGLA,cAHK;AAAA,UAIL2B,YAJK,gBAILA,YAJK;AAAA,UAKLR,QALK,gBAKLA,QALK;AAAA,UAMLD,kBANK,gBAMLA,kBANK;AAAA,UAOLG,WAPK,gBAOLA,WAPK;AAAA,UAQLD,QARK,gBAQLA,QARK;AAAA,UASLS,KATK,gBASLA,KATK;AAAA,UAULC,SAVK,gBAULA,SAVK;AAAA,UAWLc,cAXK,gBAWLA,cAXK;AAAA,UAYLb,SAZK,gBAYLA,SAZK;AAAA,UAaL9B,OAbK,gBAaLA,OAbK;AAAA,UAcLC,YAdK,gBAcLA,YAdK;AAAA,UAeLe,cAfK,gBAeLA,cAfK;AAAA,UAgBL0B,gBAhBK,gBAgBLA,gBAhBK;AAAA,UAiBLtC,QAjBK,gBAiBLA,QAjBK;AAAA,UAkBLC,OAlBK,gBAkBLA,OAlBK;AAAA,UAmBLC,OAnBK,gBAmBLA,OAnBK;AAAA,UAoBLH,QApBK,gBAoBLA,QApBK;AAAA,UAqBL8B,YArBK,gBAqBLA,YArBK;AAAA,UAsBL1B,WAtBK,gBAsBLA,WAtBK;AAAA,UAuBLC,QAvBK,gBAuBLA,QAvBK;AAAA,UAwBLC,YAxBK,gBAwBLA,YAxBK;AAAA,UAyBLC,sBAzBK,gBAyBLA,sBAzBK;AAAA,UA0BLC,oBA1BK,gBA0BLA,oBA1BK;AAAA,UA2BLT,UA3BK,gBA2BLA,UA3BK;AAAA,UA8BCgC,WA9BD,GA8BiB,KAAK/C,KA9BtB,CA8BC+C,WA9BD;AA+BP,UAAMa,OAAO,GAAG5C,QAAQ,CAACF,YAAD,CAAxB;AAEA,UAAMoD,UAAU,GAAG,CACjB;AAAEvD,QAAAA,KAAK,EAAE7B,EAAE,CAAC,UAAD,CAAX;AAAyBqF,QAAAA,IAAI,EAAE;AAA/B,OADiB,EAEjB;AAAExD,QAAAA,KAAK,EAAE7B,EAAE,CAAC,WAAD,CAAX;AAA0BqF,QAAAA,IAAI,EAAE;AAAhC,OAFiB,EAGjB;AAAExD,QAAAA,KAAK,EAAE7B,EAAE,CAAC,WAAD;AAAX,OAHiB,CAAnB;AAMA,aACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD,CAAS,MAAT;AAAgB,QAAA,KAAK,EAAEA,EAAE,CAAC,WAAD,CAAzB;AAAwC,QAAA,UAAU,EAAEoF,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAC,4BADN;AAEE,QAAA,KAAK,EAAC,YAFR;AAGE,QAAA,OAAO,EAAE,KAAKrB,WAAL,CAAiBuB,IAAjB,CAAsB,IAAtB,EAA4B,YAA5B,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,UAAD;AACE,QAAA,QAAQ,EAAE,KAAKnE,QADjB;AAEE,QAAA,KAAK,EAAEwC,KAFT;AAGE,QAAA,SAAS,EAAEC,SAHb;AAIE,QAAA,cAAc,EAAEc,cAJlB;AAKE,QAAA,SAAS,EAAEb,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,EAeE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAC,4BADN;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,OAAO,EAAE,KAAKE,WAAL,CAAiBuB,IAAjB,CAAsB,IAAtB,EAA4B,UAA5B,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,QAAD;AACE,QAAA,WAAW,EAAE,KAAKpE,KAAL,CAAWqE,WAD1B;AAEE,QAAA,QAAQ,EAAE,KAAKpE,QAFjB;AAGE,QAAA,YAAY,EAAEsC,YAHhB;AAIE,QAAA,QAAQ,EAAEvB,QAJZ;AAKE,QAAA,QAAQ,EAAEC,QALZ;AAME,QAAA,YAAY,EAAEH,YANhB;AAOE,QAAA,OAAO,EAAEI,OAPX;AAQE,QAAA,OAAO,EAAEC,OARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAfF,EAgCE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAC,4BADN;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,OAAO,EAAE,KAAK0B,WAAL,CAAiBuB,IAAjB,CAAsB,IAAtB,EAA4B,OAA5B,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,KAAD;AACE,QAAA,QAAQ,EAAE,KAAKnE,QADjB;AAEE,QAAA,QAAQ,EAAEe,QAFZ;AAGE,QAAA,YAAY,EAAEF,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAhCF,EA4CE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAC,4BADN;AAEE,QAAA,KAAK,EAAEhC,EAAE,CAAC,sBAAD,CAFX;AAGE,QAAA,OAAO,EAAE,KAAK+D,WAAL,CAAiBuB,IAAjB,CAAsB,IAAtB,EAA4B,OAA5B,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,YAAD;AACE,QAAA,QAAQ,EAAE,KAAKnE,QADjB;AAEE,QAAA,QAAQ,EAAE8B,QAFZ;AAGE,QAAA,kBAAkB,EAAED,kBAHtB;AAIE,QAAA,QAAQ,EAAEE,QAJZ;AAKE,QAAA,WAAW,EAAEC,WALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CA5CF,EA0DE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAC,4BADN;AAEE,QAAA,KAAK,EAAC,kBAFR;AAGE,QAAA,OAAO,EAAE,KAAKY,WAAL,CAAiBuB,IAAjB,CAAsB,IAAtB,EAA4B,SAA5B,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,OAAD;AACE,QAAA,QAAQ,EAAE,KAAKnE,QADjB;AAEE,QAAA,cAAc,EAAE4B,cAFlB;AAGE,QAAA,YAAY,EAAEf,YAHhB;AAIE,QAAA,WAAW,EAAEM,WAJf;AAKE,QAAA,QAAQ,EAAEC,QALZ;AAME,QAAA,YAAY,EAAEC,YANhB;AAOE,QAAA,sBAAsB,EAAEC,sBAP1B;AAQE,QAAA,oBAAoB,EAAEC,oBARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CA1DF,EA2EE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAC,4BADN;AAEE,QAAA,KAAK,EAAE1C,EAAE,CAAC,mBAAD,CAFX;AAGE,QAAA,OAAO,EAAE,KAAK+D,WAAL,CAAiBuB,IAAjB,CAAsB,IAAtB,EAA4B,OAA5B,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAEzD,KADT;AAEE,QAAA,cAAc,EAAEC,cAFlB;AAGE,QAAA,UAAU,EAAEG,UAHd;AAIE,QAAA,OAAO,EAAEF,OAJX;AAKE,QAAA,QAAQ,EAAE,KAAKZ,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CA3EF,EAwFE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAC,4BADN;AAEE,QAAA,KAAK,EAAEnB,EAAE,CAAC,SAAD,CAFX;AAGE,QAAA,OAAO,EAAE,KAAK+D,WAAL,CAAiBuB,IAAjB,CAAsB,IAAtB,EAA4B,OAA5B,CAHX;AAIE,QAAA,QAAQ,EAAE,IAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,MAAD;AACE,QAAA,aAAa,EAAEvD,OADjB;AAEE,QAAA,oBAAoB,EAClBkC,WAAW,IAAIA,WAAW,CAACuB,oBAH/B;AAKE,QAAA,iBAAiB,EACfvB,WAAW,IAAIA,WAAW,CAACwB,iBAN/B;AAQE,QAAA,0BAA0B,EACxBxB,WAAW,IAAIA,WAAW,CAACyB,0BAT/B;AAWE,QAAA,mBAAmB,EAAE,KAAKnE,mBAX5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAxFF,CADF,EA8GE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGvB,EAAE,CAAC,SAAD,CADL,EACkB,GADlB,EAEG,KAAKkB,KAAL,CAAW+C,WAAX,GAAyB,SAAzB,GAAqC,UAFxC,EAEoD,GAFpD,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASpC,KAAT,CAHF,OAG4B7B,EAAE,CAAC,aAAD,CAH9B,CADF,EAMG,KAAK2F,aAAL,EANH,CA9GF,CADF,EAyHE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,UAAU,EAAE,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,WAAW,EAAE,KAAKzE,KAAL,CAAWqE,WAD1B;AAEE,QAAA,OAAO,EAAET,OAFX;AAGE,QAAA,YAAY,EAAErB,YAHhB;AAIE,QAAA,QAAQ,EAAER,QAJZ;AAKE,QAAA,SAAS,EAAEY,SALb;AAME,QAAA,KAAK,EAAEF,KANT;AAOE,QAAA,SAAS,EAAEC,SAPb;AAQE,QAAA,MAAM,EAAE,KAAK1C,KAAL,CAAW0E,MARrB;AASE,QAAA,OAAO,EAAE7D,OATX;AAUE,QAAA,gBAAgB,EAAE0C,gBAVpB;AAWE,QAAA,cAAc,EAAEC,cAXlB;AAYE,QAAA,UAAU,EAAEV,YAZd;AAaE,QAAA,QAAQ,EAAE7B,QAbZ;AAcE,QAAA,OAAO,EAAEC,OAdX;AAeE,QAAA,OAAO,EAAEC,OAfX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAzHF,CAFF,CADF;AAoJD;;;;EAtX2B9B,KAAK,CAACsF,S;;AAyXpC,eAAe5E,eAAf","sourcesContent":["import { IUser } from 'modules/auth/types';\nimport Button from 'modules/common/components/Button';\nimport { Step, Steps } from 'modules/common/components/step';\nimport {\n  ControlWrapper,\n  Indicator,\n  Preview,\n  StepWrapper\n} from 'modules/common/components/step/styles';\nimport { __, Alert } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport { IBrand } from 'modules/settings/brands/types';\nimport { LANGUAGES } from 'modules/settings/general/constants';\nimport {\n  Content,\n  LeftContent,\n  MessengerPreview\n} from 'modules/settings/integrations/styles';\nimport {\n  IIntegration,\n  IMessages,\n  IMessengerApps,\n  IMessengerData,\n  IUiOptions\n} from 'modules/settings/integrations/types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport AddOns from '../../containers/messenger/AddOns';\nimport { Appearance, Availability, Greeting, Intro, Options } from './steps';\nimport Connection from './steps/Connection';\nimport CommonPreview from './widgetPreview/CommonPreview';\n\ntype Props = {\n  teamMembers: IUser[];\n  integration?: IIntegration;\n  brands: IBrand[];\n  save: (params: {\n    name: string;\n    brandId: string;\n    languageCode: string;\n    channelIds?: string[];\n    messengerData: IMessengerData;\n    uiOptions: IUiOptions;\n    messengerApps: IMessengerApps;\n  }) => void;\n};\n\ntype State = {\n  title: string;\n  botEndpointUrl?: string;\n  brandId: string;\n  channelIds: string[];\n  languageCode: string;\n  color: string;\n  textColor: string;\n  wallpaper: string;\n  notifyCustomer: boolean;\n  supporterIds: string[];\n  availabilityMethod: string;\n  isOnline: boolean;\n  timezone: string;\n  onlineHours: any;\n  logo: string;\n  logoPreviewStyle: any;\n  logoPreviewUrl: string;\n  facebook: string;\n  twitter: string;\n  youtube: string;\n  messages: IMessages;\n  isStepActive?: boolean;\n  requireAuth?: boolean;\n  showChat?: boolean;\n  showLauncher?: boolean;\n  forceLogoutWhenResolve?: boolean;\n  showVideoCallRequest?: boolean;\n  messengerApps: IMessengerApps;\n};\n\nclass CreateMessenger extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const integration = props.integration || ({} as IIntegration);\n    const languageCode = integration.languageCode || 'en';\n    const configData = integration.messengerData || {\n      notifyCustomer: false,\n      requireAuth: true,\n      showChat: true,\n      showLauncher: true,\n      forceLogoutWhenResolve: false,\n      showVideoCallRequest: false,\n      botEndpointUrl: ''\n    };\n    const links = configData.links || {};\n    const messages = configData.messages || {};\n    const uiOptions = integration.uiOptions || {};\n    const channels = integration.channels || [];\n    const messengerApps = {};\n\n    this.state = {\n      title: integration.name,\n      botEndpointUrl: configData.botEndpointUrl,\n      brandId: integration.brandId || '',\n      languageCode,\n      channelIds: channels.map(item => item._id) || [],\n      color: uiOptions.color || '#6569DF',\n      textColor: uiOptions.textColor || '#fff',\n      wallpaper: uiOptions.wallpaper || '1',\n      notifyCustomer: configData.notifyCustomer || false,\n      requireAuth: configData.requireAuth,\n      showChat: configData.showChat,\n      showLauncher: configData.showLauncher,\n      forceLogoutWhenResolve: configData.forceLogoutWhenResolve,\n      supporterIds: configData.supporterIds || [],\n      availabilityMethod: configData.availabilityMethod || 'manual',\n      isOnline: configData.isOnline || false,\n      timezone: configData.timezone || '',\n      onlineHours: (configData.onlineHours || []).map(h => ({\n        _id: Math.random(),\n        ...h\n      })),\n      showVideoCallRequest: configData.showVideoCallRequest,\n      logo: uiOptions.logo || '',\n      logoPreviewStyle: {},\n      logoPreviewUrl: uiOptions.logo || '/images/erxes.png',\n      facebook: links.facebook || '',\n      twitter: links.twitter || '',\n      youtube: links.youtube || '',\n      messages: { ...this.generateMessages(messages) },\n      messengerApps\n    };\n  }\n\n  generateMessages(integrationMessages) {\n    const messages = {};\n\n    LANGUAGES.forEach(item => {\n      const message = integrationMessages[item.value] || {};\n\n      messages[item.value] = {\n        greetings: {\n          title:\n            message && message.greetings ? message.greetings.title || '' : '',\n          message:\n            message && message.greetings ? message.greetings.message || '' : ''\n        },\n        welcome: message.welcome || '',\n        away: message.away || '',\n        thank: message.thank || ''\n      };\n    });\n\n    return messages;\n  }\n\n  onChange = <T extends keyof State>(key: T, value: State[T]) => {\n    this.setState(({ [key]: value } as unknown) as Pick<State, keyof State>);\n  };\n\n  handleMessengerApps = (messengerApps: IMessengerApps) => {\n    this.setState({ messengerApps });\n  };\n\n  save = e => {\n    e.preventDefault();\n\n    const {\n      title,\n      botEndpointUrl,\n      brandId,\n      languageCode,\n      channelIds,\n      messages,\n      facebook,\n      twitter,\n      youtube,\n      requireAuth,\n      showChat,\n      showLauncher,\n      forceLogoutWhenResolve,\n      showVideoCallRequest,\n      messengerApps\n    } = this.state;\n\n    if (!languageCode) {\n      return Alert.error('Set language');\n    }\n\n    if (!title) {\n      return Alert.error('Write title');\n    }\n\n    if (!brandId) {\n      return Alert.error('Choose a brand');\n    }\n\n    const links = { facebook, twitter, youtube };\n\n    this.props.save({\n      name: title,\n      brandId,\n      channelIds,\n      languageCode: this.state.languageCode,\n      messengerData: {\n        botEndpointUrl,\n        notifyCustomer: this.state.notifyCustomer,\n        availabilityMethod: this.state.availabilityMethod,\n        isOnline: this.state.isOnline,\n        timezone: this.state.timezone,\n        onlineHours: (this.state.onlineHours || []).map(oh => ({\n          day: oh.day,\n          from: oh.from,\n          to: oh.to\n        })),\n        supporterIds: this.state.supporterIds,\n        messages,\n        requireAuth,\n        showChat,\n        showLauncher,\n        forceLogoutWhenResolve,\n        showVideoCallRequest,\n        links\n      },\n      uiOptions: {\n        color: this.state.color,\n        textColor: this.state.textColor,\n        wallpaper: this.state.wallpaper,\n        logo: this.state.logo\n      },\n      messengerApps\n    });\n  };\n\n  onStepClick = name => {\n    if (name !== 'greeting') {\n      return this.setState({ isStepActive: false });\n    }\n\n    return this.setState({ isStepActive: true });\n  };\n\n  renderButtons() {\n    const cancelButton = (\n      <Link to=\"/settings/integrations\">\n        <Button btnStyle=\"simple\" icon=\"times-circle\" uppercase={false}>\n          Cancel\n        </Button>\n      </Link>\n    );\n\n    return (\n      <Button.Group>\n        {cancelButton}\n        <Button\n          btnStyle=\"success\"\n          uppercase={false}\n          icon=\"check-circle\"\n          onClick={this.save}\n        >\n          Save\n        </Button>\n      </Button.Group>\n    );\n  }\n\n  render() {\n    const {\n      title,\n      botEndpointUrl,\n      supporterIds,\n      isOnline,\n      availabilityMethod,\n      onlineHours,\n      timezone,\n      color,\n      textColor,\n      logoPreviewUrl,\n      wallpaper,\n      brandId,\n      languageCode,\n      notifyCustomer,\n      logoPreviewStyle,\n      facebook,\n      twitter,\n      youtube,\n      messages,\n      isStepActive,\n      requireAuth,\n      showChat,\n      showLauncher,\n      forceLogoutWhenResolve,\n      showVideoCallRequest,\n      channelIds\n    } = this.state;\n\n    const { integration } = this.props;\n    const message = messages[languageCode];\n\n    const breadcrumb = [\n      { title: __('Settings'), link: '/settings' },\n      { title: __('App store'), link: '/settings/integrations' },\n      { title: __('Messenger') }\n    ];\n\n    return (\n      <StepWrapper>\n        <Wrapper.Header title={__('Messenger')} breadcrumb={breadcrumb} />\n        <Content>\n          <LeftContent>\n            <Steps>\n              <Step\n                img=\"/images/icons/erxes-04.svg\"\n                title=\"Appearance\"\n                onClick={this.onStepClick.bind(null, 'appearance')}\n              >\n                <Appearance\n                  onChange={this.onChange}\n                  color={color}\n                  textColor={textColor}\n                  logoPreviewUrl={logoPreviewUrl}\n                  wallpaper={wallpaper}\n                />\n              </Step>\n\n              <Step\n                img=\"/images/icons/erxes-09.svg\"\n                title=\"Greeting\"\n                onClick={this.onStepClick.bind(null, 'greeting')}\n              >\n                <Greeting\n                  teamMembers={this.props.teamMembers}\n                  onChange={this.onChange}\n                  supporterIds={supporterIds}\n                  messages={messages}\n                  facebook={facebook}\n                  languageCode={languageCode}\n                  twitter={twitter}\n                  youtube={youtube}\n                />\n              </Step>\n\n              <Step\n                img=\"/images/icons/erxes-07.svg\"\n                title=\"Intro\"\n                onClick={this.onStepClick.bind(null, 'intro')}\n              >\n                <Intro\n                  onChange={this.onChange}\n                  messages={messages}\n                  languageCode={languageCode}\n                />\n              </Step>\n\n              <Step\n                img=\"/images/icons/erxes-03.svg\"\n                title={__('Hours & Availability')}\n                onClick={this.onStepClick.bind(null, 'hours')}\n              >\n                <Availability\n                  onChange={this.onChange}\n                  isOnline={isOnline}\n                  availabilityMethod={availabilityMethod}\n                  timezone={timezone}\n                  onlineHours={onlineHours}\n                />\n              </Step>\n\n              <Step\n                img=\"/images/icons/erxes-06.svg\"\n                title=\"Default Settings\"\n                onClick={this.onStepClick.bind(null, 'default')}\n              >\n                <Options\n                  onChange={this.onChange}\n                  notifyCustomer={notifyCustomer}\n                  languageCode={languageCode}\n                  requireAuth={requireAuth}\n                  showChat={showChat}\n                  showLauncher={showLauncher}\n                  forceLogoutWhenResolve={forceLogoutWhenResolve}\n                  showVideoCallRequest={showVideoCallRequest}\n                />\n              </Step>\n\n              <Step\n                img=\"/images/icons/erxes-16.svg\"\n                title={__('Integration Setup')}\n                onClick={this.onStepClick.bind(null, 'setup')}\n              >\n                <Connection\n                  title={title}\n                  botEndpointUrl={botEndpointUrl}\n                  channelIds={channelIds}\n                  brandId={brandId}\n                  onChange={this.onChange}\n                />\n              </Step>\n              <Step\n                img=\"/images/icons/erxes-15.svg\"\n                title={__('Add Ons')}\n                onClick={this.onStepClick.bind(null, 'addon')}\n                noButton={true}\n              >\n                <AddOns\n                  selectedBrand={brandId}\n                  websiteMessengerApps={\n                    integration && integration.websiteMessengerApps\n                  }\n                  leadMessengerApps={\n                    integration && integration.leadMessengerApps\n                  }\n                  knowledgeBaseMessengerApps={\n                    integration && integration.knowledgeBaseMessengerApps\n                  }\n                  handleMessengerApps={this.handleMessengerApps}\n                />\n              </Step>\n            </Steps>\n            <ControlWrapper>\n              <Indicator>\n                {__('You are')}{' '}\n                {this.props.integration ? 'editing' : 'creating'}{' '}\n                <strong>{title}</strong> {__('integration')}\n              </Indicator>\n              {this.renderButtons()}\n            </ControlWrapper>\n          </LeftContent>\n\n          <MessengerPreview>\n            <Preview fullHeight={true}>\n              <CommonPreview\n                teamMembers={this.props.teamMembers}\n                message={message}\n                supporterIds={supporterIds}\n                isOnline={isOnline}\n                wallpaper={wallpaper}\n                color={color}\n                textColor={textColor}\n                brands={this.props.brands}\n                brandId={brandId}\n                logoPreviewStyle={logoPreviewStyle}\n                logoPreviewUrl={logoPreviewUrl}\n                isGreeting={isStepActive}\n                facebook={facebook}\n                twitter={twitter}\n                youtube={youtube}\n              />\n            </Preview>\n          </MessengerPreview>\n        </Content>\n      </StepWrapper>\n    );\n  }\n}\n\nexport default CreateMessenger;\n"]},"metadata":{},"sourceType":"module"}