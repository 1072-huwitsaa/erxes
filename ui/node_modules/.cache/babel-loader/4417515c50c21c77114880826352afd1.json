{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/stage/ItemList.tsx\";\nimport client from 'apolloClient';\nimport gql from 'graphql-tag';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport routerUtils from 'modules/common/utils/router';\nimport { mutations as notificationMutations } from 'modules/notifications/graphql';\nimport React from 'react';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { withRouter } from 'react-router-dom';\nimport { DropZone, EmptyContainer, ItemContainer, NotifiedContainer, Wrapper } from '../../styles/common';\nimport Item from './Item';\n\nvar DraggableContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DraggableContainer, _React$Component);\n\n  function DraggableContainer(props) {\n    var _this;\n\n    _classCallCheck(this, DraggableContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DraggableContainer).call(this, props)); // if popup shows, draggable will disable\n\n    _this.onClick = function () {\n      var _this$props = _this.props,\n          item = _this$props.item,\n          history = _this$props.history;\n\n      _this.setState({\n        isDragDisabled: true\n      }, function () {\n        routerUtils.setParams(history, {\n          itemId: item._id,\n          key: ''\n        });\n      });\n\n      if (!_this.state.hasNotified) {\n        client.mutate({\n          mutation: gql(notificationMutations.markAsRead),\n          variables: {\n            contentTypeId: item._id\n          }\n        });\n      }\n    };\n\n    _this.beforePopupClose = function () {\n      var _this$props2 = _this.props,\n          item = _this$props2.item,\n          onRemoveItem = _this$props2.onRemoveItem;\n\n      if (item.status === 'archived') {\n        onRemoveItem(item._id, item.stageId);\n      }\n\n      _this.setState({\n        isDragDisabled: false,\n        hasNotified: true\n      });\n    };\n\n    var itemIdQueryParam = routerUtils.getParam(props.history, 'itemId');\n    _this.state = {\n      isDragDisabled: Boolean(itemIdQueryParam),\n      hasNotified: props.item.hasNotified === false ? false : true\n    };\n    return _this;\n  }\n\n  _createClass(DraggableContainer, [{\n    key: \"renderHasNotified\",\n    value: function renderHasNotified() {\n      if (this.state.hasNotified) {\n        return null;\n      }\n\n      return React.createElement(NotifiedContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"bell\",\n        size: 14,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          stageId = _this$props3.stageId,\n          item = _this$props3.item,\n          index = _this$props3.index,\n          options = _this$props3.options;\n      var isDragDisabled = this.state.isDragDisabled;\n      return React.createElement(Draggable, {\n        key: item._id,\n        draggableId: item._id,\n        index: index,\n        isDragDisabled: isDragDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, function (dragProvided, dragSnapshot) {\n        return React.createElement(ItemContainer, Object.assign({\n          isDragging: dragSnapshot.isDragging,\n          innerRef: dragProvided.innerRef\n        }, dragProvided.draggableProps, dragProvided.dragHandleProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), _this2.renderHasNotified(), React.createElement(Item, {\n          key: item._id,\n          stageId: stageId,\n          item: item,\n          onClick: _this2.onClick,\n          beforePopupClose: _this2.beforePopupClose,\n          options: options,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }));\n      });\n    }\n  }]);\n\n  return DraggableContainer;\n}(React.Component);\n\nvar DraggableContainerWithRouter = withRouter(DraggableContainer);\n\nvar InnerItemList =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InnerItemList, _React$PureComponent);\n\n  function InnerItemList() {\n    _classCallCheck(this, InnerItemList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InnerItemList).apply(this, arguments));\n  }\n\n  _createClass(InnerItemList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          stageId = _this$props4.stageId,\n          items = _this$props4.items,\n          options = _this$props4.options,\n          onRemoveItem = _this$props4.onRemoveItem;\n      return items.map(function (item, index) {\n        return React.createElement(DraggableContainerWithRouter, {\n          key: item._id,\n          stageId: stageId,\n          item: item,\n          index: index,\n          options: options,\n          onRemoveItem: onRemoveItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        });\n      });\n    }\n  }]);\n\n  return InnerItemList;\n}(React.PureComponent);\n\nvar InnerList =\n/*#__PURE__*/\nfunction (_React$PureComponent2) {\n  _inherits(InnerList, _React$PureComponent2);\n\n  function InnerList() {\n    _classCallCheck(this, InnerList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InnerList).apply(this, arguments));\n  }\n\n  _createClass(InnerList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          stageId = _this$props5.stageId,\n          items = _this$props5.items,\n          dropProvided = _this$props5.dropProvided,\n          options = _this$props5.options,\n          onRemoveItem = _this$props5.onRemoveItem;\n\n      if (items.length === 0) {\n        return React.createElement(EmptyContainer, {\n          innerRef: dropProvided.innerRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(EmptyState, {\n          icon: \"postcard\",\n          text: \"No item\",\n          size: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(DropZone, {\n        innerRef: dropProvided.innerRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(InnerItemList, {\n        onRemoveItem: onRemoveItem,\n        stageId: stageId,\n        items: items,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), dropProvided.placeholder);\n    }\n  }]);\n\n  return InnerList;\n}(React.PureComponent);\n\nvar ItemList =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(ItemList, _React$Component2);\n\n  function ItemList() {\n    _classCallCheck(this, ItemList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ItemList).apply(this, arguments));\n  }\n\n  _createClass(ItemList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          ignoreContainerClipping = _this$props6.ignoreContainerClipping,\n          listId = _this$props6.listId,\n          style = _this$props6.style,\n          stageId = _this$props6.stageId,\n          items = _this$props6.items,\n          options = _this$props6.options,\n          onRemoveItem = _this$props6.onRemoveItem;\n      return React.createElement(Droppable, {\n        droppableId: listId,\n        ignoreContainerClipping: ignoreContainerClipping,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, function (dropProvided, dropSnapshot) {\n        return React.createElement(Wrapper, Object.assign({\n          style: style,\n          isDraggingOver: dropSnapshot.isDraggingOver\n        }, dropProvided.droppableProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }), React.createElement(InnerList, {\n          onRemoveItem: onRemoveItem,\n          stageId: stageId,\n          items: items,\n          dropProvided: dropProvided,\n          options: options,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }), dropProvided.placeholder);\n      });\n    }\n  }]);\n\n  return ItemList;\n}(React.Component);\n\nItemList.defaultProps = {\n  listId: 'LIST'\n};\nexport { ItemList as default };","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/stage/ItemList.tsx"],"names":["client","gql","EmptyState","Icon","routerUtils","mutations","notificationMutations","React","Draggable","Droppable","withRouter","DropZone","EmptyContainer","ItemContainer","NotifiedContainer","Wrapper","Item","DraggableContainer","props","onClick","item","history","setState","isDragDisabled","setParams","itemId","_id","key","state","hasNotified","mutate","mutation","markAsRead","variables","contentTypeId","beforePopupClose","onRemoveItem","status","stageId","itemIdQueryParam","getParam","Boolean","index","options","dragProvided","dragSnapshot","isDragging","innerRef","draggableProps","dragHandleProps","renderHasNotified","Component","DraggableContainerWithRouter","InnerItemList","items","map","PureComponent","InnerList","dropProvided","length","placeholder","ItemList","ignoreContainerClipping","listId","style","dropSnapshot","isDraggingOver","droppableProps","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,SAAS,IAAIC,qBAAtB,QAAmD,+BAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,qBAArC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SACEC,QADF,EAEEC,cAFF,EAGEC,aAHF,EAIEC,iBAJF,EAKEC,OALF,QAMO,qBANP;AAQA,OAAOC,IAAP,MAAiB,QAAjB;;IAsBMC,kB;;;;;AAIJ,8BAAYC,KAAZ,EAA4C;AAAA;;AAAA;;AAC1C,4FAAMA,KAAN,GAD0C,CAG1C;;AAH0C,UAY5CC,OAZ4C,GAYlC,YAAM;AAAA,wBACY,MAAKD,KADjB;AAAA,UACNE,IADM,eACNA,IADM;AAAA,UACAC,OADA,eACAA,OADA;;AAGd,YAAKC,QAAL,CAAc;AAAEC,QAAAA,cAAc,EAAE;AAAlB,OAAd,EAAwC,YAAM;AAC5CnB,QAAAA,WAAW,CAACoB,SAAZ,CAAsBH,OAAtB,EAA+B;AAAEI,UAAAA,MAAM,EAAEL,IAAI,CAACM,GAAf;AAAoBC,UAAAA,GAAG,EAAE;AAAzB,SAA/B;AACD,OAFD;;AAIA,UAAI,CAAC,MAAKC,KAAL,CAAWC,WAAhB,EAA6B;AAC3B7B,QAAAA,MAAM,CAAC8B,MAAP,CAAc;AACZC,UAAAA,QAAQ,EAAE9B,GAAG,CAACK,qBAAqB,CAAC0B,UAAvB,CADD;AAEZC,UAAAA,SAAS,EAAE;AACTC,YAAAA,aAAa,EAAEd,IAAI,CAACM;AADX;AAFC,SAAd;AAMD;AACF,KA3B2C;;AAAA,UA6B5CS,gBA7B4C,GA6BzB,YAAM;AAAA,yBACQ,MAAKjB,KADb;AAAA,UACfE,IADe,gBACfA,IADe;AAAA,UACTgB,YADS,gBACTA,YADS;;AAGvB,UAAIhB,IAAI,CAACiB,MAAL,KAAgB,UAApB,EAAgC;AAC9BD,QAAAA,YAAY,CAAChB,IAAI,CAACM,GAAN,EAAWN,IAAI,CAACkB,OAAhB,CAAZ;AACD;;AAED,YAAKhB,QAAL,CAAc;AAAEC,QAAAA,cAAc,EAAE,KAAlB;AAAyBM,QAAAA,WAAW,EAAE;AAAtC,OAAd;AACD,KArC2C;;AAI1C,QAAMU,gBAAgB,GAAGnC,WAAW,CAACoC,QAAZ,CAAqBtB,KAAK,CAACG,OAA3B,EAAoC,QAApC,CAAzB;AAEA,UAAKO,KAAL,GAAa;AACXL,MAAAA,cAAc,EAAEkB,OAAO,CAACF,gBAAD,CADZ;AAEXV,MAAAA,WAAW,EAAEX,KAAK,CAACE,IAAN,CAAWS,WAAX,KAA2B,KAA3B,GAAmC,KAAnC,GAA2C;AAF7C,KAAb;AAN0C;AAU3C;;;;wCA6BmB;AAClB,UAAI,KAAKD,KAAL,CAAWC,WAAf,EAA4B;AAC1B,eAAO,IAAP;AACD;;AAED,aACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,IAAI,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;6BAEQ;AAAA;;AAAA,yBACmC,KAAKX,KADxC;AAAA,UACCoB,OADD,gBACCA,OADD;AAAA,UACUlB,IADV,gBACUA,IADV;AAAA,UACgBsB,KADhB,gBACgBA,KADhB;AAAA,UACuBC,OADvB,gBACuBA,OADvB;AAAA,UAECpB,cAFD,GAEoB,KAAKK,KAFzB,CAECL,cAFD;AAIP,aACE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAEH,IAAI,CAACM,GADZ;AAEE,QAAA,WAAW,EAAEN,IAAI,CAACM,GAFpB;AAGE,QAAA,KAAK,EAAEgB,KAHT;AAIE,QAAA,cAAc,EAAEnB,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG,UAACqB,YAAD,EAAeC,YAAf;AAAA,eACC,oBAAC,aAAD;AACE,UAAA,UAAU,EAAEA,YAAY,CAACC,UAD3B;AAEE,UAAA,QAAQ,EAAEF,YAAY,CAACG;AAFzB,WAGMH,YAAY,CAACI,cAHnB,EAIMJ,YAAY,CAACK,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMG,MAAI,CAACC,iBAAL,EANH,EAOE,oBAAC,IAAD;AACE,UAAA,GAAG,EAAE9B,IAAI,CAACM,GADZ;AAEE,UAAA,OAAO,EAAEY,OAFX;AAGE,UAAA,IAAI,EAAElB,IAHR;AAIE,UAAA,OAAO,EAAE,MAAI,CAACD,OAJhB;AAKE,UAAA,gBAAgB,EAAE,MAAI,CAACgB,gBALzB;AAME,UAAA,OAAO,EAAEQ,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CADD;AAAA,OANH,CADF;AA2BD;;;;EAtF8BpC,KAAK,CAAC4C,S;;AAyFvC,IAAMC,4BAA4B,GAAG1C,UAAU,CAC7CO,kBAD6C,CAA/C;;IAIMoC,a;;;;;;;;;;;;;6BAMK;AAAA,yBAC2C,KAAKnC,KADhD;AAAA,UACCoB,OADD,gBACCA,OADD;AAAA,UACUgB,KADV,gBACUA,KADV;AAAA,UACiBX,OADjB,gBACiBA,OADjB;AAAA,UAC0BP,YAD1B,gBAC0BA,YAD1B;AAGP,aAAOkB,KAAK,CAACC,GAAN,CAAU,UAACnC,IAAD,EAAOsB,KAAP;AAAA,eACf,oBAAC,4BAAD;AACE,UAAA,GAAG,EAAEtB,IAAI,CAACM,GADZ;AAEE,UAAA,OAAO,EAAEY,OAFX;AAGE,UAAA,IAAI,EAAElB,IAHR;AAIE,UAAA,KAAK,EAAEsB,KAJT;AAKE,UAAA,OAAO,EAAEC,OALX;AAME,UAAA,YAAY,EAAEP,YANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADe;AAAA,OAAV,CAAP;AAUD;;;;EAnByB7B,KAAK,CAACiD,a;;IA8B5BC,S;;;;;;;;;;;;;6BACK;AAAA,yBACyD,KAAKvC,KAD9D;AAAA,UACCoB,OADD,gBACCA,OADD;AAAA,UACUgB,KADV,gBACUA,KADV;AAAA,UACiBI,YADjB,gBACiBA,YADjB;AAAA,UAC+Bf,OAD/B,gBAC+BA,OAD/B;AAAA,UACwCP,YADxC,gBACwCA,YADxC;;AAGP,UAAIkB,KAAK,CAACK,MAAN,KAAiB,CAArB,EAAwB;AACtB,eACE,oBAAC,cAAD;AAAgB,UAAA,QAAQ,EAAED,YAAY,CAACX,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AAAY,UAAA,IAAI,EAAC,UAAjB;AAA4B,UAAA,IAAI,EAAC,SAAjC;AAA2C,UAAA,IAAI,EAAC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD;;AAED,aACE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEW,YAAY,CAACX,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,YAAY,EAAEX,YADhB;AAEE,QAAA,OAAO,EAAEE,OAFX;AAGE,QAAA,KAAK,EAAEgB,KAHT;AAIE,QAAA,OAAO,EAAEX,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOGe,YAAY,CAACE,WAPhB,CADF;AAWD;;;;EAvBqBrD,KAAK,CAACiD,a;;IA0BTK,Q;;;;;;;;;;;;;6BAKV;AAAA,yBASH,KAAK3C,KATF;AAAA,UAEL4C,uBAFK,gBAELA,uBAFK;AAAA,UAGLC,MAHK,gBAGLA,MAHK;AAAA,UAILC,KAJK,gBAILA,KAJK;AAAA,UAKL1B,OALK,gBAKLA,OALK;AAAA,UAMLgB,KANK,gBAMLA,KANK;AAAA,UAOLX,OAPK,gBAOLA,OAPK;AAAA,UAQLP,YARK,gBAQLA,YARK;AAWP,aACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAE2B,MADf;AAEE,QAAA,uBAAuB,EAAED,uBAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,UAACJ,YAAD,EAAeO,YAAf;AAAA,eACC,oBAAC,OAAD;AACE,UAAA,KAAK,EAAED,KADT;AAEE,UAAA,cAAc,EAAEC,YAAY,CAACC;AAF/B,WAGMR,YAAY,CAACS,cAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAKE,oBAAC,SAAD;AACE,UAAA,YAAY,EAAE/B,YADhB;AAEE,UAAA,OAAO,EAAEE,OAFX;AAGE,UAAA,KAAK,EAAEgB,KAHT;AAIE,UAAA,YAAY,EAAEI,YAJhB;AAKE,UAAA,OAAO,EAAEf,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,EAYGe,YAAY,CAACE,WAZhB,CADD;AAAA,OAJH,CADF;AAuBD;;;;EAvCmCrD,KAAK,CAAC4C,S;;AAAvBU,Q,CACZO,Y,GAAe;AACpBL,EAAAA,MAAM,EAAE;AADY,C;SADHF,Q","sourcesContent":["import client from 'apolloClient';\nimport gql from 'graphql-tag';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { IRouterProps } from 'modules/common/types';\nimport routerUtils from 'modules/common/utils/router';\nimport { mutations as notificationMutations } from 'modules/notifications/graphql';\nimport React from 'react';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { withRouter } from 'react-router-dom';\nimport {\n  DropZone,\n  EmptyContainer,\n  ItemContainer,\n  NotifiedContainer,\n  Wrapper\n} from '../../styles/common';\nimport { IItem, IOptions } from '../../types';\nimport Item from './Item';\n\ntype Props = {\n  listId: string;\n  stageId: string;\n  items: IItem[];\n  internalScroll?: boolean;\n  style?: any;\n  // may not be provided - and might be null\n  ignoreContainerClipping?: boolean;\n  options: IOptions;\n  onRemoveItem: (itemId: string, stageId: string) => void;\n};\n\ntype DraggableContainerProps = {\n  stageId: string;\n  item: IItem;\n  index: number;\n  options: IOptions;\n  onRemoveItem: (itemId: string, stageId: string) => void;\n} & IRouterProps;\n\nclass DraggableContainer extends React.Component<\n  DraggableContainerProps,\n  { isDragDisabled: boolean; hasNotified: boolean }\n> {\n  constructor(props: DraggableContainerProps) {\n    super(props);\n\n    // if popup shows, draggable will disable\n    const itemIdQueryParam = routerUtils.getParam(props.history, 'itemId');\n\n    this.state = {\n      isDragDisabled: Boolean(itemIdQueryParam),\n      hasNotified: props.item.hasNotified === false ? false : true\n    };\n  }\n\n  onClick = () => {\n    const { item, history } = this.props;\n\n    this.setState({ isDragDisabled: true }, () => {\n      routerUtils.setParams(history, { itemId: item._id, key: '' });\n    });\n\n    if (!this.state.hasNotified) {\n      client.mutate({\n        mutation: gql(notificationMutations.markAsRead),\n        variables: {\n          contentTypeId: item._id\n        }\n      });\n    }\n  };\n\n  beforePopupClose = () => {\n    const { item, onRemoveItem } = this.props;\n\n    if (item.status === 'archived') {\n      onRemoveItem(item._id, item.stageId);\n    }\n\n    this.setState({ isDragDisabled: false, hasNotified: true });\n  };\n\n  renderHasNotified() {\n    if (this.state.hasNotified) {\n      return null;\n    }\n\n    return (\n      <NotifiedContainer>\n        <Icon icon=\"bell\" size={14} />\n      </NotifiedContainer>\n    );\n  }\n\n  render() {\n    const { stageId, item, index, options } = this.props;\n    const { isDragDisabled } = this.state;\n\n    return (\n      <Draggable\n        key={item._id}\n        draggableId={item._id}\n        index={index}\n        isDragDisabled={isDragDisabled}\n      >\n        {(dragProvided, dragSnapshot) => (\n          <ItemContainer\n            isDragging={dragSnapshot.isDragging}\n            innerRef={dragProvided.innerRef}\n            {...dragProvided.draggableProps}\n            {...dragProvided.dragHandleProps}\n          >\n            {this.renderHasNotified()}\n            <Item\n              key={item._id}\n              stageId={stageId}\n              item={item}\n              onClick={this.onClick}\n              beforePopupClose={this.beforePopupClose}\n              options={options}\n            />\n          </ItemContainer>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst DraggableContainerWithRouter = withRouter<DraggableContainerProps>(\n  DraggableContainer\n);\n\nclass InnerItemList extends React.PureComponent<{\n  stageId: string;\n  items: IItem[];\n  options: IOptions;\n  onRemoveItem: (itemId: string, stageId: string) => void;\n}> {\n  render() {\n    const { stageId, items, options, onRemoveItem } = this.props;\n\n    return items.map((item, index: number) => (\n      <DraggableContainerWithRouter\n        key={item._id}\n        stageId={stageId}\n        item={item}\n        index={index}\n        options={options}\n        onRemoveItem={onRemoveItem}\n      />\n    ));\n  }\n}\n\ntype InnerListProps = {\n  dropProvided;\n  stageId: string;\n  items: IItem[];\n  options: IOptions;\n  onRemoveItem: (itemId: string, stageId: string) => void;\n};\n\nclass InnerList extends React.PureComponent<InnerListProps> {\n  render() {\n    const { stageId, items, dropProvided, options, onRemoveItem } = this.props;\n\n    if (items.length === 0) {\n      return (\n        <EmptyContainer innerRef={dropProvided.innerRef}>\n          <EmptyState icon=\"postcard\" text=\"No item\" size=\"small\" />\n        </EmptyContainer>\n      );\n    }\n\n    return (\n      <DropZone innerRef={dropProvided.innerRef}>\n        <InnerItemList\n          onRemoveItem={onRemoveItem}\n          stageId={stageId}\n          items={items}\n          options={options}\n        />\n        {dropProvided.placeholder}\n      </DropZone>\n    );\n  }\n}\n\nexport default class ItemList extends React.Component<Props> {\n  static defaultProps = {\n    listId: 'LIST'\n  };\n\n  render() {\n    const {\n      ignoreContainerClipping,\n      listId,\n      style,\n      stageId,\n      items,\n      options,\n      onRemoveItem\n    } = this.props;\n\n    return (\n      <Droppable\n        droppableId={listId}\n        ignoreContainerClipping={ignoreContainerClipping}\n      >\n        {(dropProvided, dropSnapshot) => (\n          <Wrapper\n            style={style}\n            isDraggingOver={dropSnapshot.isDraggingOver}\n            {...dropProvided.droppableProps}\n          >\n            <InnerList\n              onRemoveItem={onRemoveItem}\n              stageId={stageId}\n              items={items}\n              dropProvided={dropProvided}\n              options={options}\n            />\n            {dropProvided.placeholder}\n          </Wrapper>\n        )}\n      </Droppable>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}