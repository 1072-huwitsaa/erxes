{"ast":null,"code":"import _toConsumableArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/filter/InboxFilter.tsx\";\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { __, router } from 'modules/common/utils';\nimport React from 'react';\nimport Select from 'react-select-plus';\nimport { FlexItem } from '../../styles';\nimport { formatDate } from '../../utils';\nimport { integrationOptions, selectOptions } from '../../utils';\nimport Filter from './Filter';\n\nvar InboxFilter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InboxFilter, _React$Component);\n\n  function InboxFilter(props) {\n    var _this;\n\n    _classCallCheck(this, InboxFilter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InboxFilter).call(this, props));\n\n    _this.onTypeChange = function (integrations) {\n      _this.setState({\n        integrationIds: integrations.map(function (el) {\n          return el.value;\n        })\n      });\n    };\n\n    _this.onBrandChange = function (brands) {\n      _this.setState({\n        brandIds: brands.map(function (el) {\n          return el.value;\n        })\n      });\n    };\n\n    _this.onApplyClick = function (_ref) {\n      var startDate = _ref.startDate,\n          endDate = _ref.endDate;\n      var history = _this.props.history;\n      var _this$state = _this.state,\n          integrationIds = _this$state.integrationIds,\n          brandIds = _this$state.brandIds;\n      router.setParams(history, {\n        integrationIds: (integrationIds || []).join(','),\n        brandIds: (brandIds || []).join(','),\n        startDate: formatDate(startDate),\n        endDate: formatDate(endDate)\n      });\n    };\n\n    var _ref2 = props.queryParams || {},\n        _ref2$brandIds = _ref2.brandIds,\n        _brandIds = _ref2$brandIds === void 0 ? '' : _ref2$brandIds,\n        _ref2$integrationIds = _ref2.integrationIds,\n        _integrationIds = _ref2$integrationIds === void 0 ? '' : _ref2$integrationIds;\n\n    _this.state = _objectSpread({}, props.queryParams, {\n      brandIds: _brandIds.split(','),\n      integrationIds: _integrationIds.split(',')\n    });\n    return _this;\n  }\n\n  _createClass(InboxFilter, [{\n    key: \"renderIntegrations\",\n    value: function renderIntegrations() {\n      var options = function options(option) {\n        return React.createElement(\"div\", {\n          className: \"simple-option\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, option.label));\n      };\n\n      return React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Integrations\"), React.createElement(Select, {\n        placeholder: __('Choose integrations'),\n        value: this.state.integrationIds || [],\n        onChange: this.onTypeChange,\n        optionRenderer: options,\n        options: integrationOptions(),\n        multi: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderBrands\",\n    value: function renderBrands() {\n      var brands = this.props.brands;\n\n      var options = function options(option) {\n        return React.createElement(\"div\", {\n          className: \"simple-option\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, option.label));\n      };\n\n      return React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Brands\"), React.createElement(Select, {\n        placeholder: __('Choose brands'),\n        value: this.state.brandIds || [],\n        onChange: this.onBrandChange,\n        optionRenderer: options,\n        options: selectOptions(_toConsumableArray(brands)),\n        multi: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          queryParams = _this$props.queryParams,\n          history = _this$props.history;\n      var content = React.createElement(React.Fragment, null, this.renderIntegrations(), this.renderBrands());\n      return React.createElement(Filter, {\n        queryParams: queryParams,\n        history: history,\n        content: content,\n        onApplyClick: this.onApplyClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return InboxFilter;\n}(React.Component);\n\nexport default InboxFilter;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/filter/InboxFilter.tsx"],"names":["ControlLabel","__","router","React","Select","FlexItem","formatDate","integrationOptions","selectOptions","Filter","InboxFilter","props","onTypeChange","integrations","setState","integrationIds","map","el","value","onBrandChange","brands","brandIds","onApplyClick","startDate","endDate","history","state","setParams","join","queryParams","split","options","option","label","content","renderIntegrations","renderBrands","Component"],"mappings":"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","sourcesContent":["import ControlLabel from 'modules/common/components/form/Label';\nimport { ISelectedOption } from 'modules/common/types';\nimport { __, router } from 'modules/common/utils';\nimport { IBrand } from 'modules/settings/brands/types';\nimport React from 'react';\nimport Select from 'react-select-plus';\nimport { FlexItem } from '../../styles';\nimport { IQueryParams } from '../../types';\nimport { formatDate } from '../../utils';\nimport { integrationOptions, selectOptions } from '../../utils';\nimport Filter from './Filter';\n\ntype Props = {\n  brands: IBrand[];\n  queryParams: IQueryParams;\n  history: any;\n};\n\ntype States = {\n  integrationType: string;\n  integrationIds: string[];\n  brandIds: string[];\n};\n\nclass InboxFilter extends React.Component<Props, States> {\n  constructor(props) {\n    super(props);\n\n    const { brandIds = '', integrationIds = '' } = props.queryParams || {};\n\n    this.state = {\n      ...props.queryParams,\n      brandIds: brandIds.split(','),\n      integrationIds: integrationIds.split(',')\n    };\n  }\n\n  onTypeChange = (integrations: ISelectedOption[]) => {\n    this.setState({ integrationIds: integrations.map(el => el.value) });\n  };\n\n  onBrandChange = (brands: ISelectedOption[]) => {\n    this.setState({ brandIds: brands.map(el => el.value) });\n  };\n\n  onApplyClick = ({ startDate, endDate }) => {\n    const { history } = this.props;\n    const { integrationIds, brandIds } = this.state;\n\n    router.setParams(history, {\n      integrationIds: (integrationIds || []).join(','),\n      brandIds: (brandIds || []).join(','),\n      startDate: formatDate(startDate),\n      endDate: formatDate(endDate)\n    });\n  };\n\n  renderIntegrations() {\n    const options = option => (\n      <div className=\"simple-option\">\n        <span>{option.label}</span>\n      </div>\n    );\n\n    return (\n      <FlexItem>\n        <ControlLabel>Integrations</ControlLabel>\n        <Select\n          placeholder={__('Choose integrations')}\n          value={this.state.integrationIds || []}\n          onChange={this.onTypeChange}\n          optionRenderer={options}\n          options={integrationOptions()}\n          multi={true}\n        />\n      </FlexItem>\n    );\n  }\n\n  renderBrands() {\n    const { brands } = this.props;\n\n    const options = option => (\n      <div className=\"simple-option\">\n        <span>{option.label}</span>\n      </div>\n    );\n\n    return (\n      <FlexItem>\n        <ControlLabel>Brands</ControlLabel>\n\n        <Select\n          placeholder={__('Choose brands')}\n          value={this.state.brandIds || []}\n          onChange={this.onBrandChange}\n          optionRenderer={options}\n          options={selectOptions([...brands])}\n          multi={true}\n        />\n      </FlexItem>\n    );\n  }\n\n  render() {\n    const { queryParams, history } = this.props;\n\n    const content = (\n      <>\n        {this.renderIntegrations()}\n        {this.renderBrands()}\n      </>\n    );\n\n    return (\n      <Filter\n        queryParams={queryParams}\n        history={history}\n        content={content}\n        onApplyClick={this.onApplyClick}\n      />\n    );\n  }\n}\n\nexport default InboxFilter;\n"]},"metadata":{},"sourceType":"module"}