{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/webhook/Form.tsx\";\nimport Button from 'erxes-common-ui/lib/components/button';\nimport FormControl from 'modules/common/components/form/Control';\nimport Form from 'modules/common/components/form/Form';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { __ } from 'modules/common/utils';\nimport { MarkdownWrapper } from 'modules/settings/styles';\nimport React from 'react';\nimport SelectBrand from '../../containers/SelectBrand';\nimport SelectChannels from '../../containers/SelectChannels';\nvar examplePayload = \"{\\n    \\\"customerPrimaryEmail\\\": \\\"example@gmail.com\\\",\\n    \\\"customerPrimaryPhone\\\": 99999999,\\n    \\\"customerCode\\\": 99999,\\n    \\\"customerFirstName\\\": \\\"David\\\",\\n    \\\"customerLastName\\\": \\\"Anna\\\",\\n    \\\"content\\\": \\\"Content\\\"\\n    \\\"attachments\\\": [\\n      {\\n        \\\"url\\\": \\\"/images/example.png\\\",\\n        \\\"text\\\": \\\"Example\\\",\\n        \\\"size\\\": 1048576, // 1mb\\n        \\\"type\\\": \\\"image/png\\\"\\n      }\\n    ]\\n}\";\n\nvar Webhook =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Webhook, _React$Component);\n\n  function Webhook() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Webhook);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Webhook)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.generateDoc = function (values) {\n      return {\n        name: values.name,\n        brandId: values.brandId,\n        kind: 'webhook',\n        data: {\n          script: values.script\n        }\n      };\n    };\n\n    _this.renderContent = function (formProps) {\n      var _this$props = _this.props,\n          renderButton = _this$props.renderButton,\n          callback = _this$props.callback,\n          onChannelChange = _this$props.onChannelChange,\n          channelIds = _this$props.channelIds;\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted;\n      return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Name\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"name\",\n        required: true,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Script\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"script\",\n        componentClass: \"textarea\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Example payload\"), React.createElement(MarkdownWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, examplePayload))), React.createElement(SelectBrand, {\n        isRequired: true,\n        formProps: formProps,\n        description: __('Which specific Brand does this integration belong to?'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(SelectChannels, {\n        defaultValue: channelIds,\n        isRequired: true,\n        onChange: onChannelChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        type: \"button\",\n        onClick: callback,\n        icon: \"times-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Cancel\"), renderButton({\n        name: 'integration',\n        values: _this.generateDoc(values),\n        isSubmitted: isSubmitted,\n        callback: callback\n      })));\n    };\n\n    return _this;\n  }\n\n  _createClass(Webhook, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Webhook;\n}(React.Component);\n\nexport default Webhook;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/webhook/Form.tsx"],"names":["Button","FormControl","Form","FormGroup","ControlLabel","ModalFooter","__","MarkdownWrapper","React","SelectBrand","SelectChannels","examplePayload","Webhook","generateDoc","values","name","brandId","kind","data","script","renderContent","formProps","props","renderButton","callback","onChannelChange","channelIds","isSubmitted","Component"],"mappings":"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","sourcesContent":["import Button from 'erxes-common-ui/lib/components/button';\nimport FormControl from 'modules/common/components/form/Control';\nimport Form from 'modules/common/components/form/Form';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { IButtonMutateProps, IFormProps } from 'modules/common/types';\nimport { __ } from 'modules/common/utils';\nimport { MarkdownWrapper } from 'modules/settings/styles';\nimport React from 'react';\nimport SelectBrand from '../../containers/SelectBrand';\nimport SelectChannels from '../../containers/SelectChannels';\n\ntype Props = {\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  callback: () => void;\n  onChannelChange: () => void;\n  channelIds: string[];\n};\n\nconst examplePayload = `{\n    \"customerPrimaryEmail\": \"example@gmail.com\",\n    \"customerPrimaryPhone\": 99999999,\n    \"customerCode\": 99999,\n    \"customerFirstName\": \"David\",\n    \"customerLastName\": \"Anna\",\n    \"content\": \"Content\"\n    \"attachments\": [\n      {\n        \"url\": \"/images/example.png\",\n        \"text\": \"Example\",\n        \"size\": 1048576, // 1mb\n        \"type\": \"image/png\"\n      }\n    ]\n}`;\n\nclass Webhook extends React.Component<Props> {\n  generateDoc = (values: { name: string; script: string; brandId: string }) => {\n    return {\n      name: values.name,\n      brandId: values.brandId,\n      kind: 'webhook',\n      data: {\n        script: values.script\n      }\n    };\n  };\n\n  renderContent = (formProps: IFormProps) => {\n    const { renderButton, callback, onChannelChange, channelIds } = this.props;\n    const { values, isSubmitted } = formProps;\n\n    return (\n      <>\n        <FormGroup>\n          <ControlLabel required={true}>Name</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"name\"\n            required={true}\n            autoFocus={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Script</ControlLabel>\n          <FormControl {...formProps} name=\"script\" componentClass=\"textarea\" />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Example payload</ControlLabel>\n          <MarkdownWrapper>\n            <pre>{examplePayload}</pre>\n          </MarkdownWrapper>\n        </FormGroup>\n\n        <SelectBrand\n          isRequired={true}\n          formProps={formProps}\n          description={__(\n            'Which specific Brand does this integration belong to?'\n          )}\n        />\n\n        <SelectChannels\n          defaultValue={channelIds}\n          isRequired={true}\n          onChange={onChannelChange}\n        />\n\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            type=\"button\"\n            onClick={callback}\n            icon=\"times-circle\"\n            uppercase={false}\n          >\n            Cancel\n          </Button>\n          {renderButton({\n            name: 'integration',\n            values: this.generateDoc(values),\n            isSubmitted,\n            callback\n          })}\n        </ModalFooter>\n      </>\n    );\n  };\n\n  render() {\n    return <Form renderContent={this.renderContent} />;\n  }\n}\n\nexport default Webhook;\n"]},"metadata":{},"sourceType":"module"}