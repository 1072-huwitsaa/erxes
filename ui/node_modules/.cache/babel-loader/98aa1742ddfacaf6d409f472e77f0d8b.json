{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/productService/components/product/ProductForm.tsx\";\nimport Button from 'modules/common/components/Button';\nimport EditorCK from 'modules/common/components/EditorCK';\nimport FormControl from 'modules/common/components/form/Control';\nimport CommonForm from 'modules/common/components/form/Form';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport Uploader from 'modules/common/components/Uploader';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { extractAttachment } from 'modules/common/utils';\nimport { Row } from 'modules/settings/integrations/styles';\nimport React from 'react';\nimport { TYPES } from '../../constants';\nimport CategoryForm from '../../containers/productCategory/CategoryForm';\nimport { generateCategoryOptions } from '../../utils';\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderContent = function (formProps) {\n      var _this$props = _this.props,\n          renderButton = _this$props.renderButton,\n          closeModal = _this$props.closeModal,\n          product = _this$props.product,\n          productCategories = _this$props.productCategories;\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted;\n      var object = product || {};\n      var types = TYPES.ALL;\n\n      if (product) {\n        values._id = product._id;\n        values.attachment = product.attachment ? _objectSpread({}, product.attachment, {\n          __typename: undefined\n        }) : null;\n        values.description = product.description;\n      }\n\n      var trigger = React.createElement(Button, {\n        btnStyle: \"primary\",\n        uppercase: false,\n        icon: \"plus-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Add category\");\n\n      var onChangeAttachment = function onChangeAttachment(files) {\n        values.attachment = files.length ? files[0] : null;\n        object.attachment = values.attachment;\n      };\n\n      var onChangeDescription = function onChangeDescription(e) {\n        values.description = e.editor.getData();\n        object.description = values.description;\n      };\n\n      var attachments = object.attachment && extractAttachment([object.attachment]) || [];\n      return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Name\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"name\",\n        defaultValue: object.name,\n        autoFocus: true,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Type\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"type\",\n        componentClass: \"select\",\n        defaultValue: object.type,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), types.map(function (typeName, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: typeName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, typeName);\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Code\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Depending on your business type, you may type in a barcode or any other UPC (Universal Product Code). If you don't use UPC, type in any numeric value to differentiate your products.\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"code\",\n        defaultValue: object.code,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Category\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"categoryId\",\n        componentClass: \"select\",\n        defaultValue: object.categoryId,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), generateCategoryOptions(productCategories)), _this.renderFormTrigger(trigger))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Description\"), React.createElement(EditorCK, {\n        content: product ? product.description : '',\n        onChange: onChangeDescription,\n        height: 150,\n        name: \"product_description_\".concat(product ? product._id : ''),\n        toolbar: [{\n          name: 'basicstyles',\n          items: ['Bold', 'Italic', 'NumberedList', 'BulletedList', 'Link', 'Unlink', '-', 'Image', 'EmojiPanel']\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Unit price\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        type: \"number\",\n        name: \"unitPrice\",\n        defaultValue: object.unitPrice,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"SKU\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"sku\",\n        defaultValue: object.sku,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Image\"), React.createElement(Uploader, {\n        defaultFileList: attachments,\n        onChange: onChangeAttachment,\n        multiple: false,\n        single: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        onClick: closeModal,\n        icon: \"times-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Close\"), renderButton({\n        name: 'product and service',\n        values: values,\n        isSubmitted: isSubmitted,\n        callback: closeModal,\n        object: product\n      })));\n    };\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"renderFormTrigger\",\n    value: function renderFormTrigger(trigger) {\n      var _this2 = this;\n\n      var content = function content(props) {\n        return React.createElement(CategoryForm, Object.assign({}, props, {\n          categories: _this2.props.productCategories,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }));\n      };\n\n      return React.createElement(ModalTrigger, {\n        title: \"Add category\",\n        trigger: trigger,\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CommonForm, {\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nexport default Form;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/productService/components/product/ProductForm.tsx"],"names":["Button","EditorCK","FormControl","CommonForm","FormGroup","ControlLabel","ModalTrigger","Uploader","ModalFooter","extractAttachment","Row","React","TYPES","CategoryForm","generateCategoryOptions","Form","renderContent","formProps","props","renderButton","closeModal","product","productCategories","values","isSubmitted","object","types","ALL","_id","attachment","__typename","undefined","description","trigger","onChangeAttachment","files","length","onChangeDescription","e","editor","getData","attachments","name","type","map","typeName","index","code","categoryId","renderFormTrigger","items","unitPrice","sku","callback","content","Component"],"mappings":"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","sourcesContent":["import Button from 'modules/common/components/Button';\nimport EditorCK from 'modules/common/components/EditorCK';\nimport FormControl from 'modules/common/components/form/Control';\nimport CommonForm from 'modules/common/components/form/Form';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport Uploader from 'modules/common/components/Uploader';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport {\n  IAttachment,\n  IButtonMutateProps,\n  IFormProps\n} from 'modules/common/types';\nimport { extractAttachment } from 'modules/common/utils';\nimport { Row } from 'modules/settings/integrations/styles';\nimport React from 'react';\nimport { TYPES } from '../../constants';\nimport CategoryForm from '../../containers/productCategory/CategoryForm';\nimport { IProduct, IProductCategory } from '../../types';\nimport { generateCategoryOptions } from '../../utils';\n\ntype Props = {\n  product?: IProduct;\n  productCategories: IProductCategory[];\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  closeModal: () => void;\n};\n\nclass Form extends React.Component<Props> {\n  renderFormTrigger(trigger: React.ReactNode) {\n    const content = props => (\n      <CategoryForm {...props} categories={this.props.productCategories} />\n    );\n\n    return (\n      <ModalTrigger title=\"Add category\" trigger={trigger} content={content} />\n    );\n  }\n\n  renderContent = (formProps: IFormProps) => {\n    const { renderButton, closeModal, product, productCategories } = this.props;\n    const { values, isSubmitted } = formProps;\n    const object = product || ({} as IProduct);\n\n    const types = TYPES.ALL;\n\n    if (product) {\n      values._id = product._id;\n      values.attachment = product.attachment\n        ? { ...product.attachment, __typename: undefined }\n        : null;\n      values.description = product.description;\n    }\n\n    const trigger = (\n      <Button btnStyle=\"primary\" uppercase={false} icon=\"plus-circle\">\n        Add category\n      </Button>\n    );\n\n    const onChangeAttachment = (files: IAttachment[]) => {\n      values.attachment = files.length ? files[0] : null;\n      object.attachment = values.attachment;\n    };\n\n    const onChangeDescription = e => {\n      values.description = e.editor.getData();\n      object.description = values.description;\n    };\n\n    const attachments =\n      (object.attachment && extractAttachment([object.attachment])) || [];\n\n    return (\n      <>\n        <FormGroup>\n          <ControlLabel required={true}>Name</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"name\"\n            defaultValue={object.name}\n            autoFocus={true}\n            required={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel required={true}>Type</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"type\"\n            componentClass=\"select\"\n            defaultValue={object.type}\n            required={true}\n          >\n            {types.map((typeName, index) => (\n              <option key={index} value={typeName}>\n                {typeName}\n              </option>\n            ))}\n          </FormControl>\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel required={true}>Code</ControlLabel>\n          <p>\n            Depending on your business type, you may type in a barcode or any\n            other UPC (Universal Product Code). If you don't use UPC, type in\n            any numeric value to differentiate your products.\n          </p>\n          <FormControl\n            {...formProps}\n            name=\"code\"\n            defaultValue={object.code}\n            required={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel required={true}>Category</ControlLabel>\n          <Row>\n            <FormControl\n              {...formProps}\n              name=\"categoryId\"\n              componentClass=\"select\"\n              defaultValue={object.categoryId}\n              required={true}\n            >\n              {generateCategoryOptions(productCategories)}\n            </FormControl>\n\n            {this.renderFormTrigger(trigger)}\n          </Row>\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Description</ControlLabel>\n          <EditorCK\n            content={product ? product.description : ''}\n            onChange={onChangeDescription}\n            height={150}\n            name={`product_description_${product ? product._id : ''}`}\n            toolbar={[\n              {\n                name: 'basicstyles',\n                items: [\n                  'Bold',\n                  'Italic',\n                  'NumberedList',\n                  'BulletedList',\n                  'Link',\n                  'Unlink',\n                  '-',\n                  'Image',\n                  'EmojiPanel'\n                ]\n              }\n            ]}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel required={true}>Unit price</ControlLabel>\n          <FormControl\n            {...formProps}\n            type=\"number\"\n            name=\"unitPrice\"\n            defaultValue={object.unitPrice}\n            required={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>SKU</ControlLabel>\n          <FormControl {...formProps} name=\"sku\" defaultValue={object.sku} />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Image</ControlLabel>\n          <Uploader\n            defaultFileList={attachments}\n            onChange={onChangeAttachment}\n            multiple={false}\n            single={true}\n          />\n        </FormGroup>\n\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            onClick={closeModal}\n            icon=\"times-circle\"\n            uppercase={false}\n          >\n            Close\n          </Button>\n\n          {renderButton({\n            name: 'product and service',\n            values,\n            isSubmitted,\n            callback: closeModal,\n            object: product\n          })}\n        </ModalFooter>\n      </>\n    );\n  };\n\n  render() {\n    return <CommonForm renderContent={this.renderContent} />;\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}