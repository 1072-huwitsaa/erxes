{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/properties/components/PropertyGroupForm.tsx\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport Toggle from \"modules/common/components/Toggle\";\nimport { ModalFooter } from \"modules/common/styles/main\";\nimport React from \"react\";\n\nvar PropertyGroupForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PropertyGroupForm, _React$Component);\n\n  function PropertyGroupForm(props) {\n    var _this;\n\n    _classCallCheck(this, PropertyGroupForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PropertyGroupForm).call(this, props));\n\n    _this.generateDoc = function (values) {\n      var _this$props = _this.props,\n          group = _this$props.group,\n          type = _this$props.type;\n      var finalValues = values;\n\n      if (group) {\n        finalValues._id = group._id;\n      }\n\n      return _objectSpread({}, finalValues, {\n        contentType: type,\n        isVisible: _this.state.isVisible\n      });\n    };\n\n    _this.visibleHandler = function (e) {\n      var isVisible = e.target.checked;\n\n      _this.setState({\n        isVisible: isVisible\n      });\n    };\n\n    _this.renderContent = function (formProps) {\n      var _this$props2 = _this.props,\n          group = _this$props2.group,\n          closeModal = _this$props2.closeModal,\n          renderButton = _this$props2.renderButton;\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted;\n      var object = group || {};\n      return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Name\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"name\",\n        autoFocus: true,\n        required: true,\n        defaultValue: object.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Description\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"description\",\n        required: true,\n        defaultValue: object.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))), _this.renderFieldVisible(), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        onClick: closeModal,\n        icon: \"times-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Close\"), renderButton({\n        name: \"property group\",\n        values: _this.generateDoc(values),\n        isSubmitted: isSubmitted,\n        callback: closeModal,\n        object: group\n      })));\n    };\n\n    var _isVisible = true;\n\n    if (props.group) {\n      _isVisible = props.group.isVisible;\n    }\n\n    _this.state = {\n      isVisible: _isVisible\n    };\n    return _this;\n  }\n\n  _createClass(PropertyGroupForm, [{\n    key: \"renderFieldVisible\",\n    value: function renderFieldVisible() {\n      if (!this.props.group) {\n        return;\n      }\n\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Visible\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Toggle, {\n        checked: this.state.isVisible,\n        onChange: this.visibleHandler,\n        icons: {\n          checked: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, \"Yes\"),\n          unchecked: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, \"No\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return PropertyGroupForm;\n}(React.Component);\n\nexport default PropertyGroupForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/properties/components/PropertyGroupForm.tsx"],"names":["Button","FormControl","Form","FormGroup","ControlLabel","Toggle","ModalFooter","React","PropertyGroupForm","props","generateDoc","values","group","type","finalValues","_id","contentType","isVisible","state","visibleHandler","e","target","checked","setState","renderContent","formProps","closeModal","renderButton","isSubmitted","object","name","description","renderFieldVisible","callback","unchecked","Component"],"mappings":"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","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport Toggle from \"modules/common/components/Toggle\";\nimport { ModalFooter } from \"modules/common/styles/main\";\nimport { IButtonMutateProps, IFormProps } from \"modules/common/types\";\nimport React from \"react\";\nimport { IFieldGroup } from \"../types\";\n\ntype Props = {\n  group?: IFieldGroup;\n  type: string;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  closeModal: () => void;\n};\n\ntype State = {\n  isVisible: boolean;\n};\n\nclass PropertyGroupForm extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    let isVisible = true;\n\n    if (props.group) {\n      isVisible = props.group.isVisible;\n    }\n\n    this.state = {\n      isVisible,\n    };\n  }\n\n  generateDoc = (values: {\n    _id?: string;\n    name: string;\n    description: string;\n  }) => {\n    const { group, type } = this.props;\n    const finalValues = values;\n\n    if (group) {\n      finalValues._id = group._id;\n    }\n\n    return {\n      ...finalValues,\n      contentType: type,\n      isVisible: this.state.isVisible,\n    };\n  };\n\n  visibleHandler = (e) => {\n    const isVisible = e.target.checked;\n\n    this.setState({ isVisible });\n  };\n\n  renderFieldVisible() {\n    if (!this.props.group) {\n      return;\n    }\n\n    return (\n      <FormGroup>\n        <ControlLabel>Visible</ControlLabel>\n        <div>\n          <Toggle\n            checked={this.state.isVisible}\n            onChange={this.visibleHandler}\n            icons={{\n              checked: <span>Yes</span>,\n              unchecked: <span>No</span>,\n            }}\n          />\n        </div>\n      </FormGroup>\n    );\n  }\n\n  renderContent = (formProps: IFormProps) => {\n    const { group, closeModal, renderButton } = this.props;\n    const { values, isSubmitted } = formProps;\n\n    const object = group || ({} as IFieldGroup);\n\n    return (\n      <>\n        <FormGroup>\n          <ControlLabel required={true}>Name</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"name\"\n            autoFocus={true}\n            required={true}\n            defaultValue={object.name}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel required={true}>Description</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"description\"\n            required={true}\n            defaultValue={object.description}\n          />\n        </FormGroup>\n\n        {this.renderFieldVisible()}\n\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            onClick={closeModal}\n            icon=\"times-circle\"\n            uppercase={false}\n          >\n            Close\n          </Button>\n\n          {renderButton({\n            name: \"property group\",\n            values: this.generateDoc(values),\n            isSubmitted,\n            callback: closeModal,\n            object: group,\n          })}\n        </ModalFooter>\n      </>\n    );\n  };\n\n  render() {\n    return <Form renderContent={this.renderContent} />;\n  }\n}\n\nexport default PropertyGroupForm;\n"]},"metadata":{},"sourceType":"module"}