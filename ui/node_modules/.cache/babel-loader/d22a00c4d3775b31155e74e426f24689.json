{"ast":null,"code":"import _toConsumableArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/components/MessengerForm.tsx\";\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { FlexItem, FlexPad } from 'modules/common/components/step/styles';\nimport EditorCK from 'modules/common/containers/EditorCK';\nimport { __, Alert } from 'modules/common/utils';\nimport { MESSENGER_KINDS, SENT_AS_CHOICES } from 'modules/engage/constants';\nimport { MAIL_TOOLBARS_CONFIG } from 'modules/settings/integrations/constants';\nimport React from 'react';\nimport MessengerPreview from '../containers/MessengerPreview';\nimport Scheduler from './Scheduler';\n\nvar MessengerForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MessengerForm, _React$Component);\n\n  function MessengerForm(props) {\n    var _this;\n\n    _classCallCheck(this, MessengerForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessengerForm).call(this, props));\n\n    _this.changeContent = function (key, value) {\n      var messenger = _objectSpread({}, _this.state.messenger);\n\n      messenger[key] = value;\n\n      _this.setState({\n        messenger: messenger\n      });\n\n      _this.props.onChange('messenger', messenger);\n    };\n\n    _this.changeFromUserId = function (fromUserId) {\n      _this.setState({\n        fromUserId: fromUserId\n      });\n\n      _this.props.onChange('fromUserId', fromUserId);\n    };\n\n    _this.onEditorChange = function (e) {\n      _this.props.onChange('content', e.editor.getData());\n    };\n\n    _this.state = {\n      fromUserId: props.fromUserId,\n      messenger: props.messenger,\n      scheduleDate: props.scheduleDate\n    };\n    return _this;\n  }\n\n  _createClass(MessengerForm, [{\n    key: \"renderKind\",\n    value: function renderKind(hasKind) {\n      var _this2 = this;\n\n      if (!hasKind) {\n        return null;\n      }\n\n      var onChange = function onChange(e) {\n        return _this2.changeContent('kind', e.target.value);\n      };\n\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Message type:\"), React.createElement(FormControl, {\n        componentClass: \"select\",\n        onChange: onChange,\n        defaultValue: this.state.messenger.kind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), ' ', MESSENGER_KINDS.SELECT_OPTIONS.map(function (k) {\n        return React.createElement(\"option\", {\n          key: k.value,\n          value: k.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, k.text);\n      })));\n    }\n  }, {\n    key: \"renderScheduler\",\n    value: function renderScheduler() {\n      var _this$props = this.props,\n          messageKind = _this$props.messageKind,\n          onChange = _this$props.onChange;\n\n      if (messageKind === 'manual') {\n        return null;\n      }\n\n      return React.createElement(Scheduler, {\n        scheduleDate: this.state.scheduleDate || {},\n        onChange: onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var onChangeFrom = function onChangeFrom(e) {\n        return _this3.changeFromUserId(e.target.value);\n      };\n\n      var onChangeContent = function onChangeContent(e) {\n        Alert.warning('Please carefully select the brand, it will appear in the selected brand messenger.');\n\n        _this3.changeContent('brandId', e.target.value);\n      };\n\n      var onChangeSentAs = function onChangeSentAs(e) {\n        return _this3.changeContent('sentAs', e.target.value);\n      };\n\n      var _this$props2 = this.props,\n          messenger = _this$props2.messenger,\n          messageKind = _this$props2.messageKind;\n      return React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(FlexPad, {\n        overflow: \"auto\",\n        direction: \"column\",\n        count: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, __('Message:')), React.createElement(EditorCK, {\n        content: this.props.content,\n        onChange: this.onEditorChange,\n        toolbar: [{\n          name: 'insert',\n          items: ['strinsert']\n        }].concat(_toConsumableArray(MAIL_TOOLBARS_CONFIG)),\n        height: 300,\n        name: \"engage_\".concat(messageKind, \"_\").concat(messenger.brandId || 'create'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"From:\"), React.createElement(FormControl, {\n        componentClass: \"select\",\n        onChange: onChangeFrom,\n        value: this.state.fromUserId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), ' ', this.props.users.map(function (user) {\n        return React.createElement(\"option\", {\n          key: user._id,\n          value: user._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, user.details ? user.details.fullName : user.username);\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Brand:\"), React.createElement(FormControl, {\n        componentClass: \"select\",\n        onChange: onChangeContent,\n        defaultValue: this.state.messenger.brandId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), ' ', this.props.brands.map(function (b) {\n        return React.createElement(\"option\", {\n          key: b._id,\n          value: b._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, b.name);\n      }))), this.renderKind(this.props.hasKind), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, __('Sent as:')), React.createElement(FormControl, {\n        componentClass: \"select\",\n        onChange: onChangeSentAs,\n        defaultValue: this.state.messenger.sentAs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), ' ', SENT_AS_CHOICES.SELECT_OPTIONS.map(function (s) {\n        return React.createElement(\"option\", {\n          key: s.value,\n          value: s.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, __(s.text));\n      }))), this.renderScheduler()), React.createElement(FlexItem, {\n        overflow: \"auto\",\n        count: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(MessengerPreview, {\n        sentAs: this.state.messenger.sentAs,\n        content: this.props.content,\n        fromUserId: this.state.fromUserId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MessengerForm;\n}(React.Component);\n\nexport default MessengerForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/components/MessengerForm.tsx"],"names":["FormControl","FormGroup","ControlLabel","FlexItem","FlexPad","EditorCK","__","Alert","MESSENGER_KINDS","SENT_AS_CHOICES","MAIL_TOOLBARS_CONFIG","React","MessengerPreview","Scheduler","MessengerForm","props","changeContent","key","value","messenger","state","setState","onChange","changeFromUserId","fromUserId","onEditorChange","e","editor","getData","scheduleDate","hasKind","target","kind","SELECT_OPTIONS","map","k","text","messageKind","onChangeFrom","onChangeContent","warning","onChangeSentAs","content","name","items","brandId","users","user","_id","details","fullName","username","brands","b","renderKind","sentAs","s","renderScheduler","Component"],"mappings":"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","sourcesContent":["import { IUser } from 'modules/auth/types';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { FlexItem, FlexPad } from 'modules/common/components/step/styles';\nimport EditorCK from 'modules/common/containers/EditorCK';\nimport { __, Alert } from 'modules/common/utils';\nimport { MESSENGER_KINDS, SENT_AS_CHOICES } from 'modules/engage/constants';\nimport { MAIL_TOOLBARS_CONFIG } from 'modules/settings/integrations/constants';\nimport React from 'react';\nimport { IBrand } from '../../settings/brands/types';\nimport MessengerPreview from '../containers/MessengerPreview';\nimport { IEngageMessenger, IEngageScheduleDate } from '../types';\nimport Scheduler from './Scheduler';\n\ntype Props = {\n  brands: IBrand[];\n  onChange: (\n    name: 'messenger' | 'content' | 'scheduleDate' | 'fromUserId',\n    value?: IEngageMessenger | IEngageScheduleDate | string\n  ) => void;\n  users: IUser[];\n  hasKind: boolean;\n  messageKind: string;\n  messenger: IEngageMessenger;\n  fromUserId: string;\n  content: string;\n  scheduleDate: IEngageScheduleDate;\n};\n\ntype State = {\n  fromUserId: string;\n  messenger: IEngageMessenger;\n  scheduleDate: IEngageScheduleDate;\n};\n\nclass MessengerForm extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      fromUserId: props.fromUserId,\n      messenger: props.messenger,\n      scheduleDate: props.scheduleDate\n    };\n  }\n\n  changeContent = (key, value) => {\n    const messenger = {\n      ...this.state.messenger\n    };\n\n    messenger[key] = value;\n\n    this.setState({ messenger });\n\n    this.props.onChange('messenger', messenger);\n  };\n\n  changeFromUserId = fromUserId => {\n    this.setState({ fromUserId });\n    this.props.onChange('fromUserId', fromUserId);\n  };\n\n  renderKind(hasKind) {\n    if (!hasKind) {\n      return null;\n    }\n\n    const onChange = e =>\n      this.changeContent('kind', (e.target as HTMLInputElement).value);\n\n    return (\n      <FormGroup>\n        <ControlLabel>Message type:</ControlLabel>\n\n        <FormControl\n          componentClass=\"select\"\n          onChange={onChange}\n          defaultValue={this.state.messenger.kind}\n        >\n          <option />{' '}\n          {MESSENGER_KINDS.SELECT_OPTIONS.map(k => (\n            <option key={k.value} value={k.value}>\n              {k.text}\n            </option>\n          ))}\n        </FormControl>\n      </FormGroup>\n    );\n  }\n\n  renderScheduler() {\n    const { messageKind, onChange } = this.props;\n\n    if (messageKind === 'manual') {\n      return null;\n    }\n\n    return (\n      <Scheduler\n        scheduleDate={this.state.scheduleDate || ({} as IEngageScheduleDate)}\n        onChange={onChange}\n      />\n    );\n  }\n\n  onEditorChange = e => {\n    this.props.onChange('content', e.editor.getData());\n  };\n\n  render() {\n    const onChangeFrom = e =>\n      this.changeFromUserId((e.target as HTMLInputElement).value);\n\n    const onChangeContent = e => {\n      Alert.warning(\n        'Please carefully select the brand, it will appear in the selected brand messenger.'\n      );\n      this.changeContent('brandId', (e.target as HTMLInputElement).value);\n    };\n\n    const onChangeSentAs = e =>\n      this.changeContent('sentAs', (e.target as HTMLInputElement).value);\n\n    const { messenger, messageKind } = this.props;\n\n    return (\n      <FlexItem>\n        <FlexPad overflow=\"auto\" direction=\"column\" count=\"3\">\n          <FormGroup>\n            <ControlLabel>{__('Message:')}</ControlLabel>\n\n            <EditorCK\n              content={this.props.content}\n              onChange={this.onEditorChange}\n              toolbar={[\n                { name: 'insert', items: ['strinsert'] },\n                ...MAIL_TOOLBARS_CONFIG\n              ]}\n              height={300}\n              name={`engage_${messageKind}_${messenger.brandId || 'create'}`}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <ControlLabel>From:</ControlLabel>\n            <FormControl\n              componentClass=\"select\"\n              onChange={onChangeFrom}\n              value={this.state.fromUserId}\n            >\n              <option />{' '}\n              {this.props.users.map(user => (\n                <option key={user._id} value={user._id}>\n                  {user.details ? user.details.fullName : user.username}\n                </option>\n              ))}\n            </FormControl>\n          </FormGroup>\n\n          <FormGroup>\n            <ControlLabel>Brand:</ControlLabel>\n            <FormControl\n              componentClass=\"select\"\n              onChange={onChangeContent}\n              defaultValue={this.state.messenger.brandId}\n            >\n              <option />{' '}\n              {this.props.brands.map(b => (\n                <option key={b._id} value={b._id}>\n                  {b.name}\n                </option>\n              ))}\n            </FormControl>\n          </FormGroup>\n\n          {this.renderKind(this.props.hasKind)}\n\n          <FormGroup>\n            <ControlLabel>{__('Sent as:')}</ControlLabel>\n            <FormControl\n              componentClass=\"select\"\n              onChange={onChangeSentAs}\n              defaultValue={this.state.messenger.sentAs}\n            >\n              <option />{' '}\n              {SENT_AS_CHOICES.SELECT_OPTIONS.map(s => (\n                <option key={s.value} value={s.value}>\n                  {__(s.text)}\n                </option>\n              ))}\n            </FormControl>\n          </FormGroup>\n\n          {this.renderScheduler()}\n        </FlexPad>\n\n        <FlexItem overflow=\"auto\" count=\"2\">\n          <MessengerPreview\n            sentAs={this.state.messenger.sentAs}\n            content={this.props.content}\n            fromUserId={this.state.fromUserId}\n          />\n        </FlexItem>\n      </FlexItem>\n    );\n  }\n}\n\nexport default MessengerForm;\n"]},"metadata":{},"sourceType":"module"}