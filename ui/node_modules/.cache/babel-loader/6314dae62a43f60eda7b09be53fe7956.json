{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/forms/components/FieldForm.tsx\";\nimport Button from 'modules/common/components/Button';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { FlexItem } from 'modules/common/components/step/styles';\nimport Toggle from 'modules/common/components/Toggle';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { FlexRow, LeftSection, Preview, PreviewSection, ShowPreview } from '../styles';\nimport FieldPreview from './FieldPreview';\n\nvar FieldForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FieldForm, _React$Component);\n\n  function FieldForm(props) {\n    var _this;\n\n    _classCallCheck(this, FieldForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FieldForm).call(this, props));\n\n    _this.onFieldChange = function (name, value) {\n      _this.setFieldAttrChanges(name, value);\n    };\n\n    _this.onSubmit = function (e) {\n      e.persist();\n      var field = _this.state.field;\n      var onSubmit = _this.props.onSubmit;\n      onSubmit(field);\n    };\n\n    _this.state = {\n      field: props.field\n    };\n    return _this;\n  }\n\n  _createClass(FieldForm, [{\n    key: \"setFieldAttrChanges\",\n    value: function setFieldAttrChanges(attributeName, value) {\n      var field = this.state.field;\n      field[attributeName] = value;\n      this.setState({\n        field: field\n      });\n    }\n  }, {\n    key: \"renderValidation\",\n    value: function renderValidation() {\n      var _this2 = this;\n\n      var field = this.state.field;\n\n      if (field.type === 'file') {\n        return null;\n      }\n\n      var validation = function validation(e) {\n        return _this2.onFieldChange('validation', e.currentTarget.value);\n      };\n\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        htmlFor: \"validation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Validation:\"), React.createElement(FormControl, {\n        id: \"validation\",\n        componentClass: \"select\",\n        value: field.validation || '',\n        onChange: validation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, __('Email')), React.createElement(\"option\", {\n        value: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, __('Number')), React.createElement(\"option\", {\n        value: \"datetime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, __('Date Time')), React.createElement(\"option\", {\n        value: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, __('Date')), React.createElement(\"option\", {\n        value: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, __('Phone'))));\n    }\n  }, {\n    key: \"renderOptions\",\n    value: function renderOptions() {\n      var _this3 = this;\n\n      var field = this.state.field;\n\n      var onChange = function onChange(e) {\n        return _this3.onFieldChange('options', e.currentTarget.value.split('\\n'));\n      };\n\n      if (!['select', 'check', 'radio'].includes(field.type)) {\n        return null;\n      }\n\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        htmlFor: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Options:\"), React.createElement(FormControl, {\n        id: \"options\",\n        componentClass: \"textarea\",\n        value: (field.options || []).join('\\n'),\n        onChange: onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderExtraButton\",\n    value: function renderExtraButton() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          mode = _this$props.mode,\n          field = _this$props.field;\n\n      if (mode === 'create') {\n        return null;\n      }\n\n      var onDelete = function onDelete(e) {\n        e.preventDefault();\n\n        _this4.props.onDelete(field);\n      };\n\n      return React.createElement(Button, {\n        size: \"small\",\n        btnStyle: \"danger\",\n        onClick: onDelete,\n        icon: \"cancel-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Delete\");\n    }\n  }, {\n    key: \"renderLeftContent\",\n    value: function renderLeftContent() {\n      var _this5 = this;\n\n      var _this$props2 = this.props,\n          mode = _this$props2.mode,\n          onCancel = _this$props2.onCancel;\n      var field = this.state.field;\n\n      var text = function text(e) {\n        return _this5.onFieldChange('text', e.currentTarget.value);\n      };\n\n      var desc = function desc(e) {\n        return _this5.onFieldChange('description', e.currentTarget.value);\n      };\n\n      var toggle = function toggle(e) {\n        return _this5.onFieldChange('isRequired', e.currentTarget.checked);\n      };\n\n      return React.createElement(React.Fragment, null, this.renderValidation(), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        htmlFor: \"text\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Field Label\"), React.createElement(FormControl, {\n        id: \"FieldLabel\",\n        type: \"text\",\n        value: field.text || '',\n        onChange: text,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Field description\"), React.createElement(FormControl, {\n        id: \"FieldDescription\",\n        componentClass: \"textarea\",\n        value: field.description || '',\n        onChange: desc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })), this.renderOptions(), React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, __('This field is required')), React.createElement(Toggle, {\n        defaultChecked: field.isRequired || false,\n        icons: {\n          checked: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          }, \"Yes\"),\n          unchecked: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }, \"No\")\n        },\n        onChange: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      })), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        uppercase: false,\n        type: \"button\",\n        icon: \"times-circle\",\n        onClick: onCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Cancel\"), this.renderExtraButton(), React.createElement(Button, {\n        uppercase: false,\n        onClick: this.onSubmit,\n        btnStyle: \"success\",\n        icon: mode === 'update' ? 'check-circle' : 'plus-circle',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, mode === 'update' ? 'Save' : 'Add')));\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var field = this.state.field;\n      return React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(LeftSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, this.renderLeftContent()), React.createElement(PreviewSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Preview, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(FieldPreview, {\n        field: field,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(ShowPreview, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), \" Field preview\"))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          mode = _this$props3.mode,\n          field = _this$props3.field,\n          onCancel = _this$props3.onCancel;\n      return React.createElement(Modal, {\n        show: true,\n        size: \"lg\",\n        onHide: onCancel,\n        animation: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, mode === 'create' ? 'Add' : 'Edit', \" \", field.type, \" field\")), React.createElement(Modal.Body, {\n        id: \"ModalBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, this.renderContent()));\n    }\n  }]);\n\n  return FieldForm;\n}(React.Component);\n\nexport default FieldForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/forms/components/FieldForm.tsx"],"names":["Button","FormControl","FormGroup","ControlLabel","Icon","FlexItem","Toggle","__","React","Modal","FlexRow","LeftSection","Preview","PreviewSection","ShowPreview","FieldPreview","FieldForm","props","onFieldChange","name","value","setFieldAttrChanges","onSubmit","e","persist","field","state","attributeName","setState","type","validation","currentTarget","onChange","split","includes","options","join","mode","onDelete","preventDefault","onCancel","text","desc","toggle","checked","renderValidation","description","renderOptions","isRequired","unchecked","renderExtraButton","renderLeftContent","renderContent","Component"],"mappings":"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","sourcesContent":["import Button from 'modules/common/components/Button';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { FlexItem } from 'modules/common/components/step/styles';\nimport Toggle from 'modules/common/components/Toggle';\nimport { __ } from 'modules/common/utils';\nimport { IField } from 'modules/settings/properties/types';\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport {\n  FlexRow,\n  LeftSection,\n  Preview,\n  PreviewSection,\n  ShowPreview\n} from '../styles';\nimport FieldPreview from './FieldPreview';\n\ntype Props = {\n  onSubmit: (field: IField) => void;\n  onDelete: (field: IField) => void;\n  onCancel: () => void;\n  mode: 'create' | 'update';\n  field: IField;\n};\n\ntype State = {\n  field: IField;\n};\n\nclass FieldForm extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      field: props.field\n    };\n  }\n\n  onFieldChange = (name: string, value: string | boolean | string[]) => {\n    this.setFieldAttrChanges(name, value);\n  };\n\n  onSubmit = e => {\n    e.persist();\n\n    const { field } = this.state;\n    const { onSubmit } = this.props;\n\n    onSubmit(field);\n  };\n\n  setFieldAttrChanges(\n    attributeName: string,\n    value: string | boolean | string[]\n  ) {\n    const { field } = this.state;\n\n    field[attributeName] = value;\n\n    this.setState({ field });\n  }\n\n  renderValidation() {\n    const { field } = this.state;\n\n    if (field.type === 'file') {\n      return null;\n    }\n\n    const validation = e =>\n      this.onFieldChange(\n        'validation',\n        (e.currentTarget as HTMLInputElement).value\n      );\n\n    return (\n      <FormGroup>\n        <ControlLabel htmlFor=\"validation\">Validation:</ControlLabel>\n\n        <FormControl\n          id=\"validation\"\n          componentClass=\"select\"\n          value={field.validation || ''}\n          onChange={validation}\n        >\n          <option />\n          <option value=\"email\">{__('Email')}</option>\n          <option value=\"number\">{__('Number')}</option>\n          <option value=\"datetime\">{__('Date Time')}</option>\n          <option value=\"date\">{__('Date')}</option>\n          <option value=\"phone\">{__('Phone')}</option>\n        </FormControl>\n      </FormGroup>\n    );\n  }\n\n  renderOptions() {\n    const { field } = this.state;\n\n    const onChange = e =>\n      this.onFieldChange(\n        'options',\n        (e.currentTarget as HTMLInputElement).value.split('\\n')\n      );\n\n    if (!['select', 'check', 'radio'].includes(field.type)) {\n      return null;\n    }\n\n    return (\n      <FormGroup>\n        <ControlLabel htmlFor=\"type\">Options:</ControlLabel>\n\n        <FormControl\n          id=\"options\"\n          componentClass=\"textarea\"\n          value={(field.options || []).join('\\n')}\n          onChange={onChange}\n        />\n      </FormGroup>\n    );\n  }\n\n  renderExtraButton() {\n    const { mode, field } = this.props;\n\n    if (mode === 'create') {\n      return null;\n    }\n\n    const onDelete = e => {\n      e.preventDefault();\n\n      this.props.onDelete(field);\n    };\n\n    return (\n      <Button size=\"small\" btnStyle=\"danger\" onClick={onDelete} icon=\"cancel-1\">\n        Delete\n      </Button>\n    );\n  }\n\n  renderLeftContent() {\n    const { mode, onCancel } = this.props;\n    const { field } = this.state;\n\n    const text = e =>\n      this.onFieldChange('text', (e.currentTarget as HTMLInputElement).value);\n\n    const desc = e =>\n      this.onFieldChange(\n        'description',\n        (e.currentTarget as HTMLInputElement).value\n      );\n\n    const toggle = e =>\n      this.onFieldChange(\n        'isRequired',\n        (e.currentTarget as HTMLInputElement).checked\n      );\n\n    return (\n      <>\n        {this.renderValidation()}\n\n        <FormGroup>\n          <ControlLabel htmlFor=\"text\" required={true}>\n            Field Label\n          </ControlLabel>\n\n          <FormControl\n            id=\"FieldLabel\"\n            type=\"text\"\n            value={field.text || ''}\n            onChange={text}\n            autoFocus={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel htmlFor=\"description\">Field description</ControlLabel>\n          <FormControl\n            id=\"FieldDescription\"\n            componentClass=\"textarea\"\n            value={field.description || ''}\n            onChange={desc}\n          />\n        </FormGroup>\n\n        {this.renderOptions()}\n\n        <FlexRow>\n          <label>{__('This field is required')}</label>\n          <Toggle\n            defaultChecked={field.isRequired || false}\n            icons={{\n              checked: <span>Yes</span>,\n              unchecked: <span>No</span>\n            }}\n            onChange={toggle}\n          />\n        </FlexRow>\n\n        <Modal.Footer>\n          <Button\n            btnStyle=\"simple\"\n            uppercase={false}\n            type=\"button\"\n            icon=\"times-circle\"\n            onClick={onCancel}\n          >\n            Cancel\n          </Button>\n\n          {this.renderExtraButton()}\n\n          <Button\n            uppercase={false}\n            onClick={this.onSubmit}\n            btnStyle=\"success\"\n            icon={mode === 'update' ? 'check-circle' : 'plus-circle'}\n          >\n            {mode === 'update' ? 'Save' : 'Add'}\n          </Button>\n        </Modal.Footer>\n      </>\n    );\n  }\n\n  renderContent() {\n    const { field } = this.state;\n\n    return (\n      <FlexItem>\n        <LeftSection>{this.renderLeftContent()}</LeftSection>\n\n        <PreviewSection>\n          <Preview>\n            <FieldPreview field={field} />\n\n            <ShowPreview>\n              <Icon icon=\"eye\" /> Field preview\n            </ShowPreview>\n          </Preview>\n        </PreviewSection>\n      </FlexItem>\n    );\n  }\n\n  render() {\n    const { mode, field, onCancel } = this.props;\n\n    return (\n      <Modal show={true} size=\"lg\" onHide={onCancel} animation={false}>\n        <Modal.Header closeButton={true}>\n          <Modal.Title>\n            {mode === 'create' ? 'Add' : 'Edit'} {field.type} field\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body id=\"ModalBody\">{this.renderContent()}</Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default FieldForm;\n"]},"metadata":{},"sourceType":"module"}