{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/growthHacks/containers/TemplateList.tsx\";\nimport client from 'apolloClient';\nimport gql from 'graphql-tag';\nimport { Alert } from 'modules/common/utils';\nimport { generatePaginationParams } from 'modules/common/utils/router';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { commonListComposer } from '../../utils';\nimport TemplateList from '../components/TemplateList';\nimport { mutations, queries } from '../graphql';\n\nvar TemplateListContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TemplateListContainer, _React$Component);\n\n  function TemplateListContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TemplateListContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TemplateListContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.duplicate = function (id) {\n      client.mutate({\n        mutation: gql(mutations.pipelineTemplatesDuplicate),\n        variables: {\n          _id: id\n        }\n      }).then(function () {\n        Alert.success('Successfully duplicated a template');\n\n        _this.props.refetch();\n      }).catch(function (e) {\n        Alert.error(e.message);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TemplateListContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TemplateList, Object.assign({}, this.props, {\n        duplicate: this.duplicate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TemplateListContainer;\n}(React.Component);\n\nexport default commonListComposer({\n  text: 'growth hack template',\n  label: 'pipelineTemplates',\n  stringEditMutation: mutations.pipelineTemplatesEdit,\n  stringAddMutation: mutations.pipelineTemplatesAdd,\n  gqlListQuery: graphql(gql(queries.pipelineTemplates), {\n    name: 'listQuery',\n    options: function options(_ref) {\n      var queryParams = _ref.queryParams;\n      return {\n        notifyOnNetworkStatusChange: true,\n        variables: _objectSpread({}, generatePaginationParams(queryParams), {\n          type: 'growthHack'\n        })\n      };\n    }\n  }),\n  gqlTotalCountQuery: graphql(gql(queries.totalCount), {\n    name: 'totalCountQuery'\n  }),\n  gqlAddMutation: graphql(gql(mutations.pipelineTemplatesAdd), {\n    name: 'addMutation'\n  }),\n  gqlEditMutation: graphql(gql(mutations.pipelineTemplatesEdit), {\n    name: 'editMutation'\n  }),\n  gqlRemoveMutation: graphql(gql(mutations.pipelineTemplatesRemove), {\n    name: 'removeMutation'\n  }),\n  ListComponent: TemplateListContainer\n});","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/growthHacks/containers/TemplateList.tsx"],"names":["client","gql","Alert","generatePaginationParams","React","graphql","commonListComposer","TemplateList","mutations","queries","TemplateListContainer","duplicate","id","mutate","mutation","pipelineTemplatesDuplicate","variables","_id","then","success","props","refetch","catch","e","error","message","Component","text","label","stringEditMutation","pipelineTemplatesEdit","stringAddMutation","pipelineTemplatesAdd","gqlListQuery","pipelineTemplates","name","options","queryParams","notifyOnNetworkStatusChange","type","gqlTotalCountQuery","totalCount","gqlAddMutation","gqlEditMutation","gqlRemoveMutation","pipelineTemplatesRemove","ListComponent"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,wBAAT,QAAyC,6BAAzC;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,kBAAT,QAAmC,aAAnC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,YAAnC;;IAeMC,qB;;;;;;;;;;;;;;;;;;UACJC,S,GAAY,UAACC,EAAD,EAAgB;AAC1BZ,MAAAA,MAAM,CACHa,MADH,CACU;AACNC,QAAAA,QAAQ,EAAEb,GAAG,CAACO,SAAS,CAACO,0BAAX,CADP;AAENC,QAAAA,SAAS,EAAE;AAAEC,UAAAA,GAAG,EAAEL;AAAP;AAFL,OADV,EAKGM,IALH,CAKQ,YAAM;AACVhB,QAAAA,KAAK,CAACiB,OAAN,CAAc,oCAAd;;AAEA,cAAKC,KAAL,CAAWC,OAAX;AACD,OATH,EAUGC,KAVH,CAUS,UAAAC,CAAC,EAAI;AACVrB,QAAAA,KAAK,CAACsB,KAAN,CAAYD,CAAC,CAACE,OAAd;AACD,OAZH;AAaD,K;;;;;;;6BAEQ;AACP,aAAO,oBAAC,YAAD,oBAAkB,KAAKL,KAAvB;AAA8B,QAAA,SAAS,EAAE,KAAKT,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAnBiCP,KAAK,CAACsB,S;;AAsB1C,eAAepB,kBAAkB,CAAQ;AACvCqB,EAAAA,IAAI,EAAE,sBADiC;AAEvCC,EAAAA,KAAK,EAAE,mBAFgC;AAGvCC,EAAAA,kBAAkB,EAAErB,SAAS,CAACsB,qBAHS;AAIvCC,EAAAA,iBAAiB,EAAEvB,SAAS,CAACwB,oBAJU;AAMvCC,EAAAA,YAAY,EAAE5B,OAAO,CAACJ,GAAG,CAACQ,OAAO,CAACyB,iBAAT,CAAJ,EAAiC;AACpDC,IAAAA,IAAI,EAAE,WAD8C;AAEpDC,IAAAA,OAAO,EAAE,uBAA2C;AAAA,UAAxCC,WAAwC,QAAxCA,WAAwC;AAClD,aAAO;AACLC,QAAAA,2BAA2B,EAAE,IADxB;AAELtB,QAAAA,SAAS,oBACJb,wBAAwB,CAACkC,WAAD,CADpB;AAEPE,UAAAA,IAAI,EAAE;AAFC;AAFJ,OAAP;AAOD;AAVmD,GAAjC,CANkB;AAmBvCC,EAAAA,kBAAkB,EAAEnC,OAAO,CAACJ,GAAG,CAACQ,OAAO,CAACgC,UAAT,CAAJ,EAA0B;AACnDN,IAAAA,IAAI,EAAE;AAD6C,GAA1B,CAnBY;AAuBvCO,EAAAA,cAAc,EAAErC,OAAO,CAACJ,GAAG,CAACO,SAAS,CAACwB,oBAAX,CAAJ,EAAsC;AAC3DG,IAAAA,IAAI,EAAE;AADqD,GAAtC,CAvBgB;AA2BvCQ,EAAAA,eAAe,EAAEtC,OAAO,CAACJ,GAAG,CAACO,SAAS,CAACsB,qBAAX,CAAJ,EAAuC;AAC7DK,IAAAA,IAAI,EAAE;AADuD,GAAvC,CA3Be;AA+BvCS,EAAAA,iBAAiB,EAAEvC,OAAO,CAACJ,GAAG,CAACO,SAAS,CAACqC,uBAAX,CAAJ,EAAyC;AACjEV,IAAAA,IAAI,EAAE;AAD2D,GAAzC,CA/Ba;AAmCvCW,EAAAA,aAAa,EAAEpC;AAnCwB,CAAR,CAAjC","sourcesContent":["import client from 'apolloClient';\nimport gql from 'graphql-tag';\nimport { IButtonMutateProps } from 'modules/common/types';\nimport { Alert } from 'modules/common/utils';\nimport { generatePaginationParams } from 'modules/common/utils/router';\nimport {\n  ICommonFormProps,\n  ICommonListProps\n} from 'modules/settings/common/types';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { commonListComposer } from '../../utils';\nimport TemplateList from '../components/TemplateList';\nimport { mutations, queries } from '../graphql';\nimport { IPipelineTemplate } from '../types';\n\nexport type PipelineTemplatesQueryResponse = {\n  pipelineTemplates: IPipelineTemplate[];\n  loading: boolean;\n  refetch: () => void;\n};\n\ntype Props = ICommonListProps &\n  ICommonFormProps & {\n    queryParams: any;\n    renderButton: (props: IButtonMutateProps) => JSX.Element;\n  };\n\nclass TemplateListContainer extends React.Component<Props> {\n  duplicate = (id: string) => {\n    client\n      .mutate({\n        mutation: gql(mutations.pipelineTemplatesDuplicate),\n        variables: { _id: id }\n      })\n      .then(() => {\n        Alert.success('Successfully duplicated a template');\n\n        this.props.refetch();\n      })\n      .catch(e => {\n        Alert.error(e.message);\n      });\n  };\n\n  render() {\n    return <TemplateList {...this.props} duplicate={this.duplicate} />;\n  }\n}\n\nexport default commonListComposer<Props>({\n  text: 'growth hack template',\n  label: 'pipelineTemplates',\n  stringEditMutation: mutations.pipelineTemplatesEdit,\n  stringAddMutation: mutations.pipelineTemplatesAdd,\n\n  gqlListQuery: graphql(gql(queries.pipelineTemplates), {\n    name: 'listQuery',\n    options: ({ queryParams }: { queryParams: any }) => {\n      return {\n        notifyOnNetworkStatusChange: true,\n        variables: {\n          ...generatePaginationParams(queryParams),\n          type: 'growthHack'\n        }\n      };\n    }\n  }),\n\n  gqlTotalCountQuery: graphql(gql(queries.totalCount), {\n    name: 'totalCountQuery'\n  }),\n\n  gqlAddMutation: graphql(gql(mutations.pipelineTemplatesAdd), {\n    name: 'addMutation'\n  }),\n\n  gqlEditMutation: graphql(gql(mutations.pipelineTemplatesEdit), {\n    name: 'editMutation'\n  }),\n\n  gqlRemoveMutation: graphql(gql(mutations.pipelineTemplatesRemove), {\n    name: 'removeMutation'\n  }),\n\n  ListComponent: TemplateListContainer\n});\n"]},"metadata":{},"sourceType":"module"}