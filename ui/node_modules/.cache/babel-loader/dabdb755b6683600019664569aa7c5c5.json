{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/productService/containers/product/ProductForm.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { withProps } from 'modules/common/utils';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport From from '../../components/product/ProductForm';\nimport { mutations, queries } from '../../graphql';\nimport ButtonMutate from 'modules/common/components/ButtonMutate';\n\nvar ProductFormContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProductFormContainer, _React$Component);\n\n  function ProductFormContainer() {\n    _classCallCheck(this, ProductFormContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProductFormContainer).apply(this, arguments));\n  }\n\n  _createClass(ProductFormContainer, [{\n    key: \"render\",\n    value: function render() {\n      var productCategoriesQuery = this.props.productCategoriesQuery;\n\n      if (productCategoriesQuery.loading) {\n        return null;\n      }\n\n      var renderButton = function renderButton(_ref) {\n        var name = _ref.name,\n            values = _ref.values,\n            isSubmitted = _ref.isSubmitted,\n            callback = _ref.callback,\n            object = _ref.object;\n        values.unitPrice = Number(values.unitPrice);\n        return React.createElement(ButtonMutate, {\n          mutation: object ? mutations.productEdit : mutations.productAdd,\n          variables: values,\n          callback: callback,\n          refetchQueries: getRefetchQueries(),\n          isSubmitted: isSubmitted,\n          type: \"submit\",\n          uppercase: false,\n          successMessage: \"You successfully \".concat(object ? 'updated' : 'added', \" a \").concat(name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      };\n\n      var productCategories = productCategoriesQuery.productCategories || [];\n\n      var updatedProps = _objectSpread({}, this.props, {\n        renderButton: renderButton,\n        productCategories: productCategories\n      });\n\n      return React.createElement(From, Object.assign({}, updatedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProductFormContainer;\n}(React.Component);\n\nvar getRefetchQueries = function getRefetchQueries() {\n  return ['productDetail', 'products', 'productsTotalCount'];\n};\n\nexport default withProps(compose(graphql(gql(queries.productCategories), {\n  name: 'productCategoriesQuery'\n}))(ProductFormContainer));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/productService/containers/product/ProductForm.tsx"],"names":["gql","compose","withProps","React","graphql","From","mutations","queries","ButtonMutate","ProductFormContainer","productCategoriesQuery","props","loading","renderButton","name","values","isSubmitted","callback","object","unitPrice","Number","productEdit","productAdd","getRefetchQueries","productCategories","updatedProps","Component"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAEA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,IAAP,MAAiB,sCAAjB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;AAEA,OAAOC,YAAP,MAAyB,wCAAzB;;IAYMC,oB;;;;;;;;;;;;;6BACK;AAAA,UACCC,sBADD,GAC4B,KAAKC,KADjC,CACCD,sBADD;;AAGP,UAAIA,sBAAsB,CAACE,OAA3B,EAAoC;AAClC,eAAO,IAAP;AACD;;AAED,UAAMC,YAAY,GAAG,SAAfA,YAAe,OAMK;AAAA,YALxBC,IAKwB,QALxBA,IAKwB;AAAA,YAJxBC,MAIwB,QAJxBA,MAIwB;AAAA,YAHxBC,WAGwB,QAHxBA,WAGwB;AAAA,YAFxBC,QAEwB,QAFxBA,QAEwB;AAAA,YADxBC,MACwB,QADxBA,MACwB;AACxBH,QAAAA,MAAM,CAACI,SAAP,GAAmBC,MAAM,CAACL,MAAM,CAACI,SAAR,CAAzB;AAEA,eACE,oBAAC,YAAD;AACE,UAAA,QAAQ,EAAED,MAAM,GAAGZ,SAAS,CAACe,WAAb,GAA2Bf,SAAS,CAACgB,UADvD;AAEE,UAAA,SAAS,EAAEP,MAFb;AAGE,UAAA,QAAQ,EAAEE,QAHZ;AAIE,UAAA,cAAc,EAAEM,iBAAiB,EAJnC;AAKE,UAAA,WAAW,EAAEP,WALf;AAME,UAAA,IAAI,EAAC,QANP;AAOE,UAAA,SAAS,EAAE,KAPb;AAQE,UAAA,cAAc,6BACZE,MAAM,GAAG,SAAH,GAAe,OADT,gBAERJ,IAFQ,CARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,OAvBD;;AAyBA,UAAMU,iBAAiB,GAAGd,sBAAsB,CAACc,iBAAvB,IAA4C,EAAtE;;AAEA,UAAMC,YAAY,qBACb,KAAKd,KADQ;AAEhBE,QAAAA,YAAY,EAAZA,YAFgB;AAGhBW,QAAAA,iBAAiB,EAAjBA;AAHgB,QAAlB;;AAMA,aAAO,oBAAC,IAAD,oBAAUC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EA1CgCtB,KAAK,CAACuB,S;;AA6CzC,IAAMH,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,SAAO,CAAC,eAAD,EAAkB,UAAlB,EAA8B,oBAA9B,CAAP;AACD,CAFD;;AAIA,eAAerB,SAAS,CACtBD,OAAO,CACLG,OAAO,CACLJ,GAAG,CAACO,OAAO,CAACiB,iBAAT,CADE,EAEL;AACEV,EAAAA,IAAI,EAAE;AADR,CAFK,CADF,CAAP,CAOEL,oBAPF,CADsB,CAAxB","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { IButtonMutateProps } from 'modules/common/types';\nimport { withProps } from 'modules/common/utils';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport From from '../../components/product/ProductForm';\nimport { mutations, queries } from '../../graphql';\n\nimport ButtonMutate from 'modules/common/components/ButtonMutate';\nimport { IProduct, ProductCategoriesQueryResponse } from '../../types';\n\ntype Props = {\n  product?: IProduct;\n  closeModal: () => void;\n};\n\ntype FinalProps = {\n  productCategoriesQuery: ProductCategoriesQueryResponse;\n} & Props;\n\nclass ProductFormContainer extends React.Component<FinalProps> {\n  render() {\n    const { productCategoriesQuery } = this.props;\n\n    if (productCategoriesQuery.loading) {\n      return null;\n    }\n\n    const renderButton = ({\n      name,\n      values,\n      isSubmitted,\n      callback,\n      object\n    }: IButtonMutateProps) => {\n      values.unitPrice = Number(values.unitPrice);\n\n      return (\n        <ButtonMutate\n          mutation={object ? mutations.productEdit : mutations.productAdd}\n          variables={values}\n          callback={callback}\n          refetchQueries={getRefetchQueries()}\n          isSubmitted={isSubmitted}\n          type=\"submit\"\n          uppercase={false}\n          successMessage={`You successfully ${\n            object ? 'updated' : 'added'\n          } a ${name}`}\n        />\n      );\n    };\n\n    const productCategories = productCategoriesQuery.productCategories || [];\n\n    const updatedProps = {\n      ...this.props,\n      renderButton,\n      productCategories\n    };\n\n    return <From {...updatedProps} />;\n  }\n}\n\nconst getRefetchQueries = () => {\n  return ['productDetail', 'products', 'productsTotalCount'];\n};\n\nexport default withProps<Props>(\n  compose(\n    graphql<Props, ProductCategoriesQueryResponse>(\n      gql(queries.productCategories),\n      {\n        name: 'productCategoriesQuery'\n      }\n    )\n  )(ProductFormContainer)\n);\n"]},"metadata":{},"sourceType":"module"}