{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/components/common/ActionSection.tsx\";\nimport Button from 'modules/common/components/Button';\nimport DropdownToggle from 'modules/common/components/DropdownToggle';\nimport { ControlLabel } from 'modules/common/components/form';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport Tip from 'modules/common/components/Tip';\nimport { __, Alert, confirm } from 'modules/common/utils';\nimport CompaniesMerge from 'modules/companies/components/detail/CompaniesMerge';\nimport CompanyForm from 'modules/companies/containers/CompanyForm';\nimport TargetMerge from 'modules/customers/components/common/TargetMerge';\nimport CustomersMerge from 'modules/customers/components/detail/CustomersMerge';\nimport CustomerForm from 'modules/customers/containers/CustomerForm';\nimport { Actions, MailBox, States } from 'modules/customers/styles';\nimport { Box } from 'modules/settings/growthHacks/styles';\nimport MailForm from 'modules/settings/integrations/containers/mail/MailForm';\nimport SmsForm from 'modules/settings/integrations/containers/telnyx/SmsForm';\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nvar ActionSection =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ActionSection, _React$Component);\n\n  function ActionSection(props) {\n    var _this;\n\n    _classCallCheck(this, ActionSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ActionSection).call(this, props));\n    _this.state = {\n      customerState: props.cocType === 'customer' ? props.coc.state : ''\n    };\n    return _this;\n  }\n\n  _createClass(ActionSection, [{\n    key: \"renderActions\",\n    value: function renderActions() {\n      var _this$props = this.props,\n          coc = _this$props.coc,\n          cocType = _this$props.cocType;\n      var primaryPhone = coc.primaryPhone,\n          primaryEmail = coc.primaryEmail;\n\n      var content = function content(props) {\n        return React.createElement(MailBox, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(MailForm, {\n          fromEmail: primaryEmail,\n          customerId: cocType === 'customer' ? coc._id : undefined,\n          refetchQueries: cocType === 'customer' ? ['activityLogsCustomer'] : ['activityLogsCompany'],\n          closeModal: props.closeModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }));\n      };\n\n      var smsForm = function smsForm(props) {\n        return React.createElement(SmsForm, Object.assign({}, props, {\n          primaryPhone: primaryPhone,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }));\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(ModalTrigger, {\n        dialogClassName: \"middle\",\n        title: \"Email\",\n        trigger: React.createElement(Button, {\n          disabled: primaryEmail ? false : true,\n          size: \"small\",\n          btnStyle: primaryEmail ? 'primary' : 'simple',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(Tip, {\n          text: \"Send e-mail\",\n          placement: \"top-end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"envelope\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }))),\n        size: \"lg\",\n        content: content,\n        paddingContent: \"less-padding\",\n        enforceFocus: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(ModalTrigger, {\n        dialogClassName: \"middle\",\n        title: \"Send SMS to (\".concat(primaryPhone, \")\"),\n        trigger: React.createElement(Button, {\n          disabled: primaryPhone ? false : true,\n          size: \"small\",\n          btnStyle: primaryPhone ? 'primary' : 'simple',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Tip, {\n          text: \"Send SMS\",\n          placement: \"top-end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }))),\n        content: smsForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Button, {\n        href: primaryPhone && \"tel:\".concat(primaryPhone),\n        size: \"small\",\n        btnStyle: primaryPhone ? 'primary' : 'simple',\n        disabled: primaryPhone ? false : true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Tip, {\n        text: \"Call\",\n        placement: \"top-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      var isSmall = this.props.isSmall;\n      return React.createElement(Button, {\n        size: \"small\",\n        btnStyle: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, isSmall ? React.createElement(Icon, {\n        icon: \"ellipsis-h\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }) : React.createElement(React.Fragment, null, __('Action'), \" \", React.createElement(Icon, {\n        icon: \"angle-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderEditButton\",\n    value: function renderEditButton() {\n      var _this$props2 = this.props,\n          cocType = _this$props2.cocType,\n          coc = _this$props2.coc;\n\n      var customerForm = function customerForm(props) {\n        return React.createElement(CustomerForm, Object.assign({}, props, {\n          size: \"lg\",\n          customer: coc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }));\n      };\n\n      var companyForm = function companyForm(props) {\n        return React.createElement(CompanyForm, Object.assign({}, props, {\n          size: \"lg\",\n          company: coc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }));\n      };\n\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(ModalTrigger, {\n        title: \"Edit basic info\",\n        trigger: React.createElement(\"a\", {\n          href: \"#edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, __('Edit')),\n        size: \"lg\",\n        content: cocType === 'company' ? companyForm : customerForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderBox\",\n    value: function renderBox(index, type, desc) {\n      var _this2 = this;\n\n      var changeState = this.props.changeState;\n\n      if (!changeState) {\n        return null;\n      }\n\n      var onClick = function onClick() {\n        _this2.setState({\n          customerState: type\n        });\n\n        changeState(type);\n      };\n\n      return React.createElement(Box, {\n        id: \"customerChangeStateBox\",\n        key: index,\n        selected: this.state.customerState === type,\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, type), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, __(desc)));\n    }\n  }, {\n    key: \"renderChangeStateForm\",\n    value: function renderChangeStateForm() {\n      var _this3 = this;\n\n      var options = [{\n        value: 'lead',\n        desc: __('A person who preparing to buy some service or product')\n      }, {\n        value: 'customer',\n        desc: __('A person who already bought some service or product')\n      }];\n\n      var modalContent = function modalContent() {\n        return React.createElement(React.Fragment, null, React.createElement(ControlLabel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, \"Change State\"), React.createElement(States, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, options.map(function (option, index) {\n          return _this3.renderBox(index, option.value, option.desc);\n        })));\n      };\n\n      return React.createElement(ModalTrigger, {\n        title: __('Change state'),\n        trigger: React.createElement(\"a\", {\n          href: \"#changeState\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, __('Change state')),\n        content: modalContent,\n        hideHeader: true,\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderDropdown\",\n    value: function renderDropdown() {\n      var _this$props3 = this.props,\n          remove = _this$props3.remove,\n          merge = _this$props3.merge,\n          cocType = _this$props3.cocType,\n          search = _this$props3.search,\n          coc = _this$props3.coc;\n\n      var onClick = function onClick() {\n        return confirm().then(function () {\n          return remove();\n        }).catch(function (error) {\n          Alert.error(error.message);\n        });\n      };\n\n      var generateOptions = function generateOptions(customers) {\n        return customers.map(function (cus, key) {\n          return {\n            key: key,\n            value: JSON.stringify(cus),\n            label: cus.firstName || cus.lastName || cus.primaryEmail || cus.primaryPhone || 'Unknown'\n          };\n        });\n      };\n\n      var targetMergeOptions = function targetMergeOptions(companies) {\n        return companies.map(function (c, key) {\n          return {\n            key: key,\n            value: JSON.stringify(c),\n            label: c.primaryName || c.website || 'Unknown'\n          };\n        });\n      };\n\n      return React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        as: DropdownToggle,\n        id: \"dropdown-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, this.renderButton()), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, this.renderEditButton(), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(TargetMerge, {\n        onSave: merge,\n        object: coc,\n        searchObject: search,\n        mergeForm: cocType === 'customer' ? CustomersMerge : CompaniesMerge,\n        generateOptions: cocType === 'customer' ? generateOptions : targetMergeOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#delete\",\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, __('Delete'))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, this.renderChangeStateForm())));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, this.renderActions(), this.renderDropdown());\n    }\n  }]);\n\n  return ActionSection;\n}(React.Component);\n\nexport default ActionSection;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/components/common/ActionSection.tsx"],"names":["Button","DropdownToggle","ControlLabel","Icon","ModalTrigger","Tip","__","Alert","confirm","CompaniesMerge","CompanyForm","TargetMerge","CustomersMerge","CustomerForm","Actions","MailBox","States","Box","MailForm","SmsForm","React","Dropdown","ActionSection","props","state","customerState","cocType","coc","primaryPhone","primaryEmail","content","_id","undefined","closeModal","smsForm","isSmall","customerForm","companyForm","index","type","desc","changeState","onClick","setState","options","value","modalContent","map","option","renderBox","remove","merge","search","then","catch","error","message","generateOptions","customers","cus","key","JSON","stringify","label","firstName","lastName","targetMergeOptions","companies","c","primaryName","website","renderButton","renderEditButton","renderChangeStateForm","renderActions","renderDropdown","Component"],"mappings":"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","sourcesContent":["import Button from 'modules/common/components/Button';\nimport DropdownToggle from 'modules/common/components/DropdownToggle';\nimport { ControlLabel } from 'modules/common/components/form';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport Tip from 'modules/common/components/Tip';\nimport { __, Alert, confirm } from 'modules/common/utils';\nimport CompaniesMerge from 'modules/companies/components/detail/CompaniesMerge';\nimport CompanyForm from 'modules/companies/containers/CompanyForm';\nimport { ICompany } from 'modules/companies/types';\nimport TargetMerge from 'modules/customers/components/common/TargetMerge';\nimport CustomersMerge from 'modules/customers/components/detail/CustomersMerge';\nimport CustomerForm from 'modules/customers/containers/CustomerForm';\nimport { Actions, MailBox, States } from 'modules/customers/styles';\nimport { ICustomer } from 'modules/customers/types';\nimport { Box } from 'modules/settings/growthHacks/styles';\nimport MailForm from 'modules/settings/integrations/containers/mail/MailForm';\nimport SmsForm from 'modules/settings/integrations/containers/telnyx/SmsForm';\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\ntype Props = {\n  coc: ICustomer | ICompany;\n  cocType: string;\n  remove: () => void;\n  merge: (doc: { ids: string[]; data: ICustomer | ICompany }) => void;\n  search: (value: string, callback: (objects: any[]) => void) => void;\n  changeState?: (value: string) => void;\n  isSmall?: boolean;\n};\nclass ActionSection extends React.Component<Props, { customerState: string }> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      customerState: props.cocType === 'customer' ? props.coc.state : ''\n    };\n  }\n\n  renderActions() {\n    const { coc, cocType } = this.props;\n    const { primaryPhone, primaryEmail } = coc;\n\n    const content = props => (\n      <MailBox>\n        <MailForm\n          fromEmail={primaryEmail}\n          customerId={cocType === 'customer' ? coc._id : undefined}\n          refetchQueries={\n            cocType === 'customer'\n              ? ['activityLogsCustomer']\n              : ['activityLogsCompany']\n          }\n          closeModal={props.closeModal}\n        />\n      </MailBox>\n    );\n\n    const smsForm = props => <SmsForm {...props} primaryPhone={primaryPhone} />;\n\n    return (\n      <>\n        <ModalTrigger\n          dialogClassName=\"middle\"\n          title=\"Email\"\n          trigger={\n            <Button\n              disabled={primaryEmail ? false : true}\n              size=\"small\"\n              btnStyle={primaryEmail ? 'primary' : 'simple'}\n            >\n              <Tip text=\"Send e-mail\" placement=\"top-end\">\n                <Icon icon=\"envelope\" />\n              </Tip>\n            </Button>\n          }\n          size=\"lg\"\n          content={content}\n          paddingContent=\"less-padding\"\n          enforceFocus={false}\n        />\n        <ModalTrigger\n          dialogClassName=\"middle\"\n          title={`Send SMS to (${primaryPhone})`}\n          trigger={\n            <Button\n              disabled={primaryPhone ? false : true}\n              size=\"small\"\n              btnStyle={primaryPhone ? 'primary' : 'simple'}\n            >\n              <Tip text=\"Send SMS\" placement=\"top-end\">\n                <Icon icon=\"message\" />\n              </Tip>\n            </Button>\n          }\n          content={smsForm}\n        />\n        <Button\n          href={primaryPhone && `tel:${primaryPhone}`}\n          size=\"small\"\n          btnStyle={primaryPhone ? 'primary' : 'simple'}\n          disabled={primaryPhone ? false : true}\n        >\n          <Tip text=\"Call\" placement=\"top-end\">\n            <Icon icon=\"phone\" />\n          </Tip>\n        </Button>\n      </>\n    );\n  }\n\n  renderButton() {\n    const { isSmall } = this.props;\n\n    return (\n      <Button size=\"small\" btnStyle=\"default\">\n        {isSmall ? (\n          <Icon icon=\"ellipsis-h\" />\n        ) : (\n          <>\n            {__('Action')} <Icon icon=\"angle-down\" />\n          </>\n        )}\n      </Button>\n    );\n  }\n\n  renderEditButton() {\n    const { cocType, coc } = this.props;\n\n    const customerForm = props => {\n      return <CustomerForm {...props} size=\"lg\" customer={coc} />;\n    };\n\n    const companyForm = props => {\n      return <CompanyForm {...props} size=\"lg\" company={coc} />;\n    };\n\n    return (\n      <li>\n        <ModalTrigger\n          title=\"Edit basic info\"\n          trigger={<a href=\"#edit\">{__('Edit')}</a>}\n          size=\"lg\"\n          content={cocType === 'company' ? companyForm : customerForm}\n        />\n      </li>\n    );\n  }\n\n  renderBox(index, type, desc) {\n    const { changeState } = this.props;\n\n    if (!changeState) {\n      return null;\n    }\n\n    const onClick = () => {\n      this.setState({ customerState: type });\n      changeState(type);\n    };\n\n    return (\n      <Box\n        id=\"customerChangeStateBox\"\n        key={index}\n        selected={this.state.customerState === type}\n        onClick={onClick}\n      >\n        <b>{type}</b>\n        <p>{__(desc)}</p>\n      </Box>\n    );\n  }\n\n  renderChangeStateForm() {\n    const options = [\n      {\n        value: 'lead',\n        desc: __('A person who preparing to buy some service or product')\n      },\n      {\n        value: 'customer',\n        desc: __('A person who already bought some service or product')\n      }\n    ];\n\n    const modalContent = () => {\n      return (\n        <>\n          <ControlLabel>Change State</ControlLabel>\n          <States>\n            {options.map((option, index) =>\n              this.renderBox(index, option.value, option.desc)\n            )}\n          </States>\n        </>\n      );\n    };\n\n    return (\n      <ModalTrigger\n        title={__('Change state')}\n        trigger={<a href=\"#changeState\">{__('Change state')}</a>}\n        content={modalContent}\n        hideHeader={true}\n        centered={true}\n      />\n    );\n  }\n\n  renderDropdown() {\n    const { remove, merge, cocType, search, coc } = this.props;\n\n    const onClick = () =>\n      confirm()\n        .then(() => remove())\n        .catch(error => {\n          Alert.error(error.message);\n        });\n\n    const generateOptions = customers => {\n      return customers.map((cus, key) => ({\n        key,\n        value: JSON.stringify(cus),\n        label:\n          cus.firstName ||\n          cus.lastName ||\n          cus.primaryEmail ||\n          cus.primaryPhone ||\n          'Unknown'\n      }));\n    };\n\n    const targetMergeOptions = companies => {\n      return companies.map((c, key) => ({\n        key,\n        value: JSON.stringify(c),\n        label: c.primaryName || c.website || 'Unknown'\n      }));\n    };\n\n    return (\n      <Dropdown>\n        <Dropdown.Toggle as={DropdownToggle} id=\"dropdown-action\">\n          {this.renderButton()}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {this.renderEditButton()}\n          <li>\n            <TargetMerge\n              onSave={merge}\n              object={coc}\n              searchObject={search}\n              mergeForm={\n                cocType === 'customer' ? CustomersMerge : CompaniesMerge\n              }\n              generateOptions={\n                cocType === 'customer' ? generateOptions : targetMergeOptions\n              }\n            />\n          </li>\n          <li>\n            <a href=\"#delete\" onClick={onClick}>\n              {__('Delete')}\n            </a>\n          </li>\n          <li>{this.renderChangeStateForm()}</li>\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n\n  render() {\n    return (\n      <Actions>\n        {this.renderActions()}\n        {this.renderDropdown()}\n      </Actions>\n    );\n  }\n}\n\nexport default ActionSection;\n"]},"metadata":{},"sourceType":"module"}