{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/PunchCard.tsx\";\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Tip from 'modules/common/components/Tip';\nimport React from 'react';\nimport { ChartWrapper, FlexRow, PunchCardWrapper, PunchCell, PunchCircle, PunchDates, PunchHours } from '../styles';\nvar paddinLeftSize = 120;\n\nvar PunchCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PunchCard, _React$Component);\n\n  function PunchCard(props) {\n    var _this;\n\n    _classCallCheck(this, PunchCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PunchCard).call(this, props));\n    _this.dates = void 0;\n    _this.dates = Array.from(new Set(props.data.map(function (data) {\n      return data.date;\n    }))).sort();\n    return _this;\n  }\n\n  _createClass(PunchCard, [{\n    key: \"renderCells\",\n    value: function renderCells(date) {\n      var _this$props = this.props,\n          data = _this$props.data,\n          width = _this$props.width;\n      var max = Math.max.apply(Math, data.map(function (o) {\n        return o.count;\n      }));\n      var cellHeight = Math.floor((width - paddinLeftSize) / 24);\n      var row = [];\n\n      var _loop = function _loop(i) {\n        var obj = data.find(function (o) {\n          return o.date === date && o.hour === i;\n        }) || {\n          count: 0\n        };\n        row.push(React.createElement(PunchCell, {\n          key: Math.random(),\n          height: cellHeight,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(Tip, {\n          text: obj.count,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(PunchCircle, {\n          radius: Math.floor(cellHeight * 0.9 * obj.count / max),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, obj.count))));\n      };\n\n      for (var i = 0; i < 24; i++) {\n        _loop(i);\n      }\n\n      return row;\n    }\n  }, {\n    key: \"renderRows\",\n    value: function renderRows() {\n      var html = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.dates[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var date = _step.value;\n          html.push(React.createElement(FlexRow, {\n            key: Math.random(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, this.renderCells(date)));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return html;\n    }\n  }, {\n    key: \"renderHours\",\n    value: function renderHours() {\n      var html = [];\n      var width = this.props.width;\n      var cellHeight = Math.floor((width - paddinLeftSize) / 24);\n\n      for (var i = 0; i < 24; i++) {\n        html.push(React.createElement(PunchCell, {\n          key: Math.random(),\n          height: cellHeight,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, i, \"h\"));\n      }\n\n      return React.createElement(PunchHours, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, html));\n    }\n  }, {\n    key: \"renderDates\",\n    value: function renderDates() {\n      var width = this.props.width;\n      var cellHeight = Math.floor((width - paddinLeftSize) / 24);\n      var html = [];\n      this.dates.forEach(function (date) {\n        html.push(React.createElement(PunchCell, {\n          key: Math.random(),\n          height: cellHeight,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, date));\n      });\n      return React.createElement(PunchDates, {\n        width: paddinLeftSize - 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, html);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.data.length === 0) {\n        return React.createElement(ChartWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(EmptyState, {\n          text: \"There is no data\",\n          size: \"full\",\n          icon: \"ban\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(ChartWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(PunchCardWrapper, {\n        paddingLeft: paddinLeftSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.renderDates(), this.renderRows(), this.renderHours()));\n    }\n  }]);\n\n  return PunchCard;\n}(React.Component);\n\nexport default PunchCard;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/PunchCard.tsx"],"names":["EmptyState","Tip","React","ChartWrapper","FlexRow","PunchCardWrapper","PunchCell","PunchCircle","PunchDates","PunchHours","paddinLeftSize","PunchCard","props","dates","Array","from","Set","data","map","date","sort","width","max","Math","apply","o","count","cellHeight","floor","row","i","obj","find","hour","push","random","html","renderCells","forEach","length","renderDates","renderRows","renderHours","Component"],"mappings":"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","sourcesContent":["import EmptyState from 'modules/common/components/EmptyState';\nimport Tip from 'modules/common/components/Tip';\nimport React from 'react';\nimport {\n  ChartWrapper,\n  FlexRow,\n  PunchCardWrapper,\n  PunchCell,\n  PunchCircle,\n  PunchDates,\n  PunchHours\n} from '../styles';\nimport { IPunchCardData } from '../types';\n\ntype Props = {\n  data: IPunchCardData[];\n  width: number;\n};\n\nconst paddinLeftSize = 120;\n\nclass PunchCard extends React.Component<Props> {\n  private dates: any[];\n\n  constructor(props) {\n    super(props);\n\n    this.dates = Array.from(new Set(props.data.map(data => data.date))).sort();\n  }\n\n  renderCells(date: string) {\n    const { data, width } = this.props;\n    const max = Math.max.apply(\n      Math,\n      data.map(o => o.count)\n    );\n\n    const cellHeight = Math.floor((width - paddinLeftSize) / 24);\n    const row: any = [];\n\n    for (let i = 0; i < 24; i++) {\n      const obj = (data.find(\n        o => o.date === date && o.hour === i\n      ) as IPunchCardData) || { count: 0 };\n\n      row.push(\n        <PunchCell key={Math.random()} height={cellHeight}>\n          <Tip text={obj.count}>\n            <PunchCircle\n              radius={Math.floor((cellHeight * 0.9 * obj.count) / max)}\n            >\n              {obj.count}\n            </PunchCircle>\n          </Tip>\n        </PunchCell>\n      );\n    }\n\n    return row;\n  }\n\n  renderRows() {\n    const html: any = [];\n\n    for (const date of this.dates) {\n      html.push(\n        <FlexRow key={Math.random()}>{this.renderCells(date)}</FlexRow>\n      );\n    }\n\n    return html;\n  }\n\n  renderHours() {\n    const html: any = [];\n    const { width } = this.props;\n    const cellHeight = Math.floor((width - paddinLeftSize) / 24);\n\n    for (let i = 0; i < 24; i++) {\n      html.push(\n        <PunchCell key={Math.random()} height={cellHeight}>\n          {i}h\n        </PunchCell>\n      );\n    }\n\n    return (\n      <PunchHours>\n        <FlexRow>{html}</FlexRow>\n      </PunchHours>\n    );\n  }\n\n  renderDates() {\n    const { width } = this.props;\n    const cellHeight = Math.floor((width - paddinLeftSize) / 24);\n\n    const html: any = [];\n\n    this.dates.forEach(date => {\n      html.push(\n        <PunchCell key={Math.random()} height={cellHeight}>\n          {date}\n        </PunchCell>\n      );\n    });\n\n    return <PunchDates width={paddinLeftSize - 10}>{html}</PunchDates>;\n  }\n\n  render() {\n    if (this.props.data.length === 0) {\n      return (\n        <ChartWrapper>\n          <EmptyState text=\"There is no data\" size=\"full\" icon=\"ban\" />\n        </ChartWrapper>\n      );\n    }\n\n    return (\n      <ChartWrapper>\n        <PunchCardWrapper paddingLeft={paddinLeftSize}>\n          {this.renderDates()}\n          {this.renderRows()}\n          {this.renderHours()}\n        </PunchCardWrapper>\n      </ChartWrapper>\n    );\n  }\n}\n\nexport default PunchCard;\n"]},"metadata":{},"sourceType":"module"}