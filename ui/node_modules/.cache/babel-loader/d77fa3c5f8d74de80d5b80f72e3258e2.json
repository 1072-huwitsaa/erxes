{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport gql from 'graphql-tag';\nimport { generatePaginationParams } from 'modules/common/utils/router';\nimport { graphql } from 'react-apollo';\nimport { commonListComposer } from '../../utils';\nimport List from '../components/List';\nimport { mutations, queries } from '../graphql';\nexport default commonListComposer({\n  text: 'response template',\n  label: 'responseTemplates',\n  stringEditMutation: mutations.responseTemplatesEdit,\n  stringAddMutation: mutations.responseTemplatesAdd,\n  gqlListQuery: graphql(gql(queries.responseTemplates), {\n    name: 'listQuery',\n    options: function options(_ref) {\n      var queryParams = _ref.queryParams;\n      return {\n        notifyOnNetworkStatusChange: true,\n        variables: _objectSpread({\n          searchValue: queryParams.searchValue,\n          brandId: queryParams.brandId\n        }, generatePaginationParams(queryParams))\n      };\n    }\n  }),\n  gqlTotalCountQuery: graphql(gql(queries.responseTemplatesTotalCount), {\n    name: 'totalCountQuery',\n    options: function options(_ref2) {\n      var queryParams = _ref2.queryParams;\n      return {\n        notifyOnNetworkStatusChange: true,\n        variables: {\n          searchValue: queryParams.searchValue,\n          brandId: queryParams.brandId\n        }\n      };\n    }\n  }),\n  gqlAddMutation: graphql(gql(mutations.responseTemplatesAdd), {\n    name: 'addMutation'\n  }),\n  gqlEditMutation: graphql(gql(mutations.responseTemplatesEdit), {\n    name: 'editMutation'\n  }),\n  gqlRemoveMutation: graphql(gql(mutations.responseTemplatesRemove), {\n    name: 'removeMutation'\n  }),\n  ListComponent: List\n});","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/responseTemplates/containers/List.tsx"],"names":["gql","generatePaginationParams","graphql","commonListComposer","List","mutations","queries","text","label","stringEditMutation","responseTemplatesEdit","stringAddMutation","responseTemplatesAdd","gqlListQuery","responseTemplates","name","options","queryParams","notifyOnNetworkStatusChange","variables","searchValue","brandId","gqlTotalCountQuery","responseTemplatesTotalCount","gqlAddMutation","gqlEditMutation","gqlRemoveMutation","responseTemplatesRemove","ListComponent"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,wBAAT,QAAyC,6BAAzC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,kBAAT,QAAmC,aAAnC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,YAAnC;AAMA,eAAeH,kBAAkB,CAAQ;AACvCI,EAAAA,IAAI,EAAE,mBADiC;AAEvCC,EAAAA,KAAK,EAAE,mBAFgC;AAGvCC,EAAAA,kBAAkB,EAAEJ,SAAS,CAACK,qBAHS;AAIvCC,EAAAA,iBAAiB,EAAEN,SAAS,CAACO,oBAJU;AAMvCC,EAAAA,YAAY,EAAEX,OAAO,CAACF,GAAG,CAACM,OAAO,CAACQ,iBAAT,CAAJ,EAAiC;AACpDC,IAAAA,IAAI,EAAE,WAD8C;AAEpDC,IAAAA,OAAO,EAAE,uBAA2C;AAAA,UAAxCC,WAAwC,QAAxCA,WAAwC;AAClD,aAAO;AACLC,QAAAA,2BAA2B,EAAE,IADxB;AAELC,QAAAA,SAAS;AACPC,UAAAA,WAAW,EAAEH,WAAW,CAACG,WADlB;AAEPC,UAAAA,OAAO,EAAEJ,WAAW,CAACI;AAFd,WAGJpB,wBAAwB,CAACgB,WAAD,CAHpB;AAFJ,OAAP;AAQD;AAXmD,GAAjC,CANkB;AAoBvCK,EAAAA,kBAAkB,EAAEpB,OAAO,CAACF,GAAG,CAACM,OAAO,CAACiB,2BAAT,CAAJ,EAA2C;AACpER,IAAAA,IAAI,EAAE,iBAD8D;AAEpEC,IAAAA,OAAO,EAAE,wBAA2C;AAAA,UAAxCC,WAAwC,SAAxCA,WAAwC;AAClD,aAAO;AACLC,QAAAA,2BAA2B,EAAE,IADxB;AAELC,QAAAA,SAAS,EAAE;AACTC,UAAAA,WAAW,EAAEH,WAAW,CAACG,WADhB;AAETC,UAAAA,OAAO,EAAEJ,WAAW,CAACI;AAFZ;AAFN,OAAP;AAOD;AAVmE,GAA3C,CApBY;AAiCvCG,EAAAA,cAAc,EAAEtB,OAAO,CAACF,GAAG,CAACK,SAAS,CAACO,oBAAX,CAAJ,EAAsC;AAC3DG,IAAAA,IAAI,EAAE;AADqD,GAAtC,CAjCgB;AAqCvCU,EAAAA,eAAe,EAAEvB,OAAO,CAACF,GAAG,CAACK,SAAS,CAACK,qBAAX,CAAJ,EAAuC;AAC7DK,IAAAA,IAAI,EAAE;AADuD,GAAvC,CArCe;AAyCvCW,EAAAA,iBAAiB,EAAExB,OAAO,CAACF,GAAG,CAACK,SAAS,CAACsB,uBAAX,CAAJ,EAAyC;AACjEZ,IAAAA,IAAI,EAAE;AAD2D,GAAzC,CAzCa;AA6CvCa,EAAAA,aAAa,EAAExB;AA7CwB,CAAR,CAAjC","sourcesContent":["import gql from 'graphql-tag';\nimport { generatePaginationParams } from 'modules/common/utils/router';\nimport { graphql } from 'react-apollo';\nimport { commonListComposer } from '../../utils';\nimport List from '../components/List';\nimport { mutations, queries } from '../graphql';\n\ntype Props = {\n  queryParams: any;\n};\n\nexport default commonListComposer<Props>({\n  text: 'response template',\n  label: 'responseTemplates',\n  stringEditMutation: mutations.responseTemplatesEdit,\n  stringAddMutation: mutations.responseTemplatesAdd,\n\n  gqlListQuery: graphql(gql(queries.responseTemplates), {\n    name: 'listQuery',\n    options: ({ queryParams }: { queryParams: any }) => {\n      return {\n        notifyOnNetworkStatusChange: true,\n        variables: {\n          searchValue: queryParams.searchValue,\n          brandId: queryParams.brandId,\n          ...generatePaginationParams(queryParams)\n        }\n      };\n    }\n  }),\n\n  gqlTotalCountQuery: graphql(gql(queries.responseTemplatesTotalCount), {\n    name: 'totalCountQuery',\n    options: ({ queryParams }: { queryParams: any }) => {\n      return {\n        notifyOnNetworkStatusChange: true,\n        variables: {\n          searchValue: queryParams.searchValue,\n          brandId: queryParams.brandId\n        }\n      };\n    }\n  }),\n\n  gqlAddMutation: graphql(gql(mutations.responseTemplatesAdd), {\n    name: 'addMutation'\n  }),\n\n  gqlEditMutation: graphql(gql(mutations.responseTemplatesEdit), {\n    name: 'editMutation'\n  }),\n\n  gqlRemoveMutation: graphql(gql(mutations.responseTemplatesRemove), {\n    name: 'removeMutation'\n  }),\n\n  ListComponent: List\n});\n"]},"metadata":{},"sourceType":"module"}