{"ast":null,"code":"import _toConsumableArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/common/ManageIntegrations.tsx\";\nimport { formatText } from 'modules/activityLogs/utils';\nimport Button from 'modules/common/components/Button';\nimport FormControl from 'modules/common/components/form/Control';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport IntegrationIcon from 'modules/common/components/IntegrationIcon';\nimport Tip from 'modules/common/components/Tip';\nimport { Column, Columns, Title } from 'modules/common/styles/chooser';\nimport { CenterContent, ModalFooter } from 'modules/common/styles/main';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { BrandName, IntegrationName } from '../../styles';\n\nvar ManageIntegrations =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ManageIntegrations, _React$Component);\n\n  function ManageIntegrations(props) {\n    var _this;\n\n    _classCallCheck(this, ManageIntegrations);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ManageIntegrations).call(this, props));\n    _this.timer = void 0;\n\n    _this.save = function () {\n      var selectedIntegrations = _this.state.selectedIntegrations;\n      var ids = [];\n      selectedIntegrations.forEach(function (integration) {\n        ids.push(integration._id);\n      });\n\n      _this.props.save(ids);\n\n      if (_this.props.closeModal) {\n        _this.props.closeModal();\n      }\n    };\n\n    _this.search = function (e) {\n      if (_this.timer) {\n        clearTimeout(_this.timer);\n      }\n\n      var search = _this.props.search;\n      var value = e.target.value;\n      _this.timer = setTimeout(function () {\n        search(value);\n\n        _this.setState({\n          searchValue: value\n        });\n      }, 500);\n    };\n\n    _this.loadMore = function () {\n      _this.setState({\n        hasMore: false\n      });\n\n      _this.props.search(_this.state.searchValue, true);\n    };\n\n    _this.handleChange = function (type, integration) {\n      var selectedIntegrations = _this.state.selectedIntegrations;\n\n      if (type === 'plus-1') {\n        return _this.setState({\n          selectedIntegrations: [].concat(_toConsumableArray(selectedIntegrations), [integration])\n        });\n      }\n\n      return _this.setState({\n        selectedIntegrations: selectedIntegrations.filter(function (item) {\n          return item !== integration;\n        })\n      });\n    };\n\n    var current = props.current || {};\n    _this.state = {\n      selectedIntegrations: current.integrations || [],\n      hasMore: true,\n      searchValue: ''\n    };\n    return _this;\n  }\n\n  _createClass(ManageIntegrations, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      var allIntegrations = newProps.allIntegrations,\n          perPage = newProps.perPage;\n      this.setState({\n        hasMore: allIntegrations.length === perPage\n      });\n    }\n  }, {\n    key: \"renderRowContent\",\n    value: function renderRowContent(integration, icon) {\n      var _this2 = this;\n\n      var brand = integration.brand || {};\n      var renderConfirm = this.props.renderConfirm;\n\n      var onClick = function onClick() {\n        return _this2.handleChange(icon, integration);\n      };\n\n      var actionTrigger = React.createElement(\"li\", {\n        key: integration._id,\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(IntegrationName, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, integration.name, React.createElement(Tip, {\n        text: formatText(integration.kind),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(IntegrationIcon, {\n        integration: integration,\n        size: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })))), React.createElement(BrandName, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, brand.name), React.createElement(Icon, {\n        icon: icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }));\n\n      if (renderConfirm) {\n        var confirm = renderConfirm(integration, actionTrigger, icon, this.handleChange);\n\n        if (confirm !== undefined) {\n          return confirm;\n        }\n      }\n\n      return actionTrigger;\n    }\n  }, {\n    key: \"renderRow\",\n    value: function renderRow(integration, icon) {\n      var selectedIntegrations = this.state.selectedIntegrations;\n\n      if (icon === 'plus-1' && selectedIntegrations.some(function (e) {\n        return e._id === integration._id;\n      })) {\n        return null;\n      }\n\n      return this.renderRowContent(integration, icon);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          allIntegrations = _this$props.allIntegrations,\n          current = _this$props.current,\n          closeModal = _this$props.closeModal;\n      var selectedIntegrations = this.state.selectedIntegrations;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Columns, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        placeholder: __('Type to search'),\n        onChange: this.search,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, allIntegrations.map(function (integration) {\n        return _this3.renderRow(integration, 'plus-1');\n      }), this.state.hasMore && React.createElement(CenterContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        btnStyle: \"primary\",\n        onClick: this.loadMore,\n        icon: \"angle-double-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Load More\")))), React.createElement(Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Title, {\n        full: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, current.name, \"'s integration\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"(\", selectedIntegrations.length, \")\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, selectedIntegrations.map(function (integration) {\n        return _this3.renderRow(integration, 'times');\n      })))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        uppercase: false,\n        icon: \"times-circle\",\n        onClick: closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        btnStyle: \"success\",\n        uppercase: false,\n        icon: \"check-circle\",\n        onClick: this.save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Save\")));\n    }\n  }]);\n\n  return ManageIntegrations;\n}(React.Component);\n\nexport default ManageIntegrations;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/common/ManageIntegrations.tsx"],"names":["formatText","Button","FormControl","Icon","IntegrationIcon","Tip","Column","Columns","Title","CenterContent","ModalFooter","__","React","BrandName","IntegrationName","ManageIntegrations","props","timer","save","selectedIntegrations","state","ids","forEach","integration","push","_id","closeModal","search","e","clearTimeout","value","target","setTimeout","setState","searchValue","loadMore","hasMore","handleChange","type","filter","item","current","integrations","newProps","allIntegrations","perPage","length","icon","brand","renderConfirm","onClick","actionTrigger","name","kind","confirm","undefined","some","renderRowContent","map","renderRow","Component"],"mappings":"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","sourcesContent":["import { formatText } from 'modules/activityLogs/utils';\nimport Button from 'modules/common/components/Button';\nimport FormControl from 'modules/common/components/form/Control';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport IntegrationIcon from 'modules/common/components/IntegrationIcon';\nimport Tip from 'modules/common/components/Tip';\nimport { Column, Columns, Title } from 'modules/common/styles/chooser';\nimport { CenterContent, ModalFooter } from 'modules/common/styles/main';\nimport { __ } from 'modules/common/utils';\nimport { IBrandDoc } from 'modules/settings/brands/types';\nimport { IChannelDoc } from 'modules/settings/channels/types';\nimport React from 'react';\nimport { BrandName, IntegrationName } from '../../styles';\nimport { IIntegration } from '../../types';\n\ntype Props = {\n  current: IChannelDoc | IBrandDoc;\n  save: (ids: string[]) => void;\n  search: (searchValue: string, check?: boolean) => void;\n  allIntegrations: IIntegration[];\n  perPage: number;\n  closeModal?: () => void;\n  renderConfirm?: (\n    integration: IIntegration,\n    actionTrigger: React.ReactNode,\n    icon: any,\n    handleChange: (type: string, integration: IIntegration) => any\n  ) => void;\n};\n\ntype State = {\n  selectedIntegrations: IIntegration[];\n  hasMore: boolean;\n  searchValue: string;\n};\n\nclass ManageIntegrations extends React.Component<Props, State> {\n  private timer?: NodeJS.Timer;\n\n  constructor(props: Props) {\n    super(props);\n\n    const current = props.current || {};\n\n    this.state = {\n      selectedIntegrations: current.integrations || [],\n      hasMore: true,\n      searchValue: ''\n    };\n  }\n\n  save = () => {\n    const { selectedIntegrations } = this.state;\n    const ids: string[] = [];\n\n    selectedIntegrations.forEach(integration => {\n      ids.push(integration._id);\n    });\n\n    this.props.save(ids);\n\n    if (this.props.closeModal) {\n      this.props.closeModal();\n    }\n  };\n\n  componentWillReceiveProps(newProps) {\n    const { allIntegrations, perPage } = newProps;\n\n    this.setState({ hasMore: allIntegrations.length === perPage });\n  }\n\n  search = e => {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n\n    const { search } = this.props;\n    const value = e.target.value;\n\n    this.timer = setTimeout(() => {\n      search(value);\n      this.setState({ searchValue: value });\n    }, 500);\n  };\n\n  loadMore = () => {\n    this.setState({ hasMore: false });\n    this.props.search(this.state.searchValue, true);\n  };\n\n  handleChange = (type, integration) => {\n    const { selectedIntegrations } = this.state;\n\n    if (type === 'plus-1') {\n      return this.setState({\n        selectedIntegrations: [...selectedIntegrations, integration]\n      });\n    }\n\n    return this.setState({\n      selectedIntegrations: selectedIntegrations.filter(\n        item => item !== integration\n      )\n    });\n  };\n\n  renderRowContent(integration, icon) {\n    const brand = integration.brand || {};\n    const { renderConfirm } = this.props;\n\n    const onClick = () => this.handleChange(icon, integration);\n\n    const actionTrigger = (\n      <li key={integration._id} onClick={onClick}>\n        <IntegrationName>\n          {integration.name}\n          <Tip text={formatText(integration.kind)}>\n            <div>\n              <IntegrationIcon integration={integration} size={18} />\n            </div>\n          </Tip>\n        </IntegrationName>\n        <BrandName>{brand.name}</BrandName>\n        <Icon icon={icon} />\n      </li>\n    );\n\n    if (renderConfirm) {\n      const confirm = renderConfirm(\n        integration,\n        actionTrigger,\n        icon,\n        this.handleChange\n      );\n\n      if (confirm !== undefined) {\n        return confirm;\n      }\n    }\n\n    return actionTrigger;\n  }\n\n  renderRow(integration, icon) {\n    const { selectedIntegrations } = this.state;\n\n    if (\n      icon === 'plus-1' &&\n      selectedIntegrations.some(e => e._id === integration._id)\n    ) {\n      return null;\n    }\n\n    return this.renderRowContent(integration, icon);\n  }\n\n  render() {\n    const { allIntegrations, current, closeModal } = this.props;\n    const { selectedIntegrations } = this.state;\n\n    return (\n      <div>\n        <Columns>\n          <Column>\n            <FormControl\n              placeholder={__('Type to search')}\n              onChange={this.search}\n              autoFocus={true}\n            />\n            <ul>\n              {allIntegrations.map(integration =>\n                this.renderRow(integration, 'plus-1')\n              )}\n              {this.state.hasMore && (\n                <CenterContent>\n                  <Button\n                    size=\"small\"\n                    btnStyle=\"primary\"\n                    onClick={this.loadMore}\n                    icon=\"angle-double-down\"\n                  >\n                    Load More\n                  </Button>\n                </CenterContent>\n              )}\n            </ul>\n          </Column>\n          <Column>\n            <Title full={true}>\n              {current.name}\n              &apos;s integration\n              <span>({selectedIntegrations.length})</span>\n            </Title>\n            <ul>\n              {selectedIntegrations.map(integration =>\n                this.renderRow(integration, 'times')\n              )}\n            </ul>\n          </Column>\n        </Columns>\n\n        <ModalFooter>\n          <Button btnStyle=\"simple\" uppercase={false} icon=\"times-circle\" onClick={closeModal}>\n            Cancel\n          </Button>\n          <Button btnStyle=\"success\" uppercase={false} icon=\"check-circle\" onClick={this.save}>\n            Save\n          </Button>\n        </ModalFooter>\n      </div>\n    );\n  }\n}\n\nexport default ManageIntegrations;\n"]},"metadata":{},"sourceType":"module"}