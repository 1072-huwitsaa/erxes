{"ast":null,"code":"import { conformityQueryFieldDefs, conformityQueryFields } from 'modules/conformity/graphql/queries';\nvar basicFields = \"\\n  _id\\n  firstName\\n  lastName\\n  avatar\\n  sex\\n  birthDate\\n  primaryEmail\\n  emails\\n  primaryPhone\\n  phones\\n\\n  state\\n  visitorContactInfo\\n\\n  modifiedAt\\n\\n  position\\n  department\\n  leadStatus\\n  hasAuthority\\n  description\\n  doNotDisturb\\n  code\\n  emailValidationStatus\\n  phoneValidationStatus\\n\\n  isOnline\\n  lastSeenAt\\n  sessionCount\\n\\n  links\\n  ownerId\\n  owner {\\n    _id\\n    details {\\n      fullName\\n    }\\n  }\\n\";\nvar customerFields = \"\\n  \".concat(basicFields, \"\\n  integrationId\\n  createdAt\\n  remoteAddress\\n  location\\n\\n  customFieldsData\\n  trackedData\\n\\n  tagIds\\n  getTags {\\n    _id\\n    name\\n    colorCode\\n  }\\n\");\nvar listParamsDef = \"\\n  $page: Int,\\n  $perPage: Int,\\n  $segment: String,\\n  $tag: String,\\n  $type: String,\\n  $ids: [String],\\n  $searchValue: String,\\n  $autoCompletionType: String,\\n  $autoCompletion: Boolean,\\n  $brand: String,\\n  $integration: String,\\n  $form: String,\\n  $startDate: String,\\n  $endDate: String,\\n  $leadStatus: String,\\n  $sortField: String,\\n  $sortDirection: Int,\\n  \".concat(conformityQueryFields, \"\\n\");\nvar listParamsValue = \"\\n  page: $page,\\n  perPage: $perPage,\\n  segment: $segment,\\n  tag: $tag,\\n  type: $type,\\n  ids: $ids,\\n  autoCompletionType: $autoCompletionType,\\n  autoCompletion: $autoCompletion,\\n  searchValue: $searchValue,\\n  brand: $brand,\\n  integration: $integration\\n  form: $form,\\n  startDate: $startDate,\\n  endDate: $endDate,\\n  leadStatus: $leadStatus,\\n  sortField: $sortField,\\n  sortDirection: $sortDirection,\\n  \".concat(conformityQueryFieldDefs, \"\\n\");\nvar customers = \"\\n  query customers(\".concat(listParamsDef, \") {\\n    customers(\").concat(listParamsValue, \") {\\n      \").concat(customerFields, \"\\n    }\\n  }\\n\");\nvar customersMain = \"\\n  query customersMain(\".concat(listParamsDef, \") {\\n    customersMain(\").concat(listParamsValue, \") {\\n      list {\\n        \").concat(customerFields, \"\\n      }\\n\\n      totalCount\\n    }\\n  }\\n\");\nvar customersExport = \"\\n  query customersExport(\".concat(listParamsDef, \") {\\n    customersExport(\").concat(listParamsValue, \")\\n  }\\n\");\nvar customerCounts = \"\\n  query customerCounts(\".concat(listParamsDef, \", $only: String) {\\n    customerCounts(\").concat(listParamsValue, \", only: $only)\\n  }\\n\");\nvar customerDetail = \"\\n  query customerDetail($_id: String!) {\\n    customerDetail(_id: $_id) {\\n      \".concat(customerFields, \"\\n      urlVisits\\n      integration {\\n        kind\\n        name\\n        isActive\\n      }\\n      companies {\\n        _id\\n        primaryName\\n        website\\n      }\\n      conversations {\\n        _id\\n        content\\n        createdAt\\n        assignedUser {\\n          _id\\n          details {\\n            avatar\\n          }\\n        }\\n        integration {\\n          _id\\n          kind\\n          brandId,\\n          brand {\\n            _id\\n            name\\n          }\\n          channels {\\n            _id\\n            name\\n          }\\n        }\\n        customer {\\n          _id\\n          firstName\\n          lastName\\n          primaryEmail\\n          primaryPhone\\n        }\\n        tags {\\n          _id\\n          name\\n          colorCode\\n        }\\n        readUserIds\\n      }\\n    }\\n  }\\n\");\nvar customersListConfig = \"\\n  query {\\n    fieldsDefaultColumnsConfig(contentType: \\\"customer\\\") {\\n      name\\n      label\\n      order\\n    }\\n  }\\n\";\nexport default {\n  basicFields: basicFields,\n  customers: customers,\n  customersMain: customersMain,\n  customerCounts: customerCounts,\n  customerDetail: customerDetail,\n  customersListConfig: customersListConfig,\n  customersExport: customersExport\n};","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/graphql/queries.ts"],"names":["conformityQueryFieldDefs","conformityQueryFields","basicFields","customerFields","listParamsDef","listParamsValue","customers","customersMain","customersExport","customerCounts","customerDetail","customersListConfig"],"mappings":"AAAA,SACEA,wBADF,EAEEC,qBAFF,QAGO,oCAHP;AAKA,IAAMC,WAAW,8bAAjB;AAyCA,IAAMC,cAAc,iBAChBD,WADgB,uKAApB;AAkBA,IAAME,aAAa,oYAkBfH,qBAlBe,OAAnB;AAqBA,IAAMI,eAAe,8aAkBjBL,wBAlBiB,OAArB;AAqBA,IAAMM,SAAS,iCACKF,aADL,gCAECC,eAFD,wBAGPF,cAHO,mBAAf;AAQA,IAAMI,aAAa,qCACKH,aADL,oCAECC,eAFD,wCAITF,cAJS,gDAAnB;AAYA,IAAMK,eAAe,uCACKJ,aADL,sCAECC,eAFD,aAArB;AAMA,IAAMI,cAAc,sCACKL,aADL,oDAECC,eAFD,0BAApB;AAMA,IAAMK,cAAc,+FAGZP,cAHY,i0BAApB;AAwDA,IAAMQ,mBAAmB,iIAAzB;AAUA,eAAe;AACbT,EAAAA,WAAW,EAAXA,WADa;AAEbI,EAAAA,SAAS,EAATA,SAFa;AAGbC,EAAAA,aAAa,EAAbA,aAHa;AAIbE,EAAAA,cAAc,EAAdA,cAJa;AAKbC,EAAAA,cAAc,EAAdA,cALa;AAMbC,EAAAA,mBAAmB,EAAnBA,mBANa;AAObH,EAAAA,eAAe,EAAfA;AAPa,CAAf","sourcesContent":["import {\n  conformityQueryFieldDefs,\n  conformityQueryFields\n} from 'modules/conformity/graphql/queries';\n\nconst basicFields = `\n  _id\n  firstName\n  lastName\n  avatar\n  sex\n  birthDate\n  primaryEmail\n  emails\n  primaryPhone\n  phones\n\n  state\n  visitorContactInfo\n\n  modifiedAt\n\n  position\n  department\n  leadStatus\n  hasAuthority\n  description\n  doNotDisturb\n  code\n  emailValidationStatus\n  phoneValidationStatus\n\n  isOnline\n  lastSeenAt\n  sessionCount\n\n  links\n  ownerId\n  owner {\n    _id\n    details {\n      fullName\n    }\n  }\n`;\n\nconst customerFields = `\n  ${basicFields}\n  integrationId\n  createdAt\n  remoteAddress\n  location\n\n  customFieldsData\n  trackedData\n\n  tagIds\n  getTags {\n    _id\n    name\n    colorCode\n  }\n`;\n\nconst listParamsDef = `\n  $page: Int,\n  $perPage: Int,\n  $segment: String,\n  $tag: String,\n  $type: String,\n  $ids: [String],\n  $searchValue: String,\n  $autoCompletionType: String,\n  $autoCompletion: Boolean,\n  $brand: String,\n  $integration: String,\n  $form: String,\n  $startDate: String,\n  $endDate: String,\n  $leadStatus: String,\n  $sortField: String,\n  $sortDirection: Int,\n  ${conformityQueryFields}\n`;\n\nconst listParamsValue = `\n  page: $page,\n  perPage: $perPage,\n  segment: $segment,\n  tag: $tag,\n  type: $type,\n  ids: $ids,\n  autoCompletionType: $autoCompletionType,\n  autoCompletion: $autoCompletion,\n  searchValue: $searchValue,\n  brand: $brand,\n  integration: $integration\n  form: $form,\n  startDate: $startDate,\n  endDate: $endDate,\n  leadStatus: $leadStatus,\n  sortField: $sortField,\n  sortDirection: $sortDirection,\n  ${conformityQueryFieldDefs}\n`;\n\nconst customers = `\n  query customers(${listParamsDef}) {\n    customers(${listParamsValue}) {\n      ${customerFields}\n    }\n  }\n`;\n\nconst customersMain = `\n  query customersMain(${listParamsDef}) {\n    customersMain(${listParamsValue}) {\n      list {\n        ${customerFields}\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst customersExport = `\n  query customersExport(${listParamsDef}) {\n    customersExport(${listParamsValue})\n  }\n`;\n\nconst customerCounts = `\n  query customerCounts(${listParamsDef}, $only: String) {\n    customerCounts(${listParamsValue}, only: $only)\n  }\n`;\n\nconst customerDetail = `\n  query customerDetail($_id: String!) {\n    customerDetail(_id: $_id) {\n      ${customerFields}\n      urlVisits\n      integration {\n        kind\n        name\n        isActive\n      }\n      companies {\n        _id\n        primaryName\n        website\n      }\n      conversations {\n        _id\n        content\n        createdAt\n        assignedUser {\n          _id\n          details {\n            avatar\n          }\n        }\n        integration {\n          _id\n          kind\n          brandId,\n          brand {\n            _id\n            name\n          }\n          channels {\n            _id\n            name\n          }\n        }\n        customer {\n          _id\n          firstName\n          lastName\n          primaryEmail\n          primaryPhone\n        }\n        tags {\n          _id\n          name\n          colorCode\n        }\n        readUserIds\n      }\n    }\n  }\n`;\n\nconst customersListConfig = `\n  query {\n    fieldsDefaultColumnsConfig(contentType: \"customer\") {\n      name\n      label\n      order\n    }\n  }\n`;\n\nexport default {\n  basicFields,\n  customers,\n  customersMain,\n  customerCounts,\n  customerDetail,\n  customersListConfig,\n  customersExport\n};\n"]},"metadata":{},"sourceType":"module"}