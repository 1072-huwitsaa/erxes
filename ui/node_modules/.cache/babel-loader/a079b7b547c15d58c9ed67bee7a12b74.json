{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/containers/mail/Form.tsx\";\nimport ButtonMutate from 'modules/common/components/ButtonMutate';\nimport { __ } from 'modules/common/utils';\nimport Form from 'modules/settings/integrations/components/mail/Form';\nimport { mutations } from 'modules/settings/integrations/graphql';\nimport * as React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { getRefetchQueries } from '../utils';\n\nvar FormContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormContainer, _React$Component);\n\n  function FormContainer(props) {\n    var _this;\n\n    _classCallCheck(this, FormContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormContainer).call(this, props));\n\n    _this.onAccountSelect = function (accountId) {\n      if (!accountId) {\n        return _this.setState({\n          accountId: ''\n        });\n      }\n\n      _this.setState({\n        accountId: accountId\n      });\n    };\n\n    _this.onRemoveAccount = function () {\n      _this.setState({\n        accountId: ''\n      });\n    };\n\n    _this.renderButton = function (_ref) {\n      var name = _ref.name,\n          values = _ref.values,\n          isSubmitted = _ref.isSubmitted,\n          callback = _ref.callback;\n      return React.createElement(ButtonMutate, {\n        mutation: mutations.integrationsCreateExternalIntegration,\n        variables: values,\n        callback: callback,\n        refetchQueries: getRefetchQueries(_this.props.kind),\n        isSubmitted: isSubmitted,\n        type: \"submit\",\n        uppercase: false,\n        successMessage: __(\"You successfully added a\") + \"\".concat(name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    };\n\n    _this.state = {\n      accountId: ''\n    };\n    return _this;\n  }\n\n  _createClass(FormContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          kind = _this$props.kind,\n          closeModal = _this$props.closeModal;\n      var accountId = this.state.accountId;\n      var updatedProps = {\n        kind: kind,\n        closeModal: closeModal,\n        accountId: accountId,\n        onAccountSelect: this.onAccountSelect,\n        onRemoveAccount: this.onRemoveAccount,\n        renderButton: this.renderButton\n      };\n      return React.createElement(Form, Object.assign({}, updatedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FormContainer;\n}(React.Component);\n\nexport default withRouter(FormContainer);","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/containers/mail/Form.tsx"],"names":["ButtonMutate","__","Form","mutations","React","withRouter","getRefetchQueries","FormContainer","props","onAccountSelect","accountId","setState","onRemoveAccount","renderButton","name","values","isSubmitted","callback","integrationsCreateExternalIntegration","kind","state","closeModal","updatedProps","Component"],"mappings":";;;;;;AAAA,OAAOA,YAAP,MAAyB,wCAAzB;AAEA,SAASC,EAAT,QAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oDAAjB;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,iBAAT,QAAkC,UAAlC;;IAcMC,a;;;;;AACJ,yBAAYC,KAAZ,EAA+B;AAAA;;AAAA;;AAC7B,uFAAMA,KAAN;;AAD6B,UAM/BC,eAN+B,GAMb,UAACC,SAAD,EAAwB;AACxC,UAAI,CAACA,SAAL,EAAgB;AACd,eAAO,MAAKC,QAAL,CAAc;AAAED,UAAAA,SAAS,EAAE;AAAb,SAAd,CAAP;AACD;;AAED,YAAKC,QAAL,CAAc;AAAED,QAAAA,SAAS,EAATA;AAAF,OAAd;AACD,KAZ8B;;AAAA,UAc/BE,eAd+B,GAcb,YAAM;AACtB,YAAKD,QAAL,CAAc;AAAED,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAhB8B;;AAAA,UAkB/BG,YAlB+B,GAkBhB,gBAKW;AAAA,UAJxBC,IAIwB,QAJxBA,IAIwB;AAAA,UAHxBC,MAGwB,QAHxBA,MAGwB;AAAA,UAFxBC,WAEwB,QAFxBA,WAEwB;AAAA,UADxBC,QACwB,QADxBA,QACwB;AACxB,aACE,oBAAC,YAAD;AACE,QAAA,QAAQ,EAAEd,SAAS,CAACe,qCADtB;AAEE,QAAA,SAAS,EAAEH,MAFb;AAGE,QAAA,QAAQ,EAAEE,QAHZ;AAIE,QAAA,cAAc,EAAEX,iBAAiB,CAAC,MAAKE,KAAL,CAAWW,IAAZ,CAJnC;AAKE,QAAA,WAAW,EAAEH,WALf;AAME,QAAA,IAAI,EAAC,QANP;AAOE,QAAA,SAAS,EAAE,KAPb;AAQE,QAAA,cAAc,EAAEf,EAAE,4BAAF,aAAoCa,IAApC,CARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAYD,KApC8B;;AAG7B,UAAKM,KAAL,GAAa;AAAEV,MAAAA,SAAS,EAAE;AAAb,KAAb;AAH6B;AAI9B;;;;6BAkCQ;AAAA,wBACsB,KAAKF,KAD3B;AAAA,UACCW,IADD,eACCA,IADD;AAAA,UACOE,UADP,eACOA,UADP;AAAA,UAECX,SAFD,GAEe,KAAKU,KAFpB,CAECV,SAFD;AAIP,UAAMY,YAAY,GAAG;AACnBH,QAAAA,IAAI,EAAJA,IADmB;AAEnBE,QAAAA,UAAU,EAAVA,UAFmB;AAGnBX,QAAAA,SAAS,EAATA,SAHmB;AAInBD,QAAAA,eAAe,EAAE,KAAKA,eAJH;AAKnBG,QAAAA,eAAe,EAAE,KAAKA,eALH;AAMnBC,QAAAA,YAAY,EAAE,KAAKA;AANA,OAArB;AASA,aAAO,oBAAC,IAAD,oBAAUS,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EArDyBlB,KAAK,CAACmB,S;;AAwDlC,eAAelB,UAAU,CAAaE,aAAb,CAAzB","sourcesContent":["import ButtonMutate from 'modules/common/components/ButtonMutate';\nimport { IButtonMutateProps, IRouterProps } from 'modules/common/types';\nimport { __ } from 'modules/common/utils';\nimport Form from 'modules/settings/integrations/components/mail/Form';\nimport { mutations } from 'modules/settings/integrations/graphql';\nimport * as React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { IntegrationTypes } from '../../types';\nimport { getRefetchQueries } from '../utils';\n\ntype Props = {\n  type?: string;\n  kind: IntegrationTypes;\n  closeModal: () => void;\n};\n\ntype FinalProps = {} & IRouterProps & Props;\n\ntype State = {\n  accountId: string;\n};\n\nclass FormContainer extends React.Component<FinalProps, State> {\n  constructor(props: FinalProps) {\n    super(props);\n\n    this.state = { accountId: '' };\n  }\n\n  onAccountSelect = (accountId?: string) => {\n    if (!accountId) {\n      return this.setState({ accountId: '' });\n    }\n\n    this.setState({ accountId });\n  };\n\n  onRemoveAccount = () => {\n    this.setState({ accountId: '' });\n  };\n\n  renderButton = ({\n    name,\n    values,\n    isSubmitted,\n    callback\n  }: IButtonMutateProps) => {\n    return (\n      <ButtonMutate\n        mutation={mutations.integrationsCreateExternalIntegration}\n        variables={values}\n        callback={callback}\n        refetchQueries={getRefetchQueries(this.props.kind)}\n        isSubmitted={isSubmitted}\n        type=\"submit\"\n        uppercase={false}\n        successMessage={__(`You successfully added a`) + `${name}`}\n      />\n    );\n  };\n\n  render() {\n    const { kind, closeModal } = this.props;\n    const { accountId } = this.state;\n\n    const updatedProps = {\n      kind,\n      closeModal,\n      accountId,\n      onAccountSelect: this.onAccountSelect,\n      onRemoveAccount: this.onRemoveAccount,\n      renderButton: this.renderButton\n    };\n\n    return <Form {...updatedProps} />;\n  }\n}\n\nexport default withRouter<FinalProps>(FormContainer);\n"]},"metadata":{},"sourceType":"module"}