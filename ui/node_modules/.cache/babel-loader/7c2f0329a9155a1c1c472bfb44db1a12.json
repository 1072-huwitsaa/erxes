{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/team/components/UserList.tsx\";\nimport { AppConsumer } from \"appContext\";\nimport ActionButtons from \"erxes-common-ui/lib/components/actionButtons\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport { FormControl } from \"modules/common/components/form\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport HeaderDescription from \"modules/common/components/HeaderDescription\";\nimport ModalTrigger from \"modules/common/components/ModalTrigger\";\nimport NameCard from \"modules/common/components/nameCard/NameCard\";\nimport Table from \"modules/common/components/table\";\nimport TextInfo from \"modules/common/components/TextInfo\";\nimport Tip from \"modules/common/components/Tip\";\nimport Toggle from \"modules/common/components/Toggle\";\nimport { router } from \"modules/common/utils\";\nimport { __ } from \"modules/common/utils\";\nimport { FlexItem, FlexRow } from \"modules/insights/styles\";\nimport SelectBrands from \"modules/settings/brands/containers/SelectBrands\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"react-select-plus\";\nimport List from \"../../common/components/List\";\nimport UserForm from \"../containers/UserForm\";\nimport UserResetPasswordForm from \"../containers/UserResetPasswordForm\";\nimport { FilterContainer, UserAvatar } from \"../styles\";\nimport UserInvitationForm from \"./UserInvitationForm\";\n\nvar UserList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserList, _React$Component);\n\n  function UserList(_props) {\n    var _this;\n\n    _classCallCheck(this, UserList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserList).call(this, _props));\n    _this.timer = void 0;\n\n    _this.onAvatarClick = function (object) {\n      return _this.props.history.push(\"team/details/\".concat(object._id));\n    };\n\n    _this.renderInvitationForm = function (props) {\n      var _this$props = _this.props,\n          usersGroups = _this$props.usersGroups,\n          refetchQueries = _this$props.refetchQueries,\n          renderButton = _this$props.renderButton;\n      return React.createElement(UserInvitationForm, {\n        closeModal: props.closeModal,\n        usersGroups: usersGroups,\n        refetchQueries: refetchQueries,\n        renderButton: renderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n    };\n\n    _this.renderForm = function (props) {\n      return React.createElement(UserForm, Object.assign({}, props, {\n        renderButton: _this.props.renderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    };\n\n    _this.renderEditAction = function (user) {\n      var currentUser = _this.props.currentUser;\n\n      if (user._id === currentUser._id) {\n        return React.createElement(Tip, {\n          text: __(\"View Profile\"),\n          placement: \"top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/profile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"user-6\",\n          size: 15,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        })));\n      }\n\n      var editTrigger = React.createElement(Button, {\n        btnStyle: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Tip, {\n        text: __(\"Edit\"),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"pen-1\",\n        size: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })));\n\n      var content = function content(props) {\n        return _this.renderForm(_objectSpread({}, props, {\n          object: user\n        }));\n      };\n\n      return React.createElement(ModalTrigger, {\n        size: \"lg\",\n        title: \"Edit\",\n        trigger: editTrigger,\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n    };\n\n    _this.renderResetPasswordForm = function (props) {\n      return React.createElement(UserResetPasswordForm, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }));\n    };\n\n    _this.renderResetPassword = function (user) {\n      var editTrigger = React.createElement(Button, {\n        btnStyle: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Tip, {\n        text: __(\"Reset Member Password\"),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"lock-alt\",\n        size: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })));\n\n      var content = function content(props) {\n        return _this.renderResetPasswordForm(_objectSpread({}, props, {\n          object: user\n        }));\n      };\n\n      return React.createElement(ModalTrigger, {\n        title: \"Reset member password\",\n        trigger: editTrigger,\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      });\n    };\n\n    _this.search = function (e) {\n      if (_this.timer) {\n        clearTimeout(_this.timer);\n      }\n\n      var searchValue = e.target.value;\n\n      _this.setState({\n        searchValue: searchValue\n      });\n\n      _this.timer = setTimeout(function () {\n        router.setParams(_this.props.history, {\n          searchValue: searchValue\n        });\n      }, 500);\n    };\n\n    _this.onStatusChange = function (status) {\n      router.setParams(_this.props.history, {\n        isActive: status.value\n      });\n    };\n\n    _this.renderFilter = function () {\n      return React.createElement(FilterContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, _this.renderBrandChooser(), React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, __(\"Search\")), React.createElement(FormControl, {\n        placeholder: __(\"Search\"),\n        name: \"searchValue\",\n        onChange: _this.search,\n        value: _this.state.searchValue,\n        autoFocus: true,\n        onFocus: _this.moveCursorAtTheEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      })), React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, __(\"Status\")), React.createElement(Select, {\n        placeholder: __(\"Choose status\"),\n        value: _this.props.queryParams.isActive || true,\n        onChange: _this.onStatusChange,\n        clearable: false,\n        options: [{\n          value: true,\n          label: \"Active\"\n        }, {\n          value: false,\n          label: \"Deactivated\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }))));\n    };\n\n    _this.renderContent = function (props) {\n      return React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, __(\"Full name\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, __(\"Invitation status\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, __(\"Email\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, __(\"Status\")), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, __(\"Actions\")))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, _this.renderRows(props)));\n    };\n\n    var _searchValue = _props.queryParams.searchValue;\n    _this.state = {\n      searchValue: _searchValue || \"\"\n    };\n    return _this;\n  }\n\n  _createClass(UserList, [{\n    key: \"renderResendInvitation\",\n    value: function renderResendInvitation(user) {\n      var _this2 = this;\n\n      var onClick = function onClick() {\n        _this2.props.resendInvitation(user.email);\n      };\n\n      if (user.status !== \"Not verified\") {\n        return null;\n      }\n\n      return React.createElement(Button, {\n        btnStyle: \"link\",\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Tip, {\n        text: __(\"Resend\"),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"redo\",\n        size: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderRows\",\n    value: function renderRows(_ref) {\n      var _this3 = this;\n\n      var objects = _ref.objects;\n      return objects.map(function (object) {\n        var onClick = function onClick() {\n          return _this3.onAvatarClick(object);\n        };\n\n        var onChange = function onChange() {\n          return _this3.props.changeStatus(object._id);\n        };\n\n        return React.createElement(\"tr\", {\n          key: object._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(UserAvatar, {\n          onClick: onClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(NameCard, {\n          user: object,\n          avatarSize: 30,\n          singleLine: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(TextInfo, {\n          textStyle: object.status === \"Verified\" ? \"success\" : \"warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, object.status || \"Verified\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, object.email), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(Toggle, {\n          defaultChecked: object.isActive,\n          icons: {\n            checked: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 186\n              },\n              __self: this\n            }, \"Yes\"),\n            unchecked: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 187\n              },\n              __self: this\n            }, \"No\")\n          },\n          onChange: onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(ActionButtons, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, _this3.renderResendInvitation(object), _this3.renderEditAction(object), _this3.renderResetPassword(object))));\n      });\n    }\n  }, {\n    key: \"moveCursorAtTheEnd\",\n    value: function moveCursorAtTheEnd(e) {\n      var tmpValue = e.target.value;\n      e.target.value = \"\";\n      e.target.value = tmpValue;\n    }\n  }, {\n    key: \"renderBrandChooser\",\n    value: function renderBrandChooser() {\n      var _this$props2 = this.props,\n          _this$props2$configsE = _this$props2.configsEnvQuery,\n          configsEnvQuery = _this$props2$configsE === void 0 ? {} : _this$props2$configsE,\n          history = _this$props2.history,\n          queryParams = _this$props2.queryParams;\n      var env = configsEnvQuery.configsGetEnv || {};\n\n      if (env.USE_BRAND_RESTRICTIONS !== \"true\") {\n        return null;\n      }\n\n      var onSelect = function onSelect(brandIds) {\n        router.setParams(history, {\n          brandIds: brandIds\n        });\n      };\n\n      return React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, __(\"Brand\")), React.createElement(SelectBrands, {\n        label: __(\"Choose brands\"),\n        onSelect: onSelect,\n        value: queryParams.brandIds,\n        name: \"selectedBrands\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"breadcrumb\",\n    value: function breadcrumb() {\n      return [{\n        title: __(\"Settings\"),\n        link: \"/settings\"\n      }, {\n        title: __(\"Team members\")\n      }];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(List, Object.assign({\n        formTitle: __(\"Invite team members\"),\n        size: \"lg\",\n        breadcrumb: [{\n          title: __(\"Settings\"),\n          link: \"/settings\"\n        }, {\n          title: __(\"Team members\")\n        }],\n        title: __(\"Team members\"),\n        leftActionBar: React.createElement(HeaderDescription, {\n          icon: \"/images/actions/21.svg\",\n          title: \"Team members\",\n          description: \"Your team members are the bolts and nuts of your business. Make sure all the parts are set and ready to go. Here you can see a list of all your team members, you can categorize them into groups, welcome new members and edit their info.\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }),\n        renderFilter: this.renderFilter,\n        renderForm: this.renderInvitationForm,\n        renderContent: this.renderContent,\n        center: true\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UserList;\n}(React.Component);\n\nvar WithConsumer = function WithConsumer(props) {\n  return React.createElement(AppConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, function (_ref2) {\n    var currentUser = _ref2.currentUser;\n    return React.createElement(UserList, Object.assign({}, props, {\n      currentUser: currentUser || {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default WithConsumer;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/team/components/UserList.tsx"],"names":["AppConsumer","ActionButtons","Button","Icon","FormControl","ControlLabel","HeaderDescription","ModalTrigger","NameCard","Table","TextInfo","Tip","Toggle","router","__","FlexItem","FlexRow","SelectBrands","React","Link","Select","List","UserForm","UserResetPasswordForm","FilterContainer","UserAvatar","UserInvitationForm","UserList","props","timer","onAvatarClick","object","history","push","_id","renderInvitationForm","usersGroups","refetchQueries","renderButton","closeModal","renderForm","renderEditAction","user","currentUser","editTrigger","content","renderResetPasswordForm","renderResetPassword","search","e","clearTimeout","searchValue","target","value","setState","setTimeout","setParams","onStatusChange","status","isActive","renderFilter","renderBrandChooser","state","moveCursorAtTheEnd","queryParams","label","renderContent","renderRows","onClick","resendInvitation","email","objects","map","onChange","changeStatus","checked","unchecked","renderResendInvitation","tmpValue","configsEnvQuery","env","configsGetEnv","USE_BRAND_RESTRICTIONS","onSelect","brandIds","title","link","Component","WithConsumer"],"mappings":"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","sourcesContent":["import { AppConsumer } from \"appContext\";\nimport ActionButtons from \"erxes-common-ui/lib/components/actionButtons\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport { IUser } from \"modules/auth/types\";\nimport { FormControl } from \"modules/common/components/form\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport HeaderDescription from \"modules/common/components/HeaderDescription\";\nimport ModalTrigger from \"modules/common/components/ModalTrigger\";\nimport NameCard from \"modules/common/components/nameCard/NameCard\";\nimport Table from \"modules/common/components/table\";\nimport TextInfo from \"modules/common/components/TextInfo\";\nimport Tip from \"modules/common/components/Tip\";\nimport Toggle from \"modules/common/components/Toggle\";\nimport { IButtonMutateProps } from \"modules/common/types\";\nimport { router } from \"modules/common/utils\";\nimport { __ } from \"modules/common/utils\";\nimport { FlexItem, FlexRow } from \"modules/insights/styles\";\nimport SelectBrands from \"modules/settings/brands/containers/SelectBrands\";\nimport { IUserGroup } from \"modules/settings/permissions/types\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"react-select-plus\";\nimport List from \"../../common/components/List\";\nimport { ICommonFormProps, ICommonListProps } from \"../../common/types\";\nimport UserForm from \"../containers/UserForm\";\nimport UserResetPasswordForm from \"../containers/UserResetPasswordForm\";\nimport { FilterContainer, UserAvatar } from \"../styles\";\nimport UserInvitationForm from \"./UserInvitationForm\";\n\ntype IProps = {\n  changeStatus: (id: string) => void;\n  resendInvitation: (email: string) => void;\n  usersGroups: IUserGroup[];\n  refetchQueries: any;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  queryParams?: any;\n  configsEnvQuery?: any;\n};\n\ntype FinalProps = ICommonListProps &\n  ICommonFormProps &\n  IProps & { currentUser: IUser };\n\ntype States = {\n  searchValue: string;\n};\n\nclass UserList extends React.Component<FinalProps, States> {\n  private timer?: NodeJS.Timer;\n\n  constructor(props: FinalProps) {\n    super(props);\n\n    const {\n      queryParams: { searchValue },\n    } = props;\n\n    this.state = {\n      searchValue: searchValue || \"\",\n    };\n  }\n\n  onAvatarClick = (object) => {\n    return this.props.history.push(`team/details/${object._id}`);\n  };\n\n  renderInvitationForm = (props) => {\n    const { usersGroups, refetchQueries, renderButton } = this.props;\n\n    return (\n      <UserInvitationForm\n        closeModal={props.closeModal}\n        usersGroups={usersGroups}\n        refetchQueries={refetchQueries}\n        renderButton={renderButton}\n      />\n    );\n  };\n\n  renderForm = (props) => {\n    return <UserForm {...props} renderButton={this.props.renderButton} />;\n  };\n\n  renderEditAction = (user: IUser) => {\n    const { currentUser } = this.props;\n\n    if (user._id === currentUser._id) {\n      return (\n        <Tip text={__(\"View Profile\")} placement=\"top\">\n          <Link to=\"/profile\">\n            <Icon icon=\"user-6\" size={15} />\n          </Link>\n        </Tip>\n      );\n    }\n\n    const editTrigger = (\n      <Button btnStyle=\"link\">\n        <Tip text={__(\"Edit\")} placement=\"top\">\n          <Icon icon=\"pen-1\" size={15} />\n        </Tip>\n      </Button>\n    );\n\n    const content = (props) => {\n      return this.renderForm({ ...props, object: user });\n    };\n\n    return (\n      <ModalTrigger\n        size=\"lg\"\n        title=\"Edit\"\n        trigger={editTrigger}\n        content={content}\n      />\n    );\n  };\n\n  renderResetPasswordForm = (props) => {\n    return <UserResetPasswordForm {...props} />;\n  };\n\n  renderResetPassword = (user: IUser) => {\n    const editTrigger = (\n      <Button btnStyle=\"link\">\n        <Tip text={__(\"Reset Member Password\")} placement=\"top\">\n          <Icon icon=\"lock-alt\" size={15} />\n        </Tip>\n      </Button>\n    );\n\n    const content = (props) => {\n      return this.renderResetPasswordForm({ ...props, object: user });\n    };\n\n    return (\n      <ModalTrigger\n        title=\"Reset member password\"\n        trigger={editTrigger}\n        content={content}\n      />\n    );\n  };\n\n  renderResendInvitation(user: IUser) {\n    const onClick = () => {\n      this.props.resendInvitation(user.email);\n    };\n\n    if (user.status !== \"Not verified\") {\n      return null;\n    }\n\n    return (\n      <Button btnStyle=\"link\" onClick={onClick}>\n        <Tip text={__(\"Resend\")} placement=\"top\">\n          <Icon icon=\"redo\" size={15} />\n        </Tip>\n      </Button>\n    );\n  }\n\n  renderRows({ objects }: { objects: IUser[] }) {\n    return objects.map((object) => {\n      const onClick = () => this.onAvatarClick(object);\n      const onChange = () => this.props.changeStatus(object._id);\n\n      return (\n        <tr key={object._id}>\n          <UserAvatar onClick={onClick}>\n            <NameCard user={object} avatarSize={30} singleLine={true} />\n          </UserAvatar>\n          <td>\n            <TextInfo\n              textStyle={object.status === \"Verified\" ? \"success\" : \"warning\"}\n            >\n              {object.status || \"Verified\"}\n            </TextInfo>\n          </td>\n          <td>{object.email}</td>\n          <td>\n            <Toggle\n              defaultChecked={object.isActive}\n              icons={{\n                checked: <span>Yes</span>,\n                unchecked: <span>No</span>,\n              }}\n              onChange={onChange}\n            />\n          </td>\n          <td>\n            <ActionButtons>\n              {this.renderResendInvitation(object)}\n              {this.renderEditAction(object)}\n              {this.renderResetPassword(object)}\n            </ActionButtons>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  search = (e) => {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n\n    const searchValue = e.target.value;\n\n    this.setState({ searchValue });\n\n    this.timer = setTimeout(() => {\n      router.setParams(this.props.history, { searchValue });\n    }, 500);\n  };\n\n  moveCursorAtTheEnd(e) {\n    const tmpValue = e.target.value;\n    e.target.value = \"\";\n    e.target.value = tmpValue;\n  }\n\n  onStatusChange = (status: { label: string; value: boolean }) => {\n    router.setParams(this.props.history, { isActive: status.value });\n  };\n\n  renderBrandChooser() {\n    const { configsEnvQuery = {}, history, queryParams } = this.props;\n\n    const env = configsEnvQuery.configsGetEnv || {};\n\n    if (env.USE_BRAND_RESTRICTIONS !== \"true\") {\n      return null;\n    }\n\n    const onSelect = (brandIds) => {\n      router.setParams(history, { brandIds });\n    };\n\n    return (\n      <FlexItem>\n        <ControlLabel>{__(\"Brand\")}</ControlLabel>\n        <SelectBrands\n          label={__(\"Choose brands\")}\n          onSelect={onSelect}\n          value={queryParams.brandIds}\n          name=\"selectedBrands\"\n        />\n      </FlexItem>\n    );\n  }\n\n  renderFilter = () => {\n    return (\n      <FilterContainer>\n        <FlexRow>\n          {this.renderBrandChooser()}\n          <FlexItem>\n            <ControlLabel>{__(\"Search\")}</ControlLabel>\n            <FormControl\n              placeholder={__(\"Search\")}\n              name=\"searchValue\"\n              onChange={this.search}\n              value={this.state.searchValue}\n              autoFocus={true}\n              onFocus={this.moveCursorAtTheEnd}\n            />\n          </FlexItem>\n\n          <FlexItem>\n            <ControlLabel>{__(\"Status\")}</ControlLabel>\n            <Select\n              placeholder={__(\"Choose status\")}\n              value={this.props.queryParams.isActive || true}\n              onChange={this.onStatusChange}\n              clearable={false}\n              options={[\n                {\n                  value: true,\n                  label: \"Active\",\n                },\n                {\n                  value: false,\n                  label: \"Deactivated\",\n                },\n              ]}\n            />\n          </FlexItem>\n        </FlexRow>\n      </FilterContainer>\n    );\n  };\n\n  renderContent = (props) => {\n    return (\n      <Table>\n        <thead>\n          <tr>\n            <th>{__(\"Full name\")}</th>\n            <th>{__(\"Invitation status\")}</th>\n            <th>{__(\"Email\")}</th>\n            <th>{__(\"Status\")}</th>\n            <th>{__(\"Actions\")}</th>\n          </tr>\n        </thead>\n        <tbody>{this.renderRows(props)}</tbody>\n      </Table>\n    );\n  };\n\n  breadcrumb() {\n    return [\n      { title: __(\"Settings\"), link: \"/settings\" },\n      { title: __(\"Team members\") },\n    ];\n  }\n\n  render() {\n    return (\n      <List\n        formTitle={__(\"Invite team members\")}\n        size=\"lg\"\n        breadcrumb={[\n          { title: __(\"Settings\"), link: \"/settings\" },\n          { title: __(\"Team members\") },\n        ]}\n        title={__(\"Team members\")}\n        leftActionBar={\n          <HeaderDescription\n            icon=\"/images/actions/21.svg\"\n            title=\"Team members\"\n            description=\"Your team members are the bolts and nuts of your business. Make sure all the parts are set and ready to go. Here you can see a list of all your team members, you can categorize them into groups, welcome new members and edit their info.\"\n          />\n        }\n        renderFilter={this.renderFilter}\n        renderForm={this.renderInvitationForm}\n        renderContent={this.renderContent}\n        center={true}\n        {...this.props}\n      />\n    );\n  }\n}\n\nconst WithConsumer = (props: IProps & ICommonListProps & ICommonFormProps) => {\n  return (\n    <AppConsumer>\n      {({ currentUser }) => (\n        <UserList {...props} currentUser={currentUser || ({} as IUser)} />\n      )}\n    </AppConsumer>\n  );\n};\n\nexport default WithConsumer;\n"]},"metadata":{},"sourceType":"module"}