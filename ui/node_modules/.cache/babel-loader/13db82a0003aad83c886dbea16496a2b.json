{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/form/Control.tsx\";\nimport React from 'react';\nimport { Checkbox, FlexWrapper, FormLabel, Input, Radio, Select, SelectWrapper } from './styles';\nimport Textarea from './Textarea';\n\nvar renderElement = function renderElement(Element, attributes, type, child) {\n  return React.createElement(FormLabel, {\n    key: attributes.key ? attributes.key : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Element, Object.assign({}, attributes, {\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, child && \"\\xA0\\xA0\", child));\n};\n\nvar FormControl =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormControl, _React$Component);\n\n  function FormControl() {\n    _classCallCheck(this, FormControl);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FormControl).apply(this, arguments));\n  }\n\n  _createClass(FormControl, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var registerChild = this.props.registerChild;\n\n      if (registerChild) {\n        registerChild(this);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _attributes;\n\n      var props = this.props;\n      var childNode = props.children;\n      var elementType = props.componentClass;\n      var errorMessage = props.errors && props.errors[props.name || '']; // cancel custom browser default form validation error\n\n      var onChange = function onChange(e) {\n        if (props.onChange) {\n          props.onChange(e);\n        }\n      };\n\n      var attributes = (_attributes = {\n        onChange: onChange,\n        onKeyPress: props.onKeyPress,\n        onClick: props.onClick,\n        onBlur: props.onBlur,\n        value: props.value,\n        defaultValue: props.defaultValue\n      }, _defineProperty(_attributes, props.defaultChecked ? 'defaultChecked' : 'checked', props.defaultChecked ? props.defaultChecked : props.checked), _defineProperty(_attributes, \"placeholder\", props.placeholder), _defineProperty(_attributes, \"hasError\", errorMessage ? true : false), _defineProperty(_attributes, \"type\", props.type), _defineProperty(_attributes, \"name\", props.name), _defineProperty(_attributes, \"round\", props.round), _defineProperty(_attributes, \"required\", props.required), _defineProperty(_attributes, \"disabled\", props.disabled), _defineProperty(_attributes, \"onFocus\", props.onFocus), _defineProperty(_attributes, \"autoFocus\", props.autoFocus), _defineProperty(_attributes, \"autoComplete\", props.autoComplete), _defineProperty(_attributes, \"min\", props.min), _defineProperty(_attributes, \"max\", props.max), _defineProperty(_attributes, \"id\", props.id), _defineProperty(_attributes, \"maxHeight\", props.maxHeight), _defineProperty(_attributes, \"maxLength\", props.maxLength), _attributes);\n\n      if (elementType === 'select') {\n        if (props.options) {\n          return React.createElement(FlexWrapper, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, React.createElement(SelectWrapper, {\n            hasError: errorMessage,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, React.createElement(Select, Object.assign({}, attributes, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }), props.options.map(function (option, index) {\n            return React.createElement(\"option\", {\n              key: index,\n              value: option.value || '',\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124\n              },\n              __self: this\n            }, option.label || '');\n          }))), errorMessage);\n        }\n\n        return React.createElement(FlexWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(SelectWrapper, {\n          hasError: errorMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(Select, Object.assign({}, attributes, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }), childNode)), errorMessage);\n      }\n\n      if (elementType === 'radio') {\n        if (props.options) {\n          return props.options.map(function (option, index) {\n            return renderElement(Radio, _objectSpread({\n              key: index\n            }, attributes, option), elementType, option.childNode);\n          });\n        }\n\n        return renderElement(Radio, attributes, elementType, childNode);\n      }\n\n      if (elementType === 'checkbox') {\n        return renderElement(Checkbox, attributes, elementType, childNode);\n      }\n\n      if (elementType === 'textarea') {\n        return React.createElement(FlexWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(Textarea, Object.assign({}, props, {\n          hasError: errorMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        })), errorMessage);\n      }\n\n      return React.createElement(FlexWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Input, Object.assign({}, attributes, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })), errorMessage);\n    }\n  }]);\n\n  return FormControl;\n}(React.Component);\n\nFormControl.defaultProps = {\n  componentClass: 'input',\n  required: false,\n  defaultChecked: false,\n  disabled: false\n};\nexport default FormControl;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/form/Control.tsx"],"names":["React","Checkbox","FlexWrapper","FormLabel","Input","Radio","Select","SelectWrapper","Textarea","renderElement","Element","attributes","type","child","key","FormControl","registerChild","props","childNode","children","elementType","componentClass","errorMessage","errors","name","onChange","e","onKeyPress","onClick","onBlur","value","defaultValue","defaultChecked","checked","placeholder","round","required","disabled","onFocus","autoFocus","autoComplete","min","max","id","maxHeight","maxLength","options","map","option","index","label","Component","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Checkbox,\n  FlexWrapper,\n  FormLabel,\n  Input,\n  Radio,\n  Select,\n  SelectWrapper\n} from './styles';\nimport Textarea from './Textarea';\n\ntype Props = {\n  children?: React.ReactNode;\n  id?: string;\n  onChange?: (e: React.FormEvent<HTMLElement>) => void;\n  onClick?: (e: React.MouseEvent) => void;\n  onKeyPress?: (e: React.KeyboardEvent) => void;\n  defaultValue?: any;\n  value?: any;\n  defaultChecked?: boolean;\n  checked?: boolean;\n  placeholder?: string;\n  type?: string;\n  name?: string;\n  options?: any[];\n  required?: boolean;\n  disabled?: boolean;\n  round?: boolean;\n  autoFocus?: boolean;\n  autoComplete?: string;\n  onFocus?: (e: React.FormEvent<HTMLElement>) => void;\n  componentClass?: string;\n  min?: number;\n  max?: number;\n  rows?: number;\n  inline?: boolean;\n  className?: string;\n  errors?: any;\n  registerChild?: (child: any) => void;\n  onBlur?: (e: React.FormEvent<HTMLElement>) => void;\n  maxHeight?: number;\n  maxLength?: number;\n};\n\nconst renderElement = (Element, attributes, type, child) => {\n  return (\n    <FormLabel key={attributes.key ? attributes.key : null}>\n      <Element {...attributes} type={type} />\n      <span>\n        {child && '\\u00a0\\u00a0'}\n        {child}\n      </span>\n    </FormLabel>\n  );\n};\n\nclass FormControl extends React.Component<Props> {\n  static defaultProps = {\n    componentClass: 'input',\n    required: false,\n    defaultChecked: false,\n    disabled: false\n  };\n\n  componentDidMount() {\n    const { registerChild } = this.props;\n\n    if (registerChild) {\n      registerChild(this);\n    }\n  }\n\n  render() {\n    const props = this.props;\n    const childNode = props.children;\n    const elementType = props.componentClass;\n    const errorMessage = props.errors && props.errors[props.name || ''];\n\n    // cancel custom browser default form validation error\n    const onChange = e => {\n      if (props.onChange) {\n        props.onChange(e);\n      }\n    };\n\n    const attributes = {\n      onChange,\n      onKeyPress: props.onKeyPress,\n      onClick: props.onClick,\n      onBlur: props.onBlur,\n      value: props.value,\n      defaultValue: props.defaultValue,\n      [props.defaultChecked\n        ? 'defaultChecked'\n        : 'checked']: props.defaultChecked\n        ? props.defaultChecked\n        : props.checked,\n      placeholder: props.placeholder,\n      hasError: errorMessage ? true : false,\n      type: props.type,\n      name: props.name,\n      round: props.round,\n      required: props.required,\n      disabled: props.disabled,\n      onFocus: props.onFocus,\n      autoFocus: props.autoFocus,\n      autoComplete: props.autoComplete,\n      min: props.min,\n      max: props.max,\n      id: props.id,\n      maxHeight: props.maxHeight,\n      maxLength: props.maxLength\n    };\n\n    if (elementType === 'select') {\n      if (props.options) {\n        return (\n          <FlexWrapper>\n            <SelectWrapper hasError={errorMessage}>\n              <Select {...attributes}>\n                {props.options.map((option, index) => {\n                  return (\n                    <option key={index} value={option.value || ''}>\n                      {option.label || ''}\n                    </option>\n                  );\n                })}\n              </Select>\n            </SelectWrapper>\n            {errorMessage}\n          </FlexWrapper>\n        );\n      }\n\n      return (\n        <FlexWrapper>\n          <SelectWrapper hasError={errorMessage}>\n            <Select {...attributes}>{childNode}</Select>\n          </SelectWrapper>\n          {errorMessage}\n        </FlexWrapper>\n      );\n    }\n\n    if (elementType === 'radio') {\n      if (props.options) {\n        return props.options.map((option, index) => {\n          return renderElement(\n            Radio,\n            { key: index, ...attributes, ...option },\n            elementType,\n            option.childNode\n          );\n        });\n      }\n\n      return renderElement(Radio, attributes, elementType, childNode);\n    }\n\n    if (elementType === 'checkbox') {\n      return renderElement(Checkbox, attributes, elementType, childNode);\n    }\n\n    if (elementType === 'textarea') {\n      return (\n        <FlexWrapper>\n          <Textarea {...props} hasError={errorMessage} />\n          {errorMessage}\n        </FlexWrapper>\n      );\n    }\n\n    return (\n      <FlexWrapper>\n        <Input {...attributes} />\n        {errorMessage}\n      </FlexWrapper>\n    );\n  }\n}\n\nexport default FormControl;\n"]},"metadata":{},"sourceType":"module"}