{"ast":null,"code":"import _slicedToArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/companies/components/detail/CompaniesMerge.tsx\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport { Column, Columns, Title } from \"modules/common/styles/chooser\";\nimport { ModalFooter } from \"modules/common/styles/main\";\nimport { COMPANY_DATAS, COMPANY_INFO, COMPANY_LINKS } from \"modules/companies/constants\";\nimport { Info, InfoAvatar, InfoDetail, InfoTitle } from \"modules/customers/styles\";\nimport React from \"react\";\n\nvar CompaniesMerge =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CompaniesMerge, _React$Component);\n\n  function CompaniesMerge(props) {\n    var _this;\n\n    _classCallCheck(this, CompaniesMerge);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CompaniesMerge).call(this, props));\n\n    _this.save = function (e) {\n      e.preventDefault();\n      var objects = _this.props.objects;\n\n      var selectedValues = _objectSpread({}, _this.state.selectedValues);\n\n      var owner = selectedValues.owner;\n      var parentCompany = selectedValues.parentCompany;\n\n      if (owner) {\n        selectedValues.ownerId = owner._id;\n        delete selectedValues.owner;\n      }\n\n      if (parentCompany) {\n        selectedValues.parentCompanyId = parentCompany._id;\n        delete selectedValues.parentCompany;\n      }\n\n      _this.props.save({\n        ids: objects.map(function (company) {\n          return company._id;\n        }),\n        data: _objectSpread({}, selectedValues),\n        callback: function callback() {\n          _this.props.closeModal();\n        }\n      });\n    };\n\n    _this.handleChange = function (type, key, value) {\n      var selectedValues = _objectSpread({}, _this.state.selectedValues);\n\n      if (type === \"plus-1\") {\n        selectedValues[key] = value;\n\n        if (key === \"links\") {\n          var links = Object.assign(_objectSpread({}, _this.state.selectedValues.links), value);\n          selectedValues[key] = links;\n        }\n      } else {\n        delete selectedValues[key];\n      }\n\n      _this.setState({\n        selectedValues: selectedValues\n      });\n    };\n\n    _this.renderCompany = function (company, icon) {\n      var properties = COMPANY_INFO.ALL.concat(COMPANY_DATAS.ALL);\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, company.primaryName || company.website), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, properties.map(function (info) {\n        var key = info.field;\n\n        if (!company[key]) {\n          return null;\n        }\n\n        if (info.field === \"links\") {\n          return _this.renderLinks(company[key], icon);\n        }\n\n        return _this.renderCompanyProperties(key, company[key], icon);\n      })));\n    };\n\n    _this.renderValue = function (field, value) {\n      switch (field) {\n        case \"owner\":\n          return _this.renderOwner(value);\n\n        case \"parentCompany\":\n          return _this.renderParentCompany(value);\n\n        case \"avatar\":\n          return React.createElement(InfoAvatar, {\n            src: value,\n            alt: \"avatar\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          });\n\n        default:\n          return React.createElement(InfoDetail, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, value);\n      }\n    };\n\n    _this.state = {\n      selectedValues: {}\n    };\n    return _this;\n  }\n\n  _createClass(CompaniesMerge, [{\n    key: \"renderCompanyProperties\",\n    value: function renderCompanyProperties(key, value, icon) {\n      return React.createElement(\"li\", {\n        key: key,\n        onClick: this.handleChange.bind(this, icon, key, value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.renderTitle(key), this.renderValue(key, value), React.createElement(Icon, {\n        icon: icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle(key) {\n      var title = COMPANY_INFO[key] || COMPANY_DATAS[key];\n      return React.createElement(InfoTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, title, \":\");\n    }\n  }, {\n    key: \"renderOwner\",\n    value: function renderOwner(data) {\n      return React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(InfoTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Name: \"), React.createElement(InfoDetail, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, data.details.fullName));\n    }\n  }, {\n    key: \"renderParentCompany\",\n    value: function renderParentCompany(data) {\n      return React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(InfoTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Name: \"), React.createElement(InfoDetail, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, data.primaryName));\n    }\n  }, {\n    key: \"renderLinks\",\n    value: function renderLinks(data, icon) {\n      var _this2 = this;\n\n      return COMPANY_LINKS.ALL.map(function (info) {\n        var field = info.field;\n        var value = data[field];\n\n        if (!data[field]) {\n          return null;\n        }\n\n        return React.createElement(\"li\", {\n          key: field,\n          onClick: _this2.handleChange.bind(_this2, icon, \"links\", _defineProperty({}, field, value)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(InfoTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, info.label, \":\"), React.createElement(InfoDetail, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, value), React.createElement(Icon, {\n          icon: icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var selectedValues = this.state.selectedValues;\n      var _this$props = this.props,\n          objects = _this$props.objects,\n          closeModal = _this$props.closeModal;\n\n      var _objects = _slicedToArray(objects, 2),\n          company1 = _objects[0],\n          company2 = _objects[1];\n\n      return React.createElement(\"form\", {\n        onSubmit: this.save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Columns, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Column, {\n        className: \"multiple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, this.renderCompany(company1, \"plus-1\")), React.createElement(Column, {\n        className: \"multiple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, this.renderCompany(company2, \"plus-1\")), React.createElement(Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, this.renderCompany(selectedValues, \"times\"))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        onClick: closeModal,\n        uppercase: false,\n        icon: \"times-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        type: \"submit\",\n        btnStyle: \"success\",\n        uppercase: false,\n        icon: \"check-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Save\")));\n    }\n  }]);\n\n  return CompaniesMerge;\n}(React.Component);\n\nexport default CompaniesMerge;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/companies/components/detail/CompaniesMerge.tsx"],"names":["Button","Icon","Column","Columns","Title","ModalFooter","COMPANY_DATAS","COMPANY_INFO","COMPANY_LINKS","Info","InfoAvatar","InfoDetail","InfoTitle","React","CompaniesMerge","props","save","e","preventDefault","objects","selectedValues","state","owner","parentCompany","ownerId","_id","parentCompanyId","ids","map","company","data","callback","closeModal","handleChange","type","key","value","links","Object","assign","setState","renderCompany","icon","properties","ALL","concat","primaryName","website","info","field","renderLinks","renderCompanyProperties","renderValue","renderOwner","renderParentCompany","bind","renderTitle","title","details","fullName","label","company1","company2","Component"],"mappings":"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","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport { Column, Columns, Title } from \"modules/common/styles/chooser\";\nimport { ModalFooter } from \"modules/common/styles/main\";\nimport {\n  COMPANY_DATAS,\n  COMPANY_INFO,\n  COMPANY_LINKS,\n} from \"modules/companies/constants\";\nimport {\n  Info,\n  InfoAvatar,\n  InfoDetail,\n  InfoTitle,\n} from \"modules/customers/styles\";\nimport React from \"react\";\nimport { ICompany, ICompanyLinks } from \"../../types\";\n\ntype Props = {\n  objects: ICompany[];\n  save: (doc: { ids: string[]; data: any; callback: () => void }) => void;\n  closeModal: () => void;\n};\n\ntype State = {\n  selectedValues: any;\n};\n\nclass CompaniesMerge extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedValues: {},\n    };\n  }\n\n  save = (e) => {\n    e.preventDefault();\n    const { objects } = this.props;\n    const selectedValues = { ...this.state.selectedValues };\n    const owner = selectedValues.owner;\n    const parentCompany = selectedValues.parentCompany;\n\n    if (owner) {\n      selectedValues.ownerId = owner._id;\n\n      delete selectedValues.owner;\n    }\n\n    if (parentCompany) {\n      selectedValues.parentCompanyId = parentCompany._id;\n\n      delete selectedValues.parentCompany;\n    }\n\n    this.props.save({\n      ids: objects.map((company) => company._id),\n      data: { ...selectedValues },\n      callback: () => {\n        this.props.closeModal();\n      },\n    });\n  };\n\n  handleChange = (type, key, value) => {\n    const selectedValues = { ...this.state.selectedValues };\n\n    if (type === \"plus-1\") {\n      selectedValues[key] = value;\n\n      if (key === \"links\") {\n        const links = Object.assign(\n          { ...this.state.selectedValues.links },\n          value\n        );\n        selectedValues[key] = links;\n      }\n    } else {\n      delete selectedValues[key];\n    }\n\n    this.setState({ selectedValues });\n  };\n\n  renderCompany = (company, icon) => {\n    const properties = COMPANY_INFO.ALL.concat(COMPANY_DATAS.ALL);\n\n    return (\n      <React.Fragment>\n        <Title>{company.primaryName || company.website}</Title>\n        <ul>\n          {properties.map((info) => {\n            const key = info.field;\n\n            if (!company[key]) {\n              return null;\n            }\n\n            if (info.field === \"links\") {\n              return this.renderLinks(company[key], icon);\n            }\n\n            return this.renderCompanyProperties(key, company[key], icon);\n          })}\n        </ul>\n      </React.Fragment>\n    );\n  };\n\n  renderCompanyProperties(key, value, icon) {\n    return (\n      <li key={key} onClick={this.handleChange.bind(this, icon, key, value)}>\n        {this.renderTitle(key)}\n        {this.renderValue(key, value)}\n\n        <Icon icon={icon} />\n      </li>\n    );\n  }\n\n  renderTitle(key) {\n    const title = COMPANY_INFO[key] || COMPANY_DATAS[key];\n\n    return <InfoTitle>{title}:</InfoTitle>;\n  }\n\n  renderValue = (field, value) => {\n    switch (field) {\n      case \"owner\":\n        return this.renderOwner(value);\n      case \"parentCompany\":\n        return this.renderParentCompany(value);\n      case \"avatar\":\n        return <InfoAvatar src={value} alt=\"avatar\" />;\n\n      default:\n        return <InfoDetail>{value}</InfoDetail>;\n    }\n  };\n\n  renderOwner(data) {\n    return (\n      <Info>\n        <InfoTitle>Name: </InfoTitle>\n        <InfoDetail>{data.details.fullName}</InfoDetail>\n      </Info>\n    );\n  }\n\n  renderParentCompany(data) {\n    return (\n      <Info>\n        <InfoTitle>Name: </InfoTitle>\n        <InfoDetail>{data.primaryName}</InfoDetail>\n      </Info>\n    );\n  }\n\n  renderLinks(data: ICompanyLinks, icon: string) {\n    return COMPANY_LINKS.ALL.map((info) => {\n      const field = info.field;\n      const value = data[field];\n\n      if (!data[field]) {\n        return null;\n      }\n\n      return (\n        <li\n          key={field}\n          onClick={this.handleChange.bind(this, icon, `links`, {\n            [field]: value,\n          })}\n        >\n          <InfoTitle>{info.label}:</InfoTitle>\n          <InfoDetail>{value}</InfoDetail>\n          <Icon icon={icon} />\n        </li>\n      );\n    });\n  }\n\n  render() {\n    const { selectedValues } = this.state;\n    const { objects, closeModal } = this.props;\n    const [company1, company2] = objects;\n\n    return (\n      <form onSubmit={this.save}>\n        <Columns>\n          <Column className=\"multiple\">\n            {this.renderCompany(company1, \"plus-1\")}\n          </Column>\n\n          <Column className=\"multiple\">\n            {this.renderCompany(company2, \"plus-1\")}\n          </Column>\n\n          <Column>{this.renderCompany(selectedValues, \"times\")}</Column>\n        </Columns>\n\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            onClick={closeModal}\n            uppercase={false}\n            icon=\"times-circle\"\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            btnStyle=\"success\"\n            uppercase={false}\n            icon=\"check-circle\"\n          >\n            Save\n          </Button>\n        </ModalFooter>\n      </form>\n    );\n  }\n}\n\nexport default CompaniesMerge;\n"]},"metadata":{},"sourceType":"module"}