{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/AutoCompletionSelect.tsx\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  flex: 1;\\n  margin-right: 5px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 8px 16px;\\n  font-weight: 500;\\n  border-bottom: 1px solid #eee;\\n  &:last-child {\\n    border: none;\\n  }\\n  &:hover {\\n    background: #fafafa;\\n    cursor: default;\\n  }\\n  i {\\n    color: #ea475d;\\n    &:hover {\\n      cursor: pointer;\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  input {\\n    display: block;\\n    width: 100%;\\n    border: none;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport client from 'apolloClient';\nimport gql from 'graphql-tag';\nimport * as _ from 'lodash';\nimport debounce from 'lodash/debounce';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Select from 'react-select-plus';\nimport styled from 'styled-components';\nimport { __, Alert } from '../utils';\nimport Button from 'erxes-common-ui/lib/components/button';\nvar Wrapper = styled.div(_templateObject());\nvar OptionWrapper = styled(Wrapper)(_templateObject2());\nvar FillContent = styled.div(_templateObject3());\n\nfunction Option(props) {\n  var option = props.option,\n      onSelect = props.onSelect;\n  var onRemove = option.onRemove;\n\n  var onClick = function onClick(e) {\n    onSelect(option, e);\n  };\n\n  var onRemoveClick = function onRemoveClick(e) {\n    e.stopPropagation();\n    onRemove(option.value);\n  };\n\n  if (!onRemove) {\n    return React.createElement(OptionWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(FillContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, option.label), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"(\", __('Already exist'), \")\"));\n  }\n\n  return React.createElement(OptionWrapper, {\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(FillContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, option.label), React.createElement(Icon, {\n    style: {\n      float: 'right'\n    },\n    icon: \"times-circle\",\n    onClick: onRemoveClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n}\n\nfunction AutoCompletionSelect(_ref) {\n  var placeholder = _ref.placeholder,\n      queryName = _ref.queryName,\n      query = _ref.query,\n      defaultOptions = _ref.defaultOptions,\n      autoCompletionType = _ref.autoCompletionType,\n      defaultValue = _ref.defaultValue,\n      required = _ref.required,\n      checkFormat = _ref.checkFormat,\n      onChange = _ref.onChange;\n  var selectRef = React.useRef(null);\n\n  var _useState = useState({\n    added: {\n      label: __(\"Possible \".concat(autoCompletionType)),\n      options: []\n    },\n    search: {\n      label: __('Search result'),\n      options: []\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      fields = _useState2[0],\n      setFields = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectOptions = _useState4[0],\n      setSelectOptions = _useState4[1];\n\n  var _useState5 = useState(defaultValue ? {\n    label: defaultValue,\n    value: defaultValue\n  } : null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedValue = _useState6[0],\n      setSelectedValue = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      searchValue = _useState8[0],\n      setSearchValue = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var generateOptions = useCallback(function (list) {\n    if (list.length === 0) {\n      return [];\n    }\n\n    var options = [];\n    list.map(function (item) {\n      return options.push.apply(options, _toConsumableArray(item[autoCompletionType]));\n    });\n    return options.map(function (item) {\n      return {\n        label: item,\n        value: item\n      };\n    });\n  }, [autoCompletionType]);\n  var handleRemove = useCallback(function (value) {\n    var currentFields = _objectSpread({}, fields);\n\n    var addedOptions = currentFields.added.options;\n    var filteredOptions = addedOptions.filter(function (option) {\n      return option.value !== value;\n    });\n    currentFields.added.options = filteredOptions;\n    setSearchValue('');\n    setSelectedValue(null);\n    setFields(currentFields);\n    onChange({\n      options: currentFields.added.options.map(function (item) {\n        return item.label;\n      }),\n      selectedOption: null\n    });\n  }, [fields, onChange]);\n  useEffect(function () {\n    if (defaultOptions.length > 0) {\n      var options = defaultOptions.map(function (item) {\n        return {\n          label: item,\n          value: item,\n          onRemove: handleRemove\n        };\n      });\n      var currentOptions = fields.added.options;\n      fields.added.options = _.uniqBy([].concat(_toConsumableArray(currentOptions), _toConsumableArray(options)), 'label');\n    }\n\n    var updatedOptions = [fields.added, fields.search];\n    setSelectOptions(updatedOptions);\n  }, [defaultOptions, fields, handleRemove]);\n  var setFetchResult = useCallback(function (list) {\n    var options = generateOptions(list).filter(function (item) {\n      return item.label !== defaultValue;\n    });\n\n    var currentFields = _objectSpread({}, fields);\n\n    currentFields.search.options = options;\n    setLoading(false);\n    setFields(currentFields);\n  }, [defaultValue, fields, generateOptions]);\n  var fetch = useCallback(function () {\n    setLoading(true);\n    return client.query({\n      query: gql(query),\n      variables: {\n        searchValue: searchValue,\n        autoCompletionType: autoCompletionType,\n        autoCompletion: true\n      }\n    }).then(function (_ref2) {\n      var data = _ref2.data;\n      setFetchResult(data[queryName]);\n    });\n  }, [searchValue, autoCompletionType, query, queryName, setFetchResult]);\n  useEffect(function () {\n    if (searchValue.length === 0) {\n      return;\n    }\n\n    debounce(function () {\n      return fetch();\n    }, 400)();\n  }, [searchValue, fetch]);\n\n  var handleChange = function handleChange(option) {\n    setSearchValue('');\n    setSelectedValue(option);\n\n    if (option) {\n      var values = fields.added.options.map(function (item) {\n        return item.label;\n      });\n      onChange({\n        options: values,\n        selectedOption: option.value\n      });\n    }\n  };\n\n  var handleInput = function handleInput(input) {\n    setSearchValue(input);\n  };\n\n  var handleSave = function handleSave() {\n    setSearchValue('');\n    var newItem = {\n      label: searchValue,\n      value: searchValue,\n      onRemove: handleRemove\n    };\n\n    var currentFields = _objectSpread({}, fields);\n\n    var addedOptions = currentFields.added.options;\n    addedOptions.push(newItem);\n    setSelectedValue(newItem);\n    setFields(currentFields);\n\n    if (selectRef && selectRef.current) {\n      selectRef.current.handleInputBlur();\n    }\n\n    onChange({\n      options: addedOptions.map(function (item) {\n        return item.label;\n      }),\n      selectedOption: searchValue\n    });\n  };\n\n  var handleAdd = function handleAdd() {\n    var added = fields.added,\n        search = fields.search;\n    var hasSearchResult = search.options.length > 0;\n    var currentPossibleValues = added.options.map(function (item) {\n      return item.label;\n    });\n    var isDuplicated = currentPossibleValues.includes(searchValue);\n\n    if (hasSearchResult || isDuplicated) {\n      return;\n    }\n\n    if (checkFormat) {\n      if (checkFormat(searchValue)) {\n        return handleSave();\n      }\n\n      return Alert.error('Invalid format');\n    }\n\n    return handleSave();\n  };\n\n  var handleOnBlur = function handleOnBlur() {\n    var currentFields = _objectSpread({}, fields);\n\n    currentFields.search.options = [];\n    setFields(currentFields);\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // enter key\n    if (event.keyCode === 13 && searchValue.length !== 0) {\n      event.preventDefault();\n      handleAdd();\n    }\n  };\n\n  function renderNoResult() {\n    if (searchValue.length === 0) {\n      return 'Type to search';\n    }\n\n    return React.createElement(Button, {\n      btnStyle: \"link\",\n      uppercase: false,\n      onClick: handleAdd,\n      block: true,\n      icon: \"plus-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Add \", autoCompletionType);\n  }\n\n  var inputRenderer = function inputRenderer(props) {\n    return React.createElement(\"input\", Object.assign({}, props, {\n      value: searchValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, React.createElement(FillContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }, React.createElement(Select, {\n    ref: selectRef,\n    isLoading: loading,\n    required: required,\n    placeholder: placeholder,\n    inputRenderer: inputRenderer,\n    value: selectedValue,\n    options: selectOptions,\n    onSelectResetsInput: true,\n    onBlurResetsInput: true,\n    onBlur: handleOnBlur,\n    onChange: handleChange,\n    onInputKeyDown: handleKeyDown,\n    onInputChange: handleInput,\n    optionComponent: Option,\n    noResultsText: renderNoResult(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  })));\n}\n\nexport default AutoCompletionSelect;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/AutoCompletionSelect.tsx"],"names":["client","gql","_","debounce","Icon","React","useCallback","useEffect","useState","Select","styled","__","Alert","Button","Wrapper","div","OptionWrapper","FillContent","Option","props","option","onSelect","onRemove","onClick","e","onRemoveClick","stopPropagation","value","label","float","AutoCompletionSelect","placeholder","queryName","query","defaultOptions","autoCompletionType","defaultValue","required","checkFormat","onChange","selectRef","useRef","added","options","search","fields","setFields","selectOptions","setSelectOptions","selectedValue","setSelectedValue","searchValue","setSearchValue","loading","setLoading","generateOptions","list","length","map","item","push","handleRemove","currentFields","addedOptions","filteredOptions","filter","selectedOption","currentOptions","uniqBy","updatedOptions","setFetchResult","fetch","variables","autoCompletion","then","data","handleChange","values","handleInput","input","handleSave","newItem","current","handleInputBlur","handleAdd","hasSearchResult","currentPossibleValues","isDuplicated","includes","error","handleOnBlur","handleKeyDown","event","keyCode","preventDefault","renderNoResult","inputRenderer"],"mappings":"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","sourcesContent":["import client from 'apolloClient';\nimport gql from 'graphql-tag';\nimport * as _ from 'lodash';\nimport debounce from 'lodash/debounce';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Select from 'react-select-plus';\nimport styled from 'styled-components';\nimport { __, Alert } from '../utils';\nimport Button from 'erxes-common-ui/lib/components/button';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  input {\n    display: block;\n    width: 100%;\n    border: none;\n  }\n`;\n\nconst OptionWrapper = styled(Wrapper)`\n  padding: 8px 16px;\n  font-weight: 500;\n  border-bottom: 1px solid #eee;\n  &:last-child {\n    border: none;\n  }\n  &:hover {\n    background: #fafafa;\n    cursor: default;\n  }\n  i {\n    color: #ea475d;\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst FillContent = styled.div`\n  flex: 1;\n  margin-right: 5px;\n`;\n\nfunction Option(props: {\n  option: { label: string; value: string; onRemove: (value: string) => void };\n  onSelect: (option: Option, e: any) => void;\n}) {\n  const { option, onSelect } = props;\n  const { onRemove } = option;\n\n  const onClick = e => {\n    onSelect(option, e);\n  };\n\n  const onRemoveClick = e => {\n    e.stopPropagation();\n\n    onRemove(option.value);\n  };\n\n  if (!onRemove) {\n    return (\n      <OptionWrapper>\n        <FillContent>{option.label}</FillContent>\n        <small>({__('Already exist')})</small>\n      </OptionWrapper>\n    );\n  }\n\n  return (\n    <OptionWrapper onClick={onClick}>\n      <FillContent>{option.label}</FillContent>\n      <Icon\n        style={{ float: 'right' }}\n        icon=\"times-circle\"\n        onClick={onRemoveClick}\n      />\n    </OptionWrapper>\n  );\n}\n\ntype Option = {\n  label: string;\n  value?: string;\n  onRemove?: (value: string) => void;\n};\n\ntype Props = {\n  required?: boolean;\n  placeholder?: string;\n  defaultValue?: string;\n  defaultOptions: string[];\n  autoCompletionType: string;\n  queryName: string;\n  query: string;\n  checkFormat?: (value) => boolean;\n  onChange: (params: { options: string[]; selectedOption: any }) => void;\n};\n\ntype Field = {\n  search: { label: string; options: Option[] };\n  added: { label: string; options: Option[] };\n};\n\ntype SelectOptions = Array<{ label: string; options: Option[] }>;\n\nfunction AutoCompletionSelect({\n  placeholder,\n  queryName,\n  query,\n  defaultOptions,\n  autoCompletionType,\n  defaultValue,\n  required,\n  checkFormat,\n  onChange\n}: Props) {\n  const selectRef = React.useRef<{ handleInputBlur: () => void }>(null);\n\n  const [fields, setFields] = useState<Field>({\n    added: {\n      label: __(`Possible ${autoCompletionType}`),\n      options: []\n    },\n    search: {\n      label: __('Search result'),\n      options: []\n    }\n  });\n\n  const [selectOptions, setSelectOptions] = useState<SelectOptions>([]);\n  const [selectedValue, setSelectedValue] = useState<Option | null>(\n    defaultValue ? { label: defaultValue, value: defaultValue } : null\n  );\n  const [searchValue, setSearchValue] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const generateOptions = useCallback(\n    list => {\n      if (list.length === 0) {\n        return [];\n      }\n\n      const options: string[] = [];\n\n      list.map(item => options.push(...item[autoCompletionType]));\n\n      return options.map(item => ({\n        label: item,\n        value: item\n      }));\n    },\n    [autoCompletionType]\n  );\n\n  const handleRemove = useCallback(\n    (value: string) => {\n      const currentFields = { ...fields };\n      const addedOptions = currentFields.added.options;\n\n      const filteredOptions = addedOptions.filter(\n        option => option.value !== value\n      );\n\n      currentFields.added.options = filteredOptions;\n\n      setSearchValue('');\n      setSelectedValue(null);\n      setFields(currentFields);\n\n      onChange({\n        options: currentFields.added.options.map(item => item.label),\n        selectedOption: null\n      });\n    },\n    [fields, onChange]\n  );\n\n  useEffect(() => {\n    if (defaultOptions.length > 0) {\n      const options = defaultOptions.map(item => ({\n        label: item,\n        value: item,\n        onRemove: handleRemove\n      }));\n\n      const currentOptions = fields.added.options;\n\n      fields.added.options = _.uniqBy([...currentOptions, ...options], 'label');\n    }\n\n    const updatedOptions = [fields.added, fields.search];\n\n    setSelectOptions(updatedOptions);\n  }, [defaultOptions, fields, handleRemove]);\n\n  const setFetchResult = useCallback(\n    list => {\n      const options = generateOptions(list).filter(\n        item => item.label !== defaultValue\n      );\n\n      const currentFields = { ...fields };\n\n      currentFields.search.options = options;\n\n      setLoading(false);\n      setFields(currentFields);\n    },\n    [defaultValue, fields, generateOptions]\n  );\n\n  const fetch = useCallback(() => {\n    setLoading(true);\n\n    return client\n      .query({\n        query: gql(query),\n        variables: {\n          searchValue,\n          autoCompletionType,\n          autoCompletion: true\n        }\n      })\n      .then(({ data }) => {\n        setFetchResult(data[queryName]);\n      });\n  }, [searchValue, autoCompletionType, query, queryName, setFetchResult]);\n\n  useEffect(() => {\n    if (searchValue.length === 0) {\n      return;\n    }\n\n    debounce(() => fetch(), 400)();\n  }, [searchValue, fetch]);\n\n  const handleChange = option => {\n    setSearchValue('');\n    setSelectedValue(option);\n\n    if (option) {\n      const values = fields.added.options.map(item => item.label);\n\n      onChange({\n        options: values,\n        selectedOption: option.value\n      });\n    }\n  };\n\n  const handleInput = (input: string) => {\n    setSearchValue(input);\n  };\n\n  const handleSave = () => {\n    setSearchValue('');\n\n    const newItem = {\n      label: searchValue,\n      value: searchValue,\n      onRemove: handleRemove\n    };\n\n    const currentFields = { ...fields };\n    const addedOptions = currentFields.added.options;\n\n    addedOptions.push(newItem);\n\n    setSelectedValue(newItem);\n    setFields(currentFields);\n\n    if (selectRef && selectRef.current) {\n      selectRef.current.handleInputBlur();\n    }\n\n    onChange({\n      options: addedOptions.map(item => item.label),\n      selectedOption: searchValue\n    });\n  };\n\n  const handleAdd = () => {\n    const { added, search } = fields;\n\n    const hasSearchResult = search.options.length > 0;\n    const currentPossibleValues = added.options.map(item => item.label);\n\n    const isDuplicated = currentPossibleValues.includes(searchValue);\n\n    if (hasSearchResult || isDuplicated) {\n      return;\n    }\n\n    if (checkFormat) {\n      if (checkFormat(searchValue)) {\n        return handleSave();\n      }\n\n      return Alert.error('Invalid format');\n    }\n\n    return handleSave();\n  };\n\n  const handleOnBlur = () => {\n    const currentFields = { ...fields };\n\n    currentFields.search.options = [];\n\n    setFields(currentFields);\n  };\n\n  const handleKeyDown = event => {\n    // enter key\n    if (event.keyCode === 13 && searchValue.length !== 0) {\n      event.preventDefault();\n\n      handleAdd();\n    }\n  };\n\n  function renderNoResult() {\n    if (searchValue.length === 0) {\n      return 'Type to search';\n    }\n\n    return (\n      <Button\n        btnStyle=\"link\"\n        uppercase={false}\n        onClick={handleAdd}\n        block={true}\n        icon=\"plus-circle\"\n      >\n        Add {autoCompletionType}\n      </Button>\n    );\n  }\n\n  const inputRenderer = props => {\n    return <input {...props} value={searchValue} />;\n  };\n\n  return (\n    <Wrapper>\n      <FillContent>\n        <Select\n          ref={selectRef}\n          isLoading={loading}\n          required={required}\n          placeholder={placeholder}\n          inputRenderer={inputRenderer}\n          value={selectedValue}\n          options={selectOptions}\n          onSelectResetsInput={true}\n          onBlurResetsInput={true}\n          onBlur={handleOnBlur}\n          onChange={handleChange}\n          onInputKeyDown={handleKeyDown}\n          onInputChange={handleInput}\n          optionComponent={Option}\n          noResultsText={renderNoResult()}\n        />\n      </FillContent>\n    </Wrapper>\n  );\n}\n\nexport default AutoCompletionSelect;\n"]},"metadata":{},"sourceType":"module"}