{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/notifications/components/NotificationsLatest.tsx\";\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Spinner from 'modules/common/components/Spinner';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport NotificationRow from './NotificationRow';\nimport { MarkAllRead, NotificationList, NotificationSeeAll, NotificationWrapper, PopoverContent } from './styles';\n\nvar NotificationsLatest =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NotificationsLatest, _React$Component);\n\n  function NotificationsLatest() {\n    _classCallCheck(this, NotificationsLatest);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NotificationsLatest).apply(this, arguments));\n  }\n\n  _createClass(NotificationsLatest, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          notifications = _this$props.notifications,\n          markAsRead = _this$props.markAsRead,\n          isLoading = _this$props.isLoading;\n\n      if (isLoading) {\n        return React.createElement(Spinner, {\n          objective: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      }\n\n      var mainContent = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(NotificationList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, notifications.map(function (notif, key) {\n        return React.createElement(NotificationRow, {\n          notification: notif,\n          key: key,\n          markAsRead: markAsRead,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      })), React.createElement(NotificationSeeAll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/notifications\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __('See all'))), React.createElement(MarkAllRead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: markAsRead.bind(this, []),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, __('Mark all as read')), ' '));\n      var emptyContent = React.createElement(PopoverContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(EmptyState, {\n        text: __('Looks like you are all caught up'),\n        image: \"/images/actions/17.svg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n\n      var content = function content() {\n        if (notifications.length === 0) {\n          return emptyContent;\n        }\n\n        return React.createElement(NotificationWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, mainContent);\n      };\n\n      return content();\n    }\n  }]);\n\n  return NotificationsLatest;\n}(React.Component);\n\nexport default NotificationsLatest;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/notifications/components/NotificationsLatest.tsx"],"names":["EmptyState","Spinner","__","React","Link","NotificationRow","MarkAllRead","NotificationList","NotificationSeeAll","NotificationWrapper","PopoverContent","NotificationsLatest","props","notifications","markAsRead","isLoading","mainContent","map","notif","key","bind","emptyContent","content","length","Component"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,sCAAvB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,EAAT,QAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SACEC,WADF,EAEEC,gBAFF,EAGEC,kBAHF,EAIEC,mBAJF,EAKEC,cALF,QAMO,UANP;;IAcMC,mB;;;;;;;;;;;;;6BACK;AAAA,wBAC0C,KAAKC,KAD/C;AAAA,UACCC,aADD,eACCA,aADD;AAAA,UACgBC,UADhB,eACgBA,UADhB;AAAA,UAC4BC,SAD5B,eAC4BA,SAD5B;;AAGP,UAAIA,SAAJ,EAAe;AACb,eAAO,oBAAC,OAAD;AAAS,UAAA,SAAS,EAAE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,UAAMC,WAAW,GACf,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,aAAa,CAACI,GAAd,CAAkB,UAACC,KAAD,EAAQC,GAAR;AAAA,eACjB,oBAAC,eAAD;AACE,UAAA,YAAY,EAAED,KADhB;AAEE,UAAA,GAAG,EAAEC,GAFP;AAGE,UAAA,UAAU,EAAEL,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADiB;AAAA,OAAlB,CADH,CADF,EAUE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BZ,EAAE,CAAC,SAAD,CAA7B,CADF,CAVF,EAaE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,OAAO,EAAEY,UAAU,CAACM,IAAX,CAAgB,IAAhB,EAAsB,EAAtB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGlB,EAAE,CAAC,kBAAD,CADL,CADF,EAGU,GAHV,CAbF,CADF;AAsBA,UAAMmB,YAAY,GAChB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAEnB,EAAE,CAAC,kCAAD,CADV;AAEE,QAAA,KAAK,EAAC,wBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;;AASA,UAAMoB,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,YAAIT,aAAa,CAACU,MAAd,KAAyB,CAA7B,EAAgC;AAC9B,iBAAOF,YAAP;AACD;;AAED,eAAO,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBL,WAAtB,CAAP;AACD,OAND;;AAQA,aAAOM,OAAO,EAAd;AACD;;;;EAhD+BnB,KAAK,CAACqB,S;;AAmDxC,eAAeb,mBAAf","sourcesContent":["import EmptyState from 'modules/common/components/EmptyState';\nimport Spinner from 'modules/common/components/Spinner';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { INotification } from '../types';\nimport NotificationRow from './NotificationRow';\nimport {\n  MarkAllRead,\n  NotificationList,\n  NotificationSeeAll,\n  NotificationWrapper,\n  PopoverContent\n} from './styles';\n\ntype Props = {\n  notifications: INotification[];\n  markAsRead: (notificationIds?: string[]) => void;\n  isLoading: boolean;\n};\n\nclass NotificationsLatest extends React.Component<Props> {\n  render() {\n    const { notifications, markAsRead, isLoading } = this.props;\n\n    if (isLoading) {\n      return <Spinner objective={true} />;\n    }\n\n    const mainContent = (\n      <React.Fragment>\n        <NotificationList>\n          {notifications.map((notif, key) => (\n            <NotificationRow\n              notification={notif}\n              key={key}\n              markAsRead={markAsRead}\n            />\n          ))}\n        </NotificationList>\n        <NotificationSeeAll>\n          <Link to=\"/notifications\">{__('See all')}</Link>\n        </NotificationSeeAll>\n        <MarkAllRead>\n          <span onClick={markAsRead.bind(this, [])}>\n            {__('Mark all as read')}\n          </span>{' '}\n        </MarkAllRead>\n      </React.Fragment>\n    );\n\n    const emptyContent = (\n      <PopoverContent>\n        <EmptyState\n          text={__('Looks like you are all caught up')}\n          image=\"/images/actions/17.svg\"\n        />\n      </PopoverContent>\n    );\n\n    const content = () => {\n      if (notifications.length === 0) {\n        return emptyContent;\n      }\n\n      return <NotificationWrapper>{mainContent}</NotificationWrapper>;\n    };\n\n    return content();\n  }\n}\n\nexport default NotificationsLatest;\n"]},"metadata":{},"sourceType":"module"}