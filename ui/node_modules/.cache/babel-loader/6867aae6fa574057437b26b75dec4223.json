{"ast":null,"code":"import _slicedToArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/checklists/components/Item.tsx\";\nimport debounce from \"lodash/debounce\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport DropdownToggle from \"modules/common/components/DropdownToggle\";\nimport { FormControl } from \"modules/common/components/form\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport { isEmptyContent } from \"modules/common/utils\";\nimport React, { useEffect, useState } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport xss from \"xss\";\nimport { ChecklistItem, ChecklistText, FormControlWrapper, FormWrapper } from \"../styles\";\n\nfunction Item(props) {\n  var item = props.item;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEditing = _useState2[0],\n      setIsEditing = _useState2[1];\n\n  var _useState3 = useState(item.content),\n      _useState4 = _slicedToArray(_useState3, 2),\n      content = _useState4[0],\n      setContent = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      disabled = _useState6[0],\n      setDisabled = _useState6[1];\n\n  var _useState7 = useState(item.isChecked || false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isChecked = _useState8[0],\n      setIsChecked = _useState8[1];\n\n  var _useState9 = useState(item.content),\n      _useState10 = _slicedToArray(_useState9, 2),\n      beforeContent = _useState10[0],\n      setBeforeContent = _useState10[1];\n\n  useEffect(function () {\n    setIsChecked(item.isChecked || false);\n    setBeforeContent(item.content);\n    setContent(item.content);\n  }, [item]);\n\n  function onFocus(event) {\n    event.target.select();\n  }\n\n  function onClick() {\n    setIsEditing(true);\n    setBeforeContent(content);\n  }\n\n  function onKeyPress(e) {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSave();\n    }\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    handleSave();\n  }\n\n  function onBlur() {\n    if (isEmptyContent(content)) {\n      return;\n    }\n\n    debounce(function () {\n      return setIsEditing(false);\n    }, 100)();\n  }\n\n  function onCheckChange(e) {\n    var editItem = props.editItem;\n    var checked = e.currentTarget.checked;\n    setIsChecked(checked);\n    setIsEditing(false);\n    editItem({\n      content: content,\n      isChecked: checked\n    });\n  }\n\n  function handleSave() {\n    if (isEmptyContent(content)) {\n      return;\n    }\n\n    setDisabled(true);\n    props.editItem({\n      content: content,\n      isChecked: isChecked\n    }, function () {\n      setDisabled(false);\n      setIsEditing(false);\n    });\n  }\n\n  function onRemove() {\n    var removeItem = props.removeItem;\n    removeItem(item._id);\n  }\n\n  function onConvert() {\n    props.convertToCard(content, onRemove);\n  }\n\n  function renderContent() {\n    var onChangeContent = function onChangeContent(e) {\n      setContent(e.currentTarget.value);\n    };\n\n    var onCancel = function onCancel() {\n      setIsEditing(false);\n      setContent(beforeContent);\n    };\n\n    if (isEditing) {\n      return React.createElement(FormWrapper, {\n        onSubmit: onSubmit,\n        onBlur: onBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(FormControlWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        componentClass: \"textarea\",\n        autoFocus: true,\n        onFocus: onFocus,\n        onChange: onChangeContent,\n        value: content,\n        onKeyPress: onKeyPress,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(Button, {\n        disabled: disabled,\n        btnStyle: \"success\",\n        type: \"submit\",\n        size: \"small\",\n        icon: \"check-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Button, {\n        btnStyle: \"simple\",\n        size: \"small\",\n        onClick: onCancel,\n        icon: \"times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(ChecklistText, {\n      isChecked: isChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      onClick: onClick,\n      dangerouslySetInnerHTML: {\n        __html: xss(content)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(Dropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      as: DropdownToggle,\n      id: \"dropdown-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: \"ellipsis-h\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: onConvert,\n      href: \"#convert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Convert to Card\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: onRemove,\n      href: \"#remove\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Delete\")))));\n  }\n\n  return React.createElement(ChecklistItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    componentClass: \"checkbox\",\n    checked: isChecked,\n    onChange: onCheckChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), renderContent());\n}\n\nexport default Item;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/checklists/components/Item.tsx"],"names":["debounce","Button","DropdownToggle","FormControl","Icon","isEmptyContent","React","useEffect","useState","Dropdown","xss","ChecklistItem","ChecklistText","FormControlWrapper","FormWrapper","Item","props","item","isEditing","setIsEditing","content","setContent","disabled","setDisabled","isChecked","setIsChecked","beforeContent","setBeforeContent","onFocus","event","target","select","onClick","onKeyPress","e","key","preventDefault","handleSave","onSubmit","onBlur","onCheckChange","editItem","checked","currentTarget","onRemove","removeItem","_id","onConvert","convertToCard","renderContent","onChangeContent","value","onCancel","__html"],"mappings":"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","sourcesContent":["import debounce from \"lodash/debounce\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport DropdownToggle from \"modules/common/components/DropdownToggle\";\nimport { FormControl } from \"modules/common/components/form\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport { isEmptyContent } from \"modules/common/utils\";\nimport React, { useEffect, useState } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport xss from \"xss\";\nimport {\n  ChecklistItem,\n  ChecklistText,\n  FormControlWrapper,\n  FormWrapper,\n} from \"../styles\";\nimport { IChecklistItem } from \"../types\";\n\ntype Props = {\n  item: IChecklistItem;\n  editItem: (\n    doc: { content: string; isChecked: boolean },\n    callback?: () => void\n  ) => void;\n  convertToCard: (name: string, callback: () => void) => void;\n  removeItem: (checklistItemId: string) => void;\n};\n\nfunction Item(props: Props) {\n  const item = props.item;\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [content, setContent] = useState(item.content);\n  const [disabled, setDisabled] = useState(false);\n  const [isChecked, setIsChecked] = useState(item.isChecked || false);\n  const [beforeContent, setBeforeContent] = useState(item.content);\n\n  useEffect(() => {\n    setIsChecked(item.isChecked || false);\n    setBeforeContent(item.content);\n    setContent(item.content);\n  }, [item]);\n\n  function onFocus(event) {\n    event.target.select();\n  }\n\n  function onClick() {\n    setIsEditing(true);\n    setBeforeContent(content);\n  }\n\n  function onKeyPress(e) {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n\n      handleSave();\n    }\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n\n    handleSave();\n  }\n\n  function onBlur() {\n    if (isEmptyContent(content)) {\n      return;\n    }\n\n    debounce(() => setIsEditing(false), 100)();\n  }\n\n  function onCheckChange(e) {\n    const { editItem } = props;\n\n    const checked = (e.currentTarget as HTMLInputElement).checked;\n\n    setIsChecked(checked);\n    setIsEditing(false);\n\n    editItem({ content, isChecked: checked });\n  }\n\n  function handleSave() {\n    if (isEmptyContent(content)) {\n      return;\n    }\n\n    setDisabled(true);\n\n    props.editItem({ content, isChecked }, () => {\n      setDisabled(false);\n      setIsEditing(false);\n    });\n  }\n\n  function onRemove() {\n    const { removeItem } = props;\n\n    removeItem(item._id);\n  }\n\n  function onConvert() {\n    props.convertToCard(content, onRemove);\n  }\n\n  function renderContent() {\n    const onChangeContent = (e) => {\n      setContent((e.currentTarget as HTMLTextAreaElement).value);\n    };\n\n    const onCancel = () => {\n      setIsEditing(false);\n      setContent(beforeContent);\n    };\n\n    if (isEditing) {\n      return (\n        <FormWrapper onSubmit={onSubmit} onBlur={onBlur}>\n          <FormControlWrapper>\n            <FormControl\n              componentClass=\"textarea\"\n              autoFocus={true}\n              onFocus={onFocus}\n              onChange={onChangeContent}\n              value={content}\n              onKeyPress={onKeyPress}\n              required={true}\n            />\n            <Button\n              disabled={disabled}\n              btnStyle=\"success\"\n              type=\"submit\"\n              size=\"small\"\n              icon=\"check-1\"\n            />\n            <Button\n              btnStyle=\"simple\"\n              size=\"small\"\n              onClick={onCancel}\n              icon=\"times\"\n            />\n          </FormControlWrapper>\n        </FormWrapper>\n      );\n    }\n\n    return (\n      <ChecklistText isChecked={isChecked}>\n        <label\n          onClick={onClick}\n          dangerouslySetInnerHTML={{ __html: xss(content) }}\n        />\n\n        <Dropdown>\n          <Dropdown.Toggle as={DropdownToggle} id=\"dropdown-brand\">\n            <Icon icon=\"ellipsis-h\" />\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <li>\n              <a onClick={onConvert} href=\"#convert\">\n                Convert to Card\n              </a>\n            </li>\n            <li>\n              <a onClick={onRemove} href=\"#remove\">\n                Delete\n              </a>\n            </li>\n          </Dropdown.Menu>\n        </Dropdown>\n      </ChecklistText>\n    );\n  }\n\n  return (\n    <ChecklistItem>\n      <FormControl\n        componentClass=\"checkbox\"\n        checked={isChecked}\n        onChange={onCheckChange}\n      />\n      {renderContent()}\n    </ChecklistItem>\n  );\n}\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}