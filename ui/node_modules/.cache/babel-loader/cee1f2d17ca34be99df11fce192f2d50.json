{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/containers/conversationDetail/SidebarActivity.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { queries } from 'modules/activityLogs/graphql';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withProps } from '../../../common/utils';\nimport SidebarActivity from '../../components/conversationDetail/sidebar/SidebarActivity';\n\nvar SidebarActivityContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SidebarActivityContainer, _React$Component);\n\n  function SidebarActivityContainer() {\n    _classCallCheck(this, SidebarActivityContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SidebarActivityContainer).apply(this, arguments));\n  }\n\n  _createClass(SidebarActivityContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          customerActivityLogQuery = _this$props.customerActivityLogQuery,\n          currentUser = _this$props.currentUser,\n          customer = _this$props.customer;\n\n      var updatedProps = _objectSpread({}, this.props, {\n        customer: customer,\n        loadingLogs: customerActivityLogQuery.loading,\n        activityLogsCustomer: customerActivityLogQuery.activityLogs || [],\n        currentUser: currentUser\n      });\n\n      return React.createElement(SidebarActivity, Object.assign({}, updatedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SidebarActivityContainer;\n}(React.Component);\n\nexport default withProps(compose(graphql(gql(queries.activityLogs), {\n  name: 'customerActivityLogQuery',\n  options: function options(_ref) {\n    var customer = _ref.customer;\n    return {\n      variables: {\n        contentId: customer._id,\n        contentType: 'customer'\n      }\n    };\n  }\n}))(SidebarActivityContainer));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/containers/conversationDetail/SidebarActivity.tsx"],"names":["gql","compose","queries","React","graphql","withProps","SidebarActivity","SidebarActivityContainer","props","customerActivityLogQuery","currentUser","customer","updatedProps","loadingLogs","loading","activityLogsCustomer","activityLogs","Component","name","options","variables","contentId","_id","contentType"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,eAAP,MAA4B,6DAA5B;;IAYMC,wB;;;;;;;;;;;;;6BACK;AAAA,wBACqD,KAAKC,KAD1D;AAAA,UACCC,wBADD,eACCA,wBADD;AAAA,UAC2BC,WAD3B,eAC2BA,WAD3B;AAAA,UACwCC,QADxC,eACwCA,QADxC;;AAGP,UAAMC,YAAY,qBACb,KAAKJ,KADQ;AAEhBG,QAAAA,QAAQ,EAARA,QAFgB;AAGhBE,QAAAA,WAAW,EAAEJ,wBAAwB,CAACK,OAHtB;AAIhBC,QAAAA,oBAAoB,EAAEN,wBAAwB,CAACO,YAAzB,IAAyC,EAJ/C;AAKhBN,QAAAA,WAAW,EAAXA;AALgB,QAAlB;;AAQA,aAAO,oBAAC,eAAD,oBAAqBE,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAboCT,KAAK,CAACc,S;;AAgB7C,eAAeZ,SAAS,CACtBJ,OAAO,CACLG,OAAO,CAAkCJ,GAAG,CAACE,OAAO,CAACc,YAAT,CAArC,EAA6D;AAClEE,EAAAA,IAAI,EAAE,0BAD4D;AAElEC,EAAAA,OAAO,EAAE;AAAA,QAAGR,QAAH,QAAGA,QAAH;AAAA,WAAmB;AAC1BS,MAAAA,SAAS,EAAE;AACTC,QAAAA,SAAS,EAAEV,QAAQ,CAACW,GADX;AAETC,QAAAA,WAAW,EAAE;AAFJ;AADe,KAAnB;AAAA;AAFyD,CAA7D,CADF,CAAP,CAUEhB,wBAVF,CADsB,CAAxB","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { queries } from 'modules/activityLogs/graphql';\nimport { IUser } from 'modules/auth/types';\nimport { ActivityLogQueryResponse, ICustomer } from 'modules/customers/types';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withProps } from '../../../common/utils';\nimport SidebarActivity from '../../components/conversationDetail/sidebar/SidebarActivity';\n\ntype Props = {\n  customer: ICustomer;\n  currentSubTab: string;\n};\n\ntype FinalProps = {\n  customerActivityLogQuery: ActivityLogQueryResponse;\n  currentUser: IUser;\n} & Props;\n\nclass SidebarActivityContainer extends React.Component<FinalProps> {\n  render() {\n    const { customerActivityLogQuery, currentUser, customer } = this.props;\n\n    const updatedProps = {\n      ...this.props,\n      customer,\n      loadingLogs: customerActivityLogQuery.loading,\n      activityLogsCustomer: customerActivityLogQuery.activityLogs || [],\n      currentUser\n    };\n\n    return <SidebarActivity {...updatedProps} />;\n  }\n}\n\nexport default withProps<Props>(\n  compose(\n    graphql<Props, ActivityLogQueryResponse>(gql(queries.activityLogs), {\n      name: 'customerActivityLogQuery',\n      options: ({ customer }) => ({\n        variables: {\n          contentId: customer._id,\n          contentType: 'customer'\n        }\n      })\n    })\n  )(SidebarActivityContainer)\n);\n"]},"metadata":{},"sourceType":"module"}