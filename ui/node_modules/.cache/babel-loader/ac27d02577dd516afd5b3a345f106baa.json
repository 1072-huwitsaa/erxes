{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/activityLogs/containers/items/boardItems/Task.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport Task from 'modules/activityLogs/components/items/boardItems/Task';\nimport { Alert, confirm, withProps } from 'modules/common/utils';\nimport { mutations, queries } from 'modules/tasks/graphql';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\n\nvar FormContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormContainer, _React$Component);\n\n  function FormContainer() {\n    _classCallCheck(this, FormContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FormContainer).apply(this, arguments));\n  }\n\n  _createClass(FormContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          taskDetailsQuery = _this$props.taskDetailsQuery,\n          editMutation = _this$props.editMutation,\n          removeMutation = _this$props.removeMutation;\n\n      if (taskDetailsQuery.loading) {\n        return null;\n      }\n\n      var task = taskDetailsQuery.taskDetail;\n\n      if (!task) {\n        return React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"You do not have permission to view this task\");\n      }\n\n      var save = function save(variables, callback) {\n        editMutation({\n          variables: variables\n        }).then(function () {\n          Alert.success('You successfully updated a task.');\n\n          if (callback) {\n            callback();\n          }\n        }).catch(function (error) {\n          Alert.error(error.message);\n        });\n      };\n\n      var remove = function remove(taskId) {\n        confirm().then(function () {\n          return removeMutation({\n            variables: {\n              _id: taskId\n            }\n          }).then(function () {\n            Alert.success('You successfully deleted a task.');\n          }).catch(function (error) {\n            Alert.error(error.message);\n          });\n        });\n      };\n\n      var updatedProps = _objectSpread({}, this.props, {\n        task: task,\n        save: save,\n        remove: remove\n      });\n\n      return React.createElement(Task, Object.assign({}, updatedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FormContainer;\n}(React.Component);\n\nexport default withProps(compose(graphql(gql(queries.taskDetail), {\n  name: 'taskDetailsQuery',\n  options: function options(_ref) {\n    var taskId = _ref.taskId;\n    return {\n      variables: {\n        _id: taskId\n      }\n    };\n  }\n}), graphql(gql(mutations.tasksEdit), {\n  name: 'editMutation'\n}), graphql(gql(mutations.tasksRemove), {\n  name: 'removeMutation',\n  options: function options() {\n    return {\n      refetchQueries: ['activityLogs']\n    };\n  }\n}))(FormContainer));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/activityLogs/containers/items/boardItems/Task.tsx"],"names":["gql","compose","Task","Alert","confirm","withProps","mutations","queries","React","graphql","FormContainer","props","taskDetailsQuery","editMutation","removeMutation","loading","task","taskDetail","save","variables","callback","then","success","catch","error","message","remove","taskId","_id","updatedProps","Component","name","options","tasksEdit","tasksRemove","refetchQueries"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport Task from 'modules/activityLogs/components/items/boardItems/Task';\nimport { Alert, confirm, withProps } from 'modules/common/utils';\nimport { mutations, queries } from 'modules/tasks/graphql';\nimport {\n  EditMutationResponse,\n  RemoveMutationResponse,\n  TaskDetailQueryResponse\n} from 'modules/tasks/types';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\n\ntype Props = {\n  taskId: string;\n};\n\ntype FinalProps = {\n  taskDetailsQuery: TaskDetailQueryResponse;\n  editMutation: EditMutationResponse;\n} & Props &\n  RemoveMutationResponse;\n\nclass FormContainer extends React.Component<FinalProps> {\n  render() {\n    const { taskDetailsQuery, editMutation, removeMutation } = this.props;\n\n    if (taskDetailsQuery.loading) {\n      return null;\n    }\n\n    const task = taskDetailsQuery.taskDetail;\n\n    if (!task) {\n      return <strong>You do not have permission to view this task</strong>;\n    }\n\n    const save = (variables, callback) => {\n      editMutation({ variables })\n        .then(() => {\n          Alert.success('You successfully updated a task.');\n\n          if (callback) {\n            callback();\n          }\n        })\n        .catch(error => {\n          Alert.error(error.message);\n        });\n    };\n\n    const remove = (taskId: string) => {\n      confirm().then(() =>\n        removeMutation({ variables: { _id: taskId } })\n          .then(() => {\n            Alert.success('You successfully deleted a task.');\n          })\n          .catch(error => {\n            Alert.error(error.message);\n          })\n      );\n    };\n\n    const updatedProps = {\n      ...this.props,\n      task,\n      save,\n      remove\n    };\n\n    return <Task {...updatedProps} />;\n  }\n}\n\nexport default withProps<Props>(\n  compose(\n    graphql<Props, TaskDetailQueryResponse>(gql(queries.taskDetail), {\n      name: 'taskDetailsQuery',\n      options: ({ taskId }) => ({\n        variables: {\n          _id: taskId\n        }\n      })\n    }),\n    graphql<Props, EditMutationResponse>(gql(mutations.tasksEdit), {\n      name: 'editMutation'\n    }),\n    graphql<Props, RemoveMutationResponse>(gql(mutations.tasksRemove), {\n      name: 'removeMutation',\n      options: () => ({\n        refetchQueries: ['activityLogs']\n      })\n    })\n  )(FormContainer)\n);\n"]},"metadata":{},"sourceType":"module"}