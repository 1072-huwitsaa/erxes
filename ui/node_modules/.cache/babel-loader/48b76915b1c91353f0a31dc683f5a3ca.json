{"ast":null,"code":"import { toArray } from 'modules/boards/utils';\nimport TicketEditForm from 'modules/tickets/components/TicketEditForm';\nimport TicketItem from './components/TicketItem';\nimport { mutations, queries } from './graphql';\nvar options = {\n  EditForm: TicketEditForm,\n  Item: TicketItem,\n  type: 'ticket',\n  title: 'Ticket',\n  queriesName: {\n    itemsQuery: 'tickets',\n    detailQuery: 'ticketDetail',\n    archivedItemsQuery: 'archivedTickets',\n    archivedItemsCountQuery: 'archivedTicketsCount'\n  },\n  mutationsName: {\n    addMutation: 'ticketsAdd',\n    editMutation: 'ticketsEdit',\n    removeMutation: 'ticketsRemove',\n    changeMutation: 'ticketsChange',\n    watchMutation: 'ticketsWatch',\n    archiveMutation: 'ticketsArchive',\n    copyMutation: 'ticketsCopy'\n  },\n  queries: {\n    itemsQuery: queries.tickets,\n    detailQuery: queries.ticketDetail,\n    archivedItemsQuery: queries.archivedTickets,\n    archivedItemsCountQuery: queries.archivedTicketsCount\n  },\n  mutations: {\n    addMutation: mutations.ticketsAdd,\n    editMutation: mutations.ticketsEdit,\n    removeMutation: mutations.ticketsRemove,\n    changeMutation: mutations.ticketsChange,\n    watchMutation: mutations.ticketsWatch,\n    archiveMutation: mutations.ticketsArchive,\n    copyMutation: mutations.ticketsCopy\n  },\n  texts: {\n    addText: 'Add a ticket',\n    updateSuccessText: 'You successfully updated a ticket',\n    deleteSuccessText: 'You successfully deleted a ticket',\n    copySuccessText: 'You successfully copied a ticket',\n    changeSuccessText: 'You successfully changed a ticket'\n  },\n  isMove: true,\n  getExtraParams: function getExtraParams(queryParams) {\n    var priority = queryParams.priority,\n        source = queryParams.source;\n    var extraParams = {};\n\n    if (priority) {\n      extraParams.priority = toArray(priority);\n    }\n\n    if (source) {\n      extraParams.source = toArray(source);\n    }\n\n    return extraParams;\n  }\n};\nexport default options;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/tickets/options.ts"],"names":["toArray","TicketEditForm","TicketItem","mutations","queries","options","EditForm","Item","type","title","queriesName","itemsQuery","detailQuery","archivedItemsQuery","archivedItemsCountQuery","mutationsName","addMutation","editMutation","removeMutation","changeMutation","watchMutation","archiveMutation","copyMutation","tickets","ticketDetail","archivedTickets","archivedTicketsCount","ticketsAdd","ticketsEdit","ticketsRemove","ticketsChange","ticketsWatch","ticketsArchive","ticketsCopy","texts","addText","updateSuccessText","deleteSuccessText","copySuccessText","changeSuccessText","isMove","getExtraParams","queryParams","priority","source","extraParams"],"mappings":"AAAA,SAASA,OAAT,QAAwB,sBAAxB;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,WAAnC;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAEL,cADI;AAEdM,EAAAA,IAAI,EAAEL,UAFQ;AAGdM,EAAAA,IAAI,EAAE,QAHQ;AAIdC,EAAAA,KAAK,EAAE,QAJO;AAKdC,EAAAA,WAAW,EAAE;AACXC,IAAAA,UAAU,EAAE,SADD;AAEXC,IAAAA,WAAW,EAAE,cAFF;AAGXC,IAAAA,kBAAkB,EAAE,iBAHT;AAIXC,IAAAA,uBAAuB,EAAE;AAJd,GALC;AAWdC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,YADA;AAEbC,IAAAA,YAAY,EAAE,aAFD;AAGbC,IAAAA,cAAc,EAAE,eAHH;AAIbC,IAAAA,cAAc,EAAE,eAJH;AAKbC,IAAAA,aAAa,EAAE,cALF;AAMbC,IAAAA,eAAe,EAAE,gBANJ;AAObC,IAAAA,YAAY,EAAE;AAPD,GAXD;AAoBdlB,EAAAA,OAAO,EAAE;AACPO,IAAAA,UAAU,EAAEP,OAAO,CAACmB,OADb;AAEPX,IAAAA,WAAW,EAAER,OAAO,CAACoB,YAFd;AAGPX,IAAAA,kBAAkB,EAAET,OAAO,CAACqB,eAHrB;AAIPX,IAAAA,uBAAuB,EAAEV,OAAO,CAACsB;AAJ1B,GApBK;AA0BdvB,EAAAA,SAAS,EAAE;AACTa,IAAAA,WAAW,EAAEb,SAAS,CAACwB,UADd;AAETV,IAAAA,YAAY,EAAEd,SAAS,CAACyB,WAFf;AAGTV,IAAAA,cAAc,EAAEf,SAAS,CAAC0B,aAHjB;AAITV,IAAAA,cAAc,EAAEhB,SAAS,CAAC2B,aAJjB;AAKTV,IAAAA,aAAa,EAAEjB,SAAS,CAAC4B,YALhB;AAMTV,IAAAA,eAAe,EAAElB,SAAS,CAAC6B,cANlB;AAOTV,IAAAA,YAAY,EAAEnB,SAAS,CAAC8B;AAPf,GA1BG;AAmCdC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,cADJ;AAELC,IAAAA,iBAAiB,EAAE,mCAFd;AAGLC,IAAAA,iBAAiB,EAAE,mCAHd;AAILC,IAAAA,eAAe,EAAE,kCAJZ;AAKLC,IAAAA,iBAAiB,EAAE;AALd,GAnCO;AA0CdC,EAAAA,MAAM,EAAE,IA1CM;AA2CdC,EAAAA,cAAc,EAAE,wBAACC,WAAD,EAAsB;AAAA,QAC5BC,QAD4B,GACPD,WADO,CAC5BC,QAD4B;AAAA,QAClBC,MADkB,GACPF,WADO,CAClBE,MADkB;AAEpC,QAAMC,WAAgB,GAAG,EAAzB;;AAEA,QAAIF,QAAJ,EAAc;AACZE,MAAAA,WAAW,CAACF,QAAZ,GAAuB3C,OAAO,CAAC2C,QAAD,CAA9B;AACD;;AAED,QAAIC,MAAJ,EAAY;AACVC,MAAAA,WAAW,CAACD,MAAZ,GAAqB5C,OAAO,CAAC4C,MAAD,CAA5B;AACD;;AAED,WAAOC,WAAP;AACD;AAxDa,CAAhB;AA2DA,eAAexC,OAAf","sourcesContent":["import { toArray } from 'modules/boards/utils';\nimport TicketEditForm from 'modules/tickets/components/TicketEditForm';\nimport TicketItem from './components/TicketItem';\nimport { mutations, queries } from './graphql';\n\nconst options = {\n  EditForm: TicketEditForm,\n  Item: TicketItem,\n  type: 'ticket',\n  title: 'Ticket',\n  queriesName: {\n    itemsQuery: 'tickets',\n    detailQuery: 'ticketDetail',\n    archivedItemsQuery: 'archivedTickets',\n    archivedItemsCountQuery: 'archivedTicketsCount'\n  },\n  mutationsName: {\n    addMutation: 'ticketsAdd',\n    editMutation: 'ticketsEdit',\n    removeMutation: 'ticketsRemove',\n    changeMutation: 'ticketsChange',\n    watchMutation: 'ticketsWatch',\n    archiveMutation: 'ticketsArchive',\n    copyMutation: 'ticketsCopy'\n  },\n  queries: {\n    itemsQuery: queries.tickets,\n    detailQuery: queries.ticketDetail,\n    archivedItemsQuery: queries.archivedTickets,\n    archivedItemsCountQuery: queries.archivedTicketsCount\n  },\n  mutations: {\n    addMutation: mutations.ticketsAdd,\n    editMutation: mutations.ticketsEdit,\n    removeMutation: mutations.ticketsRemove,\n    changeMutation: mutations.ticketsChange,\n    watchMutation: mutations.ticketsWatch,\n    archiveMutation: mutations.ticketsArchive,\n    copyMutation: mutations.ticketsCopy\n  },\n  texts: {\n    addText: 'Add a ticket',\n    updateSuccessText: 'You successfully updated a ticket',\n    deleteSuccessText: 'You successfully deleted a ticket',\n    copySuccessText: 'You successfully copied a ticket',\n    changeSuccessText: 'You successfully changed a ticket'\n  },\n  isMove: true,\n  getExtraParams: (queryParams: any) => {\n    const { priority, source } = queryParams;\n    const extraParams: any = {};\n\n    if (priority) {\n      extraParams.priority = toArray(priority);\n    }\n\n    if (source) {\n      extraParams.source = toArray(source);\n    }\n\n    return extraParams;\n  }\n};\n\nexport default options;\n"]},"metadata":{},"sourceType":"module"}