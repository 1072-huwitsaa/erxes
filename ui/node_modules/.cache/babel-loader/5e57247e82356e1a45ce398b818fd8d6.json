{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/MainActionBar.tsx\";\nimport DropdownToggle from 'modules/common/components/DropdownToggle';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Tip from 'modules/common/components/Tip';\nimport { __ } from 'modules/common/utils';\nimport Participators from 'modules/inbox/components/conversationDetail/workarea/Participators';\nimport { BarItems } from 'modules/layout/styles';\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Link } from 'react-router-dom';\nimport PipelineWatch from '../containers/PipelineWatch';\nimport { HeaderButton, HeaderLabel, HeaderLink, PageHeader } from '../styles/header';\nimport RightMenu from './RightMenu';\n\nvar MainActionBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MainActionBar, _React$Component);\n\n  function MainActionBar() {\n    _classCallCheck(this, MainActionBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MainActionBar).apply(this, arguments));\n  }\n\n  _createClass(MainActionBar, [{\n    key: \"renderBoards\",\n    value: function renderBoards() {\n      var _this = this;\n\n      var _this$props = this.props,\n          currentBoard = _this$props.currentBoard,\n          boards = _this$props.boards;\n\n      if (currentBoard && boards.length === 1 || boards.length === 0) {\n        return React.createElement(EmptyState, {\n          icon: \"web-grid-alt\",\n          text: \"No other boards\",\n          size: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      }\n\n      return boards.map(function (board) {\n        if (currentBoard && board._id === currentBoard._id) {\n          return null;\n        }\n\n        var link = \"\".concat(_this.props.link, \"?id=\").concat(board._id);\n        var _board$pipelines = board.pipelines,\n            pipelines = _board$pipelines === void 0 ? [] : _board$pipelines;\n\n        if (pipelines.length > 0) {\n          link = \"\".concat(link, \"&pipelineId=\").concat(pipelines[0]._id);\n        }\n\n        return React.createElement(\"li\", {\n          key: board._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: link,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, board.name));\n      });\n    }\n  }, {\n    key: \"renderPipelines\",\n    value: function renderPipelines() {\n      var _this$props2 = this.props,\n          currentBoard = _this$props2.currentBoard,\n          currentPipeline = _this$props2.currentPipeline,\n          link = _this$props2.link;\n      var pipelines = currentBoard ? currentBoard.pipelines || [] : [];\n\n      if (currentPipeline && pipelines.length === 1 || pipelines.length === 0) {\n        return React.createElement(EmptyState, {\n          icon: \"web-section-alt\",\n          text: \"No other pipeline\",\n          size: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        });\n      }\n\n      if (!currentBoard) {\n        return null;\n      }\n\n      return pipelines.map(function (pipeline) {\n        if (currentPipeline && pipeline._id === currentPipeline._id) {\n          return null;\n        }\n\n        return React.createElement(\"li\", {\n          key: pipeline._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"\".concat(link, \"?id=\").concat(currentBoard._id, \"&pipelineId=\").concat(pipeline._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, pipeline.name));\n      });\n    }\n  }, {\n    key: \"renderFilter\",\n    value: function renderFilter() {\n      var isFiltered = this.props.isFiltered();\n      var _this$props3 = this.props,\n          onSearch = _this$props3.onSearch,\n          onSelect = _this$props3.onSelect,\n          queryParams = _this$props3.queryParams,\n          link = _this$props3.link,\n          extraFilter = _this$props3.extraFilter,\n          options = _this$props3.options,\n          clearFilter = _this$props3.clearFilter;\n      var rightMenuProps = {\n        onSearch: onSearch,\n        onSelect: onSelect,\n        queryParams: queryParams,\n        link: link,\n        extraFilter: extraFilter,\n        options: options,\n        isFiltered: isFiltered,\n        clearFilter: clearFilter\n      };\n      return React.createElement(RightMenu, Object.assign({}, rightMenuProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderVisibility\",\n    value: function renderVisibility() {\n      var currentPipeline = this.props.currentPipeline;\n\n      if (!currentPipeline) {\n        return null;\n      }\n\n      if (currentPipeline.visibility === 'public') {\n        return React.createElement(HeaderButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"earthgrid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }), \" \", __('Public'));\n      }\n\n      var members = currentPipeline.members || [];\n      return React.createElement(React.Fragment, null, React.createElement(HeaderButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"users-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), \" \", __('Private')), React.createElement(Participators, {\n        participatedUsers: members,\n        limit: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          currentBoard = _this$props4.currentBoard,\n          currentPipeline = _this$props4.currentPipeline,\n          middleContent = _this$props4.middleContent,\n          options = _this$props4.options,\n          rightContent = _this$props4.rightContent,\n          boardText = _this$props4.boardText,\n          pipelineText = _this$props4.pipelineText;\n      var type = options.type;\n      var actionBarLeft = React.createElement(BarItems, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(HeaderLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"web-grid-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), \" \", __(boardText || ''), \":\", ' '), React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        as: DropdownToggle,\n        id: \"dropdown-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(HeaderButton, {\n        rightIconed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, currentBoard && currentBoard.name || __('Choose board'), React.createElement(Icon, {\n        icon: \"angle-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }))), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, this.renderBoards())), React.createElement(HeaderLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"web-section-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), \" \", __(pipelineText || ''), \":\", ' '), React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        as: DropdownToggle,\n        id: \"dropdown-pipeline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(HeaderButton, {\n        rightIconed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, currentPipeline && currentPipeline.name || __('Choose pipeline'), React.createElement(Icon, {\n        icon: \"angle-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }))), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, this.renderPipelines())), React.createElement(HeaderLink, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Tip, {\n        text: __('Manage Board & Pipeline'),\n        placement: \"bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/settings/boards/\".concat(type, \"?boardId=\").concat(currentBoard ? currentBoard._id : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"cog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })))), currentPipeline ? React.createElement(PipelineWatch, {\n        pipeline: currentPipeline,\n        type: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }) : null, this.renderVisibility());\n      var actionBarRight = React.createElement(BarItems, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, middleContent && middleContent(), rightContent && rightContent(), this.renderFilter());\n      return React.createElement(PageHeader, {\n        id: \"board-pipeline-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, actionBarLeft, actionBarRight);\n    }\n  }]);\n\n  return MainActionBar;\n}(React.Component);\n\nMainActionBar.defaultProps = {\n  viewType: 'board',\n  boardText: 'Board',\n  pipelineText: 'Pipeline'\n};\nexport default MainActionBar;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/MainActionBar.tsx"],"names":["DropdownToggle","EmptyState","Icon","Tip","__","Participators","BarItems","React","Dropdown","Link","PipelineWatch","HeaderButton","HeaderLabel","HeaderLink","PageHeader","RightMenu","MainActionBar","props","currentBoard","boards","length","map","board","_id","link","pipelines","name","currentPipeline","pipeline","isFiltered","onSearch","onSelect","queryParams","extraFilter","options","clearFilter","rightMenuProps","visibility","members","middleContent","rightContent","boardText","pipelineText","type","actionBarLeft","renderBoards","renderPipelines","renderVisibility","actionBarRight","renderFilter","Component","defaultProps","viewType"],"mappings":";;;;;;AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,OAAOC,GAAP,MAAgB,+BAAhB;AACA,SAASC,EAAT,QAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,oEAA1B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SACEC,YADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,UAJF,QAKO,kBALP;AAOA,OAAOC,SAAP,MAAsB,aAAtB;;IAqBMC,a;;;;;;;;;;;;;mCAOW;AAAA;;AAAA,wBACoB,KAAKC,KADzB;AAAA,UACLC,YADK,eACLA,YADK;AAAA,UACSC,MADT,eACSA,MADT;;AAGb,UAAKD,YAAY,IAAIC,MAAM,CAACC,MAAP,KAAkB,CAAnC,IAAyCD,MAAM,CAACC,MAAP,KAAkB,CAA/D,EAAkE;AAChE,eACE,oBAAC,UAAD;AAAY,UAAA,IAAI,EAAC,cAAjB;AAAgC,UAAA,IAAI,EAAC,iBAArC;AAAuD,UAAA,IAAI,EAAC,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;AAED,aAAOD,MAAM,CAACE,GAAP,CAAW,UAAAC,KAAK,EAAI;AACzB,YAAIJ,YAAY,IAAII,KAAK,CAACC,GAAN,KAAcL,YAAY,CAACK,GAA/C,EAAoD;AAClD,iBAAO,IAAP;AACD;;AAED,YAAIC,IAAI,aAAM,KAAI,CAACP,KAAL,CAAWO,IAAjB,iBAA4BF,KAAK,CAACC,GAAlC,CAAR;AALyB,+BAOED,KAPF,CAOjBG,SAPiB;AAAA,YAOjBA,SAPiB,iCAOL,EAPK;;AASzB,YAAIA,SAAS,CAACL,MAAV,GAAmB,CAAvB,EAA0B;AACxBI,UAAAA,IAAI,aAAMA,IAAN,yBAAyBC,SAAS,CAAC,CAAD,CAAT,CAAaF,GAAtC,CAAJ;AACD;;AAED,eACE;AAAI,UAAA,GAAG,EAAED,KAAK,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAEC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBF,KAAK,CAACI,IAAvB,CADF,CADF;AAKD,OAlBM,CAAP;AAmBD;;;sCAEiB;AAAA,yBACgC,KAAKT,KADrC;AAAA,UACRC,YADQ,gBACRA,YADQ;AAAA,UACMS,eADN,gBACMA,eADN;AAAA,UACuBH,IADvB,gBACuBA,IADvB;AAGhB,UAAMC,SAAS,GAAGP,YAAY,GAAGA,YAAY,CAACO,SAAb,IAA0B,EAA7B,GAAkC,EAAhE;;AAEA,UAAKE,eAAe,IAAIF,SAAS,CAACL,MAAV,KAAqB,CAAzC,IAA+CK,SAAS,CAACL,MAAV,KAAqB,CAAxE,EAA2E;AACzE,eACE,oBAAC,UAAD;AACE,UAAA,IAAI,EAAC,iBADP;AAEE,UAAA,IAAI,EAAC,mBAFP;AAGE,UAAA,IAAI,EAAC,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AAED,UAAI,CAACF,YAAL,EAAmB;AACjB,eAAO,IAAP;AACD;;AAED,aAAOO,SAAS,CAACJ,GAAV,CAAc,UAAAO,QAAQ,EAAI;AAC/B,YAAID,eAAe,IAAIC,QAAQ,CAACL,GAAT,KAAiBI,eAAe,CAACJ,GAAxD,EAA6D;AAC3D,iBAAO,IAAP;AACD;;AAED,eACE;AAAI,UAAA,GAAG,EAAEK,QAAQ,CAACL,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AACE,UAAA,EAAE,YAAKC,IAAL,iBAAgBN,YAAY,CAACK,GAA7B,yBAA+CK,QAAQ,CAACL,GAAxD,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGGK,QAAQ,CAACF,IAHZ,CADF,CADF;AASD,OAdM,CAAP;AAeD;;;mCAEc;AACb,UAAMG,UAAU,GAAG,KAAKZ,KAAL,CAAWY,UAAX,EAAnB;AADa,yBAUT,KAAKZ,KAVI;AAAA,UAGXa,QAHW,gBAGXA,QAHW;AAAA,UAIXC,QAJW,gBAIXA,QAJW;AAAA,UAKXC,WALW,gBAKXA,WALW;AAAA,UAMXR,IANW,gBAMXA,IANW;AAAA,UAOXS,WAPW,gBAOXA,WAPW;AAAA,UAQXC,OARW,gBAQXA,OARW;AAAA,UASXC,WATW,gBASXA,WATW;AAYb,UAAMC,cAAc,GAAG;AACrBN,QAAAA,QAAQ,EAARA,QADqB;AAErBC,QAAAA,QAAQ,EAARA,QAFqB;AAGrBC,QAAAA,WAAW,EAAXA,WAHqB;AAIrBR,QAAAA,IAAI,EAAJA,IAJqB;AAKrBS,QAAAA,WAAW,EAAXA,WALqB;AAMrBC,QAAAA,OAAO,EAAPA,OANqB;AAOrBL,QAAAA,UAAU,EAAVA,UAPqB;AAQrBM,QAAAA,WAAW,EAAXA;AARqB,OAAvB;AAWA,aAAO,oBAAC,SAAD,oBAAeC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;uCAEkB;AAAA,UACTT,eADS,GACW,KAAKV,KADhB,CACTU,eADS;;AAGjB,UAAI,CAACA,eAAL,EAAsB;AACpB,eAAO,IAAP;AACD;;AAED,UAAIA,eAAe,CAACU,UAAhB,KAA+B,QAAnC,EAA6C;AAC3C,eACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,OAC6BjC,EAAE,CAAC,QAAD,CAD/B,CADF;AAKD;;AAED,UAAMkC,OAAO,GAAGX,eAAe,CAACW,OAAhB,IAA2B,EAA3C;AAEA,aACE,0CACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,OAC6BlC,EAAE,CAAC,SAAD,CAD/B,CADF,EAIE,oBAAC,aAAD;AAAe,QAAA,iBAAiB,EAAEkC,OAAlC;AAA2C,QAAA,KAAK,EAAE,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;;6BAEQ;AAAA,yBASH,KAAKrB,KATF;AAAA,UAELC,YAFK,gBAELA,YAFK;AAAA,UAGLS,eAHK,gBAGLA,eAHK;AAAA,UAILY,aAJK,gBAILA,aAJK;AAAA,UAKLL,OALK,gBAKLA,OALK;AAAA,UAMLM,YANK,gBAMLA,YANK;AAAA,UAOLC,SAPK,gBAOLA,SAPK;AAAA,UAQLC,YARK,gBAQLA,YARK;AAWP,UAAMC,IAAI,GAAGT,OAAO,CAACS,IAArB;AAEA,UAAMC,aAAa,GACjB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,OACgCxC,EAAE,CAACqC,SAAS,IAAI,EAAd,CADlC,OACsD,GADtD,CADF,EAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,CAAU,MAAV;AAAiB,QAAA,EAAE,EAAEzC,cAArB;AAAqC,QAAA,EAAE,EAAC,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,WAAW,EAAE,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIkB,YAAY,IAAIA,YAAY,CAACQ,IAA9B,IAAuCtB,EAAE,CAAC,cAAD,CAD5C,EAEE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,EAOE,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgB,KAAKyC,YAAL,EAAhB,CAPF,CAJF,EAaE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,OACmCzC,EAAE,CAACsC,YAAY,IAAI,EAAjB,CADrC,OAC4D,GAD5D,CAbF,EAgBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,CAAU,MAAV;AAAiB,QAAA,EAAE,EAAE1C,cAArB;AAAqC,QAAA,EAAE,EAAC,mBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,WAAW,EAAE,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI2B,eAAe,IAAIA,eAAe,CAACD,IAApC,IACCtB,EAAE,CAAC,iBAAD,CAFN,EAGE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF,CADF,EAQE,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgB,KAAK0C,eAAL,EAAhB,CARF,CAhBF,EA0BE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE1C,EAAE,CAAC,yBAAD,CAAb;AAA0C,QAAA,SAAS,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,EAAE,6BAAsBuC,IAAtB,sBACAzB,YAAY,GAAGA,YAAY,CAACK,GAAhB,GAAsB,EADlC,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,CADF,CA1BF,EAsCGI,eAAe,GACd,oBAAC,aAAD;AAAe,QAAA,QAAQ,EAAEA,eAAzB;AAA0C,QAAA,IAAI,EAAEgB,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADc,GAEZ,IAxCN,EA0CG,KAAKI,gBAAL,EA1CH,CADF;AA+CA,UAAMC,cAAc,GAClB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGT,aAAa,IAAIA,aAAa,EADjC,EAGGC,YAAY,IAAIA,YAAY,EAH/B,EAKG,KAAKS,YAAL,EALH,CADF;AAUA,aACE,oBAAC,UAAD;AAAY,QAAA,EAAE,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,aADH,EAEGI,cAFH,CADF;AAMD;;;;EA1MyBzC,KAAK,CAAC2C,S;;AAA5BlC,a,CACGmC,Y,GAAe;AACpBC,EAAAA,QAAQ,EAAE,OADU;AAEpBX,EAAAA,SAAS,EAAE,OAFS;AAGpBC,EAAAA,YAAY,EAAE;AAHM,C;AA4MxB,eAAe1B,aAAf","sourcesContent":["import DropdownToggle from 'modules/common/components/DropdownToggle';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Tip from 'modules/common/components/Tip';\nimport { __ } from 'modules/common/utils';\nimport Participators from 'modules/inbox/components/conversationDetail/workarea/Participators';\nimport { BarItems } from 'modules/layout/styles';\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Link } from 'react-router-dom';\nimport PipelineWatch from '../containers/PipelineWatch';\nimport {\n  HeaderButton,\n  HeaderLabel,\n  HeaderLink,\n  PageHeader\n} from '../styles/header';\nimport { IBoard, IOptions, IPipeline } from '../types';\nimport RightMenu from './RightMenu';\n\ntype Props = {\n  onSearch: (search: string) => void;\n  onSelect: (values: string[] | string, name: string) => void;\n  isFiltered: () => boolean;\n  clearFilter: () => void;\n  currentBoard?: IBoard;\n  currentPipeline?: IPipeline;\n  boards: IBoard[];\n  middleContent?: () => React.ReactNode;\n  history: any;\n  queryParams: any;\n  extraFilter?: React.ReactNode;\n  link: string;\n  rightContent?: () => React.ReactNode;\n  boardText?: string;\n  pipelineText?: string;\n  options: IOptions;\n};\n\nclass MainActionBar extends React.Component<Props> {\n  static defaultProps = {\n    viewType: 'board',\n    boardText: 'Board',\n    pipelineText: 'Pipeline'\n  };\n\n  renderBoards() {\n    const { currentBoard, boards } = this.props;\n\n    if ((currentBoard && boards.length === 1) || boards.length === 0) {\n      return (\n        <EmptyState icon=\"web-grid-alt\" text=\"No other boards\" size=\"small\" />\n      );\n    }\n\n    return boards.map(board => {\n      if (currentBoard && board._id === currentBoard._id) {\n        return null;\n      }\n\n      let link = `${this.props.link}?id=${board._id}`;\n\n      const { pipelines = [] } = board;\n\n      if (pipelines.length > 0) {\n        link = `${link}&pipelineId=${pipelines[0]._id}`;\n      }\n\n      return (\n        <li key={board._id}>\n          <Link to={link}>{board.name}</Link>\n        </li>\n      );\n    });\n  }\n\n  renderPipelines() {\n    const { currentBoard, currentPipeline, link } = this.props;\n\n    const pipelines = currentBoard ? currentBoard.pipelines || [] : [];\n\n    if ((currentPipeline && pipelines.length === 1) || pipelines.length === 0) {\n      return (\n        <EmptyState\n          icon=\"web-section-alt\"\n          text=\"No other pipeline\"\n          size=\"small\"\n        />\n      );\n    }\n\n    if (!currentBoard) {\n      return null;\n    }\n\n    return pipelines.map(pipeline => {\n      if (currentPipeline && pipeline._id === currentPipeline._id) {\n        return null;\n      }\n\n      return (\n        <li key={pipeline._id}>\n          <Link\n            to={`${link}?id=${currentBoard._id}&pipelineId=${pipeline._id}`}\n          >\n            {pipeline.name}\n          </Link>\n        </li>\n      );\n    });\n  }\n\n  renderFilter() {\n    const isFiltered = this.props.isFiltered();\n    const {\n      onSearch,\n      onSelect,\n      queryParams,\n      link,\n      extraFilter,\n      options,\n      clearFilter\n    } = this.props;\n\n    const rightMenuProps = {\n      onSearch,\n      onSelect,\n      queryParams,\n      link,\n      extraFilter,\n      options,\n      isFiltered,\n      clearFilter\n    };\n\n    return <RightMenu {...rightMenuProps} />;\n  }\n\n  renderVisibility() {\n    const { currentPipeline } = this.props;\n\n    if (!currentPipeline) {\n      return null;\n    }\n\n    if (currentPipeline.visibility === 'public') {\n      return (\n        <HeaderButton>\n          <Icon icon=\"earthgrid\" /> {__('Public')}\n        </HeaderButton>\n      );\n    }\n\n    const members = currentPipeline.members || [];\n\n    return (\n      <>\n        <HeaderButton>\n          <Icon icon=\"users-alt\" /> {__('Private')}\n        </HeaderButton>\n        <Participators participatedUsers={members} limit={3} />\n      </>\n    );\n  }\n\n  render() {\n    const {\n      currentBoard,\n      currentPipeline,\n      middleContent,\n      options,\n      rightContent,\n      boardText,\n      pipelineText\n    } = this.props;\n\n    const type = options.type;\n\n    const actionBarLeft = (\n      <BarItems>\n        <HeaderLabel>\n          <Icon icon=\"web-grid-alt\" /> {__(boardText || '')}:{' '}\n        </HeaderLabel>\n        <Dropdown>\n          <Dropdown.Toggle as={DropdownToggle} id=\"dropdown-board\">\n            <HeaderButton rightIconed={true}>\n              {(currentBoard && currentBoard.name) || __('Choose board')}\n              <Icon icon=\"angle-down\" />\n            </HeaderButton>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>{this.renderBoards()}</Dropdown.Menu>\n        </Dropdown>\n        <HeaderLabel>\n          <Icon icon=\"web-section-alt\" /> {__(pipelineText || '')}:{' '}\n        </HeaderLabel>\n        <Dropdown>\n          <Dropdown.Toggle as={DropdownToggle} id=\"dropdown-pipeline\">\n            <HeaderButton rightIconed={true}>\n              {(currentPipeline && currentPipeline.name) ||\n                __('Choose pipeline')}\n              <Icon icon=\"angle-down\" />\n            </HeaderButton>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>{this.renderPipelines()}</Dropdown.Menu>\n        </Dropdown>\n        <HeaderLink>\n          <Tip text={__('Manage Board & Pipeline')} placement=\"bottom\">\n            <Link\n              to={`/settings/boards/${type}?boardId=${\n                currentBoard ? currentBoard._id : ''\n              }`}\n            >\n              <Icon icon=\"cog\" />\n            </Link>\n          </Tip>\n        </HeaderLink>\n\n        {currentPipeline ? (\n          <PipelineWatch pipeline={currentPipeline} type={type} />\n        ) : null}\n\n        {this.renderVisibility()}\n      </BarItems>\n    );\n\n    const actionBarRight = (\n      <BarItems>\n        {middleContent && middleContent()}\n\n        {rightContent && rightContent()}\n\n        {this.renderFilter()}\n      </BarItems>\n    );\n\n    return (\n      <PageHeader id=\"board-pipeline-header\">\n        {actionBarLeft}\n        {actionBarRight}\n      </PageHeader>\n    );\n  }\n}\n\nexport default MainActionBar;\n"]},"metadata":{},"sourceType":"module"}