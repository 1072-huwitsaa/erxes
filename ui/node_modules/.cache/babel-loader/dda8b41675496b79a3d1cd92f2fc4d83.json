{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/activityLogs/components/items/MergedLog.tsx\";\nimport dayjs from 'dayjs';\nimport { ActivityDate, FlexCenterContent, MergedContacts } from 'modules/activityLogs/styles';\nimport Tip from 'modules/common/components/Tip';\nimport { __, renderFullName, renderUserFullName } from 'modules/common/utils';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nvar MergedLog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MergedLog, _React$Component);\n\n  function MergedLog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MergedLog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MergedLog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderCreatedBy = function () {\n      var createdByDetail = _this.props.activity.createdByDetail;\n\n      if (createdByDetail) {\n        var userName = renderUserFullName(createdByDetail.content);\n        return React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, userName);\n      }\n\n      return React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"System\");\n    };\n\n    _this.renderContent = function () {\n      var _this$props$activity = _this.props.activity,\n          contentType = _this$props$activity.contentType,\n          contentDetail = _this$props$activity.contentDetail;\n      var type = contentType.includes('customer') ? 'customers' : 'companies';\n      return React.createElement(React.Fragment, null, _this.renderCreatedBy(), \"\\xA0\", __('merged'), contentDetail.length !== 0 && contentDetail.map(function (contact) {\n        return React.createElement(Link, {\n          key: contact._id,\n          to: \"/contacts/\".concat(type, \"/details/\").concat(contact._id),\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"\\xA0\", renderFullName(contact));\n      }), \"\\xA0\", type);\n    };\n\n    return _this;\n  }\n\n  _createClass(MergedLog, [{\n    key: \"render\",\n    value: function render() {\n      var createdAt = this.props.activity.createdAt;\n      return React.createElement(React.Fragment, null, React.createElement(FlexCenterContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(MergedContacts, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.renderContent()), React.createElement(Tip, {\n        text: dayjs(createdAt).format('llll'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(ActivityDate, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, dayjs(createdAt).format('MMM D, h:mm A')))));\n    }\n  }]);\n\n  return MergedLog;\n}(React.Component);\n\nexport default MergedLog;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/activityLogs/components/items/MergedLog.tsx"],"names":["dayjs","ActivityDate","FlexCenterContent","MergedContacts","Tip","__","renderFullName","renderUserFullName","React","Link","MergedLog","renderCreatedBy","createdByDetail","props","activity","userName","content","renderContent","contentType","contentDetail","type","includes","length","map","contact","_id","createdAt","format","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,iBAFF,EAGEC,cAHF,QAIO,6BAJP;AAMA,OAAOC,GAAP,MAAgB,+BAAhB;AACA,SAASC,EAAT,EAAaC,cAAb,EAA6BC,kBAA7B,QAAuD,sBAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAMMC,S;;;;;;;;;;;;;;;;;;UACJC,e,GAAkB,YAAM;AAAA,UACdC,eADc,GACM,MAAKC,KAAL,CAAWC,QADjB,CACdF,eADc;;AAGtB,UAAIA,eAAJ,EAAqB;AACnB,YAAMG,QAAQ,GAAGR,kBAAkB,CAACK,eAAe,CAACI,OAAjB,CAAnC;AAEA,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASD,QAAT,CAAP;AACD;;AAED,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,K;;UAEDE,a,GAAgB,YAAM;AAAA,iCACmB,MAAKJ,KAAL,CAAWC,QAD9B;AAAA,UACZI,WADY,wBACZA,WADY;AAAA,UACCC,aADD,wBACCA,aADD;AAEpB,UAAMC,IAAI,GAAGF,WAAW,CAACG,QAAZ,CAAqB,UAArB,IAAmC,WAAnC,GAAiD,WAA9D;AAEA,aACE,0CACG,MAAKV,eAAL,EADH,UAEGN,EAAE,CAAC,QAAD,CAFL,EAGGc,aAAa,CAACG,MAAd,KAAyB,CAAzB,IACCH,aAAa,CAACI,GAAd,CAAkB,UAAAC,OAAO,EAAI;AAC3B,eACE,oBAAC,IAAD;AACE,UAAA,GAAG,EAAEA,OAAO,CAACC,GADf;AAEE,UAAA,EAAE,sBAAeL,IAAf,sBAA+BI,OAAO,CAACC,GAAvC,CAFJ;AAGE,UAAA,MAAM,EAAC,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMGnB,cAAc,CAACkB,OAAD,CANjB,CADF;AAUD,OAXD,CAJJ,UAgBSJ,IAhBT,CADF;AAoBD,K;;;;;;;6BAEQ;AAAA,UACCM,SADD,GACe,KAAKb,KAAL,CAAWC,QAD1B,CACCY,SADD;AAGP,aACE,0CACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiB,KAAKT,aAAL,EAAjB,CADF,EAEE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAEjB,KAAK,CAAC0B,SAAD,CAAL,CAAiBC,MAAjB,CAAwB,MAAxB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG3B,KAAK,CAAC0B,SAAD,CAAL,CAAiBC,MAAjB,CAAwB,eAAxB,CADH,CADF,CAFF,CADF,CADF;AAYD;;;;EAtDqBnB,KAAK,CAACoB,S;;AAyD9B,eAAelB,SAAf","sourcesContent":["import dayjs from 'dayjs';\nimport {\n  ActivityDate,\n  FlexCenterContent,\n  MergedContacts\n} from 'modules/activityLogs/styles';\nimport { IActivityLog } from 'modules/activityLogs/types';\nimport Tip from 'modules/common/components/Tip';\nimport { __, renderFullName, renderUserFullName } from 'modules/common/utils';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  activity: IActivityLog;\n};\n\nclass MergedLog extends React.Component<Props> {\n  renderCreatedBy = () => {\n    const { createdByDetail } = this.props.activity;\n\n    if (createdByDetail) {\n      const userName = renderUserFullName(createdByDetail.content);\n\n      return <strong>{userName}</strong>;\n    }\n\n    return <strong>System</strong>;\n  };\n\n  renderContent = () => {\n    const { contentType, contentDetail } = this.props.activity;\n    const type = contentType.includes('customer') ? 'customers' : 'companies';\n\n    return (\n      <>\n        {this.renderCreatedBy()}&nbsp;\n        {__('merged')}\n        {contentDetail.length !== 0 &&\n          contentDetail.map(contact => {\n            return (\n              <Link\n                key={contact._id}\n                to={`/contacts/${type}/details/${contact._id}`}\n                target=\"_blank\"\n              >\n                &nbsp;\n                {renderFullName(contact)}\n              </Link>\n            );\n          })}\n        &nbsp;{type}\n      </>\n    );\n  };\n\n  render() {\n    const { createdAt } = this.props.activity;\n\n    return (\n      <>\n        <FlexCenterContent>\n          <MergedContacts>{this.renderContent()}</MergedContacts>\n          <Tip text={dayjs(createdAt).format('llll')}>\n            <ActivityDate>\n              {dayjs(createdAt).format('MMM D, h:mm A')}\n            </ActivityDate>\n          </Tip>\n        </FlexCenterContent>\n      </>\n    );\n  }\n}\n\nexport default MergedLog;\n"]},"metadata":{},"sourceType":"module"}