{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/facebook/FacebookConversation.tsx\";\nimport * as React from 'react';\nimport FacebookComment from 'modules/inbox/containers/conversationDetail/facebook/FacebookComment';\nimport { SimpleMessage } from '../conversation/messages';\nimport FacebookPost from './FacebookPost';\nimport { ShowMore } from './styles';\n\nvar getAttr = function getAttr(comment, attr) {\n  if (!comment) {\n    return;\n  }\n\n  return comment[attr];\n};\n\nvar FacebookConversation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FacebookConversation, _React$Component);\n\n  function FacebookConversation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FacebookConversation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FacebookConversation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.fetchComments = function () {\n      var _this$props = _this.props,\n          post = _this$props.post,\n          comments = _this$props.comments;\n\n      if (!post) {\n        return;\n      }\n\n      var limit = comments.length + 5;\n\n      _this.props.fetchFacebook({\n        postId: post.erxesApiId,\n        limit: limit\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FacebookConversation, [{\n    key: \"renderReplies\",\n    value: function renderReplies(comment) {\n      var _this$props2 = this.props,\n          comments = _this$props2.comments,\n          fetchFacebook = _this$props2.fetchFacebook;\n      var replies = comments.filter(function (msg) {\n        var parentId = getAttr(msg, 'parentId');\n        return parentId && parentId === getAttr(comment, 'commentId');\n      });\n      return replies.map(function (reply) {\n        return React.createElement(React.Fragment, {\n          key: reply.commentId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(FacebookComment, {\n          isReply: true,\n          comment: reply,\n          fetchFacebook: fetchFacebook,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"renderComments\",\n    value: function renderComments() {\n      var _this2 = this;\n\n      var comments = this.props.comments;\n      var parentComments = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = comments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var comment = _step.value;\n\n          if (!getAttr(comment, 'parentId')) {\n            parentComments.push(comment);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return parentComments.map(function (comment) {\n        return React.createElement(React.Fragment, {\n          key: comment.commentId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(FacebookComment, {\n          comment: comment,\n          fetchFacebook: _this2.props.fetchFacebook,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), _this2.renderReplies(comment));\n      });\n    }\n  }, {\n    key: \"renderInternals\",\n    value: function renderInternals(internalNotes) {\n      return internalNotes.map(function (message) {\n        return React.createElement(SimpleMessage, {\n          message: message,\n          isStaff: !message.customerId,\n          key: message._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"renderViewMore\",\n    value: function renderViewMore() {\n      if (this.props.hasMore) {\n        return React.createElement(ShowMore, {\n          onClick: this.fetchComments,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"View previous comments\");\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          post = _this$props3.post,\n          customer = _this$props3.customer,\n          internalNotes = _this$props3.internalNotes,\n          scrollBottom = _this$props3.scrollBottom,\n          commentCount = _this$props3.commentCount;\n\n      if (!post) {\n        return null;\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(FacebookPost, {\n        post: post,\n        commentCount: commentCount,\n        customer: customer,\n        scrollBottom: scrollBottom,\n        onToggleClick: this.props.onToggleClick,\n        isResolved: this.props.isResolved,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), this.renderViewMore(), this.renderComments(), this.renderInternals(internalNotes));\n    }\n  }]);\n\n  return FacebookConversation;\n}(React.Component);\n\nexport { FacebookConversation as default };","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/facebook/FacebookConversation.tsx"],"names":["React","FacebookComment","SimpleMessage","FacebookPost","ShowMore","getAttr","comment","attr","FacebookConversation","fetchComments","props","post","comments","limit","length","fetchFacebook","postId","erxesApiId","replies","filter","msg","parentId","map","reply","commentId","parentComments","push","renderReplies","internalNotes","message","customerId","_id","hasMore","customer","scrollBottom","commentCount","onToggleClick","isResolved","renderViewMore","renderComments","renderInternals","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport { ICustomer } from 'modules/customers/types';\nimport { IFacebookComment, IFacebookPost, IMessage } from 'modules/inbox/types';\n\nimport FacebookComment from 'modules/inbox/containers/conversationDetail/facebook/FacebookComment';\nimport { SimpleMessage } from '../conversation/messages';\nimport FacebookPost from './FacebookPost';\nimport { ShowMore } from './styles';\n\ntype Props = {\n  commentCount: number;\n  post?: IFacebookPost;\n  customer: ICustomer;\n  comments: IFacebookComment[];\n  internalNotes: IMessage[];\n  hasMore: boolean;\n\n  scrollBottom: () => void;\n  fetchFacebook: ({\n    commentId,\n    postId,\n    limit\n  }: {\n    commentId?: string;\n    postId?: string;\n    limit?: number;\n  }) => void;\n  onToggleClick: () => void;\n  isResolved: boolean;\n};\n\nconst getAttr = (comment: IFacebookComment, attr: string) => {\n  if (!comment) {\n    return;\n  }\n\n  return comment[attr];\n};\n\nexport default class FacebookConversation extends React.Component<Props> {\n  fetchComments = () => {\n    const { post, comments } = this.props;\n    if (!post) {\n      return;\n    }\n\n    const limit = comments.length + 5;\n\n    this.props.fetchFacebook({\n      postId: post.erxesApiId,\n      limit\n    });\n  };\n\n  renderReplies(comment: IFacebookComment) {\n    const { comments, fetchFacebook } = this.props;\n\n    const replies = comments.filter(msg => {\n      const parentId = getAttr(msg, 'parentId');\n\n      return parentId && parentId === getAttr(comment, 'commentId');\n    });\n\n    return replies.map(reply => (\n      <React.Fragment key={reply.commentId}>\n        <FacebookComment\n          isReply={true}\n          comment={reply}\n          fetchFacebook={fetchFacebook}\n        />\n      </React.Fragment>\n    ));\n  }\n\n  renderComments() {\n    const { comments } = this.props;\n\n    const parentComments: IFacebookComment[] = [];\n\n    for (const comment of comments) {\n      if (!getAttr(comment, 'parentId')) {\n        parentComments.push(comment);\n      }\n    }\n\n    return parentComments.map(comment => (\n      <React.Fragment key={comment.commentId}>\n        <FacebookComment\n          comment={comment}\n          fetchFacebook={this.props.fetchFacebook}\n        />\n        {this.renderReplies(comment)}\n      </React.Fragment>\n    ));\n  }\n\n  renderInternals(internalNotes: IMessage[]) {\n    return internalNotes.map(message => {\n      return (\n        <SimpleMessage\n          message={message}\n          isStaff={!message.customerId}\n          key={message._id}\n        />\n      );\n    });\n  }\n\n  renderViewMore() {\n    if (this.props.hasMore) {\n      return (\n        <ShowMore onClick={this.fetchComments}>View previous comments</ShowMore>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      post,\n      customer,\n      internalNotes,\n      scrollBottom,\n      commentCount\n    } = this.props;\n\n    if (!post) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <FacebookPost\n          post={post}\n          commentCount={commentCount}\n          customer={customer}\n          scrollBottom={scrollBottom}\n          onToggleClick={this.props.onToggleClick}\n          isResolved={this.props.isResolved}\n        />\n        {this.renderViewMore()}\n        {this.renderComments()}\n        {this.renderInternals(internalNotes)}\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}