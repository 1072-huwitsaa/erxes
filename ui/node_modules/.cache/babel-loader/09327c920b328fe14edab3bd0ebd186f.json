{"ast":null,"code":"var _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/form/Label.tsx\";\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { Label } from './styles';\n\nfunction ControlLabel(props) {\n  var children = props.children,\n      ignoreTrans = props.ignoreTrans,\n      required = props.required,\n      _props$uppercase = props.uppercase,\n      uppercase = _props$uppercase === void 0 ? true : _props$uppercase;\n  var content = children;\n\n  if (!ignoreTrans && typeof children === 'string') {\n    content = __(children);\n  }\n\n  return React.createElement(Label, {\n    uppercase: uppercase,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, content, required && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" *\"));\n}\n\nexport default ControlLabel;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/form/Label.tsx"],"names":["__","React","Label","ControlLabel","props","children","ignoreTrans","required","uppercase","content"],"mappings":";AAAA,SAASA,EAAT,QAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,UAAtB;;AAUA,SAASC,YAAT,CAAsBC,KAAtB,EAAoC;AAAA,MAC1BC,QAD0B,GAC4BD,KAD5B,CAC1BC,QAD0B;AAAA,MAChBC,WADgB,GAC4BF,KAD5B,CAChBE,WADgB;AAAA,MACHC,QADG,GAC4BH,KAD5B,CACHG,QADG;AAAA,yBAC4BH,KAD5B,CACOI,SADP;AAAA,MACOA,SADP,iCACmB,IADnB;AAGlC,MAAIC,OAAO,GAAGJ,QAAd;;AAEA,MAAI,CAACC,WAAD,IAAgB,OAAOD,QAAP,KAAoB,QAAxC,EAAkD;AAChDI,IAAAA,OAAO,GAAGT,EAAE,CAACK,QAAD,CAAZ;AACD;;AAED,SACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEG,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OADH,EAEGF,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFf,CADF;AAMD;;AAED,eAAeJ,YAAf","sourcesContent":["import { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { Label } from './styles';\n\ntype Props = {\n  children: React.ReactNode | string;\n  ignoreTrans?: boolean;\n  htmlFor?: string;\n  required?: boolean;\n  uppercase?: boolean;\n};\n\nfunction ControlLabel(props: Props) {\n  const { children, ignoreTrans, required, uppercase = true } = props;\n\n  let content = children;\n\n  if (!ignoreTrans && typeof children === 'string') {\n    content = __(children);\n  }\n\n  return (\n    <Label uppercase={uppercase}>\n      {content}\n      {required && <span> *</span>}\n    </Label>\n  );\n}\n\nexport default ControlLabel;\n"]},"metadata":{},"sourceType":"module"}