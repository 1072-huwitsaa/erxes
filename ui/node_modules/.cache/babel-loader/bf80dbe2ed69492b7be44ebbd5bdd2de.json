{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _draftJs = require('draft-js');\n\nvar _getSearchText2 = require('../utils/getSearchText');\n\nvar _getSearchText3 = _interopRequireDefault(_getSearchText2);\n\nvar _getTypeByTrigger = require('../utils/getTypeByTrigger');\n\nvar _getTypeByTrigger2 = _interopRequireDefault(_getTypeByTrigger);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar addMention = function addMention(editorState, mention, mentionPrefix, mentionTrigger, entityMutability) {\n  var contentStateWithEntity = editorState.getCurrentContent().createEntity((0, _getTypeByTrigger2.default)(mentionTrigger), entityMutability, {\n    mention: mention\n  });\n  var entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n  var currentSelectionState = editorState.getSelection();\n\n  var _getSearchText = (0, _getSearchText3.default)(editorState, currentSelectionState, mentionTrigger),\n      begin = _getSearchText.begin,\n      end = _getSearchText.end; // get selection of the @mention search text\n\n\n  var mentionTextSelection = currentSelectionState.merge({\n    anchorOffset: begin,\n    focusOffset: end\n  });\n\n  var mentionReplacedContent = _draftJs.Modifier.replaceText(editorState.getCurrentContent(), mentionTextSelection, '' + mentionPrefix + mention.get('name'), null, // no inline style needed\n  entityKey); // If the mention is inserted at the end, a space is appended right after for\n  // a smooth writing experience.\n\n\n  var blockKey = mentionTextSelection.getAnchorKey();\n  var blockSize = editorState.getCurrentContent().getBlockForKey(blockKey).getLength();\n\n  if (blockSize === end) {\n    mentionReplacedContent = _draftJs.Modifier.insertText(mentionReplacedContent, mentionReplacedContent.getSelectionAfter(), ' ');\n  }\n\n  var newEditorState = _draftJs.EditorState.push(editorState, mentionReplacedContent, 'insert-mention');\n\n  return _draftJs.EditorState.forceSelection(newEditorState, mentionReplacedContent.getSelectionAfter());\n};\n\nexports.default = addMention;","map":null,"metadata":{},"sourceType":"script"}