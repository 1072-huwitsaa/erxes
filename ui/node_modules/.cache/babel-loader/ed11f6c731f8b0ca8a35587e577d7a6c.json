{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/permissions/components/GroupForm.tsx\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport { ModalFooter } from \"modules/common/styles/main\";\nimport SelectTeamMembers from \"modules/settings/team/containers/SelectTeamMembers\";\nimport React from \"react\";\n\nvar GroupForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GroupForm, _React$Component);\n\n  function GroupForm(props) {\n    var _this;\n\n    _classCallCheck(this, GroupForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GroupForm).call(this, props));\n\n    _this.generateDoc = function (values) {\n      var object = _this.props.object;\n      var finalValues = values;\n\n      if (object) {\n        finalValues._id = object._id;\n      }\n\n      return _objectSpread({}, finalValues, {\n        memberIds: _this.state.selectedMembers\n      });\n    };\n\n    _this.renderContent = function (formProps) {\n      var object = _this.props.object || {};\n\n      var self = _assertThisInitialized(_this);\n\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted;\n\n      if (object) {\n        values._id = object._id;\n      }\n\n      var onChange = function onChange(selectedMembers) {\n        self.setState({\n          selectedMembers: selectedMembers\n        });\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Name\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"name\",\n        defaultValue: object.name,\n        autoFocus: true,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Description\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        componentClass: \"textarea\",\n        name: \"description\",\n        defaultValue: object.description,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Members\"), React.createElement(SelectTeamMembers, {\n        label: \"Choose members\",\n        name: \"selectedMembers\",\n        value: self.state.selectedMembers,\n        onSelect: onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        type: \"button\",\n        onClick: _this.props.closeModal,\n        icon: \"cancel-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Cancel\"), _this.props.renderButton({\n        name: \"user group\",\n        values: _this.generateDoc(values),\n        isSubmitted: isSubmitted,\n        callback: _this.props.closeModal,\n        object: _this.props.object\n      })));\n    };\n\n    _this.state = {\n      selectedMembers: props.object && props.object.memberIds || []\n    };\n    return _this;\n  }\n\n  _createClass(GroupForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return GroupForm;\n}(React.Component);\n\nexport default GroupForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/permissions/components/GroupForm.tsx"],"names":["Button","FormControl","Form","FormGroup","ControlLabel","ModalFooter","SelectTeamMembers","React","GroupForm","props","generateDoc","values","object","finalValues","_id","memberIds","state","selectedMembers","renderContent","formProps","self","isSubmitted","onChange","setState","name","description","closeModal","renderButton","callback","Component"],"mappings":"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","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport { ModalFooter } from \"modules/common/styles/main\";\nimport { IButtonMutateProps, IFormProps } from \"modules/common/types\";\nimport SelectTeamMembers from \"modules/settings/team/containers/SelectTeamMembers\";\nimport React from \"react\";\nimport { IUserGroupDocument } from \"../types\";\n\ntype Props = {\n  closeModal: () => void;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  object: IUserGroupDocument;\n  refetch: any;\n};\n\ntype State = {\n  selectedMembers: string[];\n};\n\nclass GroupForm extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      selectedMembers: (props.object && props.object.memberIds) || [],\n    };\n  }\n\n  generateDoc = (values: {\n    _id?: string;\n    name: string;\n    description: string;\n  }) => {\n    const { object } = this.props;\n    const finalValues = values;\n\n    if (object) {\n      finalValues._id = object._id;\n    }\n\n    return {\n      ...finalValues,\n      memberIds: this.state.selectedMembers,\n    };\n  };\n\n  renderContent = (formProps: IFormProps) => {\n    const object = this.props.object || ({} as IUserGroupDocument);\n    const self = this;\n    const { values, isSubmitted } = formProps;\n\n    if (object) {\n      values._id = object._id;\n    }\n\n    const onChange = (selectedMembers) => {\n      self.setState({ selectedMembers });\n    };\n\n    return (\n      <>\n        <FormGroup>\n          <ControlLabel required={true}>Name</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"name\"\n            defaultValue={object.name}\n            autoFocus={true}\n            required={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel required={true}>Description</ControlLabel>\n          <FormControl\n            {...formProps}\n            componentClass=\"textarea\"\n            name=\"description\"\n            defaultValue={object.description}\n            required={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Members</ControlLabel>\n\n          <SelectTeamMembers\n            label=\"Choose members\"\n            name=\"selectedMembers\"\n            value={self.state.selectedMembers}\n            onSelect={onChange}\n          />\n        </FormGroup>\n\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            type=\"button\"\n            onClick={this.props.closeModal}\n            icon=\"cancel-1\"\n          >\n            Cancel\n          </Button>\n\n          {this.props.renderButton({\n            name: \"user group\",\n            values: this.generateDoc(values),\n            isSubmitted,\n            callback: this.props.closeModal,\n            object: this.props.object,\n          })}\n        </ModalFooter>\n      </>\n    );\n  };\n\n  render() {\n    return <Form renderContent={this.renderContent} />;\n  }\n}\n\nexport default GroupForm;\n"]},"metadata":{},"sourceType":"module"}