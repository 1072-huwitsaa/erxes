{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/DateFilter.tsx\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  text-transform: uppercase;\\n  margin: \", \"px 0;\\n  text-align: center;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  flex: 1;\\n  margin-left: 5px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 0 \", \"px \", \"px\\n    \", \"px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport dayjs from 'dayjs';\nimport gql from 'graphql-tag';\nimport Button from 'erxes-common-ui/lib/components/button';\nimport { __, Alert, router } from 'modules/common/utils';\nimport { PopoverButton } from 'modules/inbox/styles';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport React from 'react';\nimport { withApollo } from 'react-apollo';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport styled from 'styled-components';\nimport { dimensions } from '../styles';\nimport asyncComponent from './AsyncComponent';\nvar Datetime = asyncComponent(function () {\n  return import(\n  /* webpackChunkName: \"Datetime\" */\n  '@nateradebaugh/react-datetime');\n});\nvar FlexRow = styled.div(_templateObject(), dimensions.unitSpacing, dimensions.unitSpacing, dimensions.unitSpacing);\nvar FlexItem = styled.div(_templateObject2());\nvar DateName = styled.div(_templateObject3(), dimensions.unitSpacing);\nvar format = 'YYYY-MM-DD HH:mm';\n\nvar DateFilter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DateFilter, _React$Component);\n\n  function DateFilter(_props) {\n    var _this;\n\n    _classCallCheck(this, DateFilter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DateFilter).call(this, _props));\n\n    _this.onDateChange = function (type, date) {\n      if (typeof date !== 'string') {\n        _this.setState(_defineProperty({}, type, date));\n      }\n    };\n\n    _this.refetchCountQuery = function () {\n      var _this$props = _this.props,\n          client = _this$props.client,\n          queryParams = _this$props.queryParams,\n          countQuery = _this$props.countQuery,\n          countQueryParam = _this$props.countQueryParam;\n\n      if (!countQuery || !countQueryParam) {\n        return;\n      }\n\n      var variables = _objectSpread({}, queryParams);\n\n      if (queryParams.limit) {\n        variables.limit = parseInt(queryParams.limit, 10);\n      }\n\n      client.query({\n        query: gql(countQuery),\n        variables: variables\n      }).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          totalCount: data[countQueryParam]\n        });\n      }).catch(function (e) {\n        Alert.error(e.message);\n      });\n    };\n\n    _this.filterByDate = function () {\n      var _this$state = _this.state,\n          startDate = _this$state.startDate,\n          endDate = _this$state.endDate;\n      var formattedStartDate = dayjs(startDate).format(format);\n      var formattedEndDate = dayjs(endDate).format(format);\n      router.setParams(_this.props.history, {\n        startDate: formattedStartDate,\n        endDate: formattedEndDate\n      });\n\n      if (_this.props.countQuery) {\n        _this.refetchCountQuery();\n      }\n    };\n\n    _this.renderCount = function () {\n      var totalCount = _this.state.totalCount;\n\n      if (_this.props.countQuery) {\n        return React.createElement(FlexItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, __('Total'), \": \", React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, totalCount)));\n      }\n\n      return null;\n    };\n\n    _this.renderPopover = function () {\n      var props = {\n        inputProps: {\n          placeholder: __('Select a date')\n        },\n        timeFormat: 'HH:mm',\n        dateFormat: 'YYYY/MM/DD',\n        closeOnSelect: false\n      };\n\n      var onChangeStart = function onChangeStart(date) {\n        if (typeof date !== 'string') {\n          _this.onDateChange('startDate', date);\n        }\n      };\n\n      var onChangeEnd = function onChangeEnd(date) {\n        if (typeof date !== 'string') {\n          _this.onDateChange('endDate', date);\n        }\n      };\n\n      return React.createElement(Popover, {\n        id: \"date-popover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Popover.Title, {\n        as: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, __('Filter by date')), React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(DateName, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Start Date\"), React.createElement(Datetime, Object.assign({}, props, {\n        input: false,\n        value: _this.state.startDate,\n        onChange: onChangeStart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(DateName, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"End Date\"), React.createElement(Datetime, Object.assign({}, props, {\n        input: false,\n        value: _this.state.endDate,\n        onChange: onChangeEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })))), React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, _this.renderCount(), React.createElement(Button, {\n        btnStyle: \"warning\",\n        onClick: _this.filterByDate,\n        icon: \"filter-1\",\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Filter\")));\n    };\n\n    var _props$queryParams = _props.queryParams,\n        _startDate = _props$queryParams.startDate,\n        _endDate = _props$queryParams.endDate;\n    var state = {\n      startDate: new Date(),\n      endDate: new Date(),\n      totalCount: 0\n    };\n\n    if (_startDate) {\n      state.startDate = dayjs(_startDate).toDate();\n    }\n\n    if (_endDate) {\n      state.endDate = dayjs(_endDate).toDate();\n    }\n\n    _this.state = state;\n    return _this;\n  }\n\n  _createClass(DateFilter, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var queryParams = nextProps.queryParams;\n\n      if (nextProps.countQuery) {\n        if (queryParams.startDate && queryParams.endDate) {\n          this.refetchCountQuery();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(OverlayTrigger, {\n        trigger: \"click\",\n        placement: \"bottom-start\",\n        overlay: this.renderPopover(),\n        container: this,\n        rootClose: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(PopoverButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, __('Date'), React.createElement(Icon, {\n        icon: \"angle-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return DateFilter;\n}(React.Component);\n\nexport default withApollo(DateFilter);","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/DateFilter.tsx"],"names":["dayjs","gql","Button","__","Alert","router","PopoverButton","Icon","React","withApollo","OverlayTrigger","Popover","styled","dimensions","asyncComponent","Datetime","FlexRow","div","unitSpacing","FlexItem","DateName","format","DateFilter","props","onDateChange","type","date","setState","refetchCountQuery","client","queryParams","countQuery","countQueryParam","variables","limit","parseInt","query","then","data","totalCount","catch","e","error","message","filterByDate","state","startDate","endDate","formattedStartDate","formattedEndDate","setParams","history","renderCount","renderPopover","inputProps","placeholder","timeFormat","dateFormat","closeOnSelect","onChangeStart","onChangeEnd","Date","toDate","nextProps","Component"],"mappings":"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","sourcesContent":["import dayjs from 'dayjs';\nimport gql from 'graphql-tag';\nimport Button from 'erxes-common-ui/lib/components/button';\nimport { __, Alert, router } from 'modules/common/utils';\nimport { PopoverButton } from 'modules/inbox/styles';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport React from 'react';\nimport { withApollo } from 'react-apollo';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport styled from 'styled-components';\nimport { dimensions } from '../styles';\nimport asyncComponent from './AsyncComponent';\n\nconst Datetime = asyncComponent(() =>\n  import(/* webpackChunkName: \"Datetime\" */ '@nateradebaugh/react-datetime')\n);\n\nconst FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 ${dimensions.unitSpacing}px ${dimensions.unitSpacing}px\n    ${dimensions.unitSpacing}px;\n`;\n\nconst FlexItem = styled.div`\n  flex: 1;\n  margin-left: 5px;\n`;\n\nconst DateName = styled.div`\n  text-transform: uppercase;\n  margin: ${dimensions.unitSpacing}px 0;\n  text-align: center;\n`;\n\ntype Props = {\n  queryParams?: any;\n  history: any;\n  countQuery?: string;\n  countQueryParam?: string;\n};\n\ntype ApolloClientProps = {\n  client: any;\n};\n\ntype State = {\n  startDate: Date;\n  endDate: Date;\n  totalCount: number;\n};\n\nconst format = 'YYYY-MM-DD HH:mm';\n\nclass DateFilter extends React.Component<Props & ApolloClientProps, State> {\n  constructor(props) {\n    super(props);\n\n    const { startDate, endDate } = props.queryParams;\n\n    const state: State = {\n      startDate: new Date(),\n      endDate: new Date(),\n      totalCount: 0\n    };\n\n    if (startDate) {\n      state.startDate = dayjs(startDate).toDate();\n    }\n\n    if (endDate) {\n      state.endDate = dayjs(endDate).toDate();\n    }\n\n    this.state = state;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { queryParams } = nextProps;\n\n    if (nextProps.countQuery) {\n      if (queryParams.startDate && queryParams.endDate) {\n        this.refetchCountQuery();\n      }\n    }\n  }\n\n  onDateChange = <T extends keyof State>(type: T, date: State[T]) => {\n    if (typeof date !== 'string') {\n      this.setState(({ [type]: date } as unknown) as Pick<State, keyof State>);\n    }\n  };\n\n  refetchCountQuery = () => {\n    const { client, queryParams, countQuery, countQueryParam } = this.props;\n\n    if (!countQuery || !countQueryParam) {\n      return;\n    }\n\n    const variables = { ...queryParams };\n\n    if (queryParams.limit) {\n      variables.limit = parseInt(queryParams.limit, 10);\n    }\n\n    client\n      .query({\n        query: gql(countQuery),\n        variables\n      })\n\n      .then(({ data }) => {\n        this.setState({\n          totalCount: data[countQueryParam]\n        });\n      })\n      .catch(e => {\n        Alert.error(e.message);\n      });\n  };\n\n  filterByDate = () => {\n    const { startDate, endDate } = this.state;\n\n    const formattedStartDate = dayjs(startDate).format(format);\n    const formattedEndDate = dayjs(endDate).format(format);\n\n    router.setParams(this.props.history, {\n      startDate: formattedStartDate,\n      endDate: formattedEndDate\n    });\n\n    if (this.props.countQuery) {\n      this.refetchCountQuery();\n    }\n  };\n\n  renderCount = () => {\n    const { totalCount } = this.state;\n\n    if (this.props.countQuery) {\n      return (\n        <FlexItem>\n          <span>\n            {__('Total')}: <b>{totalCount}</b>\n          </span>\n        </FlexItem>\n      );\n    }\n\n    return null;\n  };\n\n  renderPopover = () => {\n    const props = {\n      inputProps: { placeholder: __('Select a date') },\n      timeFormat: 'HH:mm',\n      dateFormat: 'YYYY/MM/DD',\n      closeOnSelect: false\n    };\n\n    const onChangeStart = date => {\n      if (typeof date !== 'string') {\n        this.onDateChange('startDate', date);\n      }\n    };\n\n    const onChangeEnd = date => {\n      if (typeof date !== 'string') {\n        this.onDateChange('endDate', date);\n      }\n    };\n\n    return (\n      <Popover id=\"date-popover\">\n        <Popover.Title as=\"h3\">{__('Filter by date')}</Popover.Title>\n        <FlexRow>\n          <div>\n            <DateName>Start Date</DateName>\n            <Datetime\n              {...props}\n              input={false}\n              value={this.state.startDate}\n              onChange={onChangeStart}\n            />\n          </div>\n\n          <div>\n            <DateName>End Date</DateName>\n            <Datetime\n              {...props}\n              input={false}\n              value={this.state.endDate}\n              onChange={onChangeEnd}\n            />\n          </div>\n        </FlexRow>\n\n        <FlexRow>\n          {this.renderCount()}\n          <Button\n            btnStyle=\"warning\"\n            onClick={this.filterByDate}\n            icon=\"filter-1\"\n            size=\"small\"\n          >\n            Filter\n          </Button>\n        </FlexRow>\n      </Popover>\n    );\n  };\n\n  render() {\n    return (\n      <OverlayTrigger\n        trigger=\"click\"\n        placement=\"bottom-start\"\n        overlay={this.renderPopover()}\n        container={this}\n        rootClose={true}\n      >\n        <PopoverButton>\n          {__('Date')}\n          <Icon icon=\"angle-down\" />\n        </PopoverButton>\n      </OverlayTrigger>\n    );\n  }\n}\n\nexport default withApollo<Props>(DateFilter);\n"]},"metadata":{},"sourceType":"module"}