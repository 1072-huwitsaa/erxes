{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/Editor.tsx\";\nimport createMentionPlugin, { defaultSuggestionsFilter } from 'bat-draft-js-mention-plugin';\nimport { ContentState, EditorState, getDefaultKeyBinding, Modifier } from 'draft-js';\nimport { createStateFromHTML, ErxesEditor, toHTML } from 'modules/common/components/editor/Editor';\nimport React from 'react';\nimport TemplateList from './TemplateList';\n\nvar MentionEntry = function MentionEntry(props) {\n  var mention = props.mention,\n      theme = props.theme,\n      searchValue = props.searchValue,\n      parentProps = _objectWithoutProperties(props, [\"mention\", \"theme\", \"searchValue\"]);\n\n  return React.createElement(\"div\", Object.assign({}, parentProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"mentionSuggestionsEntryContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mentionSuggestionsEntryContainerLeft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: mention.get('name'),\n    role: \"presentation\",\n    src: mention.get('avatar') || '/images/avatar-colored.svg',\n    className: \"mentionSuggestionsEntryAvatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"mentionSuggestionsEntryContainerRight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mentionSuggestionsEntryText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, mention.get('name')), React.createElement(\"div\", {\n    className: \"mentionSuggestionsEntryTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, mention.get('title')))));\n};\n\nvar extractEntries = function extractEntries(mention) {\n  var entries = mention._root.entries;\n  return entries.reduce(function (result, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        val = _ref2[1];\n\n    return _objectSpread({}, result, _defineProperty({}, key, val));\n  }, {});\n};\n\nvar Editor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Editor, _React$Component);\n\n  function Editor(props) {\n    var _this;\n\n    _classCallCheck(this, Editor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Editor).call(this, props));\n    _this.mentionPlugin = void 0;\n\n    _this.onChange = function (editorState) {\n      _this.setState({\n        editorState: editorState,\n        hideTemplates: false\n      });\n\n      _this.props.onChange(_this.getContent(editorState));\n\n      window.requestAnimationFrame(function () {\n        _this.onTemplatesStateChange(_this.getTemplatesState());\n      });\n    };\n\n    _this.onTemplatesStateChange = function (templatesState) {\n      _this.setState({\n        templatesState: templatesState\n      });\n    };\n\n    _this.getTemplatesState = function () {\n      var invalidate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!invalidate) {\n        return _this.state.templatesState;\n      }\n\n      var editorState = _this.state.editorState;\n      var responseTemplates = _this.props.responseTemplates;\n      var contentState = editorState.getCurrentContent(); // get content as text\n\n      var textContent = contentState.getPlainText().toLowerCase();\n\n      if (!textContent) {\n        return null;\n      } // search from response templates\n\n\n      var foundTemplates = responseTemplates.filter(function (template) {\n        return template.name.toLowerCase().includes(textContent) || template.content.toLowerCase().includes(textContent);\n      });\n\n      if (foundTemplates.length > 0) {\n        return {\n          templates: foundTemplates.slice(0, 5),\n          searchText: textContent,\n          selectedIndex: 0\n        };\n      }\n\n      return null;\n    };\n\n    _this.changeEditorContent = function (content) {\n      var editorState = createStateFromHTML(_this.state.editorState, content);\n      var selection = EditorState.moveSelectionToEnd(editorState).getSelection(); // calling onChange, because draftjs's onChange is not trigerring after\n      // this setState\n\n      _this.props.onChange(_this.getContent(editorState));\n\n      var contentState = Modifier.insertText(editorState.getCurrentContent(), selection, ' ');\n      var es = EditorState.push(editorState, contentState, 'insert-characters');\n      editorState = EditorState.moveFocusToEnd(es);\n      return _this.setState({\n        editorState: editorState,\n        templatesState: null\n      });\n    };\n\n    _this.onSelectTemplate = function (index) {\n      var templatesState = _this.state.templatesState;\n      var templates = templatesState.templates,\n          selectedIndex = templatesState.selectedIndex;\n      var selectedTemplate = templates[index || selectedIndex];\n\n      if (!selectedTemplate) {\n        return null;\n      }\n\n      return _this.changeEditorContent(selectedTemplate.content);\n    };\n\n    _this.onArrow = function (e, nudgeAmount) {\n      var templatesState = _this.getTemplatesState(false);\n\n      if (!templatesState) {\n        return;\n      }\n\n      e.preventDefault();\n      templatesState.selectedIndex += nudgeAmount;\n\n      _this.onTemplatesStateChange(templatesState);\n    };\n\n    _this.onUpArrow = function (e) {\n      _this.onArrow(e, -1);\n    };\n\n    _this.onDownArrow = function (e) {\n      _this.onArrow(e, 1);\n    };\n\n    _this.onEscape = function () {\n      _this.setState({\n        hideTemplates: true\n      });\n    };\n\n    _this.onSearchChange = function (_ref3) {\n      var value = _ref3.value;\n\n      _this.props.onSearchChange(value);\n\n      _this.setState({\n        suggestions: defaultSuggestionsFilter(value, _this.props.mentions.toArray())\n      });\n    };\n\n    _this.onAddMention = function (object) {\n      var mention = extractEntries(object);\n      var collectedMentions = _this.state.collectedMentions;\n      collectedMentions.push(mention);\n\n      _this.setState({\n        collectedMentions: collectedMentions\n      });\n    };\n\n    _this.getContent = function (editorState) {\n      var content = toHTML(editorState); // some mentioned people may have been deleted\n\n      var finalMentions = []; // replace mention content\n\n      _this.state.collectedMentions.forEach(function (m) {\n        var toFind = \"@\".concat(m.name);\n        var re = new RegExp(toFind, 'g'); // collect only not removed mentions\n\n        var findResult = content.match(re);\n\n        if (findResult && findResult.length > 0) {\n          finalMentions.push(m);\n        }\n\n        content = content.replace(re, \"<b data-user-id='\".concat(m._id, \"'>@\").concat(m.name, \"</b>\"));\n      }); // send mentioned user to parent\n\n\n      _this.props.onAddMention(finalMentions.map(function (mention) {\n        return mention._id;\n      }));\n\n      return content;\n    };\n\n    _this.keyBindingFn = function (e) {\n      // handle new line\n      if (e.key === 'Enter' && e.shiftKey) {\n        return getDefaultKeyBinding(e);\n      } // handle enter  in editor\n\n\n      if (e.key === 'Enter') {\n        // select response template\n        if (_this.state.templatesState && !_this.state.hideTemplates) {\n          _this.onSelectTemplate();\n\n          return null;\n        } // call parent's method to save content\n\n\n        _this.props.onAddMessage(); // clear content\n\n\n        var state = _this.state.editorState;\n        var editorState = EditorState.push(state, ContentState.createFromText(''), 'insert-characters');\n\n        _this.setState({\n          editorState: EditorState.moveFocusToEnd(editorState)\n        });\n\n        return null;\n      }\n\n      return getDefaultKeyBinding(e);\n    };\n\n    _this.state = {\n      editorState: createStateFromHTML(EditorState.createEmpty(), props.defaultContent),\n      collectedMentions: [],\n      suggestions: _this.props.mentions.toArray(),\n      templatesState: null,\n      hideTemplates: false\n    };\n    _this.mentionPlugin = createMentionPlugin({\n      mentionPrefix: '@'\n    });\n    return _this;\n  }\n\n  _createClass(Editor, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.responseTemplate !== this.props.responseTemplate) {\n        var editorState = createStateFromHTML(this.state.editorState, nextProps.responseTemplate); // calling onChange, because draftjs's onChange is not trigerring after\n        // this setState\n\n        this.props.onChange(this.getContent(editorState)); // set editor state from response template\n\n        this.setState({\n          editorState: editorState\n        });\n      } // check switch conversation and fill default content\n\n\n      if (nextProps.currentConversation !== this.props.currentConversation) {\n        var _editorState = createStateFromHTML(EditorState.createEmpty(), nextProps.defaultContent);\n\n        this.setState({\n          editorState: _editorState\n        });\n      }\n    }\n  }, {\n    key: \"renderTemplates\",\n    // Render response templates suggestions\n    value: function renderTemplates() {\n      var _this$state = this.state,\n          templatesState = _this$state.templatesState,\n          hideTemplates = _this$state.hideTemplates;\n\n      if (!templatesState || hideTemplates) {\n        return null;\n      } // Set suggestionState to SuggestionList.\n\n\n      return React.createElement(TemplateList, {\n        onSelect: this.onSelectTemplate,\n        suggestionsState: templatesState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var MentionSuggestions = this.mentionPlugin.MentionSuggestions;\n      var plugins = [this.mentionPlugin];\n      var pluginContent = React.createElement(MentionSuggestions, {\n        onSearchChange: this.onSearchChange,\n        suggestions: this.props.showMentions ? this.state.suggestions : [],\n        entryComponent: MentionEntry,\n        onAddMention: this.onAddMention,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      });\n\n      var props = _objectSpread({}, this.props, {\n        editorState: this.state.editorState,\n        onChange: this.onChange,\n        keyBindingFn: this.keyBindingFn,\n        onUpArrow: this.onUpArrow,\n        onDownArrow: this.onDownArrow,\n        onEscape: this.onEscape,\n        handleFileInput: this.props.handleFileInput,\n        isTopPopup: true,\n        plugins: plugins,\n        pluginContent: pluginContent\n      });\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, this.renderTemplates(), React.createElement(ErxesEditor, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Editor;\n}(React.Component);\n\nexport { Editor as default };","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/Editor.tsx"],"names":["createMentionPlugin","defaultSuggestionsFilter","ContentState","EditorState","getDefaultKeyBinding","Modifier","createStateFromHTML","ErxesEditor","toHTML","React","TemplateList","MentionEntry","props","mention","theme","searchValue","parentProps","get","extractEntries","entries","_root","reduce","result","key","val","Editor","mentionPlugin","onChange","editorState","setState","hideTemplates","getContent","window","requestAnimationFrame","onTemplatesStateChange","getTemplatesState","templatesState","invalidate","state","responseTemplates","contentState","getCurrentContent","textContent","getPlainText","toLowerCase","foundTemplates","filter","template","name","includes","content","length","templates","slice","searchText","selectedIndex","changeEditorContent","selection","moveSelectionToEnd","getSelection","insertText","es","push","moveFocusToEnd","onSelectTemplate","index","selectedTemplate","onArrow","e","nudgeAmount","preventDefault","onUpArrow","onDownArrow","onEscape","onSearchChange","value","suggestions","mentions","toArray","onAddMention","object","collectedMentions","finalMentions","forEach","m","toFind","re","RegExp","findResult","match","replace","_id","map","keyBindingFn","shiftKey","onAddMessage","createFromText","createEmpty","defaultContent","mentionPrefix","nextProps","responseTemplate","currentConversation","MentionSuggestions","plugins","pluginContent","showMentions","handleFileInput","isTopPopup","renderTemplates","Component"],"mappings":"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","sourcesContent":["import createMentionPlugin, {\n  defaultSuggestionsFilter\n} from 'bat-draft-js-mention-plugin';\nimport {\n  ContentState,\n  EditorState,\n  getDefaultKeyBinding,\n  Modifier\n} from 'draft-js';\n\nimport {\n  createStateFromHTML,\n  ErxesEditor,\n  toHTML\n} from 'modules/common/components/editor/Editor';\nimport React from 'react';\n\nimport { IResponseTemplate } from 'modules/settings/responseTemplates/types';\nimport TemplateList from './TemplateList';\n\ntype EditorProps = {\n  currentConversation: string;\n  defaultContent?: string;\n  onChange: (content: string) => void;\n  onAddMention: (mentions: any) => void;\n  onAddMessage: () => void;\n  onSearchChange: (value: string) => void;\n  showMentions: boolean;\n  responseTemplate: string;\n  responseTemplates: IResponseTemplate[];\n  handleFileInput: (e: React.FormEvent<HTMLInputElement>) => void;\n  mentions: any;\n  placeholder?: string | React.ReactNode;\n};\n\ntype State = {\n  editorState: EditorState;\n  collectedMentions: any;\n  suggestions: any;\n  templatesState: any;\n  hideTemplates: boolean;\n};\n\nconst MentionEntry = props => {\n  const { mention, theme, searchValue, ...parentProps } = props;\n\n  return (\n    <div {...parentProps}>\n      <div className=\"mentionSuggestionsEntryContainer\">\n        <div className=\"mentionSuggestionsEntryContainerLeft\">\n          <img\n            alt={mention.get('name')}\n            role=\"presentation\"\n            src={mention.get('avatar') || '/images/avatar-colored.svg'}\n            className=\"mentionSuggestionsEntryAvatar\"\n          />\n        </div>\n\n        <div className=\"mentionSuggestionsEntryContainerRight\">\n          <div className=\"mentionSuggestionsEntryText\">\n            {mention.get('name')}\n          </div>\n\n          <div className=\"mentionSuggestionsEntryTitle\">\n            {mention.get('title')}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst extractEntries = mention => {\n  const entries = mention._root.entries;\n\n  return entries.reduce(\n    (result, [key, val]) => ({ ...result, [key]: val }),\n    {}\n  );\n};\n\nexport default class Editor extends React.Component<EditorProps, State> {\n  private mentionPlugin;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editorState: createStateFromHTML(\n        EditorState.createEmpty(),\n        props.defaultContent\n      ),\n      collectedMentions: [],\n      suggestions: this.props.mentions.toArray(),\n      templatesState: null,\n      hideTemplates: false\n    };\n\n    this.mentionPlugin = createMentionPlugin({\n      mentionPrefix: '@'\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.responseTemplate !== this.props.responseTemplate) {\n      const editorState = createStateFromHTML(\n        this.state.editorState,\n        nextProps.responseTemplate\n      );\n\n      // calling onChange, because draftjs's onChange is not trigerring after\n      // this setState\n      this.props.onChange(this.getContent(editorState));\n\n      // set editor state from response template\n      this.setState({ editorState });\n    }\n\n    // check switch conversation and fill default content\n    if (nextProps.currentConversation !== this.props.currentConversation) {\n      const editorState = createStateFromHTML(\n        EditorState.createEmpty(),\n        nextProps.defaultContent\n      );\n\n      this.setState({ editorState });\n    }\n  }\n\n  onChange = editorState => {\n    this.setState({ editorState, hideTemplates: false });\n\n    this.props.onChange(this.getContent(editorState));\n\n    window.requestAnimationFrame(() => {\n      this.onTemplatesStateChange(this.getTemplatesState());\n    });\n  };\n\n  onTemplatesStateChange = templatesState => {\n    this.setState({ templatesState });\n  };\n\n  getTemplatesState = (invalidate: boolean = true) => {\n    if (!invalidate) {\n      return this.state.templatesState;\n    }\n\n    const { editorState } = this.state;\n    const { responseTemplates } = this.props;\n\n    const contentState = editorState.getCurrentContent();\n\n    // get content as text\n    const textContent = contentState.getPlainText().toLowerCase();\n\n    if (!textContent) {\n      return null;\n    }\n\n    // search from response templates\n    const foundTemplates = responseTemplates.filter(\n      template =>\n        template.name.toLowerCase().includes(textContent) ||\n        template.content.toLowerCase().includes(textContent)\n    );\n\n    if (foundTemplates.length > 0) {\n      return {\n        templates: foundTemplates.slice(0, 5),\n        searchText: textContent,\n        selectedIndex: 0\n      };\n    }\n\n    return null;\n  };\n\n  changeEditorContent = (content: string) => {\n    let editorState = createStateFromHTML(this.state.editorState, content);\n\n    const selection = EditorState.moveSelectionToEnd(\n      editorState\n    ).getSelection();\n\n    // calling onChange, because draftjs's onChange is not trigerring after\n    // this setState\n    this.props.onChange(this.getContent(editorState));\n\n    const contentState = Modifier.insertText(\n      editorState.getCurrentContent(),\n      selection,\n      ' '\n    );\n\n    const es = EditorState.push(editorState, contentState, 'insert-characters');\n\n    editorState = EditorState.moveFocusToEnd(es);\n\n    return this.setState({ editorState, templatesState: null });\n  };\n\n  onSelectTemplate = (index?: number) => {\n    const { templatesState } = this.state;\n    const { templates, selectedIndex } = templatesState;\n    const selectedTemplate = templates[index || selectedIndex];\n\n    if (!selectedTemplate) {\n      return null;\n    }\n\n    return this.changeEditorContent(selectedTemplate.content);\n  };\n\n  onArrow = (e: KeyboardEvent, nudgeAmount: number) => {\n    const templatesState = this.getTemplatesState(false);\n\n    if (!templatesState) {\n      return;\n    }\n\n    e.preventDefault();\n\n    templatesState.selectedIndex += nudgeAmount;\n\n    this.onTemplatesStateChange(templatesState);\n  };\n\n  onUpArrow = (e: KeyboardEvent) => {\n    this.onArrow(e, -1);\n  };\n\n  onDownArrow = (e: KeyboardEvent) => {\n    this.onArrow(e, 1);\n  };\n\n  onEscape = () => {\n    this.setState({ hideTemplates: true });\n  };\n\n  // Render response templates suggestions\n  renderTemplates() {\n    const { templatesState, hideTemplates } = this.state;\n\n    if (!templatesState || hideTemplates) {\n      return null;\n    }\n\n    // Set suggestionState to SuggestionList.\n    return (\n      <TemplateList\n        onSelect={this.onSelectTemplate}\n        suggestionsState={templatesState}\n      />\n    );\n  }\n\n  onSearchChange = ({ value }) => {\n    this.props.onSearchChange(value);\n\n    this.setState({\n      suggestions: defaultSuggestionsFilter(\n        value,\n        this.props.mentions.toArray()\n      )\n    });\n  };\n\n  onAddMention = object => {\n    const mention = extractEntries(object);\n\n    const collectedMentions = this.state.collectedMentions;\n\n    collectedMentions.push(mention);\n\n    this.setState({ collectedMentions });\n  };\n\n  getContent = (editorState: EditorState) => {\n    let content = toHTML(editorState);\n\n    // some mentioned people may have been deleted\n    const finalMentions: any = [];\n\n    // replace mention content\n    this.state.collectedMentions.forEach(m => {\n      const toFind = `@${m.name}`;\n      const re = new RegExp(toFind, 'g');\n\n      // collect only not removed mentions\n      const findResult = content.match(re);\n\n      if (findResult && findResult.length > 0) {\n        finalMentions.push(m);\n      }\n\n      content = content.replace(\n        re,\n        `<b data-user-id='${m._id}'>@${m.name}</b>`\n      );\n    });\n\n    // send mentioned user to parent\n    this.props.onAddMention(finalMentions.map(mention => mention._id));\n\n    return content;\n  };\n\n  keyBindingFn = e => {\n    // handle new line\n    if (e.key === 'Enter' && e.shiftKey) {\n      return getDefaultKeyBinding(e);\n    }\n\n    // handle enter  in editor\n    if (e.key === 'Enter') {\n      // select response template\n      if (this.state.templatesState && !this.state.hideTemplates) {\n        this.onSelectTemplate();\n\n        return null;\n      }\n\n      // call parent's method to save content\n      this.props.onAddMessage();\n\n      // clear content\n      const state = this.state.editorState;\n\n      const editorState = EditorState.push(\n        state,\n        ContentState.createFromText(''),\n        'insert-characters'\n      );\n\n      this.setState({ editorState: EditorState.moveFocusToEnd(editorState) });\n\n      return null;\n    }\n\n    return getDefaultKeyBinding(e);\n  };\n\n  render() {\n    const { MentionSuggestions } = this.mentionPlugin;\n    const plugins = [this.mentionPlugin];\n\n    const pluginContent = (\n      <MentionSuggestions\n        onSearchChange={this.onSearchChange}\n        suggestions={this.props.showMentions ? this.state.suggestions : []}\n        entryComponent={MentionEntry}\n        onAddMention={this.onAddMention}\n        onChange={this.onChange}\n      />\n    );\n\n    const props = {\n      ...this.props,\n      editorState: this.state.editorState,\n      onChange: this.onChange,\n      keyBindingFn: this.keyBindingFn,\n      onUpArrow: this.onUpArrow,\n      onDownArrow: this.onDownArrow,\n      onEscape: this.onEscape,\n      handleFileInput: this.props.handleFileInput,\n      isTopPopup: true,\n      plugins,\n      pluginContent\n    };\n\n    return (\n      <div>\n        {this.renderTemplates()}\n        <ErxesEditor {...props} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}