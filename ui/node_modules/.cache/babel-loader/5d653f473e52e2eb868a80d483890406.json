{"ast":null,"code":"var _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/label/SelectLabel.tsx\";\nimport SelectWithSearch from 'modules/common/components/SelectWithSearch';\nimport React from 'react';\nimport { queries } from '../../graphql/index';\n// get user options for react-select-plus\nexport function generateLabelOptions() {\n  var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return array.map(function (item) {\n    var label = item || {};\n    return {\n      value: label._id || '',\n      label: label.name\n    };\n  });\n}\nexport default (function (_ref) {\n  var queryParams = _ref.queryParams,\n      value = _ref.value,\n      name = _ref.name,\n      filterParams = _ref.filterParams,\n      onSelect = _ref.onSelect,\n      customOption = _ref.customOption,\n      multi = _ref.multi;\n  var defaultValue = queryParams ? queryParams[name] : value;\n  return React.createElement(SelectWithSearch, {\n    label: \"Filter by labels\",\n    queryName: \"pipelineLabels\",\n    name: name,\n    filterParams: filterParams,\n    values: typeof defaultValue === 'string' ? multi ? [defaultValue] : defaultValue : defaultValue,\n    generateOptions: generateLabelOptions,\n    onSelect: onSelect,\n    customQuery: queries.pipelineLabels,\n    customOption: customOption,\n    multi: multi,\n    showAvatar: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/label/SelectLabel.tsx"],"names":["SelectWithSearch","React","queries","generateLabelOptions","array","map","item","label","value","_id","name","queryParams","filterParams","onSelect","customOption","multi","defaultValue","pipelineLabels"],"mappings":";AAAA,OAAOA,gBAAP,MAA6B,4CAA7B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AAGA;AACA,OAAO,SAASC,oBAAT,GAAuE;AAAA,MAAzCC,KAAyC,uEAAf,EAAe;AAC5E,SAAOA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI,EAAI;AACvB,QAAMC,KAAK,GAAGD,IAAI,IAAK,EAAvB;AAEA,WAAO;AACLE,MAAAA,KAAK,EAAED,KAAK,CAACE,GAAN,IAAa,EADf;AAELF,MAAAA,KAAK,EAAEA,KAAK,CAACG;AAFR,KAAP;AAID,GAPM,CAAP;AAQD;AAYD,gBAAe,gBAQM;AAAA,MAPnBC,WAOmB,QAPnBA,WAOmB;AAAA,MANnBH,KAMmB,QANnBA,KAMmB;AAAA,MALnBE,IAKmB,QALnBA,IAKmB;AAAA,MAJnBE,YAImB,QAJnBA,YAImB;AAAA,MAHnBC,QAGmB,QAHnBA,QAGmB;AAAA,MAFnBC,YAEmB,QAFnBA,YAEmB;AAAA,MADnBC,KACmB,QADnBA,KACmB;AACnB,MAAMC,YAAY,GAAGL,WAAW,GAAGA,WAAW,CAACD,IAAD,CAAd,GAAuBF,KAAvD;AAEA,SACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAC,kBADR;AAEE,IAAA,SAAS,EAAC,gBAFZ;AAGE,IAAA,IAAI,EAAEE,IAHR;AAIE,IAAA,YAAY,EAAEE,YAJhB;AAKE,IAAA,MAAM,EACJ,OAAOI,YAAP,KAAwB,QAAxB,GACID,KAAK,GACH,CAACC,YAAD,CADG,GAEHA,YAHN,GAIIA,YAVR;AAYE,IAAA,eAAe,EAAEb,oBAZnB;AAaE,IAAA,QAAQ,EAAEU,QAbZ;AAcE,IAAA,WAAW,EAAEX,OAAO,CAACe,cAdvB;AAeE,IAAA,YAAY,EAAEH,YAfhB;AAgBE,IAAA,KAAK,EAAEC,KAhBT;AAiBE,IAAA,UAAU,EAAE,KAjBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAqBD,CAhCD","sourcesContent":["import SelectWithSearch from 'modules/common/components/SelectWithSearch';\nimport { IOption, IQueryParams } from 'modules/common/types';\nimport React from 'react';\nimport { queries } from '../../graphql/index';\nimport { IPipelineLabel } from '../../types';\n\n// get user options for react-select-plus\nexport function generateLabelOptions(array: IPipelineLabel[] = []): IOption[] {\n  return array.map(item => {\n    const label = item || ({} as IPipelineLabel);\n\n    return {\n      value: label._id || '',\n      label: label.name\n    };\n  });\n}\n\ntype ISelectParams = {\n  queryParams?: IQueryParams;\n  filterParams?: { pipelineId: string };\n  onSelect: (value: string[] | string, name: string) => void;\n  multi?: boolean;\n  customOption?: IOption;\n  value?: string | string[];\n  name: string;\n};\n\nexport default ({\n  queryParams,\n  value,\n  name,\n  filterParams,\n  onSelect,\n  customOption,\n  multi\n}: ISelectParams) => {\n  const defaultValue = queryParams ? queryParams[name] : value;\n\n  return (\n    <SelectWithSearch\n      label=\"Filter by labels\"\n      queryName=\"pipelineLabels\"\n      name={name}\n      filterParams={filterParams}\n      values={\n        typeof defaultValue === 'string'\n          ? multi\n            ? [defaultValue]\n            : defaultValue\n          : defaultValue\n      }\n      generateOptions={generateLabelOptions}\n      onSelect={onSelect}\n      customQuery={queries.pipelineLabels}\n      customOption={customOption}\n      multi={multi}\n      showAvatar={false}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}