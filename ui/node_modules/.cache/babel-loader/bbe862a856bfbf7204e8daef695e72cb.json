{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/TemplateList.tsx\";\nimport highlighter from 'fuzzysearch-highlight';\nimport strip from 'strip';\nimport xss from 'xss';\nimport { ResponseSuggestionItem, ResponseSuggestions } from 'modules/inbox/styles';\nimport React from 'react';\n\n// response templates\nvar TemplateList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TemplateList, _React$Component);\n\n  function TemplateList() {\n    _classCallCheck(this, TemplateList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TemplateList).apply(this, arguments));\n  }\n\n  _createClass(TemplateList, [{\n    key: \"normalizeIndex\",\n    value: function normalizeIndex(selectedIndex, max) {\n      var index = selectedIndex % max;\n\n      if (index < 0) {\n        index += max;\n      }\n\n      return index;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          suggestionsState = _this$props.suggestionsState,\n          onSelect = _this$props.onSelect;\n      var selectedIndex = suggestionsState.selectedIndex,\n          searchText = suggestionsState.searchText,\n          templates = suggestionsState.templates;\n\n      if (!templates) {\n        return null;\n      }\n\n      var normalizedIndex = this.normalizeIndex(selectedIndex, templates.length);\n      return React.createElement(ResponseSuggestions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, templates.map(function (template, index) {\n        var style = {};\n\n        if (normalizedIndex === index) {\n          style.backgroundColor = '#5629B6';\n          style.color = '#ffffff';\n        }\n\n        var onClick = function onClick() {\n          return onSelect(index);\n        };\n\n        return React.createElement(ResponseSuggestionItem, {\n          key: template._id,\n          onClick: onClick,\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          dangerouslySetInnerHTML: {\n            __html: xss(highlighter(searchText, template.name))\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }), ' ', React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: xss(highlighter(searchText, strip(template.content)))\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }));\n      }, this));\n    }\n  }]);\n\n  return TemplateList;\n}(React.Component);\n\nexport { TemplateList as default };","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/TemplateList.tsx"],"names":["highlighter","strip","xss","ResponseSuggestionItem","ResponseSuggestions","React","TemplateList","selectedIndex","max","index","props","suggestionsState","onSelect","searchText","templates","normalizedIndex","normalizeIndex","length","map","template","style","backgroundColor","color","onClick","_id","fontWeight","__html","name","content","Component"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AAEA,SACEC,sBADF,EAEEC,mBAFF,QAGO,sBAHP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;;AAaA;IACqBC,Y;;;;;;;;;;;;;mCAIJC,a,EAAuBC,G,EAAa;AACjD,UAAIC,KAAK,GAAGF,aAAa,GAAGC,GAA5B;;AAEA,UAAIC,KAAK,GAAG,CAAZ,EAAe;AACbA,QAAAA,KAAK,IAAID,GAAT;AACD;;AAED,aAAOC,KAAP;AACD;;;6BAEQ;AAAA,wBACgC,KAAKC,KADrC;AAAA,UACCC,gBADD,eACCA,gBADD;AAAA,UACmBC,QADnB,eACmBA,QADnB;AAAA,UAGCL,aAHD,GAG0CI,gBAH1C,CAGCJ,aAHD;AAAA,UAGgBM,UAHhB,GAG0CF,gBAH1C,CAGgBE,UAHhB;AAAA,UAG4BC,SAH5B,GAG0CH,gBAH1C,CAG4BG,SAH5B;;AAKP,UAAI,CAACA,SAAL,EAAgB;AACd,eAAO,IAAP;AACD;;AAED,UAAMC,eAAe,GAAG,KAAKC,cAAL,CACtBT,aADsB,EAEtBO,SAAS,CAACG,MAFY,CAAxB;AAKA,aACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,SAAS,CAACI,GAAV,CAAc,UAACC,QAAD,EAAWV,KAAX,EAAqB;AAClC,YAAMW,KAAU,GAAG,EAAnB;;AAEA,YAAIL,eAAe,KAAKN,KAAxB,EAA+B;AAC7BW,UAAAA,KAAK,CAACC,eAAN,GAAwB,SAAxB;AACAD,UAAAA,KAAK,CAACE,KAAN,GAAc,SAAd;AACD;;AAED,YAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,iBAAMX,QAAQ,CAACH,KAAD,CAAd;AAAA,SAAhB;;AAEA,eACE,oBAAC,sBAAD;AACE,UAAA,GAAG,EAAEU,QAAQ,CAACK,GADhB;AAEE,UAAA,OAAO,EAAED,OAFX;AAGE,UAAA,KAAK,EAAEH,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE;AACE,UAAA,KAAK,EAAE;AAAEK,YAAAA,UAAU,EAAE;AAAd,WADT;AAEE,UAAA,uBAAuB,EAAE;AACvBC,YAAAA,MAAM,EAAExB,GAAG,CAACF,WAAW,CAACa,UAAD,EAAaM,QAAQ,CAACQ,IAAtB,CAAZ;AADY,WAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,EAUK,GAVL,EAWE;AACE,UAAA,uBAAuB,EAAE;AACvBD,YAAAA,MAAM,EAAExB,GAAG,CAACF,WAAW,CAACa,UAAD,EAAaZ,KAAK,CAACkB,QAAQ,CAACS,OAAV,CAAlB,CAAZ;AADY,WAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXF,CADF;AAmBD,OA7BA,EA6BE,IA7BF,CADH,CADF;AAkCD;;;;EA9DuCvB,KAAK,CAACwB,S;;SAA3BvB,Y","sourcesContent":["import highlighter from 'fuzzysearch-highlight';\nimport strip from 'strip';\nimport xss from 'xss';\n\nimport {\n  ResponseSuggestionItem,\n  ResponseSuggestions\n} from 'modules/inbox/styles';\nimport React from 'react';\n\nimport { IResponseTemplate } from 'modules/settings/responseTemplates/types';\n\ntype TemplateListProps = {\n  suggestionsState: {\n    selectedIndex: number;\n    searchText: string;\n    templates: IResponseTemplate[];\n  };\n  onSelect: (index: number) => void;\n};\n\n// response templates\nexport default class TemplateList extends React.Component<\n  TemplateListProps,\n  {}\n> {\n  normalizeIndex(selectedIndex: number, max: number) {\n    let index = selectedIndex % max;\n\n    if (index < 0) {\n      index += max;\n    }\n\n    return index;\n  }\n\n  render() {\n    const { suggestionsState, onSelect } = this.props;\n\n    const { selectedIndex, searchText, templates } = suggestionsState;\n\n    if (!templates) {\n      return null;\n    }\n\n    const normalizedIndex = this.normalizeIndex(\n      selectedIndex,\n      templates.length\n    );\n\n    return (\n      <ResponseSuggestions>\n        {templates.map((template, index) => {\n          const style: any = {};\n\n          if (normalizedIndex === index) {\n            style.backgroundColor = '#5629B6';\n            style.color = '#ffffff';\n          }\n\n          const onClick = () => onSelect(index);\n\n          return (\n            <ResponseSuggestionItem\n              key={template._id}\n              onClick={onClick}\n              style={style}\n            >\n              <span\n                style={{ fontWeight: 'bold' }}\n                dangerouslySetInnerHTML={{\n                  __html: xss(highlighter(searchText, template.name))\n                }}\n              />{' '}\n              <span\n                dangerouslySetInnerHTML={{\n                  __html: xss(highlighter(searchText, strip(template.content)))\n                }}\n              />\n            </ResponseSuggestionItem>\n          );\n        }, this)}\n      </ResponseSuggestions>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}