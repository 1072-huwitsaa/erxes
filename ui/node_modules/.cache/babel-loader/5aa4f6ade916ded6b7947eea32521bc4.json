{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/activityLogs/containers/items/InternalNote.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport InternalNote from 'modules/activityLogs/components/items/InternalNote';\nimport Spinner from 'modules/common/components/Spinner';\nimport { Alert, confirm, withProps } from 'modules/common/utils';\nimport { mutations, queries } from 'modules/internalNotes/graphql';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\n\nvar InternalNoteContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(InternalNoteContainer, _React$Component);\n\n  function InternalNoteContainer(props) {\n    var _this;\n\n    _classCallCheck(this, InternalNoteContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InternalNoteContainer).call(this, props));\n    _this.state = {\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(InternalNoteContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          internalNoteDetailsQuery = _this$props.internalNoteDetailsQuery,\n          noteId = _this$props.noteId,\n          editMutation = _this$props.editMutation,\n          internalNotesRemove = _this$props.internalNotesRemove;\n\n      if (internalNoteDetailsQuery.loading) {\n        return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n      }\n\n      var internalNote = internalNoteDetailsQuery.internalNoteDetail;\n\n      var edit = function edit(variables, callback) {\n        _this2.setState({\n          isLoading: true\n        });\n\n        editMutation({\n          variables: _objectSpread({\n            _id: noteId\n          }, variables)\n        }).then(function () {\n          Alert.success('You successfully updated a note.');\n\n          if (callback) {\n            callback();\n          }\n\n          _this2.setState({\n            isLoading: false\n          });\n        }).catch(function (error) {\n          Alert.error(error.message);\n\n          _this2.setState({\n            isLoading: false\n          });\n        });\n      };\n\n      var remove = function remove() {\n        confirm().then(function () {\n          return internalNotesRemove({\n            variables: {\n              _id: noteId\n            }\n          }).then(function () {\n            Alert.success('You successfully deleted a note.');\n          }).catch(function (error) {\n            Alert.error(error.message);\n          });\n        });\n      };\n\n      var updatedProps = _objectSpread({}, this.props, {\n        internalNote: internalNote,\n        edit: edit,\n        remove: remove,\n        isLoading: this.state.isLoading\n      });\n\n      return React.createElement(InternalNote, Object.assign({}, updatedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return InternalNoteContainer;\n}(React.Component);\n\nexport default withProps(compose(graphql(gql(queries.internalNoteDetail), {\n  name: 'internalNoteDetailsQuery',\n  options: function options(_ref) {\n    var noteId = _ref.noteId;\n    return {\n      variables: {\n        _id: noteId\n      }\n    };\n  }\n}), graphql(gql(mutations.internalNotesEdit), {\n  name: 'editMutation'\n}), graphql(gql(mutations.internalNotesRemove), {\n  name: 'internalNotesRemove',\n  options: function options() {\n    return {\n      refetchQueries: ['activityLogs']\n    };\n  }\n}))(InternalNoteContainer));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/activityLogs/containers/items/InternalNote.tsx"],"names":["gql","compose","InternalNote","Spinner","Alert","confirm","withProps","mutations","queries","React","graphql","InternalNoteContainer","props","state","isLoading","internalNoteDetailsQuery","noteId","editMutation","internalNotesRemove","loading","internalNote","internalNoteDetail","edit","variables","callback","setState","_id","then","success","catch","error","message","remove","updatedProps","Component","name","options","internalNotesEdit","refetchQueries"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport InternalNote from 'modules/activityLogs/components/items/InternalNote';\nimport { IUser } from 'modules/auth/types';\nimport Spinner from 'modules/common/components/Spinner';\nimport { Alert, confirm, withProps } from 'modules/common/utils';\nimport { mutations, queries } from 'modules/internalNotes/graphql';\nimport {\n  InternalNoteDetailQueryResponse,\n  InternalNotesEditMutationResponse,\n  InternalNotesRemoveMutationResponse\n} from 'modules/internalNotes/types';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\n\ntype Props = {\n  activity: any;\n  noteId: string;\n  currentUser: IUser;\n};\n\ntype FinalProps = {\n  internalNoteDetailsQuery: InternalNoteDetailQueryResponse;\n  editMutation: InternalNotesEditMutationResponse;\n} & Props &\n  InternalNotesRemoveMutationResponse;\n\nclass InternalNoteContainer extends React.Component<\n  FinalProps,\n  { isLoading: boolean }\n> {\n  constructor(props: FinalProps) {\n    super(props);\n\n    this.state = { isLoading: false };\n  }\n\n  render() {\n    const {\n      internalNoteDetailsQuery,\n      noteId,\n      editMutation,\n      internalNotesRemove\n    } = this.props;\n\n    if (internalNoteDetailsQuery.loading) {\n      return <Spinner />;\n    }\n\n    const internalNote = internalNoteDetailsQuery.internalNoteDetail;\n\n    const edit = (variables, callback) => {\n      this.setState({ isLoading: true });\n\n      editMutation({ variables: { _id: noteId, ...variables } })\n        .then(() => {\n          Alert.success('You successfully updated a note.');\n\n          if (callback) {\n            callback();\n          }\n\n          this.setState({ isLoading: false });\n        })\n        .catch(error => {\n          Alert.error(error.message);\n          this.setState({ isLoading: false });\n        });\n    };\n\n    const remove = () => {\n      confirm().then(() =>\n        internalNotesRemove({ variables: { _id: noteId } })\n          .then(() => {\n            Alert.success('You successfully deleted a note.');\n          })\n          .catch(error => {\n            Alert.error(error.message);\n          })\n      );\n    };\n\n    const updatedProps = {\n      ...this.props,\n      internalNote,\n      edit,\n      remove,\n      isLoading: this.state.isLoading\n    };\n\n    return <InternalNote {...updatedProps} />;\n  }\n}\n\nexport default withProps<Props>(\n  compose(\n    graphql<Props, InternalNoteDetailQueryResponse>(\n      gql(queries.internalNoteDetail),\n      {\n        name: 'internalNoteDetailsQuery',\n        options: ({ noteId }) => ({\n          variables: {\n            _id: noteId\n          }\n        })\n      }\n    ),\n    graphql<Props, InternalNotesEditMutationResponse>(\n      gql(mutations.internalNotesEdit),\n      {\n        name: 'editMutation'\n      }\n    ),\n    graphql<Props, InternalNotesRemoveMutationResponse>(\n      gql(mutations.internalNotesRemove),\n      {\n        name: 'internalNotesRemove',\n        options: () => ({\n          refetchQueries: ['activityLogs']\n        })\n      }\n    )\n  )(InternalNoteContainer)\n);\n"]},"metadata":{},"sourceType":"module"}