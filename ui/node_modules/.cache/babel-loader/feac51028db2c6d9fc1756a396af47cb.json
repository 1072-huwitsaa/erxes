{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/conformity/containers/GetConformity.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { renderWithProps } from 'modules/common/utils';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\n\nvar PortableItemsContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PortableItemsContainer, _React$Component);\n\n  function PortableItemsContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PortableItemsContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PortableItemsContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChangeItem = function () {\n      var itemsQuery = _this.props.itemsQuery;\n      itemsQuery.refetch();\n    };\n\n    return _this;\n  }\n\n  _createClass(PortableItemsContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          itemsQuery = _this$props.itemsQuery,\n          component = _this$props.component,\n          queryName = _this$props.queryName,\n          alreadyItems = _this$props.alreadyItems;\n      var items = alreadyItems;\n\n      if (!alreadyItems) {\n        if (!itemsQuery) {\n          return null;\n        }\n\n        items = itemsQuery[queryName] || [];\n      }\n\n      var extendedProps = _objectSpread({}, this.props, {\n        items: items,\n        onChangeItem: this.onChangeItem\n      });\n\n      var Component = component;\n      return React.createElement(Component, Object.assign({}, extendedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PortableItemsContainer;\n}(React.Component);\n\nexport default (function (props) {\n  return renderWithProps(props, compose(graphql(gql(props.itemsQuery), {\n    name: 'itemsQuery',\n    skip: function skip(_ref) {\n      var mainType = _ref.mainType,\n          mainTypeId = _ref.mainTypeId,\n          relType = _ref.relType,\n          alreadyItems = _ref.alreadyItems;\n      return !mainType && !mainTypeId && !relType || alreadyItems !== undefined;\n    },\n    options: function options(_ref2) {\n      var mainType = _ref2.mainType,\n          mainTypeId = _ref2.mainTypeId,\n          relType = _ref2.relType;\n      return {\n        variables: {\n          mainType: mainType,\n          mainTypeId: mainTypeId,\n          relType: relType,\n          isSaved: true\n        }\n      };\n    }\n  }))(PortableItemsContainer));\n});","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/conformity/containers/GetConformity.tsx"],"names":["gql","compose","renderWithProps","React","graphql","PortableItemsContainer","onChangeItem","itemsQuery","props","refetch","component","queryName","alreadyItems","items","extendedProps","Component","name","skip","mainType","mainTypeId","relType","undefined","options","variables","isSaved"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAEA,SAASC,eAAT,QAAgC,sBAAhC;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;;IAmBMC,sB;;;;;;;;;;;;;;;;;;UACJC,Y,GAAe,YAAM;AAAA,UACXC,UADW,GACI,MAAKC,KADT,CACXD,UADW;AAGnBA,MAAAA,UAAU,CAACE,OAAX;AACD,K;;;;;;;6BAEQ;AAAA,wBACoD,KAAKD,KADzD;AAAA,UACCD,UADD,eACCA,UADD;AAAA,UACaG,SADb,eACaA,SADb;AAAA,UACwBC,SADxB,eACwBA,SADxB;AAAA,UACmCC,YADnC,eACmCA,YADnC;AAGP,UAAIC,KAAK,GAAGD,YAAZ;;AAEA,UAAI,CAACA,YAAL,EAAmB;AACjB,YAAI,CAACL,UAAL,EAAiB;AACf,iBAAO,IAAP;AACD;;AAEDM,QAAAA,KAAK,GAAGN,UAAU,CAACI,SAAD,CAAV,IAAyB,EAAjC;AACD;;AAED,UAAMG,aAAa,qBACd,KAAKN,KADS;AAEjBK,QAAAA,KAAK,EAALA,KAFiB;AAGjBP,QAAAA,YAAY,EAAE,KAAKA;AAHF,QAAnB;;AAMA,UAAMS,SAAS,GAAGL,SAAlB;AACA,aAAO,oBAAC,SAAD,oBAAeI,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EA5BkCX,KAAK,CAACY,S;;AA+B3C,gBAAe,UAACP,KAAD;AAAA,SACbN,eAAe,CACbM,KADa,EAEbP,OAAO,CACLG,OAAO,CACLJ,GAAG,CAACQ,KAAK,CAACD,UAAP,CADE,EAEL;AACES,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,IAAI,EAAE;AAAA,UAAGC,QAAH,QAAGA,QAAH;AAAA,UAAaC,UAAb,QAAaA,UAAb;AAAA,UAAyBC,OAAzB,QAAyBA,OAAzB;AAAA,UAAkCR,YAAlC,QAAkCA,YAAlC;AAAA,aACH,CAACM,QAAD,IAAa,CAACC,UAAd,IAA4B,CAACC,OAA9B,IACAR,YAAY,KAAKS,SAFb;AAAA,KAFR;AAKEC,IAAAA,OAAO,EAAE;AAAA,UAAGJ,QAAH,SAAGA,QAAH;AAAA,UAAaC,UAAb,SAAaA,UAAb;AAAA,UAAyBC,OAAzB,SAAyBA,OAAzB;AAAA,aAAwC;AAC/CG,QAAAA,SAAS,EAAE;AACTL,UAAAA,QAAQ,EAARA,QADS;AAETC,UAAAA,UAAU,EAAVA,UAFS;AAGTC,UAAAA,OAAO,EAAPA,OAHS;AAITI,UAAAA,OAAO,EAAE;AAJA;AADoC,OAAxC;AAAA;AALX,GAFK,CADF,CAAP,CAkBEnB,sBAlBF,CAFa,CADF;AAAA,CAAf","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { IItem } from 'modules/boards/types';\nimport { renderWithProps } from 'modules/common/utils';\nimport { ICompany } from 'modules/companies/types';\nimport { ICustomer } from 'modules/customers/types';\nimport { IDeal } from 'modules/deals/types';\nimport { ITicket } from 'modules/tickets/types';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { ConformityQueryResponse, ISavedConformity } from '../types';\n\ntype IProps = {\n  mainType?: string;\n  mainTypeId?: string;\n  relType?: string;\n  component: any;\n  queryName: string;\n  itemsQuery: string;\n  data?: any;\n  collapseCallback?: () => void;\n  alreadyItems?: ICompany[] | ICustomer[] | IDeal[] | IItem[] | ITicket[];\n};\n\ntype FinalProps = {\n  itemsQuery: ConformityQueryResponse;\n} & IProps;\n\nclass PortableItemsContainer extends React.Component<FinalProps> {\n  onChangeItem = () => {\n    const { itemsQuery } = this.props;\n\n    itemsQuery.refetch();\n  };\n\n  render() {\n    const { itemsQuery, component, queryName, alreadyItems } = this.props;\n\n    let items = alreadyItems;\n\n    if (!alreadyItems) {\n      if (!itemsQuery) {\n        return null;\n      }\n\n      items = itemsQuery[queryName] || [];\n    }\n\n    const extendedProps = {\n      ...this.props,\n      items,\n      onChangeItem: this.onChangeItem\n    };\n\n    const Component = component;\n    return <Component {...extendedProps} />;\n  }\n}\n\nexport default (props: IProps) =>\n  renderWithProps<IProps>(\n    props,\n    compose(\n      graphql<IProps, ConformityQueryResponse, ISavedConformity>(\n        gql(props.itemsQuery),\n        {\n          name: 'itemsQuery',\n          skip: ({ mainType, mainTypeId, relType, alreadyItems }) =>\n            (!mainType && !mainTypeId && !relType) ||\n            alreadyItems !== undefined,\n          options: ({ mainType, mainTypeId, relType }) => ({\n            variables: {\n              mainType,\n              mainTypeId,\n              relType,\n              isSaved: true\n            }\n          })\n        }\n      )\n    )(PortableItemsContainer)\n  );\n"]},"metadata":{},"sourceType":"module"}