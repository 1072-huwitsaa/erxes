{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/editForm/Move.tsx\";\nimport BoardSelect from 'modules/boards/containers/BoardSelect';\nimport { MoveContainer, MoveFormContainer, PipelineName, PipelinePopoverContent, StageItem, Stages } from 'modules/boards/styles/item';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Tip from 'modules/common/components/Tip';\nimport React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\n\nvar Move =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Move, _React$Component);\n\n  function Move(props) {\n    var _this;\n\n    _classCallCheck(this, Move);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Move).call(this, props));\n    _this.ref = void 0;\n\n    _this.onChangeBoard = function (boardId) {\n      _this.setState({\n        boardId: boardId\n      });\n    };\n\n    _this.onChangePipeline = function (pipelineId, stages) {\n      _this.setState({\n        pipelineId: pipelineId,\n        stages: stages\n      });\n    };\n\n    _this.toggleForm = function () {\n      _this.setState({\n        show: !_this.state.show\n      });\n    };\n\n    _this.ref = React.createRef();\n    var _props$item = props.item,\n        pipeline = _props$item.pipeline,\n        _boardId = _props$item.boardId;\n    _this.state = {\n      show: false,\n      stages: props.stages || [],\n      pipelineId: pipeline && pipeline._id,\n      boardId: _boardId\n    };\n    return _this;\n  }\n\n  _createClass(Move, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.stages !== nextProps.stages) {\n        this.setState({\n          stages: nextProps.stages\n        });\n      }\n    }\n  }, {\n    key: \"renderStages\",\n    value: function renderStages() {\n      var _this$props = this.props,\n          stageId = _this$props.stageId,\n          onChangeStage = _this$props.onChangeStage;\n      var stages = this.state.stages;\n      var isPass = true;\n      return React.createElement(Stages, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, stages.map(function (s) {\n        var onClick = function onClick() {\n          return onChangeStage && onChangeStage(s._id);\n        };\n\n        var item = React.createElement(StageItem, {\n          key: s._id,\n          isPass: isPass,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(Tip, {\n          text: s.name,\n          placement: \"top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          onClick: onClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: isPass ? 'check-circle' : 'circle',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }))));\n\n        if (s._id === stageId) {\n          isPass = false;\n        }\n\n        return item;\n      }));\n    }\n  }, {\n    key: \"renderBoardSelect\",\n    value: function renderBoardSelect() {\n      var _this$props2 = this.props,\n          stageId = _this$props2.stageId,\n          onChangeStage = _this$props2.onChangeStage,\n          options = _this$props2.options;\n      var _this$state = this.state,\n          boardId = _this$state.boardId,\n          pipelineId = _this$state.pipelineId;\n      return React.createElement(Popover, {\n        id: \"pipeline-popover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(PipelinePopoverContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(BoardSelect, {\n        type: options.type,\n        stageId: stageId,\n        boardId: boardId,\n        pipelineId: pipelineId,\n        callback: this.toggleForm,\n        onChangeStage: onChangeStage,\n        onChangePipeline: this.onChangePipeline,\n        onChangeBoard: this.onChangeBoard,\n        autoSelectStage: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderMoveOut\",\n    value: function renderMoveOut() {\n      if (!this.props.options.isMove) {\n        return null;\n      }\n\n      var item = this.props.item || {};\n      var pipeline = item.pipeline;\n      return React.createElement(MoveFormContainer, {\n        innerRef: this.ref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(OverlayTrigger, {\n        trigger: \"click\",\n        placement: \"bottom-start\",\n        overlay: this.renderBoardSelect(),\n        rootClose: true,\n        container: this.ref.current,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(PipelineName, {\n        onClick: this.toggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, pipeline && pipeline.name, \" \", React.createElement(Icon, {\n        icon: \"angle-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MoveContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, this.renderMoveOut(), this.renderStages());\n    }\n  }]);\n\n  return Move;\n}(React.Component);\n\nexport default Move;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/editForm/Move.tsx"],"names":["BoardSelect","MoveContainer","MoveFormContainer","PipelineName","PipelinePopoverContent","StageItem","Stages","Icon","Tip","React","OverlayTrigger","Popover","Move","props","ref","onChangeBoard","boardId","setState","onChangePipeline","pipelineId","stages","toggleForm","show","state","createRef","item","pipeline","_id","nextProps","stageId","onChangeStage","isPass","map","s","onClick","name","options","type","isMove","renderBoardSelect","current","renderMoveOut","renderStages","Component"],"mappings":"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","sourcesContent":["import BoardSelect from 'modules/boards/containers/BoardSelect';\nimport {\n  MoveContainer,\n  MoveFormContainer,\n  PipelineName,\n  PipelinePopoverContent,\n  StageItem,\n  Stages\n} from 'modules/boards/styles/item';\nimport { IStage } from 'modules/boards/types';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Tip from 'modules/common/components/Tip';\nimport React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport { IItem, IOptions } from '../../types';\n\ntype Props = {\n  item?: IItem;\n  stages: IStage[];\n  stageId?: string;\n  onChangeStage?: (stageId: string) => void;\n  options: IOptions;\n};\n\ntype State = {\n  boardId: string;\n  pipelineId: string;\n  show: boolean;\n  stages: IStage[];\n};\n\nclass Move extends React.Component<Props, State> {\n  private ref;\n\n  constructor(props) {\n    super(props);\n\n    this.ref = React.createRef();\n\n    const {\n      item: { pipeline, boardId }\n    } = props;\n\n    this.state = {\n      show: false,\n      stages: props.stages || [],\n      pipelineId: pipeline && pipeline._id,\n      boardId\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.stages !== nextProps.stages) {\n      this.setState({ stages: nextProps.stages });\n    }\n  }\n\n  onChangeBoard = (boardId: string) => {\n    this.setState({ boardId });\n  };\n\n  onChangePipeline = (pipelineId: string, stages: IStage[]) => {\n    this.setState({ pipelineId, stages });\n  };\n\n  toggleForm = () => {\n    this.setState({ show: !this.state.show });\n  };\n\n  renderStages() {\n    const { stageId, onChangeStage } = this.props;\n    const { stages } = this.state;\n\n    let isPass = true;\n\n    return (\n      <Stages>\n        {stages.map(s => {\n          const onClick = () => onChangeStage && onChangeStage(s._id);\n\n          const item = (\n            <StageItem key={s._id} isPass={isPass}>\n              <Tip text={s.name} placement=\"top\">\n                <span onClick={onClick}>\n                  <Icon icon={isPass ? 'check-circle' : 'circle'} />\n                </span>\n              </Tip>\n            </StageItem>\n          );\n\n          if (s._id === stageId) {\n            isPass = false;\n          }\n\n          return item;\n        })}\n      </Stages>\n    );\n  }\n\n  renderBoardSelect() {\n    const { stageId, onChangeStage, options } = this.props;\n    const { boardId, pipelineId } = this.state;\n\n    return (\n      <Popover id=\"pipeline-popover\">\n        <PipelinePopoverContent>\n          <BoardSelect\n            type={options.type}\n            stageId={stageId}\n            boardId={boardId}\n            pipelineId={pipelineId}\n            callback={this.toggleForm}\n            onChangeStage={onChangeStage}\n            onChangePipeline={this.onChangePipeline}\n            onChangeBoard={this.onChangeBoard}\n            autoSelectStage={false}\n          />\n        </PipelinePopoverContent>\n      </Popover>\n    );\n  }\n\n  renderMoveOut() {\n    if (!this.props.options.isMove) {\n      return null;\n    }\n\n    const item = this.props.item || ({} as IItem);\n    const { pipeline } = item;\n\n    return (\n      <MoveFormContainer innerRef={this.ref}>\n        <OverlayTrigger\n          trigger=\"click\"\n          placement=\"bottom-start\"\n          overlay={this.renderBoardSelect()}\n          rootClose={true}\n          container={this.ref.current}\n        >\n          <PipelineName onClick={this.toggleForm}>\n            {pipeline && pipeline.name} <Icon icon=\"angle-down\" />\n          </PipelineName>\n        </OverlayTrigger>\n      </MoveFormContainer>\n    );\n  }\n\n  render() {\n    return (\n      <MoveContainer>\n        {this.renderMoveOut()}\n        {this.renderStages()}\n      </MoveContainer>\n    );\n  }\n}\n\nexport default Move;\n"]},"metadata":{},"sourceType":"module"}