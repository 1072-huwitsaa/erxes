{"ast":null,"code":"var _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/productService/utils.tsx\";\nimport React from 'react';\nimport { PRODUCT_TYPE_CHOISES } from './constants';\nexport var generateCategoryOptions = function generateCategoryOptions(categories, currentCategoryId) {\n  var result = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = categories[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var category = _step.value;\n      var order = category.order;\n      var foundedString = order.match(/[/]/gi);\n      var space = '';\n\n      if (foundedString) {\n        space = \"\\xA0 \".repeat(foundedString.length);\n      }\n\n      if (currentCategoryId !== category._id) {\n        result.push(React.createElement(\"option\", {\n          key: category._id,\n          value: category._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, space, category.name));\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return result;\n};\nexport var productTypeChoises = function productTypeChoises(__) {\n  var options = [];\n\n  for (var _i = 0, _Object$keys = Object.keys(PRODUCT_TYPE_CHOISES); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    options.push({\n      value: key,\n      label: __(PRODUCT_TYPE_CHOISES[key])\n    });\n  }\n\n  return options;\n};","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/productService/utils.tsx"],"names":["React","PRODUCT_TYPE_CHOISES","generateCategoryOptions","categories","currentCategoryId","result","category","order","foundedString","match","space","repeat","length","_id","push","name","productTypeChoises","__","options","Object","keys","key","value","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,aAArC;AAGA,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CACrCC,UADqC,EAErCC,iBAFqC,EAGlC;AACH,MAAMC,MAAyB,GAAG,EAAlC;AADG;AAAA;AAAA;;AAAA;AAGH,yBAAuBF,UAAvB,8HAAmC;AAAA,UAAxBG,QAAwB;AACjC,UAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAvB;AAEA,UAAMC,aAAa,GAAGD,KAAK,CAACE,KAAN,CAAY,OAAZ,CAAtB;AAEA,UAAIC,KAAK,GAAG,EAAZ;;AAEA,UAAIF,aAAJ,EAAmB;AACjBE,QAAAA,KAAK,GAAG,QAAUC,MAAV,CAAiBH,aAAa,CAACI,MAA/B,CAAR;AACD;;AAED,UAAIR,iBAAiB,KAAKE,QAAQ,CAACO,GAAnC,EAAwC;AACtCR,QAAAA,MAAM,CAACS,IAAP,CACE;AAAQ,UAAA,GAAG,EAAER,QAAQ,CAACO,GAAtB;AAA2B,UAAA,KAAK,EAAEP,QAAQ,CAACO,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGH,KADH,EAEGJ,QAAQ,CAACS,IAFZ,CADF;AAMD;AACF;AAtBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwBH,SAAOV,MAAP;AACD,CA5BM;AA8BP,OAAO,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,EAAE,EAAI;AACtC,MAAMC,OAAgD,GAAG,EAAzD;;AAEA,kCAAkBC,MAAM,CAACC,IAAP,CAAYnB,oBAAZ,CAAlB,kCAAqD;AAAhD,QAAMoB,GAAG,mBAAT;AACHH,IAAAA,OAAO,CAACJ,IAAR,CAAa;AACXQ,MAAAA,KAAK,EAAED,GADI;AAEXE,MAAAA,KAAK,EAAEN,EAAE,CAAChB,oBAAoB,CAACoB,GAAD,CAArB;AAFE,KAAb;AAID;;AAED,SAAOH,OAAP;AACD,CAXM","sourcesContent":["import React from 'react';\nimport { PRODUCT_TYPE_CHOISES } from './constants';\nimport { IProductCategory } from './types';\n\nexport const generateCategoryOptions = (\n  categories: IProductCategory[],\n  currentCategoryId?: string\n) => {\n  const result: React.ReactNode[] = [];\n\n  for (const category of categories) {\n    const order = category.order;\n\n    const foundedString = order.match(/[/]/gi);\n\n    let space = '';\n\n    if (foundedString) {\n      space = '\\u00A0 '.repeat(foundedString.length);\n    }\n\n    if (currentCategoryId !== category._id) {\n      result.push(\n        <option key={category._id} value={category._id}>\n          {space}\n          {category.name}\n        </option>\n      );\n    }\n  }\n\n  return result;\n};\n\nexport const productTypeChoises = __ => {\n  const options: Array<{ value: string; label: string }> = [];\n\n  for (const key of Object.keys(PRODUCT_TYPE_CHOISES)) {\n    options.push({\n      value: key,\n      label: __(PRODUCT_TYPE_CHOISES[key])\n    });\n  }\n\n  return options;\n};\n"]},"metadata":{},"sourceType":"module"}