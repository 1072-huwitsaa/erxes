{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/components/EngageStats.tsx\";\nimport Attachment from 'modules/common/components/Attachment';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { __ } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport { FlexRow, Subject } from 'modules/settings/integrations/components/mail/styles';\nimport React from 'react';\nimport { METHODS, SMS_DELIVERY_STATUSES } from '../constants';\nimport { Box, BoxContent, BoxHeader, FlexContainer, Half, IconContainer, PreviewContent, RightSection, Shell, Title } from '../styles';\n\nvar EmailStatistics =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EmailStatistics, _React$Component);\n\n  function EmailStatistics() {\n    _classCallCheck(this, EmailStatistics);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EmailStatistics).apply(this, arguments));\n  }\n\n  _createClass(EmailStatistics, [{\n    key: \"renderBox\",\n    value: function renderBox(icon, name, type) {\n      return React.createElement(Box, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(BoxHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(IconContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }))), React.createElement(BoxContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, name), type || 0));\n    }\n  }, {\n    key: \"renderAttachments\",\n    value: function renderAttachments() {\n      var email = this.props.message.email;\n\n      if (!email || email.attachments && email.attachments.length === 0) {\n        return null;\n      }\n\n      return React.createElement(Subject, {\n        noBorder: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Attachments:\"), (email.attachments || []).map(function (attachment, index) {\n        return React.createElement(Attachment, {\n          key: index,\n          attachment: attachment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n      })));\n    }\n  }, {\n    key: \"getSubject\",\n    value: function getSubject() {\n      var message = this.props.message;\n\n      if (message.method === METHODS.EMAIL) {\n        return message.email && message.email.subject;\n      }\n\n      if (message.method === METHODS.SMS) {\n        return message.shortMessage && message.shortMessage.from;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getContent\",\n    value: function getContent() {\n      var message = this.props.message;\n\n      if (message.method === METHODS.EMAIL) {\n        return message.email && message.email.content;\n      }\n\n      if (message.method === METHODS.SMS) {\n        return message.shortMessage && message.shortMessage.content;\n      }\n\n      return '';\n    }\n  }, {\n    key: \"renderLeft\",\n    value: function renderLeft() {\n      var message = this.props.message;\n      var fromIntegration = message.fromIntegration,\n          fromUser = message.fromUser;\n      var from;\n\n      if (fromUser) {\n        from = fromUser.details ? fromUser.details.fullName : fromUser.email;\n      }\n\n      if (fromIntegration) {\n        from = fromIntegration.name;\n      }\n\n      return React.createElement(Half, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Subject, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, __('From'), \":\"), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, from))), React.createElement(Subject, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, __('Subject'), \":\"), this.getSubject())), React.createElement(Subject, {\n        noBorder: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, __('Content'), \":\")), React.createElement(PreviewContent, {\n        isFullmessage: false,\n        showOverflow: true,\n        dangerouslySetInnerHTML: {\n          __html: this.getContent() || ''\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), this.renderAttachments());\n    }\n  }, {\n    key: \"renderEmailStats\",\n    value: function renderEmailStats() {\n      var stats = this.props.message.stats;\n      var emailStats = stats || {};\n\n      if (this.props.message.method !== METHODS.EMAIL) {\n        return null;\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, this.renderBox('cube-2', 'Total', emailStats.total), this.renderBox('telegram-alt', 'Sent', emailStats.send), this.renderBox('comment-check', 'Delivered', emailStats.delivery), this.renderBox('envelope-open', 'Opened', emailStats.open), this.renderBox('mouse-alt', 'Clicked', emailStats.click), this.renderBox('frown', 'Complaint', emailStats.complaint), this.renderBox('arrows-up-right', 'Bounce', emailStats.bounce), this.renderBox('ban', 'Rendering failure', emailStats.renderingfailure), this.renderBox('times-circle', 'Rejected', emailStats.reject));\n    }\n  }, {\n    key: \"renderSmsStats\",\n    value: function renderSmsStats() {\n      var smsStats = this.props.message.smsStats;\n      var stats = smsStats || {};\n\n      if (this.props.message.method !== METHODS.SMS) {\n        return null;\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, this.renderBox('cube-2', 'Total', stats.total), this.renderBox('list-ul', SMS_DELIVERY_STATUSES.QUEUED, stats.queued), this.renderBox('comment-alt-message', SMS_DELIVERY_STATUSES.SENDING, stats.sending), this.renderBox('send', SMS_DELIVERY_STATUSES.SENT, stats.sent), this.renderBox('checked', SMS_DELIVERY_STATUSES.DELIVERED, stats.delivered), this.renderBox('comment-alt-block', SMS_DELIVERY_STATUSES.SENDING_FAILED, stats.sending_failed), this.renderBox('multiply', SMS_DELIVERY_STATUSES.DELIVERY_FAILED, stats.delivery_failed), this.renderBox('comment-alt-question', SMS_DELIVERY_STATUSES.DELIVERY_UNCONFIRMED, stats.delivery_unconfirmed));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var message = this.props.message;\n      var logs = message.logs || [];\n      var actionBar = React.createElement(Wrapper.ActionBar, {\n        left: React.createElement(Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, this.props.message.title),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      });\n      var content = React.createElement(FlexContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, this.renderLeft(), React.createElement(Half, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(RightSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, this.renderEmailStats(), this.renderSmsStats(), React.createElement(Shell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"shell-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"shell-top-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Log messages\"), React.createElement(\"ul\", {\n        className: \"shell-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, logs.map(function (log, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, log.message);\n      })))))));\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          title: __('Show statistics'),\n          breadcrumb: [{\n            title: __('Engage'),\n            link: '/engage'\n          }, {\n            title: __('Show statistics')\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }),\n        actionBar: actionBar,\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return EmailStatistics;\n}(React.Component);\n\nexport default EmailStatistics;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/components/EngageStats.tsx"],"names":["Attachment","Icon","__","Wrapper","FlexRow","Subject","React","METHODS","SMS_DELIVERY_STATUSES","Box","BoxContent","BoxHeader","FlexContainer","Half","IconContainer","PreviewContent","RightSection","Shell","Title","EmailStatistics","icon","name","type","email","props","message","attachments","length","map","attachment","index","method","EMAIL","subject","SMS","shortMessage","from","content","fromIntegration","fromUser","details","fullName","getSubject","__html","getContent","renderAttachments","stats","emailStats","renderBox","total","send","delivery","open","click","complaint","bounce","renderingfailure","reject","smsStats","QUEUED","queued","SENDING","sending","SENT","sent","DELIVERED","delivered","SENDING_FAILED","sending_failed","DELIVERY_FAILED","delivery_failed","DELIVERY_UNCONFIRMED","delivery_unconfirmed","logs","actionBar","title","renderLeft","renderEmailStats","renderSmsStats","log","link","Component"],"mappings":"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","sourcesContent":["import Attachment from 'modules/common/components/Attachment';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { __ } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport {\n  FlexRow,\n  Subject\n} from 'modules/settings/integrations/components/mail/styles';\nimport React from 'react';\nimport { METHODS, SMS_DELIVERY_STATUSES } from '../constants';\nimport {\n  Box,\n  BoxContent,\n  BoxHeader,\n  FlexContainer,\n  Half,\n  IconContainer,\n  PreviewContent,\n  RightSection,\n  Shell,\n  Title\n} from '../styles';\nimport { IEngageMessage, IEngageSmsStats, IEngageStats } from '../types';\n\ntype Props = {\n  message: IEngageMessage;\n};\n\nclass EmailStatistics extends React.Component<Props> {\n  renderBox(icon, name, type) {\n    return (\n      <Box>\n        <BoxHeader>\n          <IconContainer>\n            <Icon icon={icon} />\n          </IconContainer>\n        </BoxHeader>\n        <BoxContent>\n          <h5>{name}</h5>\n          {type || 0}\n        </BoxContent>\n      </Box>\n    );\n  }\n\n  renderAttachments() {\n    const { email } = this.props.message;\n\n    if (!email || (email.attachments && email.attachments.length === 0)) {\n      return null;\n    }\n\n    return (\n      <Subject noBorder={true}>\n        <FlexRow>\n          <label>Attachments:</label>\n\n          {(email.attachments || []).map((attachment, index) => (\n            <Attachment key={index} attachment={attachment} />\n          ))}\n        </FlexRow>\n      </Subject>\n    );\n  }\n\n  getSubject() {\n    const { message } = this.props;\n\n    if (message.method === METHODS.EMAIL) {\n      return message.email && message.email.subject;\n    }\n\n    if (message.method === METHODS.SMS) {\n      return message.shortMessage && message.shortMessage.from;\n    }\n\n    return null;\n  }\n\n  getContent() {\n    const { message } = this.props;\n\n    if (message.method === METHODS.EMAIL) {\n      return message.email && message.email.content;\n    }\n\n    if (message.method === METHODS.SMS) {\n      return message.shortMessage && message.shortMessage.content;\n    }\n\n    return '';\n  }\n\n  renderLeft() {\n    const { message } = this.props;\n    const { fromIntegration, fromUser } = message;\n\n    let from;\n\n    if (fromUser) {\n      from = fromUser.details ? fromUser.details.fullName : fromUser.email;\n    }\n\n    if (fromIntegration) {\n      from = fromIntegration.name;\n    }\n\n    return (\n      <Half>\n        <Subject>\n          <FlexRow>\n            <label>{__('From')}:</label>\n            <strong>{from}</strong>\n          </FlexRow>\n        </Subject>\n        <Subject>\n          <FlexRow>\n            <label>{__('Subject')}:</label>\n            {this.getSubject()}\n          </FlexRow>\n        </Subject>\n        <Subject noBorder={true}>\n          <FlexRow>\n            <label>{__('Content')}:</label>\n          </FlexRow>\n          <PreviewContent\n            isFullmessage={false}\n            showOverflow={true}\n            dangerouslySetInnerHTML={{\n              __html: this.getContent() || ''\n            }}\n          />\n        </Subject>\n        {this.renderAttachments()}\n      </Half>\n    );\n  }\n\n  renderEmailStats() {\n    const { stats } = this.props.message;\n    const emailStats = stats || ({} as IEngageStats);\n\n    if (this.props.message.method !== METHODS.EMAIL) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        {this.renderBox('cube-2', 'Total', emailStats.total)}\n        {this.renderBox('telegram-alt', 'Sent', emailStats.send)}\n        {this.renderBox('comment-check', 'Delivered', emailStats.delivery)}\n        {this.renderBox('envelope-open', 'Opened', emailStats.open)}\n        {this.renderBox('mouse-alt', 'Clicked', emailStats.click)}\n        {this.renderBox('frown', 'Complaint', emailStats.complaint)}\n        {this.renderBox('arrows-up-right', 'Bounce', emailStats.bounce)}\n        {this.renderBox(\n          'ban',\n          'Rendering failure',\n          emailStats.renderingfailure\n        )}\n        {this.renderBox('times-circle', 'Rejected', emailStats.reject)}\n      </React.Fragment>\n    );\n  }\n\n  renderSmsStats() {\n    const { smsStats } = this.props.message;\n    const stats = smsStats || ({} as IEngageSmsStats);\n\n    if (this.props.message.method !== METHODS.SMS) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        {this.renderBox('cube-2', 'Total', stats.total)}\n        {this.renderBox('list-ul', SMS_DELIVERY_STATUSES.QUEUED, stats.queued)}\n        {this.renderBox(\n          'comment-alt-message',\n          SMS_DELIVERY_STATUSES.SENDING,\n          stats.sending\n        )}\n        {this.renderBox('send', SMS_DELIVERY_STATUSES.SENT, stats.sent)}\n        {this.renderBox(\n          'checked',\n          SMS_DELIVERY_STATUSES.DELIVERED,\n          stats.delivered\n        )}\n        {this.renderBox(\n          'comment-alt-block',\n          SMS_DELIVERY_STATUSES.SENDING_FAILED,\n          stats.sending_failed\n        )}\n        {this.renderBox(\n          'multiply',\n          SMS_DELIVERY_STATUSES.DELIVERY_FAILED,\n          stats.delivery_failed\n        )}\n        {this.renderBox(\n          'comment-alt-question',\n          SMS_DELIVERY_STATUSES.DELIVERY_UNCONFIRMED,\n          stats.delivery_unconfirmed\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const { message } = this.props;\n    const logs = message.logs || [];\n\n    const actionBar = (\n      <Wrapper.ActionBar left={<Title>{this.props.message.title}</Title>} />\n    );\n\n    const content = (\n      <FlexContainer>\n        {this.renderLeft()}\n        <Half>\n          <RightSection>\n            {this.renderEmailStats()}\n            {this.renderSmsStats()}\n            <Shell>\n              <div className=\"shell-wrap\">\n                <p className=\"shell-top-bar\">Log messages</p>\n                <ul className=\"shell-body\">\n                  {logs.map((log, index) => (\n                    <li key={index}>{log.message}</li>\n                  ))}\n                </ul>\n              </div>\n            </Shell>\n          </RightSection>\n        </Half>\n      </FlexContainer>\n    );\n\n    return (\n      <Wrapper\n        header={\n          <Wrapper.Header\n            title={__('Show statistics')}\n            breadcrumb={[\n              { title: __('Engage'), link: '/engage' },\n              { title: __('Show statistics') }\n            ]}\n          />\n        }\n        actionBar={actionBar}\n        content={content}\n      />\n    );\n  }\n}\n\nexport default EmailStatistics;\n"]},"metadata":{},"sourceType":"module"}