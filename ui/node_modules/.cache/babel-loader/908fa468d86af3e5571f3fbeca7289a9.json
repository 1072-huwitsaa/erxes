{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/SelectItem.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  text-align: left;\\n  min-width: 150px;\\n  background: none;\\n  outline: 0;\\n  border: 0;\\n  overflow: hidden;\\n\\n  > i {\\n    color: \", \";\\n    float: right;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport PriorityIndicator from 'modules/boards/components/editForm/PriorityIndicator';\nimport DropdownToggle from 'modules/common/components/DropdownToggle';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport colors from 'modules/common/styles/colors';\nimport * as React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport styled from 'styled-components';\nexport var ActionItem = styled.button(_templateObject(), colors.colorCoreGreen);\n\nvar SelectItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SelectItem, _React$Component);\n\n  function SelectItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SelectItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SelectItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.isChecked = function (item) {\n      var _this$props = _this.props,\n          selectedItems = _this$props.selectedItems,\n          multiple = _this$props.multiple;\n\n      if (multiple) {\n        return (selectedItems || []).includes(item);\n      }\n\n      return selectedItems === item;\n    };\n\n    return _this;\n  }\n\n  _createClass(SelectItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          onChange = _this$props2.onChange,\n          items = _this$props2.items,\n          trigger = _this$props2.trigger;\n\n      var onChangeItem = function onChangeItem(value) {\n        return onChange(value);\n      };\n\n      return React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        as: DropdownToggle,\n        id: \"dropdown-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, trigger), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, items.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(ActionItem, {\n          onClick: onChangeItem.bind(_this2, item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(PriorityIndicator, {\n          value: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), \" \", item, _this2.isChecked(item) && React.createElement(Icon, {\n          icon: \"check-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        })));\n      })));\n    }\n  }]);\n\n  return SelectItem;\n}(React.Component);\n\nexport default SelectItem;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/SelectItem.tsx"],"names":["PriorityIndicator","DropdownToggle","Icon","colors","React","Dropdown","styled","ActionItem","button","colorCoreGreen","SelectItem","isChecked","item","props","selectedItems","multiple","includes","onChange","items","trigger","onChangeItem","value","map","bind","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,iBAAP,MAA8B,sDAA9B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,IAAMC,UAAU,GAAGD,MAAM,CAACE,MAAV,oBAUVL,MAAM,CAACM,cAVG,CAAhB;;IAuBDC,U;;;;;;;;;;;;;;;;;;UACJC,S,GAAY,UAACC,IAAD,EAAkB;AAAA,wBACQ,MAAKC,KADb;AAAA,UACpBC,aADoB,eACpBA,aADoB;AAAA,UACLC,QADK,eACLA,QADK;;AAG5B,UAAIA,QAAJ,EAAc;AACZ,eAAO,CAACD,aAAa,IAAI,EAAlB,EAAsBE,QAAtB,CAA+BJ,IAA/B,CAAP;AACD;;AAED,aAAOE,aAAa,KAAKF,IAAzB;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,yBAC8B,KAAKC,KADnC;AAAA,UACCI,QADD,gBACCA,QADD;AAAA,UACWC,KADX,gBACWA,KADX;AAAA,UACkBC,OADlB,gBACkBA,OADlB;;AAGP,UAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD;AAAA,eAAmBJ,QAAQ,CAACI,KAAD,CAA3B;AAAA,OAArB;;AAEA,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD,CAAU,MAAV;AAAiB,QAAA,EAAE,EAAEpB,cAArB;AAAqC,QAAA,EAAE,EAAC,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGkB,OADH,CADF,EAIE,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,CAACI,GAAN,CAAU,UAAAV,IAAI;AAAA,eACb;AAAI,UAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAEQ,YAAY,CAACG,IAAb,CAAkB,MAAlB,EAAwBX,IAAxB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,iBAAD;AAAmB,UAAA,KAAK,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,OACsCA,IADtC,EAEG,MAAI,CAACD,SAAL,CAAeC,IAAf,KAAwB,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAF3B,CADF,CADa;AAAA,OAAd,CADH,CAJF,CADF;AAiBD;;;;EAjCsBR,KAAK,CAACoB,S;;AAoC/B,eAAed,UAAf","sourcesContent":["import PriorityIndicator from 'modules/boards/components/editForm/PriorityIndicator';\nimport DropdownToggle from 'modules/common/components/DropdownToggle';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport colors from 'modules/common/styles/colors';\nimport * as React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport styled from 'styled-components';\n\nexport const ActionItem = styled.button`\n  width: 100%;\n  text-align: left;\n  min-width: 150px;\n  background: none;\n  outline: 0;\n  border: 0;\n  overflow: hidden;\n\n  > i {\n    color: ${colors.colorCoreGreen};\n    float: right;\n  }\n`;\n\ntype IProps = {\n  onChange: (value: string) => void;\n  selectedItems?: string | string[];\n  items: string[];\n  trigger: React.ReactNode;\n  multiple?: boolean;\n};\n\nclass SelectItem extends React.Component<IProps> {\n  isChecked = (item: string) => {\n    const { selectedItems, multiple } = this.props;\n\n    if (multiple) {\n      return (selectedItems || []).includes(item);\n    }\n\n    return selectedItems === item;\n  };\n\n  render() {\n    const { onChange, items, trigger } = this.props;\n\n    const onChangeItem = (value: string) => onChange(value);\n\n    return (\n      <Dropdown>\n        <Dropdown.Toggle as={DropdownToggle} id=\"dropdown-select\">\n          {trigger}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {items.map(item => (\n            <li key={item}>\n              <ActionItem onClick={onChangeItem.bind(this, item)}>\n                <PriorityIndicator value={item} /> {item}\n                {this.isChecked(item) && <Icon icon=\"check-1\" />}\n              </ActionItem>\n            </li>\n          ))}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default SelectItem;\n"]},"metadata":{},"sourceType":"module"}