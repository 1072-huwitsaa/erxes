{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/nameCard/Avatar.tsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  background: url(\", \")\\n    center no-repeat;\\n  background-size: cover;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: block;\\n  max-width: 80px;\\n  border-radius: 40px;\\n  float: left;\\n  padding: 0;\\n  text-align: center;\\n  position: relative;\\n  color: \", \";\\n\\n  background: \", \";\\n\\n  > span {\\n    position: absolute;\\n    right: -5px;\\n    bottom: -2px;\\n  }\\n\\n  a {\\n    color: \", \";\\n    display: block;\\n    transition: all ease 0.3s;\\n\\n    &:hover {\\n      color: \", \";\\n      opacity: 0.8;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { colors } from 'modules/common/styles';\nimport { rgba } from 'modules/common/styles/color';\nimport { readFile } from 'modules/common/utils';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport styledTS from 'styled-components-ts';\nvar AvatarStyled = styledTS(styled.span)(_templateObject(), colors.colorWhite, function (props) {\n  return props.state === 'lead' && rgba(colors.colorCoreYellow, 0.8) || props.state === 'visitor' && rgba(colors.colorLightGray, 0.6) || props.state === 'customer' && rgba(colors.colorCoreTeal, 0.8) || rgba(colors.colorSecondary, 0.8);\n}, colors.colorWhite, colors.colorWhite);\nvar AvatarImage = styledTS(styled.div)(_templateObject2(), function (props) {\n  return props.image ? \"\\\"\".concat(props.image, \"\\\"\") : '/images/avatar.svg';\n});\n\nfunction Element(_ref) {\n  var children = _ref.children,\n      customer = _ref.customer;\n\n  if (customer) {\n    return React.createElement(Link, {\n      to: customer && \"/contacts/details/\".concat(customer._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, children);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, children);\n}\n\nvar Avatar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Avatar, _React$Component);\n\n  function Avatar() {\n    _classCallCheck(this, Avatar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Avatar).apply(this, arguments));\n  }\n\n  _createClass(Avatar, [{\n    key: \"generateStyle\",\n    value: function generateStyle() {\n      var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 40;\n      return {\n        width: size,\n        height: size,\n        lineHeight: \"\".concat(size, \"px\"),\n        borderRadius: \"\".concat(size, \"px\"),\n        fontSize: \"\".concat(size / 3, \"px\"),\n        fontWeight: 600\n      };\n    }\n  }, {\n    key: \"renderImage\",\n    value: function renderImage(src) {\n      var size = this.props.size;\n      return React.createElement(AvatarImage, {\n        image: readFile(src),\n        style: this.generateStyle(size),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"generateTypes\",\n    value: function generateTypes() {\n      var customer = this.props.customer;\n\n      if (customer) {\n        return {\n          state: customer.state\n        };\n      }\n\n      return {\n        state: true\n      };\n    }\n  }, {\n    key: \"renderInitials\",\n    value: function renderInitials(fullName) {\n      var _this$props = this.props,\n          size = _this$props.size,\n          _this$props$letterCou = _this$props.letterCount,\n          letterCount = _this$props$letterCou === void 0 ? 2 : _this$props$letterCou;\n      var initials = fullName ? fullName.split(' ').slice(0, letterCount).map(function (s) {\n        return s.charAt(0);\n      }).join('.').toUpperCase() : React.createElement(AvatarImage, {\n        style: this.generateStyle(size),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        style: this.generateStyle(size),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, initials);\n    }\n  }, {\n    key: \"renderCustomerName\",\n    value: function renderCustomerName(customer) {\n      if (customer.firstName && customer.lastName) {\n        return \"\".concat(customer.firstName, \" \").concat(customer.lastName);\n      }\n\n      return customer.firstName || customer.lastName || customer.name || null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          user = _this$props2.user,\n          customer = _this$props2.customer,\n          company = _this$props2.company,\n          icon = _this$props2.icon;\n      var avatar;\n      var fullName;\n\n      if (user) {\n        var details = user.details;\n        avatar = details && details.avatar;\n        fullName = details && details.fullName;\n      }\n\n      if (customer) {\n        avatar = customer.avatar;\n        fullName = this.renderCustomerName(customer);\n      }\n\n      if (company) {\n        avatar = company.avatar;\n        fullName = company.primaryName || null;\n      }\n\n      return React.createElement(AvatarStyled, {\n        state: customer && customer.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Element, {\n        customer: customer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, avatar ? this.renderImage(avatar) : this.renderInitials(fullName)), icon);\n    }\n  }]);\n\n  return Avatar;\n}(React.Component);\n\nexport default Avatar;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/nameCard/Avatar.tsx"],"names":["colors","rgba","readFile","React","Link","styled","styledTS","AvatarStyled","span","colorWhite","props","state","colorCoreYellow","colorLightGray","colorCoreTeal","colorSecondary","AvatarImage","div","image","Element","children","customer","_id","Avatar","size","width","height","lineHeight","borderRadius","fontSize","fontWeight","src","generateStyle","fullName","letterCount","initials","split","slice","map","s","charAt","join","toUpperCase","firstName","lastName","name","user","company","icon","avatar","details","renderCustomerName","primaryName","renderImage","renderInitials","Component"],"mappings":"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","sourcesContent":["import { colors } from 'modules/common/styles';\nimport { rgba } from 'modules/common/styles/color';\nimport { readFile } from 'modules/common/utils';\nimport { ICustomer } from 'modules/customers/types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport styledTS from 'styled-components-ts';\nimport { IUser } from '../../../auth/types';\nimport { ICompany } from '../../../companies/types';\n\nconst AvatarStyled = styledTS<{ state?: string }>(styled.span)`\n  display: block;\n  max-width: 80px;\n  border-radius: 40px;\n  float: left;\n  padding: 0;\n  text-align: center;\n  position: relative;\n  color: ${colors.colorWhite};\n\n  background: ${props =>\n    (props.state === 'lead' && rgba(colors.colorCoreYellow, 0.8)) ||\n    (props.state === 'visitor' && rgba(colors.colorLightGray, 0.6)) ||\n    (props.state === 'customer' && rgba(colors.colorCoreTeal, 0.8)) ||\n    rgba(colors.colorSecondary, 0.8)};\n\n  > span {\n    position: absolute;\n    right: -5px;\n    bottom: -2px;\n  }\n\n  a {\n    color: ${colors.colorWhite};\n    display: block;\n    transition: all ease 0.3s;\n\n    &:hover {\n      color: ${colors.colorWhite};\n      opacity: 0.8;\n    }\n  }\n`;\n\nconst AvatarImage = styledTS<{ image?: string }>(styled.div)`\n  background: url(${props =>\n    props.image ? `\"${props.image}\"` : '/images/avatar.svg'})\n    center no-repeat;\n  background-size: cover;\n`;\n\ntype Props = {\n  user?: IUser;\n  customer?: ICustomer;\n  company?: ICompany;\n  size?: number;\n  icon?: React.ReactNode;\n  letterCount?: number;\n};\n\nfunction Element({\n  children,\n  customer\n}: {\n  children: React.ReactNode;\n  customer?: ICustomer;\n}) {\n  if (customer) {\n    return (\n      <Link to={customer && `/contacts/details/${customer._id}`}>\n        {children}\n      </Link>\n    );\n  }\n  return <div>{children}</div>;\n}\n\nclass Avatar extends React.Component<Props> {\n  generateStyle(size: number = 40) {\n    return {\n      width: size,\n      height: size,\n      lineHeight: `${size}px`,\n      borderRadius: `${size}px`,\n      fontSize: `${size / 3}px`,\n      fontWeight: 600\n    };\n  }\n\n  renderImage(src: string) {\n    const { size } = this.props;\n    return (\n      <AvatarImage image={readFile(src)} style={this.generateStyle(size)} />\n    );\n  }\n\n  generateTypes() {\n    const { customer } = this.props;\n\n    if (customer) {\n      return {\n        state: customer.state\n      };\n    }\n\n    return {\n      state: true\n    };\n  }\n\n  renderInitials(fullName) {\n    const { size, letterCount = 2 } = this.props;\n\n    const initials = fullName ? (\n      fullName\n        .split(' ')\n        .slice(0, letterCount)\n        .map(s => s.charAt(0))\n        .join('.')\n        .toUpperCase()\n    ) : (\n      <AvatarImage style={this.generateStyle(size)} />\n    );\n\n    return <div style={this.generateStyle(size)}>{initials}</div>;\n  }\n\n  renderCustomerName(customer) {\n    if (customer.firstName && customer.lastName) {\n      return `${customer.firstName} ${customer.lastName}`;\n    }\n\n    return customer.firstName || customer.lastName || customer.name || null;\n  }\n\n  render() {\n    const { user, customer, company, icon } = this.props;\n\n    let avatar;\n    let fullName;\n\n    if (user) {\n      const { details } = user;\n      avatar = details && details.avatar;\n      fullName = details && details.fullName;\n    }\n\n    if (customer) {\n      avatar = customer.avatar;\n      fullName = this.renderCustomerName(customer);\n    }\n\n    if (company) {\n      avatar = company.avatar;\n      fullName = company.primaryName || null;\n    }\n\n    return (\n      <AvatarStyled state={customer && customer.state}>\n        <Element customer={customer}>\n          {avatar ? this.renderImage(avatar) : this.renderInitials(fullName)}\n        </Element>\n        {icon}\n      </AvatarStyled>\n    );\n  }\n}\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}