{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/tags/components/Form.tsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 20px;\\n  border-radius: 2px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-top: 10px;\\n  border-radius: 4px;\\n  padding: 2px;\\n  border: 1px solid \", \";\\n  cursor: pointer;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport { COLORS } from \"modules/boards/constants\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport { colors } from \"modules/common/styles\";\nimport { ModalFooter } from \"modules/common/styles/main\";\nimport { getRandomNumber } from \"modules/common/utils\";\nimport React from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport TwitterPicker from \"react-color/lib/Twitter\";\nimport styled from \"styled-components\";\nvar ColorPick = styled.div(_templateObject(), colors.borderDarker);\nvar ColorPicker = styled.div(_templateObject2());\n\nvar FormComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormComponent, _React$Component);\n\n  function FormComponent(props) {\n    var _this;\n\n    _classCallCheck(this, FormComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormComponent).call(this, props));\n\n    _this.onColorChange = function (e) {\n      _this.setState({\n        colorCode: e.hex\n      });\n    };\n\n    _this.generateDoc = function (values) {\n      var _this$props = _this.props,\n          tag = _this$props.tag,\n          type = _this$props.type;\n      var finalValues = values;\n\n      if (tag) {\n        finalValues._id = tag._id;\n      }\n\n      return {\n        _id: finalValues._id,\n        name: finalValues.name,\n        colorCode: _this.state.colorCode,\n        type: type\n      };\n    };\n\n    _this.renderContent = function (formProps) {\n      var _this$props2 = _this.props,\n          tag = _this$props2.tag,\n          closeModal = _this$props2.closeModal,\n          afterSave = _this$props2.afterSave,\n          renderButton = _this$props2.renderButton;\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted;\n      var colorCode = _this.state.colorCode;\n      var object = tag || {};\n      var popoverContent = React.createElement(Popover, {\n        id: \"color-picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(TwitterPicker, {\n        width: \"266px\",\n        color: colorCode,\n        onChange: _this.onColorChange,\n        colors: COLORS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }));\n      return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Name\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"name\",\n        defaultValue: object.name,\n        required: true,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Color\"), React.createElement(OverlayTrigger, {\n        trigger: \"click\",\n        rootClose: true,\n        placement: \"bottom\",\n        overlay: popoverContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(ColorPick, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(ColorPicker, {\n        style: {\n          backgroundColor: colorCode\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })))), React.createElement(ModalFooter, {\n        id: \"AddTagButtons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        onClick: closeModal,\n        icon: \"times-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Cancel\"), renderButton({\n        name: \"tag\",\n        values: _this.generateDoc(values),\n        isSubmitted: isSubmitted,\n        callback: closeModal || afterSave,\n        object: tag\n      })));\n    };\n\n    var _tag = _this.props.tag;\n    _this.state = {\n      colorCode: _tag ? _tag.colorCode : COLORS[getRandomNumber(7)]\n    };\n    return _this;\n  }\n\n  _createClass(FormComponent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return FormComponent;\n}(React.Component);\n\nexport default FormComponent;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/tags/components/Form.tsx"],"names":["Button","COLORS","FormControl","Form","FormGroup","ControlLabel","colors","ModalFooter","getRandomNumber","React","OverlayTrigger","Popover","TwitterPicker","styled","ColorPick","div","borderDarker","ColorPicker","FormComponent","props","onColorChange","e","setState","colorCode","hex","generateDoc","values","tag","type","finalValues","_id","name","state","renderContent","formProps","closeModal","afterSave","renderButton","isSubmitted","object","popoverContent","backgroundColor","callback","Component"],"mappings":"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","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport { COLORS } from \"modules/boards/constants\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport { colors } from \"modules/common/styles\";\nimport { ModalFooter } from \"modules/common/styles/main\";\nimport { IButtonMutateProps, IFormProps } from \"modules/common/types\";\nimport { getRandomNumber } from \"modules/common/utils\";\nimport { ITag } from \"modules/tags/types\";\nimport React from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport TwitterPicker from \"react-color/lib/Twitter\";\nimport styled from \"styled-components\";\n\nconst ColorPick = styled.div`\n  margin-top: 10px;\n  border-radius: 4px;\n  padding: 2px;\n  border: 1px solid ${colors.borderDarker};\n  cursor: pointer;\n`;\n\nconst ColorPicker = styled.div`\n  width: 100%;\n  height: 20px;\n  border-radius: 2px;\n`;\n\ntype Props = {\n  tag?: ITag;\n  type: string;\n  afterSave: () => void;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  closeModal?: () => void;\n};\n\ntype State = {\n  colorCode: string;\n};\n\nclass FormComponent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const { tag } = this.props;\n\n    this.state = {\n      colorCode: tag ? tag.colorCode : COLORS[getRandomNumber(7)],\n    };\n  }\n\n  onColorChange = (e) => {\n    this.setState({ colorCode: e.hex });\n  };\n\n  generateDoc = (values: { _id?: string; name: string }) => {\n    const { tag, type } = this.props;\n    const finalValues = values;\n\n    if (tag) {\n      finalValues._id = tag._id;\n    }\n\n    return {\n      _id: finalValues._id,\n      name: finalValues.name,\n      colorCode: this.state.colorCode,\n      type,\n    };\n  };\n\n  renderContent = (formProps: IFormProps) => {\n    const { tag, closeModal, afterSave, renderButton } = this.props;\n    const { values, isSubmitted } = formProps;\n    const { colorCode } = this.state;\n    const object = tag || ({} as ITag);\n\n    const popoverContent = (\n      <Popover id=\"color-picker\">\n        <TwitterPicker\n          width=\"266px\"\n          color={colorCode}\n          onChange={this.onColorChange}\n          colors={COLORS}\n        />\n      </Popover>\n    );\n\n    return (\n      <>\n        <FormGroup>\n          <ControlLabel required={true}>Name</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"name\"\n            defaultValue={object.name}\n            required={true}\n            autoFocus={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Color</ControlLabel>\n          <OverlayTrigger\n            trigger=\"click\"\n            rootClose={true}\n            placement=\"bottom\"\n            overlay={popoverContent}\n          >\n            <ColorPick>\n              <ColorPicker style={{ backgroundColor: colorCode }} />\n            </ColorPick>\n          </OverlayTrigger>\n        </FormGroup>\n\n        <ModalFooter id={\"AddTagButtons\"}>\n          <Button\n            btnStyle=\"simple\"\n            onClick={closeModal}\n            icon=\"times-circle\"\n            uppercase={false}\n          >\n            Cancel\n          </Button>\n\n          {renderButton({\n            name: \"tag\",\n            values: this.generateDoc(values),\n            isSubmitted,\n            callback: closeModal || afterSave,\n            object: tag,\n          })}\n        </ModalFooter>\n      </>\n    );\n  };\n\n  render() {\n    return <Form renderContent={this.renderContent} />;\n  }\n}\n\nexport default FormComponent;\n"]},"metadata":{},"sourceType":"module"}