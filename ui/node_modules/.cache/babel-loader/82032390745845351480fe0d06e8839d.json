{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/TeamMembers.tsx\";\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Spinner from 'modules/common/components/Spinner';\nimport { readFile } from 'modules/common/utils';\nimport React from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { ChartWrapper, FullName, InsightUserData, LoaderWrapper, UserProfile } from '../styles';\nimport { convertTime } from '../utils';\nimport Chart from './Chart';\nimport Summary from './Summary';\n\nvar TeamMembers =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TeamMembers, _React$Component);\n\n  function TeamMembers() {\n    _classCallCheck(this, TeamMembers);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TeamMembers).apply(this, arguments));\n  }\n\n  _createClass(TeamMembers, [{\n    key: \"renderChart\",\n    value: function renderChart(userData, index) {\n      var data = userData.data ? userData.data : userData;\n      return React.createElement(Col, {\n        sm: 6,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, userData.summaries ? React.createElement(Summary, {\n        isSmall: true,\n        loading: false,\n        data: userData.summaries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }) : null, React.createElement(InsightUserData, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(UserProfile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: data.avatar ? readFile(data.avatar) : '/images/avatar-colored.svg',\n        alt: data.fullName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(FullName, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, data.fullName), userData.time ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"\\xA0 (\", convertTime(userData.time), \")\") : null), React.createElement(Chart, {\n        height: 240,\n        data: data.graph,\n        type: this.props.type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          datas = _this$props.datas,\n          loading = _this$props.loading;\n\n      if (loading) {\n        return React.createElement(LoaderWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          objective: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }));\n      }\n\n      if (datas.length === 0) {\n        return React.createElement(ChartWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(EmptyState, {\n          text: \"There is no data\",\n          size: \"full\",\n          icon: \"ban\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, datas.map(function (data, index) {\n        return _this.renderChart(data, index);\n      }));\n    }\n  }]);\n\n  return TeamMembers;\n}(React.Component);\n\nexport default TeamMembers;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/TeamMembers.tsx"],"names":["EmptyState","Spinner","readFile","React","Col","Row","ChartWrapper","FullName","InsightUserData","LoaderWrapper","UserProfile","convertTime","Chart","Summary","TeamMembers","userData","index","data","summaries","avatar","fullName","time","graph","props","type","datas","loading","length","map","renderChart","Component"],"mappings":"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","sourcesContent":["import EmptyState from 'modules/common/components/EmptyState';\nimport Spinner from 'modules/common/components/Spinner';\nimport { readFile } from 'modules/common/utils';\nimport React from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport {\n  ChartWrapper,\n  FullName,\n  InsightUserData,\n  LoaderWrapper,\n  UserProfile\n} from '../styles';\nimport { IChartParams } from '../types';\nimport { convertTime } from '../utils';\nimport Chart from './Chart';\nimport Summary from './Summary';\n\ntype Props = {\n  datas: IChartParams[];\n  loading: boolean;\n  type?: string;\n};\n\nclass TeamMembers extends React.Component<Props> {\n  renderChart(userData, index) {\n    const data = userData.data ? userData.data : userData;\n\n    return (\n      <Col sm={6} key={index}>\n        {userData.summaries ? (\n          <Summary isSmall={true} loading={false} data={userData.summaries} />\n        ) : null}\n\n        <InsightUserData>\n          <UserProfile>\n            <img\n              src={\n                data.avatar\n                  ? readFile(data.avatar)\n                  : '/images/avatar-colored.svg'\n              }\n              alt={data.fullName}\n            />\n\n            <FullName>{data.fullName}</FullName>\n\n            {userData.time ? (\n              <span>&nbsp; ({convertTime(userData.time)})</span>\n            ) : null}\n          </UserProfile>\n          <Chart height={240} data={data.graph} type={this.props.type} />\n        </InsightUserData>\n      </Col>\n    );\n  }\n\n  render() {\n    const { datas, loading } = this.props;\n\n    if (loading) {\n      return (\n        <LoaderWrapper>\n          <Spinner objective={true} />\n        </LoaderWrapper>\n      );\n    }\n\n    if (datas.length === 0) {\n      return (\n        <ChartWrapper>\n          <EmptyState text=\"There is no data\" size=\"full\" icon=\"ban\" />\n        </ChartWrapper>\n      );\n    }\n\n    return (\n      <Row>{datas.map((data, index) => this.renderChart(data, index))}</Row>\n    );\n  }\n}\n\nexport default TeamMembers;\n"]},"metadata":{},"sourceType":"module"}