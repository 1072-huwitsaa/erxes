{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/knowledgeBase/components/category/CategoryForm.tsx\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport { ModalFooter } from \"modules/common/styles/main\";\nimport React from \"react\";\nimport Select from \"react-select-plus\";\nimport { icons } from \"../../icons.constant\";\n\nvar CategoryForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CategoryForm, _React$Component);\n\n  function CategoryForm(props) {\n    var _this;\n\n    _classCallCheck(this, CategoryForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CategoryForm).call(this, props));\n\n    _this.onChangeIcon = function (obj) {\n      _this.setState({\n        selectedIcon: obj ? obj.value : \"\"\n      });\n    };\n\n    _this.renderOption = function (option) {\n      return React.createElement(\"div\", {\n        className: \"icon-option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: option.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), option.label);\n    };\n\n    _this.generateDoc = function (values) {\n      var _this$props = _this.props,\n          category = _this$props.category,\n          currentTopicId = _this$props.currentTopicId;\n      var finalValues = values;\n\n      if (category) {\n        finalValues._id = category._id;\n      }\n\n      return {\n        _id: finalValues._id,\n        doc: {\n          title: finalValues.title,\n          description: finalValues.description,\n          icon: _this.state.selectedIcon,\n          topicIds: [currentTopicId]\n        }\n      };\n    };\n\n    _this.renderContent = function (formProps) {\n      var _this$props2 = _this.props,\n          category = _this$props2.category,\n          closeModal = _this$props2.closeModal,\n          renderButton = _this$props2.renderButton;\n      var object = category || {};\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted;\n      return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Title\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"title\",\n        defaultValue: object.title,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Description\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"description\",\n        defaultValue: object.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Icon\"), React.createElement(Select, {\n        isRequired: true,\n        value: _this.state.selectedIcon,\n        options: icons,\n        onChange: _this.onChangeIcon,\n        optionRenderer: _this.renderOption,\n        valueRenderer: _this.renderOption,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        type: \"button\",\n        onClick: closeModal,\n        icon: \"cancel-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Cancel\"), renderButton({\n        name: \"category\",\n        values: _this.generateDoc(values),\n        isSubmitted: isSubmitted,\n        callback: closeModal,\n        object: category\n      })));\n    };\n\n    _this.state = {\n      selectedIcon: _this.getSelectedIcon()\n    };\n    return _this;\n  }\n\n  _createClass(CategoryForm, [{\n    key: \"getSelectedIcon\",\n    value: function getSelectedIcon() {\n      var category = this.props.category;\n      return category ? category.icon : \"\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CategoryForm;\n}(React.Component);\n\nexport default CategoryForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/knowledgeBase/components/category/CategoryForm.tsx"],"names":["Button","FormControl","Form","FormGroup","ControlLabel","Icon","ModalFooter","React","Select","icons","CategoryForm","props","onChangeIcon","obj","setState","selectedIcon","value","renderOption","option","label","generateDoc","values","category","currentTopicId","finalValues","_id","doc","title","description","icon","state","topicIds","renderContent","formProps","closeModal","renderButton","object","isSubmitted","name","callback","getSelectedIcon","Component"],"mappings":"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","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport { ModalFooter } from \"modules/common/styles/main\";\nimport { IButtonMutateProps, IFormProps } from \"modules/common/types\";\nimport React from \"react\";\nimport Select from \"react-select-plus\";\nimport { icons } from \"../../icons.constant\";\nimport { ICategory } from \"../../types\";\n\ntype Props = {\n  currentTopicId: string;\n  category: ICategory;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  closeModal: () => void;\n};\n\ntype State = {\n  selectedIcon: string;\n};\n\nclass CategoryForm extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      selectedIcon: this.getSelectedIcon(),\n    };\n  }\n\n  getSelectedIcon() {\n    const { category } = this.props;\n\n    return category ? category.icon : \"\";\n  }\n\n  onChangeIcon = (obj) => {\n    this.setState({\n      selectedIcon: obj ? obj.value : \"\",\n    });\n  };\n\n  renderOption = (option) => {\n    return (\n      <div className=\"icon-option\">\n        <Icon icon={option.value} />\n        {option.label}\n      </div>\n    );\n  };\n\n  generateDoc = (values: {\n    _id?: string;\n    title: string;\n    description: string;\n  }) => {\n    const { category, currentTopicId } = this.props;\n    const finalValues = values;\n\n    if (category) {\n      finalValues._id = category._id;\n    }\n\n    return {\n      _id: finalValues._id,\n      doc: {\n        title: finalValues.title,\n        description: finalValues.description,\n        icon: this.state.selectedIcon,\n        topicIds: [currentTopicId],\n      },\n    };\n  };\n\n  renderContent = (formProps: IFormProps) => {\n    const { category, closeModal, renderButton } = this.props;\n    const object = category || ({} as ICategory);\n    const { values, isSubmitted } = formProps;\n\n    return (\n      <>\n        <FormGroup>\n          <ControlLabel required={true}>Title</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"title\"\n            defaultValue={object.title}\n            required={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Description</ControlLabel>\n          <FormControl\n            {...formProps}\n            name=\"description\"\n            defaultValue={object.description}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel required={true}>Icon</ControlLabel>\n          <Select\n            isRequired={true}\n            value={this.state.selectedIcon}\n            options={icons}\n            onChange={this.onChangeIcon}\n            optionRenderer={this.renderOption}\n            valueRenderer={this.renderOption}\n          />\n        </FormGroup>\n\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            type=\"button\"\n            onClick={closeModal}\n            icon=\"cancel-1\"\n          >\n            Cancel\n          </Button>\n\n          {renderButton({\n            name: \"category\",\n            values: this.generateDoc(values),\n            isSubmitted,\n            callback: closeModal,\n            object: category,\n          })}\n        </ModalFooter>\n      </>\n    );\n  };\n\n  render() {\n    return <Form renderContent={this.renderContent} />;\n  }\n}\n\nexport default CategoryForm;\n"]},"metadata":{},"sourceType":"module"}