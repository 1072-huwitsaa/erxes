{"ast":null,"code":"import { queries as customerQueries } from 'modules/customers/graphql';\nimport conversationFields from './conversationFields';\nimport messageFields from './messageFields';\nexport var paramsDef = \"\\n  $channelId: String\\n  $status: String\\n  $unassigned: String\\n  $awaitingResponse: String\\n  $brandId: String\\n  $tag: String\\n  $integrationType: String\\n  $participating: String\\n  $starred: String\\n  $startDate: String\\n  $endDate: String\\n\";\nvar listParamsDef = \"\\n  $limit: Int\\n  $ids: [String]\\n  \".concat(paramsDef, \"\\n\");\nexport var paramsValue = \"\\n  channelId: $channelId\\n  status: $status\\n  unassigned: $unassigned\\n  awaitingResponse: $awaitingResponse\\n  brandId: $brandId\\n  tag: $tag\\n  integrationType: $integrationType\\n  participating: $participating\\n  starred: $starred\\n  startDate: $startDate\\n  endDate: $endDate\\n\";\nvar listParamsValue = \"\\n  limit: $limit\\n  ids: $ids\\n  \".concat(paramsValue, \"\\n\");\nvar conversationList = \"\\n  query objects(\".concat(listParamsDef, \") {\\n    conversations(\").concat(listParamsValue, \") {\\n      \").concat(conversationFields, \"\\n    }\\n  }\\n\");\nvar sidebarConversations = \"\\n  query conversations(\".concat(listParamsDef, \") {\\n    conversations(\").concat(listParamsValue, \") {\\n      _id\\n      content\\n      status\\n      updatedAt\\n      idleTime\\n      messageCount\\n      assignedUser {\\n        _id\\n        details {\\n          avatar\\n          fullName\\n        }\\n      }\\n      integration {\\n        _id\\n        kind\\n        name\\n        brand {\\n          _id\\n          name\\n        }\\n        channels {\\n          _id\\n          name\\n        }\\n      }\\n      customer {\\n        _id\\n        firstName\\n        lastName\\n        primaryEmail\\n        primaryPhone\\n        state\\n        avatar\\n        visitorContactInfo\\n      }\\n      tagIds\\n      tags {\\n        _id\\n        name\\n        colorCode\\n      }\\n      readUserIds\\n    }\\n  }\\n\");\nvar conversationDetail = \"\\n  query conversationDetail($_id: String!) {\\n    conversationDetail(_id: $_id) {\\n      \".concat(conversationFields, \"\\n    }\\n  }\\n\");\nvar conversationDetailMarkAsRead = \"\\n  query conversationDetail($_id: String!) {\\n    conversationDetail(_id: $_id) {\\n      _id\\n      readUserIds\\n    }\\n  }\\n\";\nvar conversationMessages = \"\\n  query conversationMessages($conversationId: String!, $skip: Int, $limit: Int, $getFirst: Boolean) {\\n    conversationMessages(conversationId: $conversationId, skip: $skip, limit: $limit, getFirst: $getFirst) {\\n      \".concat(messageFields, \"\\n    }\\n  }\\n\");\nvar converstationFacebookComments = \"\\n  query converstationFacebookComments($postId: String!,$isResolved: Boolean, $commentId: String, $senderId: String, $skip: Int, $limit: Int) {\\n    converstationFacebookComments(postId: $postId,isResolved:$isResolved, limit: $limit, commentId: $commentId, senderId: $senderId, skip: $skip) {\\n      conversationId\\n      commentId\\n      postId\\n      recipientId\\n      senderId\\n      attachments\\n      content\\n      erxesApiId\\n      timestamp\\n      parentId\\n      commentCount\\n      isResolved\\n      permalink_url\\n      customer {\\n        _id\\n        visitorContactInfo\\n        avatar\\n        firstName\\n        lastName\\n      }\\n    }\\n  }\\n\";\nvar converstationFacebookCommentsCount = \"\\n  query converstationFacebookCommentsCount($postId: String!, $isResolved: Boolean) {\\n    converstationFacebookCommentsCount(postId: $postId, isResolved:$isResolved) \\n  }\\n\";\nvar conversationMessagesTotalCount = \"\\n  query conversationMessagesTotalCount($conversationId: String!) {\\n    conversationMessagesTotalCount(conversationId: $conversationId)\\n  }\\n\";\nvar userList = \"\\n  query objects($searchValue: String, $requireUsername: Boolean) {\\n    users(searchValue: $searchValue, requireUsername: $requireUsername) {\\n      _id\\n      username\\n      email\\n      details {\\n        avatar\\n        fullName\\n        position\\n      }\\n    }\\n  }\\n\";\nvar channelList = \"\\n  query channels($memberIds: [String]) {\\n    channels(memberIds: $memberIds) {\\n      _id\\n      name\\n    }\\n  }\\n\";\nvar integrationsGetUsedTypes = \"\\n  query integrationsGetUsedTypes {\\n    integrationsGetUsedTypes {\\n      _id\\n      name\\n    }\\n  }\\n\";\nvar brandList = \"\\n  query brands {\\n    brands {\\n      _id\\n      name\\n    }\\n  }\\n\";\nvar tagList = \"\\n  query tags($type: String) {\\n    tags(type: $type) {\\n      _id\\n      name\\n      colorCode\\n    }\\n  }\\n\";\nvar conversationCounts = \"\\n  query conversationCounts(\".concat(listParamsDef, \", $only: String) {\\n    conversationCounts(\").concat(listParamsValue, \", only: $only)\\n  }\\n\");\nvar totalConversationsCount = \"\\n  query totalConversationsCount(\".concat(listParamsDef, \") {\\n    conversationsTotalCount(\").concat(listParamsValue, \")\\n  }\\n\");\nvar unreadConversationsCount = \"\\n  query conversationsTotalUnreadCount {\\n    conversationsTotalUnreadCount\\n  }\\n\";\nvar lastConversation = \"\\n  query conversationsGetLast(\".concat(listParamsDef, \") {\\n    conversationsGetLast(\").concat(listParamsValue, \") {\\n      _id\\n    }\\n  }\\n\");\nvar responseTemplateList = \"\\n  query responseTemplates($perPage: Int) {\\n    responseTemplates(perPage: $perPage) {\\n      _id\\n      name\\n      brandId\\n      content\\n    }\\n  }\\n\";\nvar convertToInfo = \"\\n  query convertToInfo($conversationId: String!) {\\n    convertToInfo(conversationId: $conversationId) {\\n      ticketUrl\\n      dealUrl\\n      taskUrl\\n    }\\n  }\\n\";\n\nvar generateCustomerDetailQuery = function generateCustomerDetailQuery(params) {\n  var _ref = params || {},\n      _ref$showDeviceProper = _ref.showDeviceProperties,\n      showDeviceProperties = _ref$showDeviceProper === void 0 ? false : _ref$showDeviceProper,\n      _ref$showTrackedData = _ref.showTrackedData,\n      showTrackedData = _ref$showTrackedData === void 0 ? false : _ref$showTrackedData,\n      _ref$showCustomFields = _ref.showCustomFields,\n      showCustomFields = _ref$showCustomFields === void 0 ? false : _ref$showCustomFields,\n      _ref$showCompanies = _ref.showCompanies,\n      showCompanies = _ref$showCompanies === void 0 ? false : _ref$showCompanies,\n      _ref$showTags = _ref.showTags,\n      showTags = _ref$showTags === void 0 ? false : _ref$showTags;\n\n  var fields = \"\\n    _id\\n    integration {\\n      kind\\n    }\\n    urlVisits\\n    \".concat(customerQueries.basicFields, \"\\n  \");\n\n  if (showTrackedData) {\n    fields = \"\\n      \".concat(fields, \"\\n      trackedData\\n    \");\n  }\n\n  if (showCustomFields) {\n    fields = \"\\n      \".concat(fields, \"\\n      customFieldsData\\n    \");\n  }\n\n  if (showDeviceProperties) {\n    fields = \"\\n      \".concat(fields, \"\\n      location\\n    \");\n  }\n\n  if (showCompanies) {\n    fields = \"\\n      \".concat(fields, \"\\n      companies {\\n        _id\\n        primaryName\\n        website\\n        customers {\\n          _id\\n          avatar\\n          firstName\\n          lastName\\n          primaryEmail\\n        }\\n      }\\n    \");\n  }\n\n  if (showTags) {\n    fields = \"\\n      \".concat(fields, \"\\n      tagIds\\n      getTags {\\n        _id\\n        name\\n        colorCode\\n      }\\n    \");\n  }\n\n  return \"\\n    query customerDetail($_id: String!) {\\n      customerDetail(_id: $_id) {\\n        \".concat(fields, \"\\n      }\\n    }\\n  \");\n};\n\nexport default {\n  conversationList: conversationList,\n  sidebarConversations: sidebarConversations,\n  conversationDetail: conversationDetail,\n  conversationDetailMarkAsRead: conversationDetailMarkAsRead,\n  conversationMessages: conversationMessages,\n  converstationFacebookComments: converstationFacebookComments,\n  converstationFacebookCommentsCount: converstationFacebookCommentsCount,\n  conversationMessagesTotalCount: conversationMessagesTotalCount,\n  userList: userList,\n  channelList: channelList,\n  integrationsGetUsedTypes: integrationsGetUsedTypes,\n  brandList: brandList,\n  tagList: tagList,\n  responseTemplateList: responseTemplateList,\n  conversationCounts: conversationCounts,\n  totalConversationsCount: totalConversationsCount,\n  unreadConversationsCount: unreadConversationsCount,\n  lastConversation: lastConversation,\n  generateCustomerDetailQuery: generateCustomerDetailQuery,\n  convertToInfo: convertToInfo\n};","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/graphql/queries.ts"],"names":["queries","customerQueries","conversationFields","messageFields","paramsDef","listParamsDef","paramsValue","listParamsValue","conversationList","sidebarConversations","conversationDetail","conversationDetailMarkAsRead","conversationMessages","converstationFacebookComments","converstationFacebookCommentsCount","conversationMessagesTotalCount","userList","channelList","integrationsGetUsedTypes","brandList","tagList","conversationCounts","totalConversationsCount","unreadConversationsCount","lastConversation","responseTemplateList","convertToInfo","generateCustomerDetailQuery","params","showDeviceProperties","showTrackedData","showCustomFields","showCompanies","showTags","fields","basicFields"],"mappings":"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","sourcesContent":["import { queries as customerQueries } from 'modules/customers/graphql';\nimport conversationFields from './conversationFields';\nimport messageFields from './messageFields';\n\nexport const paramsDef = `\n  $channelId: String\n  $status: String\n  $unassigned: String\n  $awaitingResponse: String\n  $brandId: String\n  $tag: String\n  $integrationType: String\n  $participating: String\n  $starred: String\n  $startDate: String\n  $endDate: String\n`;\nconst listParamsDef = `\n  $limit: Int\n  $ids: [String]\n  ${paramsDef}\n`;\n\nexport const paramsValue = `\n  channelId: $channelId\n  status: $status\n  unassigned: $unassigned\n  awaitingResponse: $awaitingResponse\n  brandId: $brandId\n  tag: $tag\n  integrationType: $integrationType\n  participating: $participating\n  starred: $starred\n  startDate: $startDate\n  endDate: $endDate\n`;\n\nconst listParamsValue = `\n  limit: $limit\n  ids: $ids\n  ${paramsValue}\n`;\n\nconst conversationList = `\n  query objects(${listParamsDef}) {\n    conversations(${listParamsValue}) {\n      ${conversationFields}\n    }\n  }\n`;\n\nconst sidebarConversations = `\n  query conversations(${listParamsDef}) {\n    conversations(${listParamsValue}) {\n      _id\n      content\n      status\n      updatedAt\n      idleTime\n      messageCount\n      assignedUser {\n        _id\n        details {\n          avatar\n          fullName\n        }\n      }\n      integration {\n        _id\n        kind\n        name\n        brand {\n          _id\n          name\n        }\n        channels {\n          _id\n          name\n        }\n      }\n      customer {\n        _id\n        firstName\n        lastName\n        primaryEmail\n        primaryPhone\n        state\n        avatar\n        visitorContactInfo\n      }\n      tagIds\n      tags {\n        _id\n        name\n        colorCode\n      }\n      readUserIds\n    }\n  }\n`;\n\nconst conversationDetail = `\n  query conversationDetail($_id: String!) {\n    conversationDetail(_id: $_id) {\n      ${conversationFields}\n    }\n  }\n`;\n\nconst conversationDetailMarkAsRead = `\n  query conversationDetail($_id: String!) {\n    conversationDetail(_id: $_id) {\n      _id\n      readUserIds\n    }\n  }\n`;\n\nconst conversationMessages = `\n  query conversationMessages($conversationId: String!, $skip: Int, $limit: Int, $getFirst: Boolean) {\n    conversationMessages(conversationId: $conversationId, skip: $skip, limit: $limit, getFirst: $getFirst) {\n      ${messageFields}\n    }\n  }\n`;\n\nconst converstationFacebookComments = `\n  query converstationFacebookComments($postId: String!,$isResolved: Boolean, $commentId: String, $senderId: String, $skip: Int, $limit: Int) {\n    converstationFacebookComments(postId: $postId,isResolved:$isResolved, limit: $limit, commentId: $commentId, senderId: $senderId, skip: $skip) {\n      conversationId\n      commentId\n      postId\n      recipientId\n      senderId\n      attachments\n      content\n      erxesApiId\n      timestamp\n      parentId\n      commentCount\n      isResolved\n      permalink_url\n      customer {\n        _id\n        visitorContactInfo\n        avatar\n        firstName\n        lastName\n      }\n    }\n  }\n`;\n\nconst converstationFacebookCommentsCount = `\n  query converstationFacebookCommentsCount($postId: String!, $isResolved: Boolean) {\n    converstationFacebookCommentsCount(postId: $postId, isResolved:$isResolved) \n  }\n`;\n\nconst conversationMessagesTotalCount = `\n  query conversationMessagesTotalCount($conversationId: String!) {\n    conversationMessagesTotalCount(conversationId: $conversationId)\n  }\n`;\n\nconst userList = `\n  query objects($searchValue: String, $requireUsername: Boolean) {\n    users(searchValue: $searchValue, requireUsername: $requireUsername) {\n      _id\n      username\n      email\n      details {\n        avatar\n        fullName\n        position\n      }\n    }\n  }\n`;\n\nconst channelList = `\n  query channels($memberIds: [String]) {\n    channels(memberIds: $memberIds) {\n      _id\n      name\n    }\n  }\n`;\n\nconst integrationsGetUsedTypes = `\n  query integrationsGetUsedTypes {\n    integrationsGetUsedTypes {\n      _id\n      name\n    }\n  }\n`;\n\nconst brandList = `\n  query brands {\n    brands {\n      _id\n      name\n    }\n  }\n`;\n\nconst tagList = `\n  query tags($type: String) {\n    tags(type: $type) {\n      _id\n      name\n      colorCode\n    }\n  }\n`;\n\nconst conversationCounts = `\n  query conversationCounts(${listParamsDef}, $only: String) {\n    conversationCounts(${listParamsValue}, only: $only)\n  }\n`;\n\nconst totalConversationsCount = `\n  query totalConversationsCount(${listParamsDef}) {\n    conversationsTotalCount(${listParamsValue})\n  }\n`;\n\nconst unreadConversationsCount = `\n  query conversationsTotalUnreadCount {\n    conversationsTotalUnreadCount\n  }\n`;\n\nconst lastConversation = `\n  query conversationsGetLast(${listParamsDef}) {\n    conversationsGetLast(${listParamsValue}) {\n      _id\n    }\n  }\n`;\n\nconst responseTemplateList = `\n  query responseTemplates($perPage: Int) {\n    responseTemplates(perPage: $perPage) {\n      _id\n      name\n      brandId\n      content\n    }\n  }\n`;\n\nconst convertToInfo = `\n  query convertToInfo($conversationId: String!) {\n    convertToInfo(conversationId: $conversationId) {\n      ticketUrl\n      dealUrl\n      taskUrl\n    }\n  }\n`;\n\nconst generateCustomerDetailQuery = params => {\n  const {\n    showDeviceProperties = false,\n    showTrackedData = false,\n    showCustomFields = false,\n    showCompanies = false,\n    showTags = false\n  } = params || {};\n\n  let fields = `\n    _id\n    integration {\n      kind\n    }\n    urlVisits\n    ${customerQueries.basicFields}\n  `;\n\n  if (showTrackedData) {\n    fields = `\n      ${fields}\n      trackedData\n    `;\n  }\n\n  if (showCustomFields) {\n    fields = `\n      ${fields}\n      customFieldsData\n    `;\n  }\n\n  if (showDeviceProperties) {\n    fields = `\n      ${fields}\n      location\n    `;\n  }\n\n  if (showCompanies) {\n    fields = `\n      ${fields}\n      companies {\n        _id\n        primaryName\n        website\n        customers {\n          _id\n          avatar\n          firstName\n          lastName\n          primaryEmail\n        }\n      }\n    `;\n  }\n\n  if (showTags) {\n    fields = `\n      ${fields}\n      tagIds\n      getTags {\n        _id\n        name\n        colorCode\n      }\n    `;\n  }\n\n  return `\n    query customerDetail($_id: String!) {\n      customerDetail(_id: $_id) {\n        ${fields}\n      }\n    }\n  `;\n};\n\nexport default {\n  conversationList,\n  sidebarConversations,\n  conversationDetail,\n  conversationDetailMarkAsRead,\n  conversationMessages,\n  converstationFacebookComments,\n  converstationFacebookCommentsCount,\n  conversationMessagesTotalCount,\n  userList,\n  channelList,\n  integrationsGetUsedTypes,\n  brandList,\n  tagList,\n  responseTemplateList,\n  conversationCounts,\n  totalConversationsCount,\n  unreadConversationsCount,\n  lastConversation,\n  generateCustomerDetailQuery,\n  convertToInfo\n};\n"]},"metadata":{},"sourceType":"module"}