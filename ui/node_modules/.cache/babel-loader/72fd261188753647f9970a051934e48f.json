{"ast":null,"code":"import _objectWithoutProperties from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/tags/components/TaggerPopover.tsx\";\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport Tagger from '../containers/Tagger';\n\nfunction TaggerPopover(props) {\n  var trigger = props.trigger,\n      container = props.container,\n      refetchQueries = props.refetchQueries,\n      taggerProps = _objectWithoutProperties(props, [\"trigger\", \"container\", \"refetchQueries\"]);\n\n  var popover = React.createElement(Popover, {\n    id: \"tags-popover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Popover.Title, {\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __('Choose your tags')), React.createElement(Popover.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Tagger, Object.assign({\n    event: \"onExit\"\n  }, taggerProps, {\n    refetchQueries: refetchQueries,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))));\n  return React.createElement(OverlayTrigger, {\n    trigger: \"click\",\n    placement: \"bottom\",\n    overlay: popover,\n    container: container,\n    rootClose: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, trigger);\n}\n\nexport default TaggerPopover;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/tags/components/TaggerPopover.tsx"],"names":["__","React","OverlayTrigger","Popover","Tagger","TaggerPopover","props","trigger","container","refetchQueries","taggerProps","popover"],"mappings":";;AAAA,SAASA,EAAT,QAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAWA,SAASC,aAAT,CAAuBC,KAAvB,EAAqC;AAAA,MAC3BC,OAD2B,GAC4BD,KAD5B,CAC3BC,OAD2B;AAAA,MAClBC,SADkB,GAC4BF,KAD5B,CAClBE,SADkB;AAAA,MACPC,cADO,GAC4BH,KAD5B,CACPG,cADO;AAAA,MACYC,WADZ,4BAC4BJ,KAD5B;;AAGnC,MAAMK,OAAO,GACX,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD,CAAS,KAAT;AAAe,IAAA,EAAE,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBX,EAAE,CAAC,kBAAD,CAA1B,CADF,EAEE,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC;AADR,KAEMU,WAFN;AAGE,IAAA,cAAc,EAAED,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFF,CADF;AAaA,SACE,oBAAC,cAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,OAAO,EAAEE,OAHX;AAIE,IAAA,SAAS,EAAEH,SAJb;AAKE,IAAA,SAAS,EAAE,IALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGD,OAPH,CADF;AAWD;;AAED,eAAeF,aAAf","sourcesContent":["import { __ } from 'modules/common/utils';\nimport React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport Tagger from '../containers/Tagger';\n\ntype Props = {\n  type: string;\n  trigger: React.ReactNode;\n  successCallback?: () => void;\n  targets?: any[];\n  container?: Element | Node | React.Component<any, {}, any>;\n  refetchQueries?: any[];\n};\n\nfunction TaggerPopover(props: Props) {\n  const { trigger, container, refetchQueries, ...taggerProps } = props;\n\n  const popover = (\n    <Popover id=\"tags-popover\">\n      <Popover.Title as=\"h3\">{__('Choose your tags')}</Popover.Title>\n      <Popover.Content>\n        <Tagger\n          event=\"onExit\"\n          {...taggerProps}\n          refetchQueries={refetchQueries}\n        />\n      </Popover.Content>\n    </Popover>\n  );\n\n  return (\n    <OverlayTrigger\n      trigger=\"click\"\n      placement=\"bottom\"\n      overlay={popover}\n      container={container}\n      rootClose={true}\n    >\n      {trigger}\n    </OverlayTrigger>\n  );\n}\n\nexport default TaggerPopover;\n"]},"metadata":{},"sourceType":"module"}