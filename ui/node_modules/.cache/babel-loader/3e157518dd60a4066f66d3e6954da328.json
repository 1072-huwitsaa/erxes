{"ast":null,"code":"import _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/editForm/Top.tsx\";\nimport { HeaderContent, HeaderRow, TitleRow } from 'modules/boards/styles/item';\nimport FormControl from 'modules/common/components/form/Control';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport React, { useEffect, useState } from 'react';\nimport Move from '../../containers/editForm/Move';\nimport CloseDate from './CloseDate';\n\nfunction Top(props) {\n  var item = props.item;\n\n  var _useState = useState(item.name),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  useEffect(function () {\n    setName(item.name);\n  }, [item.name]);\n\n  function renderMove() {\n    var stageId = props.stageId,\n        options = props.options,\n        onChangeStage = props.onChangeStage;\n    return React.createElement(Move, {\n      options: options,\n      item: item,\n      stageId: stageId,\n      onChangeStage: onChangeStage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n\n  var saveItem = props.saveItem,\n      amount = props.amount;\n\n  var onNameBlur = function onNameBlur() {\n    if (item.name !== name) {\n      saveItem({\n        name: name\n      });\n    }\n  };\n\n  var onCloseDateFieldsChange = function onCloseDateFieldsChange(key, value) {\n    saveItem(_defineProperty({}, key, value));\n  };\n\n  var onChangeName = function onChangeName(e) {\n    setName(e.target.value);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(HeaderRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(HeaderContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(TitleRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    icon: \"atm-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    componentClass: \"textarea\",\n    value: name,\n    required: true,\n    onBlur: onNameBlur,\n    onChange: onChangeName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))), amount && amount()), React.createElement(HeaderRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(HeaderContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, renderMove()), React.createElement(CloseDate, {\n    onChangeField: onCloseDateFieldsChange,\n    closeDate: item.closeDate,\n    reminderMinute: item.reminderMinute,\n    isComplete: item.isComplete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })));\n}\n\nexport default Top;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/editForm/Top.tsx"],"names":["HeaderContent","HeaderRow","TitleRow","FormControl","Icon","React","useEffect","useState","Move","CloseDate","Top","props","item","name","setName","renderMove","stageId","options","onChangeStage","saveItem","amount","onNameBlur","onCloseDateFieldsChange","key","value","onChangeName","e","target","closeDate","reminderMinute","isComplete"],"mappings":"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","sourcesContent":["import { HeaderContent, HeaderRow, TitleRow } from 'modules/boards/styles/item';\nimport FormControl from 'modules/common/components/form/Control';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport React, { useEffect, useState } from 'react';\nimport Move from '../../containers/editForm/Move';\nimport { IItem, IOptions } from '../../types';\nimport CloseDate from './CloseDate';\n\ntype Props = {\n  item: IItem;\n  options: IOptions;\n  stageId: string;\n  saveItem: (doc: { [key: string]: any }) => void;\n  onChangeStage?: (stageId: string) => void;\n  amount?: () => React.ReactNode;\n};\n\nfunction Top(props: Props) {\n  const { item } = props;\n\n  const [name, setName] = useState(item.name);\n\n  useEffect(() => {\n    setName(item.name);\n  }, [item.name]);\n\n  function renderMove() {\n    const { stageId, options, onChangeStage } = props;\n\n    return (\n      <Move\n        options={options}\n        item={item}\n        stageId={stageId}\n        onChangeStage={onChangeStage}\n      />\n    );\n  }\n\n  const { saveItem, amount } = props;\n\n  const onNameBlur = () => {\n    if (item.name !== name) {\n      saveItem({ name });\n    }\n  };\n\n  const onCloseDateFieldsChange = (key: string, value: any) => {\n    saveItem({ [key]: value });\n  };\n\n  const onChangeName = e => {\n    setName(e.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <HeaderRow>\n        <HeaderContent>\n          <TitleRow>\n            <Icon icon=\"atm-card\" />\n            <FormControl\n              componentClass=\"textarea\"\n              value={name}\n              required={true}\n              onBlur={onNameBlur}\n              onChange={onChangeName}\n            />\n          </TitleRow>\n        </HeaderContent>\n\n        {amount && amount()}\n      </HeaderRow>\n\n      <HeaderRow>\n        <HeaderContent>{renderMove()}</HeaderContent>\n\n        <CloseDate\n          onChangeField={onCloseDateFieldsChange}\n          closeDate={item.closeDate}\n          reminderMinute={item.reminderMinute}\n          isComplete={item.isComplete}\n        />\n      </HeaderRow>\n    </React.Fragment>\n  );\n}\n\nexport default Top;\n"]},"metadata":{},"sourceType":"module"}