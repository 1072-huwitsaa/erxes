{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/TextInfo.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  text-transform: uppercase;\\n  font-size: \", \";\\n  font-weight: bold;\\n  color: \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport styled from 'styled-components';\nimport styledTS from 'styled-components-ts';\nimport { colors } from '../styles';\nvar types = {\n  default: {\n    color: colors.colorSecondary\n  },\n  primary: {\n    color: colors.colorPrimary\n  },\n  success: {\n    color: colors.colorCoreGreen\n  },\n  danger: {\n    color: colors.colorCoreRed\n  },\n  warning: {\n    color: colors.colorCoreYellow\n  },\n  simple: {\n    color: colors.colorCoreLightGray\n  }\n};\nvar Text = styledTS(styled.span)(_templateObject(), function (props) {\n  return props.hugeness !== 'small' ? '14px' : '10px';\n}, function (props) {\n  return types[props.textStyle].color;\n});\nvar defaultProps = {\n  textStyle: 'default',\n  hugeness: 'small'\n};\n\nvar TextInfo =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(TextInfo, _React$PureComponent);\n\n  function TextInfo() {\n    _classCallCheck(this, TextInfo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TextInfo).apply(this, arguments));\n  }\n\n  _createClass(TextInfo, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          ignoreTrans = _this$props.ignoreTrans,\n          children = _this$props.children;\n      var content;\n\n      if (ignoreTrans) {\n        content = children;\n      } else if (typeof children === 'string') {\n        content = __(children);\n      }\n\n      return React.createElement(Text, Object.assign({}, defaultProps, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), content);\n    }\n  }]);\n\n  return TextInfo;\n}(React.PureComponent);\n\nexport default TextInfo;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/TextInfo.tsx"],"names":["__","React","styled","styledTS","colors","types","default","color","colorSecondary","primary","colorPrimary","success","colorCoreGreen","danger","colorCoreRed","warning","colorCoreYellow","simple","colorCoreLightGray","Text","span","props","hugeness","textStyle","defaultProps","TextInfo","ignoreTrans","children","content","PureComponent"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,EAAT,QAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAEH,MAAM,CAACI;AADP,GADG;AAIZC,EAAAA,OAAO,EAAE;AACPF,IAAAA,KAAK,EAAEH,MAAM,CAACM;AADP,GAJG;AAOZC,EAAAA,OAAO,EAAE;AACPJ,IAAAA,KAAK,EAAEH,MAAM,CAACQ;AADP,GAPG;AAUZC,EAAAA,MAAM,EAAE;AACNN,IAAAA,KAAK,EAAEH,MAAM,CAACU;AADR,GAVI;AAaZC,EAAAA,OAAO,EAAE;AACPR,IAAAA,KAAK,EAAEH,MAAM,CAACY;AADP,GAbG;AAgBZC,EAAAA,MAAM,EAAE;AACNV,IAAAA,KAAK,EAAEH,MAAM,CAACc;AADR;AAhBI,CAAd;AAqBA,IAAMC,IAAI,GAAGhB,QAAQ,CAA0CD,MAAM,CAACkB,IAAjD,CAAX,oBAEK,UAAAC,KAAK;AAAA,SAAKA,KAAK,CAACC,QAAN,KAAmB,OAAnB,GAA6B,MAA7B,GAAsC,MAA3C;AAAA,CAFV,EAIC,UAAAD,KAAK;AAAA,SAAIhB,KAAK,CAACgB,KAAK,CAACE,SAAP,CAAL,CAAuBhB,KAA3B;AAAA,CAJN,CAAV;AAcA,IAAMiB,YAAY,GAAG;AACnBD,EAAAA,SAAS,EAAE,SADQ;AAEnBD,EAAAA,QAAQ,EAAE;AAFS,CAArB;;IAKMG,Q;;;;;;;;;;;;;6BACK;AAAA,wBAC2B,KAAKJ,KADhC;AAAA,UACCK,WADD,eACCA,WADD;AAAA,UACcC,QADd,eACcA,QADd;AAGP,UAAIC,OAAJ;;AAEA,UAAIF,WAAJ,EAAiB;AACfE,QAAAA,OAAO,GAAGD,QAAV;AACD,OAFD,MAEO,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AACvCC,QAAAA,OAAO,GAAG5B,EAAE,CAAC2B,QAAD,CAAZ;AACD;;AAED,aACE,oBAAC,IAAD,oBAAUH,YAAV,EAA4B,KAAKH,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGO,OADH,CADF;AAKD;;;;EAjBoB3B,KAAK,CAAC4B,a;;AAoB7B,eAAeJ,QAAf","sourcesContent":["import { __ } from 'modules/common/utils';\nimport React from 'react';\nimport styled from 'styled-components';\nimport styledTS from 'styled-components-ts';\nimport { colors } from '../styles';\n\nconst types = {\n  default: {\n    color: colors.colorSecondary\n  },\n  primary: {\n    color: colors.colorPrimary\n  },\n  success: {\n    color: colors.colorCoreGreen\n  },\n  danger: {\n    color: colors.colorCoreRed\n  },\n  warning: {\n    color: colors.colorCoreYellow\n  },\n  simple: {\n    color: colors.colorCoreLightGray\n  }\n};\n\nconst Text = styledTS<{ textStyle: string; hugeness: string }>(styled.span)`\n  text-transform: uppercase;\n  font-size: ${props => (props.hugeness !== 'small' ? '14px' : '10px')};\n  font-weight: bold;\n  color: ${props => types[props.textStyle].color}\n`;\n\ntype Props = {\n  children: React.ReactNode | string;\n  ignoreTrans?: boolean;\n  textStyle?: string;\n  hugeness?: string;\n};\n\nconst defaultProps = {\n  textStyle: 'default',\n  hugeness: 'small'\n};\n\nclass TextInfo extends React.PureComponent<Props> {\n  render() {\n    const { ignoreTrans, children } = this.props;\n\n    let content;\n\n    if (ignoreTrans) {\n      content = children;\n    } else if (typeof children === 'string') {\n      content = __(children);\n    }\n\n    return (\n      <Text {...defaultProps} {...this.props}>\n        {content}\n      </Text>\n    );\n  }\n}\n\nexport default TextInfo;\n"]},"metadata":{},"sourceType":"module"}