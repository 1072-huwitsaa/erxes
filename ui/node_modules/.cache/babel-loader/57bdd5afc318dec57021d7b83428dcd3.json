{"ast":null,"code":"import _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/responseTemplate/PopoverContent.tsx\";\nimport Button from 'erxes-common-ui/lib/components/button';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport FormControl from 'modules/common/components/form/Control';\nimport { __ } from 'modules/common/utils';\nimport { InlineColumn, InlineHeader, PopoverBody, PopoverFooter, PopoverHeader, PopoverList, PopoverLoadMore, TemplateContent, TemplateTitle } from 'modules/inbox/styles';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport strip from 'strip';\n\nvar PopoverContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PopoverContent, _React$Component);\n\n  function PopoverContent(props) {\n    var _this;\n\n    _classCallCheck(this, PopoverContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PopoverContent).call(this, props));\n\n    _this.onSelect = function (responseTemplateId) {\n      var _this$props = _this.props,\n          responseTemplates = _this$props.responseTemplates,\n          onSelect = _this$props.onSelect; // find response template using event key\n\n      var responseTemplate = responseTemplates.find(function (t) {\n        return t._id === responseTemplateId;\n      }); // hide selector\n\n      _this.props.onSelectTemplate();\n\n      return onSelect && onSelect(responseTemplate);\n    };\n\n    _this.onChangeFilter = function (e, type) {\n      var _ref = e.currentTarget,\n          value = _ref.value;\n\n      _this.setState(_defineProperty({}, type, value));\n\n      _this.props.onSearchChange(type, value);\n    };\n\n    _this.renderLoadMore = function () {\n      var hasMore = _this.props.hasMore;\n\n      if (!hasMore) {\n        return;\n      }\n\n      return React.createElement(PopoverLoadMore, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        onClick: _this.fetchTemplates,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, __('Load more')));\n    };\n\n    _this.fetchTemplates = function () {\n      var responseTemplates = _this.props.responseTemplates;\n      var perPage = 10;\n      var page = Math.round(responseTemplates.length / perPage + 1);\n\n      _this.props.fetchMore({\n        perPage: perPage,\n        page: page\n      });\n    };\n\n    _this.state = {\n      searchValue: props.searchValue,\n      brandId: props.brandId,\n      options: props.responseTemplates\n    };\n    return _this;\n  }\n\n  _createClass(PopoverContent, [{\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this2 = this;\n\n      var responseTemplates = this.props.responseTemplates;\n\n      if (responseTemplates.length === 0) {\n        return React.createElement(EmptyState, {\n          icon: \"clipboard-1\",\n          text: \"No templates\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        });\n      }\n\n      return responseTemplates.map(function (item) {\n        var onClick = function onClick() {\n          return _this2.onSelect(item._id);\n        };\n\n        return React.createElement(\"li\", {\n          key: item._id,\n          onClick: onClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(TemplateTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, item.name), React.createElement(TemplateContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, strip(item.content)));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var brands = this.props.brands;\n\n      var onChangeSearchValue = function onChangeSearchValue(e) {\n        return _this3.onChangeFilter(e, 'searchValue');\n      };\n\n      var onChangeBrand = function onChangeBrand(e) {\n        return _this3.onChangeFilter(e, 'brandId');\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(PopoverHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(InlineHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(InlineColumn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        placeholder: __('Search'),\n        onChange: onChangeSearchValue,\n        defaultValue: this.state.searchValue,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(InlineColumn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        componentClass: \"select\",\n        placeholder: __('Select Brand'),\n        onChange: onChangeBrand,\n        defaultValue: this.state.brandId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, brands.map(function (brand) {\n        return React.createElement(\"option\", {\n          key: brand._id,\n          value: brand._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, brand.name);\n      }))))), React.createElement(PopoverBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(PopoverList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, this.renderItems(), this.renderLoadMore())), React.createElement(PopoverFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(PopoverList, {\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/settings/response-templates\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, __('Manage templates'))))));\n    }\n  }]);\n\n  return PopoverContent;\n}(React.Component);\n\nexport default PopoverContent;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/responseTemplate/PopoverContent.tsx"],"names":["Button","EmptyState","FormControl","__","InlineColumn","InlineHeader","PopoverBody","PopoverFooter","PopoverHeader","PopoverList","PopoverLoadMore","TemplateContent","TemplateTitle","React","Link","strip","PopoverContent","props","onSelect","responseTemplateId","responseTemplates","responseTemplate","find","t","_id","onSelectTemplate","onChangeFilter","e","type","currentTarget","value","setState","onSearchChange","renderLoadMore","hasMore","fetchTemplates","perPage","page","Math","round","length","fetchMore","state","searchValue","brandId","options","map","item","onClick","name","content","brands","onChangeSearchValue","onChangeBrand","brand","renderItems","Component"],"mappings":"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","sourcesContent":["import Button from 'erxes-common-ui/lib/components/button';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport FormControl from 'modules/common/components/form/Control';\nimport { IAttachment } from 'modules/common/types';\nimport { __ } from 'modules/common/utils';\nimport {\n  InlineColumn,\n  InlineHeader,\n  PopoverBody,\n  PopoverFooter,\n  PopoverHeader,\n  PopoverList,\n  PopoverLoadMore,\n  TemplateContent,\n  TemplateTitle\n} from 'modules/inbox/styles';\nimport { IBrand } from 'modules/settings/brands/types';\nimport { IResponseTemplate } from 'modules/settings/responseTemplates/types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport strip from 'strip';\n\ntype Props = {\n  brandId?: string;\n  searchValue?: string;\n  responseTemplates: IResponseTemplate[];\n  hasMore: boolean;\n  onSelect: (responseTemplate?: IResponseTemplate) => void;\n  onSearchChange: (name: string, value: string) => void;\n  onSelectTemplate: () => void;\n  fetchMore: (variables: { perPage: number; page: number }) => void;\n\n  attachments?: IAttachment[];\n  brands: IBrand[];\n  content?: string;\n};\n\ntype State = {\n  brandId?: string;\n  searchValue: string;\n  options: IResponseTemplate[];\n};\n\nclass PopoverContent extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchValue: props.searchValue,\n      brandId: props.brandId,\n      options: props.responseTemplates\n    };\n  }\n\n  onSelect = (responseTemplateId: string) => {\n    const { responseTemplates, onSelect } = this.props;\n\n    // find response template using event key\n    const responseTemplate = responseTemplates.find(\n      t => t._id === responseTemplateId\n    );\n\n    // hide selector\n    this.props.onSelectTemplate();\n\n    return onSelect && onSelect(responseTemplate);\n  };\n\n  onChangeFilter = (e: React.FormEvent<HTMLElement>, type) => {\n    const { value } = e.currentTarget as HTMLInputElement;\n\n    this.setState(({ [type]: value } as unknown) as Pick<State, keyof State>);\n\n    this.props.onSearchChange(type, value);\n  };\n\n  renderItems() {\n    const { responseTemplates } = this.props;\n\n    if (responseTemplates.length === 0) {\n      return <EmptyState icon=\"clipboard-1\" text=\"No templates\" />;\n    }\n\n    return responseTemplates.map(item => {\n      const onClick = () => this.onSelect(item._id);\n\n      return (\n        <li key={item._id} onClick={onClick}>\n          <TemplateTitle>{item.name}</TemplateTitle>\n          <TemplateContent>{strip(item.content)}</TemplateContent>\n        </li>\n      );\n    });\n  }\n\n  renderLoadMore = () => {\n    const { hasMore } = this.props;\n\n    if (!hasMore) {\n      return;\n    }\n\n    return (\n      <PopoverLoadMore>\n        <Button btnStyle=\"simple\" onClick={this.fetchTemplates}>\n          {__('Load more')}\n        </Button>\n      </PopoverLoadMore>\n    );\n  };\n\n  fetchTemplates = () => {\n    const { responseTemplates } = this.props;\n\n    const perPage = 10;\n    const page = Math.round(responseTemplates.length / perPage + 1);\n\n    this.props.fetchMore({\n      perPage,\n      page\n    });\n  };\n\n  render() {\n    const { brands } = this.props;\n\n    const onChangeSearchValue = e => this.onChangeFilter(e, 'searchValue');\n\n    const onChangeBrand = e => this.onChangeFilter(e, 'brandId');\n\n    return (\n      <>\n        <PopoverHeader>\n          <InlineHeader>\n            <InlineColumn>\n              <FormControl\n                type=\"text\"\n                placeholder={__('Search') as string}\n                onChange={onChangeSearchValue}\n                defaultValue={this.state.searchValue}\n                autoFocus={true}\n              />\n            </InlineColumn>\n            <InlineColumn>\n              <FormControl\n                componentClass=\"select\"\n                placeholder={__('Select Brand') as string}\n                onChange={onChangeBrand}\n                defaultValue={this.state.brandId}\n              >\n                {brands.map(brand => (\n                  <option key={brand._id} value={brand._id}>\n                    {brand.name}\n                  </option>\n                ))}\n              </FormControl>\n            </InlineColumn>\n          </InlineHeader>\n        </PopoverHeader>\n\n        <PopoverBody>\n          <PopoverList>\n            {this.renderItems()}\n            {this.renderLoadMore()}\n          </PopoverList>\n        </PopoverBody>\n        <PopoverFooter>\n          <PopoverList center={true}>\n            <li>\n              <Link to=\"/settings/response-templates\">\n                {__('Manage templates')}\n              </Link>\n            </li>\n          </PopoverList>\n        </PopoverFooter>\n      </>\n    );\n  }\n}\n\nexport default PopoverContent;\n"]},"metadata":{},"sourceType":"module"}