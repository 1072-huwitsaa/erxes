{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/robot/components/AssistantContent.tsx\";\nimport React from 'react';\nimport RTG from 'react-transition-group';\nimport { getCurrentUserName } from '../utils';\nimport Onboarding from './onboard/Onboarding';\nimport { Content } from './styles';\nimport Suggestion from './Suggestion';\nimport Todo from './Todo';\n\nvar AssistantContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AssistantContent, _React$Component);\n\n  function AssistantContent(props) {\n    var _this;\n\n    _classCallCheck(this, AssistantContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssistantContent).call(this, props));\n\n    _this.restartOnboard = function () {\n      _this.setState({\n        welcomeStep: 1\n      });\n\n      _this.props.changeRoute('initial');\n    };\n\n    _this.state = {\n      welcomeStep: 0\n    };\n    return _this;\n  }\n\n  _createClass(AssistantContent, [{\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$props = this.props,\n          currentRoute = _this$props.currentRoute,\n          changeRoute = _this$props.changeRoute,\n          currentUser = _this$props.currentUser,\n          forceComplete = _this$props.forceComplete,\n          savedFeatures = _this$props.savedFeatures,\n          toggleContent = _this$props.toggleContent;\n      var commonProps = {\n        forceComplete: forceComplete,\n        toggleContent: toggleContent,\n        currentUserName: getCurrentUserName(currentUser)\n      };\n\n      var onClick = function onClick() {\n        changeRoute('todoList');\n      };\n\n      var onBoarding = React.createElement(Onboarding, {\n        currentUserName: getCurrentUserName(currentUser),\n        changeRoute: changeRoute,\n        activeStep: this.state.welcomeStep,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n\n      if (currentRoute === 'initial') {\n        return onBoarding;\n      }\n\n      if (currentRoute === 'inComplete') {\n        if (!savedFeatures) {\n          return onBoarding;\n        }\n\n        return React.createElement(Suggestion, Object.assign({}, commonProps, {\n          onResumeClick: onClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }));\n      }\n\n      if (currentRoute === 'todoList' || currentRoute === 'todoDetail') {\n        return React.createElement(Todo, Object.assign({}, this.props, {\n          restartOnboard: this.restartOnboard,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var showContent = this.props.showContent;\n      return React.createElement(RTG.CSSTransition, {\n        in: showContent,\n        appear: true,\n        timeout: 600,\n        classNames: \"slide-in-small\",\n        unmountOnExit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.renderContent()));\n    }\n  }]);\n\n  return AssistantContent;\n}(React.Component);\n\nexport default AssistantContent;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/robot/components/AssistantContent.tsx"],"names":["React","RTG","getCurrentUserName","Onboarding","Content","Suggestion","Todo","AssistantContent","props","restartOnboard","setState","welcomeStep","changeRoute","state","currentRoute","currentUser","forceComplete","savedFeatures","toggleContent","commonProps","currentUserName","onClick","onBoarding","showContent","renderContent","Component"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AAEA,SAASC,kBAAT,QAAmC,UAAnC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAiBMC,gB;;;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;;AADiB,UAMnBC,cANmB,GAMF,YAAM;AACrB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAd;;AACA,YAAKH,KAAL,CAAWI,WAAX,CAAuB,SAAvB;AACD,KATkB;;AAGjB,UAAKC,KAAL,GAAa;AAAEF,MAAAA,WAAW,EAAE;AAAf,KAAb;AAHiB;AAIlB;;;;oCAOe;AAAA,wBAQV,KAAKH,KARK;AAAA,UAEZM,YAFY,eAEZA,YAFY;AAAA,UAGZF,WAHY,eAGZA,WAHY;AAAA,UAIZG,WAJY,eAIZA,WAJY;AAAA,UAKZC,aALY,eAKZA,aALY;AAAA,UAMZC,aANY,eAMZA,aANY;AAAA,UAOZC,aAPY,eAOZA,aAPY;AAUd,UAAMC,WAAW,GAAG;AAClBH,QAAAA,aAAa,EAAbA,aADkB;AAElBE,QAAAA,aAAa,EAAbA,aAFkB;AAGlBE,QAAAA,eAAe,EAAElB,kBAAkB,CAACa,WAAD;AAHjB,OAApB;;AAMA,UAAMM,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBT,QAAAA,WAAW,CAAC,UAAD,CAAX;AACD,OAFD;;AAIA,UAAMU,UAAU,GACd,oBAAC,UAAD;AACE,QAAA,eAAe,EAAEpB,kBAAkB,CAACa,WAAD,CADrC;AAEE,QAAA,WAAW,EAAEH,WAFf;AAGE,QAAA,UAAU,EAAE,KAAKC,KAAL,CAAWF,WAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAQA,UAAIG,YAAY,KAAK,SAArB,EAAgC;AAC9B,eAAOQ,UAAP;AACD;;AAED,UAAIR,YAAY,KAAK,YAArB,EAAmC;AACjC,YAAI,CAACG,aAAL,EAAoB;AAClB,iBAAOK,UAAP;AACD;;AAED,eAAO,oBAAC,UAAD,oBAAgBH,WAAhB;AAA6B,UAAA,aAAa,EAAEE,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;;AAED,UAAIP,YAAY,KAAK,UAAjB,IAA+BA,YAAY,KAAK,YAApD,EAAkE;AAChE,eAAO,oBAAC,IAAD,oBAAU,KAAKN,KAAf;AAAsB,UAAA,cAAc,EAAE,KAAKC,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;;AAED,aAAO,IAAP;AACD;;;6BAEQ;AAAA,UACCc,WADD,GACiB,KAAKf,KADtB,CACCe,WADD;AAGP,aACE,oBAAC,GAAD,CAAK,aAAL;AACE,QAAA,EAAE,EAAEA,WADN;AAEE,QAAA,MAAM,EAAE,IAFV;AAGE,QAAA,OAAO,EAAE,GAHX;AAIE,QAAA,UAAU,EAAC,gBAJb;AAKE,QAAA,aAAa,EAAE,IALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAU,KAAKC,aAAL,EAAV,CAPF,CADF;AAWD;;;;EAzE4BxB,KAAK,CAACyB,S;;AA4ErC,eAAelB,gBAAf","sourcesContent":["import { IUser } from 'modules/auth/types';\nimport React from 'react';\nimport RTG from 'react-transition-group';\nimport { IFeature } from '../types';\nimport { getCurrentUserName } from '../utils';\nimport Onboarding from './onboard/Onboarding';\nimport { Content } from './styles';\nimport Suggestion from './Suggestion';\nimport Todo from './Todo';\n\ntype Props = {\n  availableFeatures: IFeature[];\n  currentRoute?: string;\n  changeRoute: (route: string) => void;\n  forceComplete: () => void;\n  currentUser: IUser;\n  showContent: boolean;\n  toggleContent: (isShow: boolean) => void;\n  savedFeatures?: string | null;\n};\n\ntype State = {\n  welcomeStep: number;\n};\n\nclass AssistantContent extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = { welcomeStep: 0 };\n  }\n\n  restartOnboard = () => {\n    this.setState({ welcomeStep: 1 });\n    this.props.changeRoute('initial');\n  };\n\n  renderContent() {\n    const {\n      currentRoute,\n      changeRoute,\n      currentUser,\n      forceComplete,\n      savedFeatures,\n      toggleContent\n    } = this.props;\n\n    const commonProps = {\n      forceComplete,\n      toggleContent,\n      currentUserName: getCurrentUserName(currentUser)\n    };\n\n    const onClick = () => {\n      changeRoute('todoList');\n    };\n\n    const onBoarding = (\n      <Onboarding\n        currentUserName={getCurrentUserName(currentUser)}\n        changeRoute={changeRoute}\n        activeStep={this.state.welcomeStep}\n      />\n    );\n\n    if (currentRoute === 'initial') {\n      return onBoarding;\n    }\n\n    if (currentRoute === 'inComplete') {\n      if (!savedFeatures) {\n        return onBoarding;\n      }\n\n      return <Suggestion {...commonProps} onResumeClick={onClick} />;\n    }\n\n    if (currentRoute === 'todoList' || currentRoute === 'todoDetail') {\n      return <Todo {...this.props} restartOnboard={this.restartOnboard} />;\n    }\n\n    return null;\n  }\n\n  render() {\n    const { showContent } = this.props;\n\n    return (\n      <RTG.CSSTransition\n        in={showContent}\n        appear={true}\n        timeout={600}\n        classNames=\"slide-in-small\"\n        unmountOnExit={true}\n      >\n        <Content>{this.renderContent()}</Content>\n      </RTG.CSSTransition>\n    );\n  }\n}\n\nexport default AssistantContent;\n"]},"metadata":{},"sourceType":"module"}