{"ast":null,"code":"var _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/team/containers/SelectTeamMembers.tsx\";\nimport SelectWithSearch from 'modules/common/components/SelectWithSearch';\nimport React from 'react';\nimport { queries } from '../graphql'; // get user options for react-select-plus\n\nexport function generateUserOptions() {\n  var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return array.map(function (item) {\n    var user = item || {};\n    var details = item.details || {};\n    return {\n      value: user._id,\n      label: details.fullName || user.email,\n      avatar: details.avatar\n    };\n  });\n}\nexport default (function (_ref) {\n  var queryParams = _ref.queryParams,\n      onSelect = _ref.onSelect,\n      customOption = _ref.customOption,\n      value = _ref.value,\n      _ref$multi = _ref.multi,\n      multi = _ref$multi === void 0 ? true : _ref$multi,\n      label = _ref.label,\n      filterParams = _ref.filterParams,\n      name = _ref.name;\n  var defaultValue = queryParams ? queryParams[name] : value;\n  return React.createElement(SelectWithSearch, {\n    label: label,\n    queryName: \"users\",\n    name: name,\n    filterParams: filterParams,\n    values: typeof defaultValue === 'string' ? multi ? [defaultValue] : defaultValue : defaultValue,\n    generateOptions: generateUserOptions,\n    onSelect: onSelect,\n    customQuery: queries.users,\n    customOption: customOption,\n    multi: multi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/team/containers/SelectTeamMembers.tsx"],"names":["SelectWithSearch","React","queries","generateUserOptions","array","map","item","user","details","value","_id","label","fullName","email","avatar","queryParams","onSelect","customOption","multi","filterParams","name","defaultValue","users"],"mappings":";AACA,OAAOA,gBAAP,MAA6B,4CAA7B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB,C,CAEA;;AACA,OAAO,SAASC,mBAAT,GAA6D;AAAA,MAAhCC,KAAgC,uEAAf,EAAe;AAClE,SAAOA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI,EAAI;AACvB,QAAMC,IAAI,GAAGD,IAAI,IAAK,EAAtB;AACA,QAAME,OAAO,GAAGF,IAAI,CAACE,OAAL,IAAiB,EAAjC;AAEA,WAAO;AACLC,MAAAA,KAAK,EAAEF,IAAI,CAACG,GADP;AAELC,MAAAA,KAAK,EAAEH,OAAO,CAACI,QAAR,IAAoBL,IAAI,CAACM,KAF3B;AAGLC,MAAAA,MAAM,EAAEN,OAAO,CAACM;AAHX,KAAP;AAKD,GATM,CAAP;AAUD;AAED,gBAAe,gBAkBT;AAAA,MAjBJC,WAiBI,QAjBJA,WAiBI;AAAA,MAhBJC,QAgBI,QAhBJA,QAgBI;AAAA,MAfJC,YAeI,QAfJA,YAeI;AAAA,MAdJR,KAcI,QAdJA,KAcI;AAAA,wBAbJS,KAaI;AAAA,MAbJA,KAaI,2BAbI,IAaJ;AAAA,MAZJP,KAYI,QAZJA,KAYI;AAAA,MAXJQ,YAWI,QAXJA,YAWI;AAAA,MAVJC,IAUI,QAVJA,IAUI;AACJ,MAAMC,YAAY,GAAGN,WAAW,GAAGA,WAAW,CAACK,IAAD,CAAd,GAAuBX,KAAvD;AAEA,SACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEE,KADT;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,IAAI,EAAES,IAHR;AAIE,IAAA,YAAY,EAAED,YAJhB;AAKE,IAAA,MAAM,EACJ,OAAOE,YAAP,KAAwB,QAAxB,GACIH,KAAK,GACH,CAACG,YAAD,CADG,GAEHA,YAHN,GAIIA,YAVR;AAYE,IAAA,eAAe,EAAElB,mBAZnB;AAaE,IAAA,QAAQ,EAAEa,QAbZ;AAcE,IAAA,WAAW,EAAEd,OAAO,CAACoB,KAdvB;AAeE,IAAA,YAAY,EAAEL,YAfhB;AAgBE,IAAA,KAAK,EAAEC,KAhBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAoBD,CAzCD","sourcesContent":["import { IUser, IUserDetails } from 'modules/auth/types';\nimport SelectWithSearch from 'modules/common/components/SelectWithSearch';\nimport { IOption, IQueryParams } from 'modules/common/types';\nimport React from 'react';\nimport { queries } from '../graphql';\n\n// get user options for react-select-plus\nexport function generateUserOptions(array: IUser[] = []): IOption[] {\n  return array.map(item => {\n    const user = item || ({} as IUser);\n    const details = item.details || ({} as IUserDetails);\n\n    return {\n      value: user._id,\n      label: details.fullName || user.email,\n      avatar: details.avatar\n    };\n  });\n}\n\nexport default ({\n  queryParams,\n  onSelect,\n  customOption,\n  value,\n  multi = true,\n  label,\n  filterParams,\n  name\n}: {\n  queryParams?: IQueryParams;\n  filterParams?: { status: string };\n  label: string;\n  onSelect: (value: string[] | string, name: string) => void;\n  multi?: boolean;\n  customOption?: IOption;\n  value?: string | string[];\n  name: string;\n}) => {\n  const defaultValue = queryParams ? queryParams[name] : value;\n\n  return (\n    <SelectWithSearch\n      label={label}\n      queryName=\"users\"\n      name={name}\n      filterParams={filterParams}\n      values={\n        typeof defaultValue === 'string'\n          ? multi\n            ? [defaultValue]\n            : defaultValue\n          : defaultValue\n      }\n      generateOptions={generateUserOptions}\n      onSelect={onSelect}\n      customQuery={queries.users}\n      customOption={customOption}\n      multi={multi}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}