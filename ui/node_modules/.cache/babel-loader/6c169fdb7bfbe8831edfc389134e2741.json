{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/brands/components/ChooseBrand.tsx\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport React from \"react\";\nimport { ModalFooter } from \"../../../common/styles/main\";\nimport { __ } from \"../../../common/utils\";\n\nvar ChooseBrand =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChooseBrand, _React$Component);\n\n  function ChooseBrand() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChooseBrand);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChooseBrand)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleBrandChange = function (e) {\n      _this.updateInstallCodeValue(e.target.value);\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.props.closeModal) {\n        _this.props.closeModal();\n      }\n\n      _this.props.save({\n        name: document.getElementById(\"integration-name\").value,\n        brandId: document.getElementById(\"selectBrand\").value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ChooseBrand, [{\n    key: \"updateInstallCodeValue\",\n    value: function updateInstallCodeValue(brandId) {\n      if (brandId) {\n        this.props.brands.find(function (brand) {\n          return brand._id === brandId;\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var integration = this.props.integration;\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Name\"), React.createElement(FormControl, {\n        id: \"integration-name\",\n        type: \"text\",\n        defaultValue: integration.name,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Brand\"), React.createElement(FormControl, {\n        componentClass: \"select\",\n        placeholder: __(\"Select Brand\"),\n        defaultValue: integration.brandId,\n        onChange: this.handleBrandChange,\n        id: \"selectBrand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), this.props.brands.map(function (brand) {\n        return React.createElement(\"option\", {\n          key: brand._id,\n          value: brand._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, brand.name);\n      }))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        icon: \"times-circle\",\n        uppercase: false,\n        onClick: this.props.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        btnStyle: \"success\",\n        type: \"submit\",\n        icon: \"check-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Save\")));\n    }\n  }]);\n\n  return ChooseBrand;\n}(React.Component);\n\nexport default ChooseBrand;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/brands/components/ChooseBrand.tsx"],"names":["Button","FormControl","FormGroup","ControlLabel","React","ModalFooter","__","ChooseBrand","handleBrandChange","e","updateInstallCodeValue","target","value","handleSubmit","preventDefault","props","closeModal","save","name","document","getElementById","brandId","brands","find","brand","_id","integration","map","Component"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,uCAAnB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,EAAT,QAAmB,uBAAnB;;IAUMC,W;;;;;;;;;;;;;;;;;;UAOJC,iB,GAAoB,UAACC,CAAD,EAAO;AACzB,YAAKC,sBAAL,CAA4BD,CAAC,CAACE,MAAF,CAASC,KAArC;AACD,K;;UAEDC,Y,GAAe,UAACJ,CAAD,EAAO;AACpBA,MAAAA,CAAC,CAACK,cAAF;;AAEA,UAAI,MAAKC,KAAL,CAAWC,UAAf,EAA2B;AACzB,cAAKD,KAAL,CAAWC,UAAX;AACD;;AAED,YAAKD,KAAL,CAAWE,IAAX,CAAgB;AACdC,QAAAA,IAAI,EAAGC,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAD,CACHR,KAFW;AAGdS,QAAAA,OAAO,EAAGF,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAD,CACNR;AAJW,OAAhB;AAMD,K;;;;;;;2CAvBsBS,O,EAAS;AAC9B,UAAIA,OAAJ,EAAa;AACX,aAAKN,KAAL,CAAWO,MAAX,CAAkBC,IAAlB,CAAuB,UAACC,KAAD;AAAA,iBAAWA,KAAK,CAACC,GAAN,KAAcJ,OAAzB;AAAA,SAAvB;AACD;AACF;;;6BAqBQ;AACP,UAAMK,WAAW,GAAG,KAAKX,KAAL,CAAWW,WAA/B;AAEA,aACE;AAAM,QAAA,QAAQ,EAAE,KAAKb,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,WAAD;AACE,QAAA,EAAE,EAAC,kBADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,YAAY,EAAEa,WAAW,CAACR,IAH5B;AAIE,QAAA,QAAQ,EAAE,IAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAWE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,WAAD;AACE,QAAA,cAAc,EAAC,QADjB;AAEE,QAAA,WAAW,EAAEZ,EAAE,CAAC,cAAD,CAFjB;AAGE,QAAA,YAAY,EAAEoB,WAAW,CAACL,OAH5B;AAIE,QAAA,QAAQ,EAAE,KAAKb,iBAJjB;AAKE,QAAA,EAAE,EAAC,aALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQG,KAAKO,KAAL,CAAWO,MAAX,CAAkBK,GAAlB,CAAsB,UAACH,KAAD;AAAA,eACrB;AAAQ,UAAA,GAAG,EAAEA,KAAK,CAACC,GAAnB;AAAwB,UAAA,KAAK,EAAED,KAAK,CAACC,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,KAAK,CAACN,IADT,CADqB;AAAA,OAAtB,CARH,CAFF,CAXF,EA6BE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,QAAQ,EAAC,QADX;AAEE,QAAA,IAAI,EAAC,cAFP;AAGE,QAAA,SAAS,EAAE,KAHb;AAIE,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,UAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EASE,oBAAC,MAAD;AACE,QAAA,QAAQ,EAAC,SADX;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,IAAI,EAAC,cAHP;AAIE,QAAA,SAAS,EAAE,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CA7BF,CADF;AAkDD;;;;EA/EuBZ,KAAK,CAACwB,S;;AAkFhC,eAAerB,WAAf","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport { IIntegration } from \"modules/settings/integrations/types\";\nimport React from \"react\";\nimport { ModalFooter } from \"../../../common/styles/main\";\nimport { __ } from \"../../../common/utils\";\nimport { IBrand, IChooseBrand } from \"../types\";\n\ntype Props = {\n  brands: IBrand[];\n  integration: IIntegration;\n  save: (variables: IChooseBrand) => void;\n  closeModal?: () => void;\n};\n\nclass ChooseBrand extends React.Component<Props> {\n  updateInstallCodeValue(brandId) {\n    if (brandId) {\n      this.props.brands.find((brand) => brand._id === brandId);\n    }\n  }\n\n  handleBrandChange = (e) => {\n    this.updateInstallCodeValue(e.target.value);\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.props.closeModal) {\n      this.props.closeModal();\n    }\n\n    this.props.save({\n      name: (document.getElementById(\"integration-name\") as HTMLInputElement)\n        .value,\n      brandId: (document.getElementById(\"selectBrand\") as HTMLInputElement)\n        .value,\n    });\n  };\n\n  render() {\n    const integration = this.props.integration;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <FormGroup>\n          <ControlLabel>Name</ControlLabel>\n          <FormControl\n            id=\"integration-name\"\n            type=\"text\"\n            defaultValue={integration.name}\n            required={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Brand</ControlLabel>\n          <FormControl\n            componentClass=\"select\"\n            placeholder={__(\"Select Brand\")}\n            defaultValue={integration.brandId}\n            onChange={this.handleBrandChange}\n            id=\"selectBrand\"\n          >\n            <option />\n            {this.props.brands.map((brand) => (\n              <option key={brand._id} value={brand._id}>\n                {brand.name}\n              </option>\n            ))}\n          </FormControl>\n        </FormGroup>\n\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            icon=\"times-circle\"\n            uppercase={false}\n            onClick={this.props.closeModal}\n          >\n            Cancel\n          </Button>\n          <Button\n            btnStyle=\"success\"\n            type=\"submit\"\n            icon=\"check-circle\"\n            uppercase={false}\n          >\n            Save\n          </Button>\n        </ModalFooter>\n      </form>\n    );\n  }\n}\n\nexport default ChooseBrand;\n"]},"metadata":{},"sourceType":"module"}