{"ast":null,"code":"import { ICON_AND_COLOR_TABLE } from './constants';\nexport var getIconAndColor = function getIconAndColor(contentType) {\n  var iconAndColor = ICON_AND_COLOR_TABLE[contentType];\n\n  if (!iconAndColor) {\n    return {\n      icon: 'focus-add',\n      color: '#8c7ae6'\n    };\n  }\n\n  return iconAndColor;\n}; // uppercase and clean text for tooltip\n\nexport var formatText = function formatText(text, noCaseChange) {\n  var cleanText = text.replace('nylas-', '').replace('smooch-', '');\n\n  if (noCaseChange) {\n    return cleanText;\n  }\n\n  return cleanText.replace(/^\\w/, function (c) {\n    return c.toUpperCase();\n  });\n};","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/activityLogs/utils.ts"],"names":["ICON_AND_COLOR_TABLE","getIconAndColor","contentType","iconAndColor","icon","color","formatText","text","noCaseChange","cleanText","replace","c","toUpperCase"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,aAArC;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,WAAW,EAAI;AAC5C,MAAMC,YAAY,GAAGH,oBAAoB,CAACE,WAAD,CAAzC;;AAEA,MAAI,CAACC,YAAL,EAAmB;AACjB,WAAO;AACLC,MAAAA,IAAI,EAAE,WADD;AAELC,MAAAA,KAAK,EAAE;AAFF,KAAP;AAID;;AAED,SAAOF,YAAP;AACD,CAXM,C,CAaP;;AACA,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAeC,YAAf,EAA0C;AAClE,MAAMC,SAAS,GAAGF,IAAI,CAACG,OAAL,CAAa,QAAb,EAAuB,EAAvB,EAA2BA,OAA3B,CAAmC,SAAnC,EAA8C,EAA9C,CAAlB;;AAEA,MAAIF,YAAJ,EAAkB;AAChB,WAAOC,SAAP;AACD;;AAED,SAAOA,SAAS,CAACC,OAAV,CAAkB,KAAlB,EAAyB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,WAAF,EAAJ;AAAA,GAA1B,CAAP;AACD,CARM","sourcesContent":["import { ICON_AND_COLOR_TABLE } from './constants';\n\nexport const getIconAndColor = contentType => {\n  const iconAndColor = ICON_AND_COLOR_TABLE[contentType];\n\n  if (!iconAndColor) {\n    return {\n      icon: 'focus-add',\n      color: '#8c7ae6'\n    };\n  }\n\n  return iconAndColor;\n};\n\n// uppercase and clean text for tooltip\nexport const formatText = (text: string, noCaseChange?: boolean) => {\n  const cleanText = text.replace('nylas-', '').replace('smooch-', '');\n\n  if (noCaseChange) {\n    return cleanText;\n  }\n\n  return cleanText.replace(/^\\w/, c => c.toUpperCase());\n};\n"]},"metadata":{},"sourceType":"module"}