{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/growthHacks/components/Score.tsx\";\nimport FormControl from 'modules/common/components/form/Control';\nimport { roundToTwo } from 'modules/common/utils';\nimport React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport { AmountItem, Amounts, CalculatedAmount, Factor, ScoreWrapper, Text } from '../styles';\n\nfunction Amount(_ref) {\n  var type = _ref.type,\n      r = _ref.r,\n      i = _ref.i,\n      c = _ref.c,\n      e = _ref.e;\n\n  var calculateScore = function calculateScore() {\n    if (type === 'rice') {\n      if (e === 0) {\n        return 0;\n      }\n\n      return roundToTwo(r * i * c / e);\n    }\n\n    if (type === 'ice') {\n      return i * c * e;\n    } // PIE\n\n\n    return roundToTwo((i + c + e) / 3);\n  };\n\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, calculateScore());\n}\n\nvar Score =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Score, _React$Component);\n\n  function Score() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Score);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Score)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderInput = function (text, name, value) {\n      return React.createElement(AmountItem, {\n        type: _this.props.scoringType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, text), React.createElement(FormControl, {\n        value: value,\n        onChange: _this.props.onChange,\n        name: name,\n        type: \"number\",\n        min: 0,\n        max: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    };\n\n    _this.renderInputs = function () {\n      var _this$props = _this.props,\n          reach = _this$props.reach,\n          impact = _this$props.impact,\n          confidence = _this$props.confidence,\n          ease = _this$props.ease,\n          scoringType = _this$props.scoringType;\n\n      if (scoringType === 'rice') {\n        return React.createElement(Factor, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, _this.renderInput('Reach', 'reach', reach), _this.renderInput('Impact', 'impact', impact), _this.renderInput('Confidence', 'confidence', confidence), _this.renderInput('Effort', 'ease', ease));\n      }\n\n      if (scoringType === 'ice') {\n        return React.createElement(Factor, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, _this.renderInput('Impact', 'impact', impact), _this.renderInput('Confidence', 'confidence', confidence), _this.renderInput('Ease', 'ease', ease));\n      }\n\n      return React.createElement(Factor, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, _this.renderInput('Potential', 'impact', impact), _this.renderInput('Importance', 'confidence', confidence), _this.renderInput('Ease', 'ease', ease), React.createElement(AmountItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"3\")));\n    };\n\n    _this.renderPopover = function () {\n      return React.createElement(Popover, {\n        id: \"score-popover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Amounts, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, _this.renderInputs()));\n    };\n\n    return _this;\n  }\n\n  _createClass(Score, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          scoringType = _this$props2.scoringType,\n          reach = _this$props2.reach,\n          impact = _this$props2.impact,\n          confidence = _this$props2.confidence,\n          ease = _this$props2.ease;\n      return React.createElement(ScoreWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(OverlayTrigger, {\n        trigger: \"click\",\n        placement: \"bottom-end\",\n        rootClose: true,\n        overlay: this.renderPopover(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(CalculatedAmount, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Amount, {\n        type: scoringType,\n        r: reach,\n        i: impact,\n        c: confidence,\n        e: ease,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Score;\n}(React.Component);\n\nScore.Amount = Amount;\nexport default Score;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/growthHacks/components/Score.tsx"],"names":["FormControl","roundToTwo","React","OverlayTrigger","Popover","AmountItem","Amounts","CalculatedAmount","Factor","ScoreWrapper","Text","Amount","type","r","i","c","e","calculateScore","Score","renderInput","text","name","value","props","scoringType","onChange","renderInputs","reach","impact","confidence","ease","renderPopover","Component"],"mappings":"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","sourcesContent":["import FormControl from 'modules/common/components/form/Control';\nimport { roundToTwo } from 'modules/common/utils';\nimport React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport {\n  AmountItem,\n  Amounts,\n  CalculatedAmount,\n  Factor,\n  ScoreWrapper,\n  Text\n} from '../styles';\n\ntype Props = {\n  impact: number;\n  ease: number;\n  confidence: number;\n  reach: number;\n  scoringType?: string;\n  onChange: (e) => void;\n};\n\nfunction Amount({\n  type,\n  r,\n  i,\n  c,\n  e\n}: {\n  type?: string;\n  r: number;\n  i: number;\n  c: number;\n  e: number;\n}) {\n  const calculateScore = () => {\n    if (type === 'rice') {\n      if (e === 0) {\n        return 0;\n      }\n\n      return roundToTwo((r * i * c) / e);\n    }\n\n    if (type === 'ice') {\n      return i * c * e;\n    }\n\n    // PIE\n    return roundToTwo((i + c + e) / 3);\n  };\n\n  return <span>{calculateScore()}</span>;\n}\n\nclass Score extends React.Component<Props> {\n  static Amount = Amount;\n\n  renderInput = (text: string, name: string, value: number) => {\n    return (\n      <AmountItem type={this.props.scoringType}>\n        <span>{text}</span>\n        <FormControl\n          value={value}\n          onChange={this.props.onChange}\n          name={name}\n          type=\"number\"\n          min={0}\n          max={10}\n        />\n      </AmountItem>\n    );\n  };\n\n  renderInputs = () => {\n    const { reach, impact, confidence, ease, scoringType } = this.props;\n\n    if (scoringType === 'rice') {\n      return (\n        <Factor>\n          {this.renderInput('Reach', 'reach', reach)}\n          {this.renderInput('Impact', 'impact', impact)}\n          {this.renderInput('Confidence', 'confidence', confidence)}\n          {this.renderInput('Effort', 'ease', ease)}\n        </Factor>\n      );\n    }\n\n    if (scoringType === 'ice') {\n      return (\n        <Factor>\n          {this.renderInput('Impact', 'impact', impact)}\n          {this.renderInput('Confidence', 'confidence', confidence)}\n          {this.renderInput('Ease', 'ease', ease)}\n        </Factor>\n      );\n    }\n\n    return (\n      <Factor>\n        {this.renderInput('Potential', 'impact', impact)}\n        {this.renderInput('Importance', 'confidence', confidence)}\n        {this.renderInput('Ease', 'ease', ease)}\n        <AmountItem>\n          <Text>3</Text>\n        </AmountItem>\n      </Factor>\n    );\n  };\n\n  renderPopover = () => {\n    return (\n      <Popover id=\"score-popover\">\n        <Amounts>{this.renderInputs()}</Amounts>\n      </Popover>\n    );\n  };\n\n  render() {\n    const { scoringType, reach, impact, confidence, ease } = this.props;\n\n    return (\n      <ScoreWrapper>\n        <OverlayTrigger\n          trigger=\"click\"\n          placement=\"bottom-end\"\n          rootClose={true}\n          overlay={this.renderPopover()}\n        >\n          <CalculatedAmount>\n            <Amount\n              type={scoringType}\n              r={reach}\n              i={impact}\n              c={confidence}\n              e={ease}\n            />\n          </CalculatedAmount>\n        </OverlayTrigger>\n      </ScoreWrapper>\n    );\n  }\n}\n\nexport default Score;\n"]},"metadata":{},"sourceType":"module"}