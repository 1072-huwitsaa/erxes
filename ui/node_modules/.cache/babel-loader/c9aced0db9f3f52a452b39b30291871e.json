{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/notifications/components/NotificationRow.tsx\";\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\nimport NameCard from 'modules/common/components/nameCard/NameCard';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport xss from 'xss';\nimport NotificationIcon from './NotificationIcon';\nimport { AvatarSection, Content, CreatedDate, CreatedUser, InfoSection } from './styles';\n\nvar NotificationRow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NotificationRow, _React$Component);\n\n  function NotificationRow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NotificationRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NotificationRow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.markAsRead = function () {\n      var _this$props = _this.props,\n          notification = _this$props.notification,\n          markAsRead = _this$props.markAsRead;\n\n      if (!notification.isRead) {\n        markAsRead([notification._id]);\n      }\n\n      var params = notification.link.split('?');\n\n      _this.props.history.replace({\n        pathname: params[0],\n        state: {\n          from: 'notification'\n        },\n        search: \"?\".concat(params[1])\n      });\n    };\n\n    _this.getTitle = function (title, user) {\n      if (!user) {\n        return title.replace('{userName}', '');\n      }\n\n      if (!user.details || user.details.fullName) {\n        return title.replace('{userName}', user.email);\n      }\n\n      return title.replace('{userName}', user.details.fullName);\n    };\n\n    return _this;\n  }\n\n  _createClass(NotificationRow, [{\n    key: \"renderContent\",\n    value: function renderContent(content, type) {\n      if (!type.includes('conversation')) {\n        return React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \" \", content);\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Content, {\n        dangerouslySetInnerHTML: {\n          __html: xss(content)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderCreatedUser\",\n    value: function renderCreatedUser() {\n      var _this$props2 = this.props,\n          notification = _this$props2.notification,\n          isList = _this$props2.isList;\n      var createdUser = notification.createdUser;\n      var name = 'system';\n\n      if (createdUser) {\n        name = createdUser.details ? createdUser.details.fullName || '' : createdUser.username || createdUser.email;\n      }\n\n      return React.createElement(CreatedUser, {\n        isList: isList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, name, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, notification.action, this.renderContent(notification.content, notification.notifType)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          notification = _this$props3.notification,\n          isList = _this$props3.isList;\n      var isRead = notification.isRead,\n          createdUser = notification.createdUser;\n      var classes = classNames({\n        unread: !isRead\n      });\n      return React.createElement(\"li\", {\n        className: classes,\n        onClick: this.markAsRead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(AvatarSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(NameCard.Avatar, {\n        user: createdUser,\n        size: 30,\n        icon: React.createElement(NotificationIcon, {\n          notification: notification,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(InfoSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.renderCreatedUser(), React.createElement(CreatedDate, {\n        isList: isList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, dayjs(notification.date).format('DD MMM YYYY, HH:mm'))));\n    }\n  }]);\n\n  return NotificationRow;\n}(React.Component);\n\nexport default withRouter(NotificationRow);","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/notifications/components/NotificationRow.tsx"],"names":["classNames","dayjs","NameCard","React","withRouter","xss","NotificationIcon","AvatarSection","Content","CreatedDate","CreatedUser","InfoSection","NotificationRow","markAsRead","props","notification","isRead","_id","params","link","split","history","replace","pathname","state","from","search","getTitle","title","user","details","fullName","email","content","type","includes","__html","isList","createdUser","name","username","action","renderContent","notifType","classes","unread","renderCreatedUser","date","format","Component"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport dayjs from 'dayjs';\nimport { IUser } from 'modules/auth/types';\nimport NameCard from 'modules/common/components/nameCard/NameCard';\nimport { IRouterProps } from 'modules/common/types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport xss from 'xss';\nimport { INotification } from '../types';\nimport NotificationIcon from './NotificationIcon';\nimport {\n  AvatarSection,\n  Content,\n  CreatedDate,\n  CreatedUser,\n  InfoSection\n} from './styles';\n\ninterface IProps extends IRouterProps {\n  notification: INotification;\n  markAsRead: (notificationIds?: string[]) => void;\n  createdUser?: IUser;\n  isList?: boolean;\n}\n\nclass NotificationRow extends React.Component<IProps> {\n  markAsRead = () => {\n    const { notification, markAsRead } = this.props;\n\n    if (!notification.isRead) {\n      markAsRead([notification._id]);\n    }\n\n    const params = notification.link.split('?');\n\n    this.props.history.replace({\n      pathname: params[0],\n      state: { from: 'notification' },\n      search: `?${params[1]}`\n    });\n  };\n\n  getTitle = (title, user) => {\n    if (!user) {\n      return title.replace('{userName}', '');\n    }\n\n    if (!user.details || user.details.fullName) {\n      return title.replace('{userName}', user.email);\n    }\n\n    return title.replace('{userName}', user.details.fullName);\n  };\n\n  renderContent(content: string, type: string) {\n    if (!type.includes('conversation')) {\n      return <b> {content}</b>;\n    }\n\n    return (\n      <div>\n        <Content dangerouslySetInnerHTML={{ __html: xss(content) }} />\n      </div>\n    );\n  }\n\n  renderCreatedUser() {\n    const { notification, isList } = this.props;\n    const { createdUser } = notification;\n\n    let name = 'system';\n\n    if (createdUser) {\n      name = createdUser.details\n        ? createdUser.details.fullName || ''\n        : createdUser.username || createdUser.email;\n    }\n\n    return (\n      <CreatedUser isList={isList}>\n        {name}\n        <span>\n          {notification.action}\n          {this.renderContent(notification.content, notification.notifType)}\n        </span>\n      </CreatedUser>\n    );\n  }\n\n  render() {\n    const { notification, isList } = this.props;\n    const { isRead, createdUser } = notification;\n    const classes = classNames({ unread: !isRead });\n\n    return (\n      <li className={classes} onClick={this.markAsRead}>\n        <AvatarSection>\n          <NameCard.Avatar\n            user={createdUser}\n            size={30}\n            icon={<NotificationIcon notification={notification} />}\n          />\n        </AvatarSection>\n        <InfoSection>\n          {this.renderCreatedUser()}\n          <CreatedDate isList={isList}>\n            {dayjs(notification.date).format('DD MMM YYYY, HH:mm')}\n          </CreatedDate>\n        </InfoSection>\n      </li>\n    );\n  }\n}\n\nexport default withRouter<IProps>(NotificationRow);\n"]},"metadata":{},"sourceType":"module"}