{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/activityLogs/components/items/ConvertLog.tsx\";\nimport dayjs from 'dayjs';\nimport { ActivityDate, FlexBody, FlexCenterContent } from 'modules/activityLogs/styles';\nimport Tip from 'modules/common/components/Tip';\nimport { __, renderUserFullName } from 'modules/common/utils';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nvar ConvertLog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConvertLog, _React$Component);\n\n  function ConvertLog() {\n    _classCallCheck(this, ConvertLog);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ConvertLog).apply(this, arguments));\n  }\n\n  _createClass(ConvertLog, [{\n    key: \"renderContent\",\n    value: function renderContent() {\n      var activity = this.props.activity;\n      var contentTypeDetail = activity.contentTypeDetail,\n          contentType = activity.contentType,\n          content = activity.content,\n          createdByDetail = activity.createdByDetail;\n      var userName = 'Unknown';\n\n      if (createdByDetail && createdByDetail.type === 'user') {\n        userName = renderUserFullName(createdByDetail.content);\n      }\n\n      var conversation = React.createElement(Link, {\n        to: \"/inbox/index?_id=\".concat(content),\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"conversation\");\n      var item = React.createElement(Link, {\n        to: \"\".concat(contentType === 'ticket' ? '/inbox' : '', \"/\").concat(contentType, \"/board?_id=\").concat(activity._id, \"&itemId=\").concat(contentTypeDetail._id),\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, contentTypeDetail.name);\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, userName), \" \", __('converted'), \" \", item, \" \", contentType, ' ', __('from'), \" a \", conversation);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var createdAt = this.props.activity.createdAt;\n      return React.createElement(FlexCenterContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(FlexBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.renderContent()), React.createElement(Tip, {\n        text: dayjs(createdAt).format('llll'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(ActivityDate, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, dayjs(createdAt).format('MMM D, h:mm A'))));\n    }\n  }]);\n\n  return ConvertLog;\n}(React.Component);\n\nexport default ConvertLog;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/activityLogs/components/items/ConvertLog.tsx"],"names":["dayjs","ActivityDate","FlexBody","FlexCenterContent","Tip","__","renderUserFullName","React","Link","ConvertLog","activity","props","contentTypeDetail","contentType","content","createdByDetail","userName","type","conversation","item","_id","name","createdAt","renderContent","format","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,QAFF,EAGEC,iBAHF,QAIO,6BAJP;AAMA,OAAOC,GAAP,MAAgB,+BAAhB;AACA,SAASC,EAAT,EAAaC,kBAAb,QAAuC,sBAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAMMC,U;;;;;;;;;;;;;oCACY;AAAA,UACNC,QADM,GACO,KAAKC,KADZ,CACND,QADM;AAAA,UAGZE,iBAHY,GAOVF,QAPU,CAGZE,iBAHY;AAAA,UAIZC,WAJY,GAOVH,QAPU,CAIZG,WAJY;AAAA,UAKZC,OALY,GAOVJ,QAPU,CAKZI,OALY;AAAA,UAMZC,eANY,GAOVL,QAPU,CAMZK,eANY;AASd,UAAIC,QAAQ,GAAG,SAAf;;AAEA,UAAID,eAAe,IAAIA,eAAe,CAACE,IAAhB,KAAyB,MAAhD,EAAwD;AACtDD,QAAAA,QAAQ,GAAGV,kBAAkB,CAACS,eAAe,CAACD,OAAjB,CAA7B;AACD;;AAED,UAAMI,YAAY,GAChB,oBAAC,IAAD;AAAM,QAAA,EAAE,6BAAsBJ,OAAtB,CAAR;AAAyC,QAAA,MAAM,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAMA,UAAMK,IAAI,GACR,oBAAC,IAAD;AACE,QAAA,EAAE,YACAN,WAAW,KAAK,QAAhB,GAA2B,QAA3B,GAAsC,EADtC,cAEEA,WAFF,wBAE2BH,QAAQ,CAACU,GAFpC,qBAGAR,iBAAiB,CAACQ,GAHlB,CADJ;AAME,QAAA,MAAM,EAAC,QANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQGR,iBAAiB,CAACS,IARrB,CADF;AAaA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASL,QAAT,CADF,OAC+BX,EAAE,CAAC,WAAD,CADjC,OACiDc,IADjD,OACwDN,WADxD,EACqE,GADrE,EAEGR,EAAE,CAAC,MAAD,CAFL,SAEkBa,YAFlB,CADF;AAMD;;;6BAEQ;AAAA,UACCI,SADD,GACe,KAAKX,KAAL,CAAWD,QAD1B,CACCY,SADD;AAGP,aACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAW,KAAKC,aAAL,EAAX,CADF,EAEE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAEvB,KAAK,CAACsB,SAAD,CAAL,CAAiBE,MAAjB,CAAwB,MAAxB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGxB,KAAK,CAACsB,SAAD,CAAL,CAAiBE,MAAjB,CAAwB,eAAxB,CADH,CADF,CAFF,CADF;AAUD;;;;EAxDsBjB,KAAK,CAACkB,S;;AA2D/B,eAAehB,UAAf","sourcesContent":["import dayjs from 'dayjs';\nimport {\n  ActivityDate,\n  FlexBody,\n  FlexCenterContent\n} from 'modules/activityLogs/styles';\nimport { IActivityLog } from 'modules/activityLogs/types';\nimport Tip from 'modules/common/components/Tip';\nimport { __, renderUserFullName } from 'modules/common/utils';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  activity: IActivityLog;\n};\n\nclass ConvertLog extends React.Component<Props> {\n  renderContent() {\n    const { activity } = this.props;\n    const {\n      contentTypeDetail,\n      contentType,\n      content,\n      createdByDetail\n    } = activity;\n\n    let userName = 'Unknown';\n\n    if (createdByDetail && createdByDetail.type === 'user') {\n      userName = renderUserFullName(createdByDetail.content);\n    }\n\n    const conversation = (\n      <Link to={`/inbox/index?_id=${content}`} target=\"_blank\">\n        conversation\n      </Link>\n    );\n\n    const item = (\n      <Link\n        to={`${\n          contentType === 'ticket' ? '/inbox' : ''\n        }/${contentType}/board?_id=${activity._id}&itemId=${\n          contentTypeDetail._id\n        }`}\n        target=\"_blank\"\n      >\n        {contentTypeDetail.name}\n      </Link>\n    );\n\n    return (\n      <span>\n        <strong>{userName}</strong> {__('converted')} {item} {contentType}{' '}\n        {__('from')} a {conversation}\n      </span>\n    );\n  }\n\n  render() {\n    const { createdAt } = this.props.activity;\n\n    return (\n      <FlexCenterContent>\n        <FlexBody>{this.renderContent()}</FlexBody>\n        <Tip text={dayjs(createdAt).format('llll')}>\n          <ActivityDate>\n            {dayjs(createdAt).format('MMM D, h:mm A')}\n          </ActivityDate>\n        </Tip>\n      </FlexCenterContent>\n    );\n  }\n}\n\nexport default ConvertLog;\n"]},"metadata":{},"sourceType":"module"}