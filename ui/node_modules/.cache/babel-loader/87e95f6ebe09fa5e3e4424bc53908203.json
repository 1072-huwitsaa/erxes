{"ast":null,"code":"import _slicedToArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/knowledgeBase/components/article/ArticleRow.tsx\";\nimport dayjs from 'dayjs';\nimport Button from 'modules/common/components/Button';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Label from 'modules/common/components/Label';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport Tip from 'modules/common/components/Tip';\nimport { __, getUserAvatar } from 'modules/common/utils';\nimport React from 'react';\nimport ArticleForm from '../../containers/article/ArticleForm';\nimport { ActionButtons, ArticleColumn, ArticleMeta, ArticleTitle, AuthorName, ReactionCount, ReactionCounts, RowArticle } from './styles';\n\nvar ArticleRow = function ArticleRow(props) {\n  var article = props.article;\n  var user = article.createdUser;\n\n  var remove = function remove() {\n    return props.remove(props.article._id);\n  };\n\n  var renderReactions = function renderReactions() {\n    var reactions = Object.entries(props.article.reactionCounts || {});\n    return reactions.map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      return React.createElement(ReactionCount, {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: key,\n        alt: \"reaction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), \" \", value);\n    });\n  };\n\n  var renderEditAction = function renderEditAction(editTrigger) {\n    var queryParams = props.queryParams,\n        currentCategoryId = props.currentCategoryId,\n        topicIds = props.topicIds;\n    var editButton = React.createElement(Button, {\n      btnStyle: \"link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Tip, {\n      text: __('Edit'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: \"edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n\n    var content = function content(contentProps) {\n      return React.createElement(ArticleForm, Object.assign({}, contentProps, {\n        article: props.article,\n        queryParams: queryParams,\n        currentCategoryId: currentCategoryId,\n        topicIds: topicIds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    };\n\n    return React.createElement(ModalTrigger, {\n      size: \"lg\",\n      title: \"Edit\",\n      trigger: editTrigger ? editTrigger : editButton,\n      content: content,\n      enforceFocus: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n  };\n\n  var title = React.createElement(ArticleTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, article.title, article.status === 'draft' && React.createElement(Label, {\n    lblStyle: \"simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, article.status));\n  return React.createElement(RowArticle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(ArticleColumn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, renderEditAction(title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, article.summary), React.createElement(ArticleMeta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: user && user.details && user.details.fullName || 'author',\n    src: getUserAvatar(user),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), __('Written By'), React.createElement(AuthorName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, user && (user.details && user.details.fullName || user.username || user.email)), React.createElement(Icon, {\n    icon: \"clock-eight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), \" \", __('Created'), ' ', dayjs(article.createdDate).format('ll'), React.createElement(ReactionCounts, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, renderReactions()))), React.createElement(ActionButtons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, renderEditAction(''), React.createElement(Tip, {\n    text: __('Delete'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Button, {\n    btnStyle: \"link\",\n    onClick: remove,\n    icon: \"cancel-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }))));\n};\n\nexport default ArticleRow;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/knowledgeBase/components/article/ArticleRow.tsx"],"names":["dayjs","Button","Icon","Label","ModalTrigger","Tip","__","getUserAvatar","React","ArticleForm","ActionButtons","ArticleColumn","ArticleMeta","ArticleTitle","AuthorName","ReactionCount","ReactionCounts","RowArticle","ArticleRow","props","article","user","createdUser","remove","_id","renderReactions","reactions","Object","entries","reactionCounts","map","key","value","renderEditAction","editTrigger","queryParams","currentCategoryId","topicIds","editButton","content","contentProps","title","status","summary","details","fullName","username","email","createdDate","format"],"mappings":"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","sourcesContent":["import dayjs from 'dayjs';\nimport Button from 'modules/common/components/Button';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Label from 'modules/common/components/Label';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport Tip from 'modules/common/components/Tip';\nimport { __, getUserAvatar } from 'modules/common/utils';\nimport React from 'react';\nimport ArticleForm from '../../containers/article/ArticleForm';\nimport { IArticle } from '../../types';\nimport {\n  ActionButtons,\n  ArticleColumn,\n  ArticleMeta,\n  ArticleTitle,\n  AuthorName,\n  ReactionCount,\n  ReactionCounts,\n  RowArticle\n} from './styles';\n\ntype Props = {\n  article: IArticle;\n  queryParams: any;\n  currentCategoryId: string;\n  topicIds: string;\n  remove: (articleId: string) => void;\n};\n\nconst ArticleRow = (props: Props) => {\n  const { article } = props;\n  const user = article.createdUser;\n\n  const remove = () => {\n    return props.remove(props.article._id);\n  };\n\n  const renderReactions = () => {\n    const reactions = Object.entries(props.article.reactionCounts || {});\n\n    return reactions.map(([key, value]) => (\n      <ReactionCount key={key}>\n        <img src={key} alt=\"reaction\" /> {value}\n      </ReactionCount>\n    ));\n  };\n\n  const renderEditAction = editTrigger => {\n    const { queryParams, currentCategoryId, topicIds } = props;\n\n    const editButton = (\n      <Button btnStyle=\"link\">\n        <Tip text={__('Edit')}>\n          <Icon icon=\"edit\" />\n        </Tip>\n      </Button>\n    );\n\n    const content = contentProps => (\n      <ArticleForm\n        {...contentProps}\n        article={props.article}\n        queryParams={queryParams}\n        currentCategoryId={currentCategoryId}\n        topicIds={topicIds}\n      />\n    );\n\n    return (\n      <ModalTrigger\n        size=\"lg\"\n        title=\"Edit\"\n        trigger={editTrigger ? editTrigger : editButton}\n        content={content}\n        enforceFocus={false}\n      />\n    );\n  };\n\n  const title = (\n    <ArticleTitle>\n      {article.title}\n      {article.status === 'draft' && (\n        <Label lblStyle=\"simple\">{article.status}</Label>\n      )}\n    </ArticleTitle>\n  );\n\n  return (\n    <RowArticle>\n      <ArticleColumn>\n        {renderEditAction(title)}\n        <p>{article.summary}</p>\n        <ArticleMeta>\n          <img\n            alt={(user && user.details && user.details.fullName) || 'author'}\n            src={getUserAvatar(user)}\n          />\n          {__('Written By')}\n          <AuthorName>\n            {user &&\n              ((user.details && user.details.fullName) ||\n                user.username ||\n                user.email)}\n          </AuthorName>\n          <Icon icon=\"clock-eight\" /> {__('Created')}{' '}\n          {dayjs(article.createdDate).format('ll')}\n          <ReactionCounts>{renderReactions()}</ReactionCounts>\n        </ArticleMeta>\n      </ArticleColumn>\n      <ActionButtons>\n        {renderEditAction('')}\n        <Tip text={__('Delete')}>\n          <Button btnStyle=\"link\" onClick={remove} icon=\"cancel-1\" />\n        </Tip>\n      </ActionButtons>\n    </RowArticle>\n  );\n};\n\nexport default ArticleRow;\n"]},"metadata":{},"sourceType":"module"}