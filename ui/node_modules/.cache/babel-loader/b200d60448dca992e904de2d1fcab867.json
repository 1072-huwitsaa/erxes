{"ast":null,"code":"var _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/portable/ConvertTrigger.tsx\";\nimport AddForm from 'modules/boards/containers/portable/AddForm';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport React from 'react';\nexport default (function (props) {\n  var relType = props.relType,\n      relTypeIds = props.relTypeIds,\n      options = props.options,\n      refetch = props.refetch,\n      assignedUserIds = props.assignedUserIds,\n      sourceConversationId = props.sourceConversationId,\n      title = props.title,\n      url = props.url,\n      type = props.type,\n      description = props.description,\n      attachments = props.attachments;\n\n  if (url) {\n    return React.createElement(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, title);\n  }\n\n  var trigger = React.createElement(\"a\", {\n    href: \"#title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, title);\n\n  var content = function content(formProps) {\n    return React.createElement(AddForm, Object.assign({\n      options: options\n    }, formProps, {\n      type: type,\n      description: description,\n      attachments: attachments,\n      refetch: refetch,\n      relType: relType,\n      relTypeIds: relTypeIds,\n      assignedUserIds: assignedUserIds,\n      sourceConversationId: sourceConversationId,\n      showSelect: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(ModalTrigger, {\n    title: title,\n    trigger: trigger,\n    content: content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/portable/ConvertTrigger.tsx"],"names":["AddForm","ModalTrigger","React","props","relType","relTypeIds","options","refetch","assignedUserIds","sourceConversationId","title","url","type","description","attachments","trigger","content","formProps"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,4CAApB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAiBA,gBAAe,UAACC,KAAD,EAAkB;AAAA,MAE7BC,OAF6B,GAa3BD,KAb2B,CAE7BC,OAF6B;AAAA,MAG7BC,UAH6B,GAa3BF,KAb2B,CAG7BE,UAH6B;AAAA,MAI7BC,OAJ6B,GAa3BH,KAb2B,CAI7BG,OAJ6B;AAAA,MAK7BC,OAL6B,GAa3BJ,KAb2B,CAK7BI,OAL6B;AAAA,MAM7BC,eAN6B,GAa3BL,KAb2B,CAM7BK,eAN6B;AAAA,MAO7BC,oBAP6B,GAa3BN,KAb2B,CAO7BM,oBAP6B;AAAA,MAQ7BC,KAR6B,GAa3BP,KAb2B,CAQ7BO,KAR6B;AAAA,MAS7BC,GAT6B,GAa3BR,KAb2B,CAS7BQ,GAT6B;AAAA,MAU7BC,IAV6B,GAa3BT,KAb2B,CAU7BS,IAV6B;AAAA,MAW7BC,WAX6B,GAa3BV,KAb2B,CAW7BU,WAX6B;AAAA,MAY7BC,WAZ6B,GAa3BX,KAb2B,CAY7BW,WAZ6B;;AAe/B,MAAIH,GAAJ,EAAS;AACP,WACE;AAAG,MAAA,MAAM,EAAC,QAAV;AAAmB,MAAA,GAAG,EAAC,qBAAvB;AAA6C,MAAA,IAAI,EAAEA,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KADH,CADF;AAKD;;AAED,MAAMK,OAAO,GAAG;AAAG,IAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBL,KAAlB,CAAhB;;AAEA,MAAMM,OAAO,GAAG,SAAVA,OAAU,CAAAC,SAAS;AAAA,WACvB,oBAAC,OAAD;AACE,MAAA,OAAO,EAAEX;AADX,OAEMW,SAFN;AAGE,MAAA,IAAI,EAAEL,IAHR;AAIE,MAAA,WAAW,EAAEC,WAJf;AAKE,MAAA,WAAW,EAAEC,WALf;AAME,MAAA,OAAO,EAAEP,OANX;AAOE,MAAA,OAAO,EAAEH,OAPX;AAQE,MAAA,UAAU,EAAEC,UARd;AASE,MAAA,eAAe,EAAEG,eATnB;AAUE,MAAA,oBAAoB,EAAEC,oBAVxB;AAWE,MAAA,UAAU,EAAE,IAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADuB;AAAA,GAAzB;;AAgBA,SAAO,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,KAArB;AAA4B,IAAA,OAAO,EAAEK,OAArC;AAA8C,IAAA,OAAO,EAAEC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA1CD","sourcesContent":["import AddForm from 'modules/boards/containers/portable/AddForm';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport React from 'react';\nimport { IOptions } from '../../types';\n\ntype Props = {\n  relType: string;\n  relTypeIds?: string[];\n  assignedUserIds?: string[];\n  options: IOptions;\n  refetch: () => void;\n  sourceConversationId?: string;\n  title: string;\n  url?: string;\n  type?: string;\n  description?: string;\n  attachments?: any[];\n};\n\nexport default (props: Props) => {\n  const {\n    relType,\n    relTypeIds,\n    options,\n    refetch,\n    assignedUserIds,\n    sourceConversationId,\n    title,\n    url,\n    type,\n    description,\n    attachments\n  } = props;\n\n  if (url) {\n    return (\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n        {title}\n      </a>\n    );\n  }\n\n  const trigger = <a href=\"#title\">{title}</a>;\n\n  const content = formProps => (\n    <AddForm\n      options={options}\n      {...formProps}\n      type={type}\n      description={description}\n      attachments={attachments}\n      refetch={refetch}\n      relType={relType}\n      relTypeIds={relTypeIds}\n      assignedUserIds={assignedUserIds}\n      sourceConversationId={sourceConversationId}\n      showSelect={true}\n    />\n  );\n\n  return <ModalTrigger title={title} trigger={trigger} content={content} />;\n};\n"]},"metadata":{},"sourceType":"module"}