{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/containers/Pipeline.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 100%;\\n  display: inline-flex;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Spinner from 'modules/common/components/Spinner';\nimport { withProps } from 'modules/common/utils';\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { queries } from '../graphql';\nimport { PipelineConsumer, PipelineProvider } from './PipelineContext';\nimport Stage from './Stage';\nvar Container = styled.div(_templateObject());\n\nvar WithStages =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WithStages, _Component);\n\n  function WithStages() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WithStages);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WithStages)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.queryParamsChanged = function (queryParams, nextQueryParams) {\n      if (nextQueryParams.itemId || !queryParams.key && queryParams.itemId) {\n        return false;\n      }\n\n      if (queryParams !== nextQueryParams) {\n        return true;\n      }\n\n      return false;\n    };\n\n    return _this;\n  }\n\n  _createClass(WithStages, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          stagesQuery = _this$props.stagesQuery,\n          queryParams = _this$props.queryParams;\n      var pipelineId = queryParams.pipelineId;\n\n      if (this.queryParamsChanged(queryParams, nextProps.queryParams)) {\n        stagesQuery.refetch({\n          pipelineId: pipelineId\n        });\n      }\n    }\n  }, {\n    key: \"countStages\",\n    value: function countStages(obj) {\n      return Object.keys(obj).length;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          initialItemMap = _this$props2.initialItemMap,\n          pipeline = _this$props2.pipeline,\n          stageMap = _this$props2.stageMap,\n          options = _this$props2.options,\n          queryParams = _this$props2.queryParams,\n          stagesQuery = _this$props2.stagesQuery;\n      var stagesCount = this.countStages(stageMap);\n\n      if (stagesCount === 0) {\n        return React.createElement(EmptyState, {\n          image: \"/images/actions/8.svg\",\n          text: \"No stage in this pipeline\",\n          size: \"small\",\n          light: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(PipelineProvider, {\n        pipeline: pipeline,\n        initialItemMap: initialItemMap,\n        queryParams: queryParams,\n        options: options,\n        queryParamsChanged: this.queryParamsChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(PipelineConsumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, function (_ref) {\n        var stageLoadMap = _ref.stageLoadMap,\n            itemMap = _ref.itemMap,\n            onDragEnd = _ref.onDragEnd,\n            stageIds = _ref.stageIds,\n            scheduleStage = _ref.scheduleStage,\n            onLoadStage = _ref.onLoadStage,\n            onAddItem = _ref.onAddItem,\n            onRemoveItem = _ref.onRemoveItem;\n        return React.createElement(DragDropContext, {\n          onDragEnd: onDragEnd,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(Droppable, {\n          droppableId: \"pipeline\",\n          type: \"STAGE\",\n          direction: \"horizontal\",\n          ignoreContainerClipping: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, function (provided) {\n          return React.createElement(Container, Object.assign({\n            innerRef: provided.innerRef\n          }, provided.droppableProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }), stageIds.map(function (stageId, index) {\n            var stage = stageMap && stageMap[stageId];\n\n            if (!stage) {\n              return null;\n            }\n\n            return React.createElement(Stage, {\n              options: options,\n              key: stageId,\n              index: index,\n              length: stagesCount,\n              stage: stage,\n              items: itemMap[stageId],\n              queryParams: queryParams,\n              loadingState: stageLoadMap[stageId],\n              refetchStages: stagesQuery.refetch,\n              scheduleStage: scheduleStage,\n              onLoad: onLoadStage,\n              onAddItem: onAddItem,\n              onRemoveItem: onRemoveItem,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124\n              },\n              __self: this\n            });\n          }), provided.placeholder);\n        }));\n      }));\n    }\n  }]);\n\n  return WithStages;\n}(Component);\n\nvar WithStagesQuery = function WithStagesQuery(props) {\n  var stagesQuery = props.stagesQuery;\n\n  if (stagesQuery.loading) {\n    return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    });\n  }\n\n  var stages = stagesQuery.stages || [];\n  var itemMap = {};\n  var stageMap = {};\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = stages[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var stage = _step.value;\n      itemMap[stage._id] = [];\n      stageMap[stage._id] = stage;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return React.createElement(WithStages, Object.assign({}, props, {\n    stageMap: stageMap,\n    initialItemMap: itemMap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }));\n};\n\nexport default withProps(compose(graphql(gql(queries.stages), {\n  name: 'stagesQuery',\n  options: function options(_ref2) {\n    var pipeline = _ref2.pipeline,\n        queryParams = _ref2.queryParams,\n        getExtraParams = _ref2.options.getExtraParams;\n    return {\n      variables: {\n        pipelineId: pipeline._id,\n        search: queryParams.search,\n        customerIds: queryParams.customerIds,\n        companyIds: queryParams.companyIds,\n        assignedUserIds: queryParams.assignedUserIds,\n        labelIds: queryParams.labelIds,\n        extraParams: getExtraParams(queryParams),\n        closeDateType: queryParams.closeDateType,\n        userIds: queryParams.userIds\n      }\n    };\n  }\n}))(withRouter(WithStagesQuery)));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/containers/Pipeline.tsx"],"names":["gql","compose","EmptyState","Spinner","withProps","React","Component","graphql","DragDropContext","Droppable","withRouter","styled","queries","PipelineConsumer","PipelineProvider","Stage","Container","div","WithStages","queryParamsChanged","queryParams","nextQueryParams","itemId","key","nextProps","props","stagesQuery","pipelineId","refetch","obj","Object","keys","length","initialItemMap","pipeline","stageMap","options","stagesCount","countStages","stageLoadMap","itemMap","onDragEnd","stageIds","scheduleStage","onLoadStage","onAddItem","onRemoveItem","provided","innerRef","droppableProps","map","stageId","index","stage","placeholder","WithStagesQuery","loading","stages","_id","name","getExtraParams","variables","search","customerIds","companyIds","assignedUserIds","labelIds","extraParams","closeDateType","userIds"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AAEA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,qBAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,YAAxB;AAQA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,mBAAnD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,IAAMC,SAAS,GAAGL,MAAM,CAACM,GAAV,mBAAf;;IAaMC,U;;;;;;;;;;;;;;;;;;UAUJC,kB,GAAqB,UAACC,WAAD,EAAmBC,eAAnB,EAA4C;AAC/D,UAAIA,eAAe,CAACC,MAAhB,IAA2B,CAACF,WAAW,CAACG,GAAb,IAAoBH,WAAW,CAACE,MAA/D,EAAwE;AACtE,eAAO,KAAP;AACD;;AAED,UAAIF,WAAW,KAAKC,eAApB,EAAqC;AACnC,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD,K;;;;;;;8CAnByBG,S,EAAkB;AAAA,wBACL,KAAKC,KADA;AAAA,UAClCC,WADkC,eAClCA,WADkC;AAAA,UACrBN,WADqB,eACrBA,WADqB;AAAA,UAElCO,UAFkC,GAEnBP,WAFmB,CAElCO,UAFkC;;AAI1C,UAAI,KAAKR,kBAAL,CAAwBC,WAAxB,EAAqCI,SAAS,CAACJ,WAA/C,CAAJ,EAAiE;AAC/DM,QAAAA,WAAW,CAACE,OAAZ,CAAoB;AAAED,UAAAA,UAAU,EAAVA;AAAF,SAApB;AACD;AACF;;;gCAcWE,G,EAAK;AACf,aAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,MAAxB;AACD;;;6BAEQ;AAAA,yBAQH,KAAKP,KARF;AAAA,UAELQ,cAFK,gBAELA,cAFK;AAAA,UAGLC,QAHK,gBAGLA,QAHK;AAAA,UAILC,QAJK,gBAILA,QAJK;AAAA,UAKLC,OALK,gBAKLA,OALK;AAAA,UAMLhB,WANK,gBAMLA,WANK;AAAA,UAOLM,WAPK,gBAOLA,WAPK;AAUP,UAAMW,WAAW,GAAG,KAAKC,WAAL,CAAiBH,QAAjB,CAApB;;AAEA,UAAIE,WAAW,KAAK,CAApB,EAAuB;AACrB,eACE,oBAAC,UAAD;AACE,UAAA,KAAK,EAAC,uBADR;AAEE,UAAA,IAAI,EAAC,2BAFP;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,KAAK,EAAE,IAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,aACE,oBAAC,gBAAD;AACE,QAAA,QAAQ,EAAEH,QADZ;AAEE,QAAA,cAAc,EAAED,cAFlB;AAGE,QAAA,WAAW,EAAEb,WAHf;AAIE,QAAA,OAAO,EAAEgB,OAJX;AAKE,QAAA,kBAAkB,EAAE,KAAKjB,kBAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA,YACCoB,YADD,QACCA,YADD;AAAA,YAECC,OAFD,QAECA,OAFD;AAAA,YAGCC,SAHD,QAGCA,SAHD;AAAA,YAICC,QAJD,QAICA,QAJD;AAAA,YAKCC,aALD,QAKCA,aALD;AAAA,YAMCC,WAND,QAMCA,WAND;AAAA,YAOCC,SAPD,QAOCA,SAPD;AAAA,YAQCC,YARD,QAQCA,YARD;AAAA,eAUC,oBAAC,eAAD;AAAiB,UAAA,SAAS,EAAEL,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AACE,UAAA,WAAW,EAAC,UADd;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,SAAS,EAAC,YAHZ;AAIE,UAAA,uBAAuB,EAAE,IAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMG,UAAAM,QAAQ;AAAA,iBACP,oBAAC,SAAD;AACE,YAAA,QAAQ,EAAEA,QAAQ,CAACC;AADrB,aAEMD,QAAQ,CAACE,cAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAIGP,QAAQ,CAACQ,GAAT,CAAa,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAChC,gBAAMC,KAAK,GAAGlB,QAAQ,IAAIA,QAAQ,CAACgB,OAAD,CAAlC;;AAEA,gBAAI,CAACE,KAAL,EAAY;AACV,qBAAO,IAAP;AACD;;AAED,mBACE,oBAAC,KAAD;AACE,cAAA,OAAO,EAAEjB,OADX;AAEE,cAAA,GAAG,EAAEe,OAFP;AAGE,cAAA,KAAK,EAAEC,KAHT;AAIE,cAAA,MAAM,EAAEf,WAJV;AAKE,cAAA,KAAK,EAAEgB,KALT;AAME,cAAA,KAAK,EAAEb,OAAO,CAACW,OAAD,CANhB;AAOE,cAAA,WAAW,EAAE/B,WAPf;AAQE,cAAA,YAAY,EAAEmB,YAAY,CAACY,OAAD,CAR5B;AASE,cAAA,aAAa,EAAEzB,WAAW,CAACE,OAT7B;AAUE,cAAA,aAAa,EAAEe,aAVjB;AAWE,cAAA,MAAM,EAAEC,WAXV;AAYE,cAAA,SAAS,EAAEC,SAZb;AAaE,cAAA,YAAY,EAAEC,YAbhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAiBD,WAxBA,CAJH,EA6BGC,QAAQ,CAACO,WA7BZ,CADO;AAAA,SANX,CADF,CAVD;AAAA,OADH,CAPF,CADF;AAiED;;;;EAlHsBhD,S;;AA0HzB,IAAMiD,eAAe,GAAG,SAAlBA,eAAkB,CAAC9B,KAAD,EAAiC;AAAA,MAC/CC,WAD+C,GAC/BD,KAD+B,CAC/CC,WAD+C;;AAGvD,MAAIA,WAAW,CAAC8B,OAAhB,EAAyB;AACvB,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAMC,MAAM,GAAG/B,WAAW,CAAC+B,MAAZ,IAAsB,EAArC;AAEA,MAAMjB,OAAiB,GAAG,EAA1B;AACA,MAAML,QAAmB,GAAG,EAA5B;AAVuD;AAAA;AAAA;;AAAA;AAYvD,yBAAoBsB,MAApB,8HAA4B;AAAA,UAAjBJ,KAAiB;AAC1Bb,MAAAA,OAAO,CAACa,KAAK,CAACK,GAAP,CAAP,GAAqB,EAArB;AACAvB,MAAAA,QAAQ,CAACkB,KAAK,CAACK,GAAP,CAAR,GAAsBL,KAAtB;AACD;AAfsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBvD,SAAO,oBAAC,UAAD,oBAAgB5B,KAAhB;AAAuB,IAAA,QAAQ,EAAEU,QAAjC;AAA2C,IAAA,cAAc,EAAEK,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAlBD;;AAoBA,eAAepC,SAAS,CACtBH,OAAO,CACLM,OAAO,CAA6BP,GAAG,CAACY,OAAO,CAAC6C,MAAT,CAAhC,EAAkD;AACvDE,EAAAA,IAAI,EAAE,aADiD;AAEvDvB,EAAAA,OAAO,EAAE;AAAA,QAAGF,QAAH,SAAGA,QAAH;AAAA,QAAad,WAAb,SAAaA,WAAb;AAAA,QAAqCwC,cAArC,SAA0BxB,OAA1B,CAAqCwB,cAArC;AAAA,WAA6D;AACpEC,MAAAA,SAAS,EAAE;AACTlC,QAAAA,UAAU,EAAEO,QAAQ,CAACwB,GADZ;AAETI,QAAAA,MAAM,EAAE1C,WAAW,CAAC0C,MAFX;AAGTC,QAAAA,WAAW,EAAE3C,WAAW,CAAC2C,WAHhB;AAITC,QAAAA,UAAU,EAAE5C,WAAW,CAAC4C,UAJf;AAKTC,QAAAA,eAAe,EAAE7C,WAAW,CAAC6C,eALpB;AAMTC,QAAAA,QAAQ,EAAE9C,WAAW,CAAC8C,QANb;AAOTC,QAAAA,WAAW,EAAEP,cAAc,CAACxC,WAAD,CAPlB;AAQTgD,QAAAA,aAAa,EAAEhD,WAAW,CAACgD,aARlB;AASTC,QAAAA,OAAO,EAAEjD,WAAW,CAACiD;AATZ;AADyD,KAA7D;AAAA;AAF8C,CAAlD,CADF,CAAP,CAiBE3D,UAAU,CAAC6C,eAAD,CAjBZ,CADsB,CAAxB","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Spinner from 'modules/common/components/Spinner';\nimport { IRouterProps } from 'modules/common/types';\nimport { withProps } from 'modules/common/utils';\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { queries } from '../graphql';\nimport {\n  IItemMap,\n  IOptions,\n  IPipeline,\n  IStageMap,\n  StagesQueryResponse\n} from '../types';\nimport { PipelineConsumer, PipelineProvider } from './PipelineContext';\nimport Stage from './Stage';\n\nconst Container = styled.div`\n  height: 100%;\n  display: inline-flex;\n`;\n\ntype Props = {\n  pipeline: IPipeline;\n  initialItemMap?: IItemMap;\n  stageMap?: IStageMap;\n  queryParams: any;\n  options: IOptions;\n};\n\nclass WithStages extends Component<WithStagesQueryProps> {\n  componentWillReceiveProps(nextProps: Props) {\n    const { stagesQuery, queryParams } = this.props;\n    const { pipelineId } = queryParams;\n\n    if (this.queryParamsChanged(queryParams, nextProps.queryParams)) {\n      stagesQuery.refetch({ pipelineId });\n    }\n  }\n\n  queryParamsChanged = (queryParams: any, nextQueryParams: any) => {\n    if (nextQueryParams.itemId || (!queryParams.key && queryParams.itemId)) {\n      return false;\n    }\n\n    if (queryParams !== nextQueryParams) {\n      return true;\n    }\n\n    return false;\n  };\n\n  countStages(obj) {\n    return Object.keys(obj).length;\n  }\n\n  render() {\n    const {\n      initialItemMap,\n      pipeline,\n      stageMap,\n      options,\n      queryParams,\n      stagesQuery\n    } = this.props;\n\n    const stagesCount = this.countStages(stageMap);\n\n    if (stagesCount === 0) {\n      return (\n        <EmptyState\n          image=\"/images/actions/8.svg\"\n          text=\"No stage in this pipeline\"\n          size=\"small\"\n          light={true}\n        />\n      );\n    }\n\n    return (\n      <PipelineProvider\n        pipeline={pipeline}\n        initialItemMap={initialItemMap}\n        queryParams={queryParams}\n        options={options}\n        queryParamsChanged={this.queryParamsChanged}\n      >\n        <PipelineConsumer>\n          {({\n            stageLoadMap,\n            itemMap,\n            onDragEnd,\n            stageIds,\n            scheduleStage,\n            onLoadStage,\n            onAddItem,\n            onRemoveItem\n          }) => (\n            <DragDropContext onDragEnd={onDragEnd}>\n              <Droppable\n                droppableId=\"pipeline\"\n                type=\"STAGE\"\n                direction=\"horizontal\"\n                ignoreContainerClipping={true}\n              >\n                {provided => (\n                  <Container\n                    innerRef={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    {stageIds.map((stageId, index) => {\n                      const stage = stageMap && stageMap[stageId];\n\n                      if (!stage) {\n                        return null;\n                      }\n\n                      return (\n                        <Stage\n                          options={options}\n                          key={stageId}\n                          index={index}\n                          length={stagesCount}\n                          stage={stage}\n                          items={itemMap[stageId]}\n                          queryParams={queryParams}\n                          loadingState={stageLoadMap[stageId]}\n                          refetchStages={stagesQuery.refetch}\n                          scheduleStage={scheduleStage}\n                          onLoad={onLoadStage}\n                          onAddItem={onAddItem}\n                          onRemoveItem={onRemoveItem}\n                        />\n                      );\n                    })}\n                    {provided.placeholder}\n                  </Container>\n                )}\n              </Droppable>\n            </DragDropContext>\n          )}\n        </PipelineConsumer>\n      </PipelineProvider>\n    );\n  }\n}\n\ntype WithStagesQueryProps = {\n  stagesQuery: StagesQueryResponse;\n} & IRouterProps &\n  Props;\n\nconst WithStagesQuery = (props: WithStagesQueryProps) => {\n  const { stagesQuery } = props;\n\n  if (stagesQuery.loading) {\n    return <Spinner />;\n  }\n\n  const stages = stagesQuery.stages || [];\n\n  const itemMap: IItemMap = {};\n  const stageMap: IStageMap = {};\n\n  for (const stage of stages) {\n    itemMap[stage._id] = [];\n    stageMap[stage._id] = stage;\n  }\n\n  return <WithStages {...props} stageMap={stageMap} initialItemMap={itemMap} />;\n};\n\nexport default withProps<Props>(\n  compose(\n    graphql<Props, StagesQueryResponse>(gql(queries.stages), {\n      name: 'stagesQuery',\n      options: ({ pipeline, queryParams, options: { getExtraParams } }) => ({\n        variables: {\n          pipelineId: pipeline._id,\n          search: queryParams.search,\n          customerIds: queryParams.customerIds,\n          companyIds: queryParams.companyIds,\n          assignedUserIds: queryParams.assignedUserIds,\n          labelIds: queryParams.labelIds,\n          extraParams: getExtraParams(queryParams),\n          closeDateType: queryParams.closeDateType,\n          userIds: queryParams.userIds\n        }\n      })\n    })\n  )(withRouter(WithStagesQuery))\n);\n"]},"metadata":{},"sourceType":"module"}