{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/companies/containers/CompanyForm.tsx\";\nimport { AppConsumer } from 'appContext';\nimport ButtonMutate from 'modules/common/components/ButtonMutate';\nimport React from 'react';\nimport CompanyForm from '../components/list/CompanyForm';\nimport { mutations, queries } from '../graphql';\n\nvar CompanyFromContainer = function CompanyFromContainer(props) {\n  var renderButton = function renderButton(_ref) {\n    var name = _ref.name,\n        values = _ref.values,\n        isSubmitted = _ref.isSubmitted,\n        object = _ref.object;\n    var closeModal = props.closeModal,\n        getAssociatedCompany = props.getAssociatedCompany;\n\n    var afterSave = function afterSave(data) {\n      closeModal();\n\n      if (getAssociatedCompany) {\n        getAssociatedCompany(data.companiesAdd);\n      }\n    };\n\n    return React.createElement(ButtonMutate, {\n      mutation: object ? mutations.companiesEdit : mutations.companiesAdd,\n      variables: values,\n      callback: afterSave,\n      refetchQueries: getRefetchQueries(),\n      isSubmitted: isSubmitted,\n      type: \"submit\",\n      successMessage: \"You successfully \".concat(object ? 'updated' : 'added', \" a \").concat(name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  };\n\n  var updatedProps = _objectSpread({}, props, {\n    renderButton: renderButton\n  });\n\n  return React.createElement(AppConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, function (_ref2) {\n    var currentUser = _ref2.currentUser;\n    return React.createElement(CompanyForm, Object.assign({}, updatedProps, {\n      currentUser: currentUser || {},\n      autoCompletionQuery: queries.companies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  });\n};\n\nvar getRefetchQueries = function getRefetchQueries() {\n  return ['companiesMain', 'companyDetail', // companies for customer detail company associate\n  'companies', 'companyCounts'];\n};\n\nexport default CompanyFromContainer;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/companies/containers/CompanyForm.tsx"],"names":["AppConsumer","ButtonMutate","React","CompanyForm","mutations","queries","CompanyFromContainer","props","renderButton","name","values","isSubmitted","object","closeModal","getAssociatedCompany","afterSave","data","companiesAdd","companiesEdit","getRefetchQueries","updatedProps","currentUser","companies"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,YAAnC;;AAcA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAuB;AAClD,MAAMC,YAAY,GAAG,SAAfA,YAAe,OAKK;AAAA,QAJxBC,IAIwB,QAJxBA,IAIwB;AAAA,QAHxBC,MAGwB,QAHxBA,MAGwB;AAAA,QAFxBC,WAEwB,QAFxBA,WAEwB;AAAA,QADxBC,MACwB,QADxBA,MACwB;AAAA,QAChBC,UADgB,GACqBN,KADrB,CAChBM,UADgB;AAAA,QACJC,oBADI,GACqBP,KADrB,CACJO,oBADI;;AAGxB,QAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,IAAI,EAAI;AACxBH,MAAAA,UAAU;;AAEV,UAAIC,oBAAJ,EAA0B;AACxBA,QAAAA,oBAAoB,CAACE,IAAI,CAACC,YAAN,CAApB;AACD;AACF,KAND;;AAQA,WACE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAEL,MAAM,GAAGR,SAAS,CAACc,aAAb,GAA6Bd,SAAS,CAACa,YADzD;AAEE,MAAA,SAAS,EAAEP,MAFb;AAGE,MAAA,QAAQ,EAAEK,SAHZ;AAIE,MAAA,cAAc,EAAEI,iBAAiB,EAJnC;AAKE,MAAA,WAAW,EAAER,WALf;AAME,MAAA,IAAI,EAAC,QANP;AAOE,MAAA,cAAc,6BACZC,MAAM,GAAG,SAAH,GAAe,OADT,gBAERH,IAFQ,CAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAaD,GA7BD;;AA+BA,MAAMW,YAAY,qBACbb,KADa;AAEhBC,IAAAA,YAAY,EAAZA;AAFgB,IAAlB;;AAKA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGa,WAAH,SAAGA,WAAH;AAAA,WACC,oBAAC,WAAD,oBACMD,YADN;AAEE,MAAA,WAAW,EAAEC,WAAW,IAAK,EAF/B;AAGE,MAAA,mBAAmB,EAAEhB,OAAO,CAACiB,SAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD;AAAA,GADH,CADF;AAWD,CAhDD;;AAkDA,IAAMH,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,SAAO,CACL,eADK,EAEL,eAFK,EAGL;AACA,aAJK,EAKL,eALK,CAAP;AAOD,CARD;;AAUA,eAAeb,oBAAf","sourcesContent":["import { AppConsumer } from 'appContext';\nimport ButtonMutate from 'modules/common/components/ButtonMutate';\nimport { IButtonMutateProps } from 'modules/common/types';\nimport React from 'react';\nimport { IUser } from '../../auth/types';\nimport { UsersQueryResponse } from '../../settings/team/types';\nimport CompanyForm from '../components/list/CompanyForm';\nimport { mutations, queries } from '../graphql';\nimport { ICompany } from '../types';\n\ntype Props = {\n  company: ICompany;\n  getAssociatedCompany?: (companyId: string) => void;\n  closeModal: () => void;\n};\n\ntype FinalProps = {\n  usersQuery: UsersQueryResponse;\n  currentUser: IUser;\n} & Props;\n\nconst CompanyFromContainer = (props: FinalProps) => {\n  const renderButton = ({\n    name,\n    values,\n    isSubmitted,\n    object\n  }: IButtonMutateProps) => {\n    const { closeModal, getAssociatedCompany } = props;\n\n    const afterSave = data => {\n      closeModal();\n\n      if (getAssociatedCompany) {\n        getAssociatedCompany(data.companiesAdd);\n      }\n    };\n\n    return (\n      <ButtonMutate\n        mutation={object ? mutations.companiesEdit : mutations.companiesAdd}\n        variables={values}\n        callback={afterSave}\n        refetchQueries={getRefetchQueries()}\n        isSubmitted={isSubmitted}\n        type=\"submit\"\n        successMessage={`You successfully ${\n          object ? 'updated' : 'added'\n        } a ${name}`}\n      />\n    );\n  };\n\n  const updatedProps = {\n    ...props,\n    renderButton\n  };\n\n  return (\n    <AppConsumer>\n      {({ currentUser }) => (\n        <CompanyForm\n          {...updatedProps}\n          currentUser={currentUser || ({} as IUser)}\n          autoCompletionQuery={queries.companies}\n        />\n      )}\n    </AppConsumer>\n  );\n};\n\nconst getRefetchQueries = () => {\n  return [\n    'companiesMain',\n    'companyDetail',\n    // companies for customer detail company associate\n    'companies',\n    'companyCounts'\n  ];\n};\n\nexport default CompanyFromContainer;\n"]},"metadata":{},"sourceType":"module"}