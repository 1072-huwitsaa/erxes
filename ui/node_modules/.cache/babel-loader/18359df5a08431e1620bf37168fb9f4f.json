{"ast":null,"code":"import _toConsumableArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/segments/components/SidebarFilter.tsx\";\nimport Box from 'modules/common/components/Box';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport DropdownToggle from 'modules/common/components/DropdownToggle';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { __ } from 'modules/common/utils';\nimport { FieldStyle, SidebarCounter, SidebarList } from 'modules/layout/styles';\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Link } from 'react-router-dom';\n\nvar Segments =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Segments, _React$Component);\n\n  function Segments() {\n    _classCallCheck(this, Segments);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Segments).apply(this, arguments));\n  }\n\n  _createClass(Segments, [{\n    key: \"renderCancelBtn\",\n    value: function renderCancelBtn() {\n      var _this$props = this.props,\n          currentSegment = _this$props.currentSegment,\n          removeSegment = _this$props.removeSegment;\n\n      if (!currentSegment) {\n        return null;\n      }\n\n      return React.createElement(\"a\", {\n        href: \"#cancel\",\n        tabIndex: 0,\n        onClick: removeSegment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"times-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderQuickBtns\",\n    value: function renderQuickBtns() {\n      var contentType = this.props.contentType;\n      return React.createElement(React.Fragment, null, React.createElement(Dropdown, {\n        alignRight: true,\n        style: {\n          float: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        as: DropdownToggle,\n        id: \"dropdown-manage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        id: \"contacts-segments-settings\",\n        href: \"#settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"cog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }))), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        id: 'SegmentsNewPage',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/segments/new/\".concat(contentType),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __('New segment'))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/segments/\".concat(contentType),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, __('Manage segments'))))), this.renderCancelBtn());\n    }\n  }, {\n    key: \"onSegmentClick\",\n    value: function onSegmentClick(segmentId) {\n      var setSegment = this.props.setSegment;\n      setSegment(segmentId);\n    }\n  }, {\n    key: \"renderData\",\n    value: function renderData() {\n      var _this = this;\n\n      var _this$props2 = this.props,\n          counts = _this$props2.counts,\n          segments = _this$props2.segments,\n          currentSegment = _this$props2.currentSegment;\n      var orderedSegments = [];\n      segments.forEach(function (segment) {\n        if (!segment.subOf) {\n          orderedSegments.push.apply(orderedSegments, [segment].concat(_toConsumableArray(segment.getSubSegments)));\n        }\n      });\n      return React.createElement(SidebarList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, orderedSegments.map(function (segment) {\n        return React.createElement(\"li\", {\n          key: segment._id,\n          className: segment.subOf ? 'child-segment' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#active\",\n          tabIndex: 0,\n          className: currentSegment === segment._id ? 'active' : '',\n          onClick: _this.onSegmentClick.bind(_this, segment._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, segment.subOf ? \"\\xA0\\xA0\" : null, React.createElement(Icon, {\n          icon: \"chart-pie\",\n          style: {\n            color: segment.color,\n            marginRight: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }), ' ', React.createElement(FieldStyle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, segment.name), React.createElement(SidebarCounter, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, counts[segment._id])));\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          segments = _this$props3.segments,\n          loading = _this$props3.loading;\n      var extraButtons = this.renderQuickBtns();\n      return React.createElement(Box, {\n        title: __('Filter by segments'),\n        extraButtons: extraButtons,\n        collapsible: segments.length > 7,\n        isOpen: true,\n        name: \"showFilterBySegments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(DataWithLoader, {\n        data: this.renderData(),\n        loading: loading,\n        count: segments.length,\n        emptyText: \"Open\\xA0segments\\xA0and\\xA0starting\\xA0add\\xA0details\",\n        emptyIcon: \"chart-pie\",\n        size: \"small\",\n        objective: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Segments;\n}(React.Component);\n\nexport default Segments;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/segments/components/SidebarFilter.tsx"],"names":["Box","DataWithLoader","DropdownToggle","Icon","__","FieldStyle","SidebarCounter","SidebarList","React","Dropdown","Link","Segments","props","currentSegment","removeSegment","contentType","float","renderCancelBtn","segmentId","setSegment","counts","segments","orderedSegments","forEach","segment","subOf","push","getSubSegments","map","_id","onSegmentClick","bind","color","marginRight","name","loading","extraButtons","renderQuickBtns","length","renderData","Component"],"mappings":"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","sourcesContent":["import Box from 'modules/common/components/Box';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport DropdownToggle from 'modules/common/components/DropdownToggle';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { __ } from 'modules/common/utils';\nimport { FieldStyle, SidebarCounter, SidebarList } from 'modules/layout/styles';\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Link } from 'react-router-dom';\nimport { ISegment } from '../types';\n\ntype Props = {\n  currentSegment?: string;\n  setSegment: (segmentId: string) => void;\n  removeSegment: () => void;\n  contentType?: string;\n  counts?: any;\n  segments: ISegment[];\n  loading: boolean;\n};\n\nclass Segments extends React.Component<Props> {\n  renderCancelBtn() {\n    const { currentSegment, removeSegment } = this.props;\n\n    if (!currentSegment) {\n      return null;\n    }\n\n    return (\n      <a href=\"#cancel\" tabIndex={0} onClick={removeSegment}>\n        <Icon icon=\"times-circle\" />\n      </a>\n    );\n  }\n\n  renderQuickBtns() {\n    const { contentType } = this.props;\n\n    return (\n      <>\n        <Dropdown alignRight={true} style={{ float: 'left' }}>\n          <Dropdown.Toggle as={DropdownToggle} id=\"dropdown-manage\">\n            <a id=\"contacts-segments-settings\" href=\"#settings\">\n              <Icon icon=\"cog\" />\n            </a>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <li id={'SegmentsNewPage'}>\n              <Link to={`/segments/new/${contentType}`}>\n                {__('New segment')}\n              </Link>\n            </li>\n            <li>\n              <Link to={`/segments/${contentType}`}>\n                {__('Manage segments')}\n              </Link>\n            </li>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        {this.renderCancelBtn()}\n      </>\n    );\n  }\n\n  onSegmentClick(segmentId) {\n    const { setSegment } = this.props;\n    setSegment(segmentId);\n  }\n\n  renderData() {\n    const { counts, segments, currentSegment } = this.props;\n    const orderedSegments: ISegment[] = [];\n\n    segments.forEach(segment => {\n      if (!segment.subOf) {\n        orderedSegments.push(segment, ...segment.getSubSegments);\n      }\n    });\n\n    return (\n      <SidebarList>\n        {orderedSegments.map(segment => (\n          <li\n            key={segment._id}\n            className={segment.subOf ? 'child-segment' : ''}\n          >\n            <a\n              href=\"#active\"\n              tabIndex={0}\n              className={currentSegment === segment._id ? 'active' : ''}\n              onClick={this.onSegmentClick.bind(this, segment._id)}\n            >\n              {segment.subOf ? '\\u00a0\\u00a0' : null}\n              <Icon\n                icon=\"chart-pie\"\n                style={{ color: segment.color, marginRight: '5px' }}\n              />{' '}\n              <FieldStyle>{segment.name}</FieldStyle>\n              <SidebarCounter>{counts[segment._id]}</SidebarCounter>\n            </a>\n          </li>\n        ))}\n      </SidebarList>\n    );\n  }\n\n  render() {\n    const { segments, loading } = this.props;\n    const extraButtons = this.renderQuickBtns();\n\n    return (\n      <Box\n        title={__('Filter by segments')}\n        extraButtons={extraButtons}\n        collapsible={segments.length > 7}\n        isOpen={true}\n        name=\"showFilterBySegments\"\n      >\n        <DataWithLoader\n          data={this.renderData()}\n          loading={loading}\n          count={segments.length}\n          emptyText=\"Open segments and starting add details\"\n          emptyIcon=\"chart-pie\"\n          size=\"small\"\n          objective={true}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default Segments;\n"]},"metadata":{},"sourceType":"module"}