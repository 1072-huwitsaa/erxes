{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/common/CommonFieldForm.tsx\";\nimport { getEnv } from 'apolloClient';\nimport Button from 'erxes-common-ui/lib/components/button';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport Info from 'modules/common/components/Info';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { INTEGRATION_KINDS } from '../../constants';\nimport SelectBrand from '../../containers/SelectBrand';\nimport SelectChannels from '../../containers/SelectChannels';\nimport { RefreshPermission } from '../../styles';\n\nvar _getEnv = getEnv(),\n    REACT_APP_API_URL = _getEnv.REACT_APP_API_URL;\n\nvar CommonFieldForm =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CommonFieldForm, _React$PureComponent);\n\n  function CommonFieldForm(props) {\n    var _this;\n\n    _classCallCheck(this, CommonFieldForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommonFieldForm).call(this, props));\n\n    _this.renderFacebookContent = function () {\n      var onRefresh = function onRefresh() {\n        var link = 'fblogin';\n        var kind = 'facebook';\n        var url = \"\".concat(REACT_APP_API_URL, \"/connect-integration?link=\").concat(link, \"&kind=\").concat(kind);\n        window.location.replace(url);\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, __('Page permissions can be dropped by Messenger platform if the admin of the page changes their account password or due to some other unexpected reason. In case of any trouble with message sending, or in using some other service, please refresh your permissions using the below button.'), React.createElement(RefreshPermission, {\n        onClick: onRefresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Refresh permissions\")));\n    };\n\n    _this.renderSpecificContent = function () {\n      var integrationKind = _this.props.integrationKind;\n\n      if (integrationKind && integrationKind.includes('facebook')) {\n        return _this.renderFacebookContent();\n      }\n\n      return;\n    };\n\n    _this.renderScript = function () {\n      var integrationKind = _this.props.integrationKind;\n\n      if (integrationKind !== INTEGRATION_KINDS.WEBHOOK) {\n        return null;\n      }\n\n      var webhookData = _this.state.webhookData;\n\n      var onScriptChange = function onScriptChange(e) {\n        _this.setState({\n          webhookData: _objectSpread({}, webhookData, {\n            script: e.target.value\n          })\n        });\n      };\n\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, __('Script')), React.createElement(FormControl, {\n        componentClass: \"textarea\",\n        required: true,\n        defaultValue: webhookData.script,\n        onChange: onScriptChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    };\n\n    _this.state = {\n      name: props.name || '',\n      brandId: props.brandId || '',\n      channelIds: props.channelIds || [],\n      webhookData: props.webhookData || {}\n    };\n    return _this;\n  }\n\n  _createClass(CommonFieldForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          integrationId = _this$props.integrationId,\n          onSubmit = _this$props.onSubmit,\n          closeModal = _this$props.closeModal;\n      var _this$state = this.state,\n          name = _this$state.name,\n          brandId = _this$state.brandId,\n          channelIds = _this$state.channelIds,\n          webhookData = _this$state.webhookData;\n\n      var onBrandChange = function onBrandChange(e) {\n        _this2.setState({\n          brandId: e.target.value\n        });\n      };\n\n      var onChannelChange = function onChannelChange(values) {\n        _this2.setState({\n          channelIds: values\n        });\n      };\n\n      var onNameBlur = function onNameBlur(e) {\n        _this2.setState({\n          name: e.target.value\n        });\n      };\n\n      var saveIntegration = function saveIntegration(e) {\n        e.preventDefault();\n        var data;\n\n        switch (_this2.props.integrationKind) {\n          case 'webhook':\n            {\n              data = webhookData;\n              break;\n            }\n        }\n\n        onSubmit(integrationId, {\n          name: name,\n          brandId: brandId,\n          channelIds: channelIds,\n          data: data\n        });\n        closeModal();\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, __('Name')), React.createElement(FormControl, {\n        required: true,\n        defaultValue: name,\n        onBlur: onNameBlur,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), this.renderScript(), React.createElement(SelectBrand, {\n        isRequired: true,\n        defaultValue: brandId,\n        onChange: onBrandChange,\n        description: __('Which specific Brand does this integration belong to?'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(SelectChannels, {\n        defaultValue: channelIds,\n        isRequired: true,\n        onChange: onChannelChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), this.renderSpecificContent(), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        type: \"button\",\n        onClick: closeModal,\n        icon: \"times-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: saveIntegration,\n        type: \"submit\",\n        btnStyle: \"success\",\n        icon: \"check-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, __('Save'))));\n    }\n  }]);\n\n  return CommonFieldForm;\n}(React.PureComponent);\n\nexport default CommonFieldForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/common/CommonFieldForm.tsx"],"names":["getEnv","Button","FormControl","FormGroup","ControlLabel","Info","ModalFooter","__","React","INTEGRATION_KINDS","SelectBrand","SelectChannels","RefreshPermission","REACT_APP_API_URL","CommonFieldForm","props","renderFacebookContent","onRefresh","link","kind","url","window","location","replace","renderSpecificContent","integrationKind","includes","renderScript","WEBHOOK","webhookData","state","onScriptChange","e","setState","script","target","value","name","brandId","channelIds","integrationId","onSubmit","closeModal","onBrandChange","onChannelChange","values","onNameBlur","saveIntegration","preventDefault","data","PureComponent"],"mappings":"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","sourcesContent":["import { getEnv } from 'apolloClient';\nimport Button from 'erxes-common-ui/lib/components/button';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport Info from 'modules/common/components/Info';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { INTEGRATION_KINDS } from '../../constants';\nimport SelectBrand from '../../containers/SelectBrand';\nimport SelectChannels from '../../containers/SelectChannels';\nimport { RefreshPermission } from '../../styles';\nimport { IntegrationMutationVariables } from '../../types';\n\nconst { REACT_APP_API_URL } = getEnv();\n\ntype CommonTypes = {\n  name: string;\n  brandId: string;\n  channelIds: string[];\n  webhookData: any;\n};\n\ntype Props = {\n  integrationId: string;\n  integrationKind: string;\n  name: string;\n  brandId: string;\n  channelIds: string[];\n  webhookData: any;\n  onSubmit: (\n    id: string,\n    { name, brandId, channelIds, data }: IntegrationMutationVariables\n  ) => void;\n  closeModal: () => void;\n};\n\nclass CommonFieldForm extends React.PureComponent<Props, CommonTypes> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      name: props.name || '',\n      brandId: props.brandId || '',\n      channelIds: props.channelIds || [],\n      webhookData: props.webhookData || {}\n    };\n  }\n\n  renderFacebookContent = () => {\n    const onRefresh = () => {\n      const link = 'fblogin';\n      const kind = 'facebook';\n\n      const url = `${REACT_APP_API_URL}/connect-integration?link=${link}&kind=${kind}`;\n\n      window.location.replace(url);\n    };\n\n    return (\n      <>\n        <Info>\n          {__(\n            'Page permissions can be dropped by Messenger platform if the admin of the page changes their account password or due to some other unexpected reason. In case of any trouble with message sending, or in using some other service, please refresh your permissions using the below button.'\n          )}\n          <RefreshPermission onClick={onRefresh}>\n            Refresh permissions\n          </RefreshPermission>\n        </Info>\n      </>\n    );\n  };\n\n  renderSpecificContent = () => {\n    const { integrationKind } = this.props;\n\n    if (integrationKind && integrationKind.includes('facebook')) {\n      return this.renderFacebookContent();\n    }\n\n    return;\n  };\n\n  renderScript = () => {\n    const { integrationKind } = this.props;\n\n    if (integrationKind !== INTEGRATION_KINDS.WEBHOOK) {\n      return null;\n    }\n\n    const { webhookData } = this.state;\n\n    const onScriptChange = e => {\n      this.setState({\n        webhookData: { ...webhookData, script: e.target.value }\n      });\n    };\n\n    return (\n      <FormGroup>\n        <ControlLabel required={true}>{__('Script')}</ControlLabel>\n        <FormControl\n          componentClass=\"textarea\"\n          required={true}\n          defaultValue={webhookData.script}\n          onChange={onScriptChange}\n        />\n      </FormGroup>\n    );\n  };\n\n  render() {\n    const { integrationId, onSubmit, closeModal } = this.props;\n    const { name, brandId, channelIds, webhookData } = this.state;\n\n    const onBrandChange = e => {\n      this.setState({ brandId: e.target.value });\n    };\n\n    const onChannelChange = (values: string[]) => {\n      this.setState({ channelIds: values });\n    };\n\n    const onNameBlur = e => {\n      this.setState({ name: e.target.value });\n    };\n\n    const saveIntegration = e => {\n      e.preventDefault();\n\n      let data;\n\n      switch (this.props.integrationKind) {\n        case 'webhook': {\n          data = webhookData;\n\n          break;\n        }\n      }\n\n      onSubmit(integrationId, { name, brandId, channelIds, data });\n      closeModal();\n    };\n\n    return (\n      <>\n        <FormGroup>\n          <ControlLabel required={true}>{__('Name')}</ControlLabel>\n          <FormControl\n            required={true}\n            defaultValue={name}\n            onBlur={onNameBlur}\n            autoFocus={true}\n          />\n        </FormGroup>\n\n        {this.renderScript()}\n\n        <SelectBrand\n          isRequired={true}\n          defaultValue={brandId}\n          onChange={onBrandChange}\n          description={__(\n            'Which specific Brand does this integration belong to?'\n          )}\n        />\n\n        <SelectChannels\n          defaultValue={channelIds}\n          isRequired={true}\n          onChange={onChannelChange}\n        />\n\n        {this.renderSpecificContent()}\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            type=\"button\"\n            onClick={closeModal}\n            icon=\"times-circle\"\n            uppercase={false}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={saveIntegration}\n            type=\"submit\"\n            btnStyle=\"success\"\n            icon=\"check-circle\"\n            uppercase={false}\n          >\n            {__('Save')}\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n}\n\nexport default CommonFieldForm;\n"]},"metadata":{},"sourceType":"module"}