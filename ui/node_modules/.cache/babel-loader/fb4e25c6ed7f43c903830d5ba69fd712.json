{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/segments/components/common/EventCondition.tsx\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport { FormControl } from \"modules/common/components/form\";\nimport { __ } from \"modules/common/utils\";\nimport { FlexRightItem } from \"modules/layout/styles\";\nimport React from \"react\";\nimport Select from \"react-select-plus\";\nimport { ConditionItem, FilterProperty, FilterRow, SubProperties } from \"../styles\";\nimport Filter from \"./Filter\";\n\nvar Condition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Condition, _React$Component);\n\n  function Condition(props) {\n    var _this;\n\n    _classCallCheck(this, Condition);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Condition).call(this, props));\n\n    _this.removeCondition = function () {\n      _this.props.onRemove(_this.props.conditionKey);\n    };\n\n    _this.onChangeFilter = function () {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          conditionKey = _this$props.conditionKey;\n      var _this$state = _this.state,\n          currentEventName = _this$state.currentEventName,\n          attributeFilters = _this$state.attributeFilters,\n          occurenceValue = _this$state.occurenceValue,\n          occurence = _this$state.occurence;\n      return onChange({\n        key: conditionKey,\n        name: currentEventName || \"\",\n        occurence: occurence || \"exactly\",\n        occurenceValue: occurenceValue || 0,\n        attributeFilters: attributeFilters\n      });\n    };\n\n    _this.onChangeAttributeFilter = function (filter) {\n      _this.setState({\n        attributeFilters: _this.state.attributeFilters.map(function (f) {\n          return f.key === filter.key ? filter : f;\n        })\n      }, _this.onChangeFilter);\n    };\n\n    _this.onRemoveAttributeFilter = function (key) {\n      var attributeFilters = _this.state.attributeFilters.filter(function (f) {\n        return f.key !== key;\n      });\n\n      _this.setState({\n        attributeFilters: attributeFilters\n      }, _this.onChangeFilter);\n    };\n\n    _this.onChangeEvents = function (option) {\n      _this.setState({\n        currentEventName: option ? option.value : \"\"\n      }, _this.onChangeFilter);\n    };\n\n    _this.onChangeOccurence = function (e) {\n      _this.setState({\n        occurence: e.target.value\n      }, _this.onChangeFilter);\n    };\n\n    _this.onChangeOccurenceValue = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        occurenceValue: value ? parseFloat(value) : 0\n      }, _this.onChangeFilter);\n    };\n\n    _this.addAttributeFilter = function () {\n      var attributeFilter = {\n        key: Math.random().toString(),\n        name: \"\",\n        operator: \"\",\n        value: \"\"\n      };\n      var attributeFilters = _this.state.attributeFilters;\n      attributeFilters.push(attributeFilter);\n\n      _this.setState({\n        attributeFilters: attributeFilters\n      });\n    };\n\n    _this.renderAttributeFilters = function () {\n      var _this$state2 = _this.state,\n          attributeFilters = _this$state2.attributeFilters,\n          currentEventName = _this$state2.currentEventName;\n      var events = _this.props.events;\n      var currentEvent = events.find(function (e) {\n        return e.name === currentEventName;\n      });\n\n      if (!currentEvent) {\n        return;\n      }\n\n      var nameFields = currentEvent.attributeNames.map(function (name) {\n        return {\n          value: name,\n          label: name\n        };\n      });\n      return attributeFilters.map(function (filter, index) {\n        return React.createElement(Filter, {\n          key: index,\n          fields: nameFields,\n          filter: filter,\n          onChange: _this.onChangeAttributeFilter,\n          onRemove: _this.onRemoveAttributeFilter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.state = {\n      currentEventName: props.name,\n      attributeFilters: props.attributeFilters.map(function (filter) {\n        return _objectSpread({\n          key: Math.random().toString()\n        }, filter);\n      }),\n      occurence: props.occurence,\n      occurenceValue: props.occurenceValue\n    };\n    return _this;\n  }\n\n  _createClass(Condition, [{\n    key: \"renderNames\",\n    value: function renderNames() {\n      var events = this.props.events;\n      var currentEventName = this.state.currentEventName;\n      var eventsData = events.map(function (event) {\n        return {\n          value: event.name,\n          label: event.name\n        };\n      });\n      return React.createElement(Select, {\n        id: \"add-events-select-event\",\n        isRequired: true,\n        clearable: true,\n        value: currentEventName,\n        onChange: this.onChangeEvents,\n        options: eventsData,\n        placeholder: __(\"Select event\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderOccurence\",\n    value: function renderOccurence() {\n      var _this$state3 = this.state,\n          currentEventName = _this$state3.currentEventName,\n          occurence = _this$state3.occurence,\n          occurenceValue = _this$state3.occurenceValue;\n\n      if (!currentEventName) {\n        return null;\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(FormControl, {\n        componentClass: \"select\",\n        onChange: this.onChangeOccurence,\n        value: occurence,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"exactly\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"exactly\"), React.createElement(\"option\", {\n        value: \"atleast\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"atleast\"), React.createElement(\"option\", {\n        value: \"atmost\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"atmost\")), React.createElement(FormControl, {\n        value: occurenceValue,\n        onChange: this.onChangeOccurenceValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(ConditionItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(FilterRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(FilterProperty, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, this.renderNames()), this.renderOccurence(), React.createElement(FilterProperty, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, this.state.currentEventName && React.createElement(Button, {\n        btnStyle: \"simple\",\n        icon: \"plus-circle\",\n        uppercase: false,\n        onClick: this.addAttributeFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Add event attribute\"))), React.createElement(FlexRightItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"round\",\n        btnStyle: \"danger\",\n        uppercase: false,\n        icon: \"times\",\n        onClick: this.removeCondition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }))), React.createElement(SubProperties, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, this.renderAttributeFilters()));\n    }\n  }]);\n\n  return Condition;\n}(React.Component);\n\nexport default Condition;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/segments/components/common/EventCondition.tsx"],"names":["Button","FormControl","__","FlexRightItem","React","Select","ConditionItem","FilterProperty","FilterRow","SubProperties","Filter","Condition","props","removeCondition","onRemove","conditionKey","onChangeFilter","onChange","state","currentEventName","attributeFilters","occurenceValue","occurence","key","name","onChangeAttributeFilter","filter","setState","map","f","onRemoveAttributeFilter","onChangeEvents","option","value","onChangeOccurence","e","target","onChangeOccurenceValue","parseFloat","addAttributeFilter","attributeFilter","Math","random","toString","operator","push","renderAttributeFilters","events","currentEvent","find","nameFields","attributeNames","label","index","eventsData","event","renderNames","renderOccurence","Component"],"mappings":"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","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport { FormControl } from \"modules/common/components/form\";\nimport { __ } from \"modules/common/utils\";\nimport { FlexRightItem } from \"modules/layout/styles\";\nimport React from \"react\";\nimport Select from \"react-select-plus\";\nimport { IConditionFilter, IEvent, IField } from \"../../types\";\nimport {\n  ConditionItem,\n  FilterProperty,\n  FilterRow,\n  SubProperties,\n} from \"../styles\";\nimport Filter from \"./Filter\";\n\ntype OnChangeParams = {\n  key: string;\n  name: string;\n  attributeFilters: IConditionFilter[];\n  occurenceValue: number;\n  occurence: string;\n};\n\ntype Props = {\n  events: IEvent[];\n  conditionKey: string;\n  name: string;\n  attributeFilters: IConditionFilter[];\n  occurence: string;\n  occurenceValue: number;\n  onChange: (args: OnChangeParams) => void;\n  onRemove: (id: string) => void;\n};\n\ntype State = {\n  attributeFilters: IConditionFilter[];\n  currentEventName?: string;\n  occurence?: string;\n  occurenceValue?: number;\n};\n\nclass Condition extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      currentEventName: props.name,\n      attributeFilters: props.attributeFilters.map((filter) => ({\n        key: Math.random().toString(),\n        ...filter,\n      })),\n      occurence: props.occurence,\n      occurenceValue: props.occurenceValue,\n    };\n  }\n\n  removeCondition = () => {\n    this.props.onRemove(this.props.conditionKey);\n  };\n\n  onChangeFilter = () => {\n    const { onChange, conditionKey } = this.props;\n    const {\n      currentEventName,\n      attributeFilters,\n      occurenceValue,\n      occurence,\n    } = this.state;\n\n    return onChange({\n      key: conditionKey,\n      name: currentEventName || \"\",\n      occurence: occurence || \"exactly\",\n      occurenceValue: occurenceValue || 0,\n      attributeFilters,\n    });\n  };\n\n  onChangeAttributeFilter = (filter: IConditionFilter) => {\n    this.setState(\n      {\n        attributeFilters: this.state.attributeFilters.map((f) =>\n          f.key === filter.key ? filter : f\n        ),\n      },\n      this.onChangeFilter\n    );\n  };\n\n  onRemoveAttributeFilter = (key: string) => {\n    const attributeFilters = this.state.attributeFilters.filter(\n      (f) => f.key !== key\n    );\n\n    this.setState({ attributeFilters }, this.onChangeFilter);\n  };\n\n  onChangeEvents = (option: IField) => {\n    this.setState(\n      { currentEventName: option ? option.value : \"\" },\n      this.onChangeFilter\n    );\n  };\n\n  onChangeOccurence = (e) => {\n    this.setState({ occurence: e.target.value }, this.onChangeFilter);\n  };\n\n  onChangeOccurenceValue = (e) => {\n    const value = e.target.value;\n    this.setState(\n      { occurenceValue: value ? parseFloat(value) : 0 },\n      this.onChangeFilter\n    );\n  };\n\n  addAttributeFilter = () => {\n    const attributeFilter = {\n      key: Math.random().toString(),\n      name: \"\",\n      operator: \"\",\n      value: \"\",\n    };\n\n    const { attributeFilters } = this.state;\n\n    attributeFilters.push(attributeFilter);\n\n    this.setState({ attributeFilters });\n  };\n\n  renderAttributeFilters = () => {\n    const { attributeFilters, currentEventName } = this.state;\n    const { events } = this.props;\n    const currentEvent = events.find((e) => e.name === currentEventName);\n\n    if (!currentEvent) {\n      return;\n    }\n\n    const nameFields = currentEvent.attributeNames.map((name) => ({\n      value: name,\n      label: name,\n    }));\n\n    return attributeFilters.map((filter, index) => {\n      return (\n        <Filter\n          key={index}\n          fields={nameFields}\n          filter={filter}\n          onChange={this.onChangeAttributeFilter}\n          onRemove={this.onRemoveAttributeFilter}\n        />\n      );\n    });\n  };\n\n  renderNames() {\n    const { events } = this.props;\n    const { currentEventName } = this.state;\n    const eventsData = events.map((event) => ({\n      value: event.name,\n      label: event.name,\n    }));\n\n    return (\n      <Select\n        id=\"add-events-select-event\"\n        isRequired={true}\n        clearable={true}\n        value={currentEventName}\n        onChange={this.onChangeEvents}\n        options={eventsData}\n        placeholder={__(\"Select event\")}\n      />\n    );\n  }\n\n  renderOccurence() {\n    const { currentEventName, occurence, occurenceValue } = this.state;\n\n    if (!currentEventName) {\n      return null;\n    }\n\n    return (\n      <>\n        <FormControl\n          componentClass=\"select\"\n          onChange={this.onChangeOccurence}\n          value={occurence}\n        >\n          <option value=\"exactly\">exactly</option>\n          <option value=\"atleast\">atleast</option>\n          <option value=\"atmost\">atmost</option>\n        </FormControl>\n\n        <FormControl\n          value={occurenceValue}\n          onChange={this.onChangeOccurenceValue}\n        />\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <>\n        <ConditionItem>\n          <FilterRow>\n            <FilterProperty>{this.renderNames()}</FilterProperty>\n\n            {this.renderOccurence()}\n\n            <FilterProperty>\n              {this.state.currentEventName && (\n                <Button\n                  btnStyle=\"simple\"\n                  icon=\"plus-circle\"\n                  uppercase={false}\n                  onClick={this.addAttributeFilter}\n                >\n                  Add event attribute\n                </Button>\n              )}\n            </FilterProperty>\n          </FilterRow>\n\n          <FlexRightItem>\n            <Button\n              className=\"round\"\n              btnStyle=\"danger\"\n              uppercase={false}\n              icon=\"times\"\n              onClick={this.removeCondition}\n            />\n          </FlexRightItem>\n        </ConditionItem>\n\n        <SubProperties>{this.renderAttributeFilters()}</SubProperties>\n      </>\n    );\n  }\n}\n\nexport default Condition;\n"]},"metadata":{},"sourceType":"module"}