{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/companies/components/list/CompaniesList.tsx\";\nimport gql from 'graphql-tag';\nimport Button from 'modules/common/components/Button';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport DropdownToggle from 'modules/common/components/DropdownToggle';\nimport FormControl from 'modules/common/components/form/Control';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport Pagination from 'modules/common/components/pagination/Pagination';\nimport SortHandler from 'modules/common/components/SortHandler';\nimport Table from 'modules/common/components/table';\nimport { __, Alert, confirm, router } from 'modules/common/utils';\nimport { menuContacts } from 'modules/common/utils/menus';\nimport { queries } from 'modules/companies/graphql';\nimport { CompaniesTableWrapper } from 'modules/companies/styles';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport { BarItems } from 'modules/layout/styles';\nimport ManageColumns from 'modules/settings/properties/containers/ManageColumns';\nimport TaggerPopover from 'modules/tags/components/TaggerPopover';\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport CompanyForm from '../../containers/CompanyForm';\nimport CompaniesMerge from '../detail/CompaniesMerge';\nimport CompanyRow from './CompanyRow';\nimport Sidebar from './Sidebar';\n\nvar CompaniesList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CompaniesList, _React$Component);\n\n  function CompaniesList(props) {\n    var _this;\n\n    _classCallCheck(this, CompaniesList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CompaniesList).call(this, props));\n    _this.timer = undefined;\n\n    _this.onChange = function () {\n      var _this$props = _this.props,\n          toggleAll = _this$props.toggleAll,\n          companies = _this$props.companies;\n      toggleAll(companies, 'companies');\n    };\n\n    _this.search = function (e) {\n      if (_this.timer) {\n        clearTimeout(_this.timer);\n      }\n\n      var history = _this.props.history;\n      var searchValue = e.target.value;\n\n      _this.setState({\n        searchValue: searchValue\n      });\n\n      _this.timer = setTimeout(function () {\n        router.removeParams(history, 'page');\n        router.setParams(history, {\n          searchValue: searchValue\n        });\n      }, 500);\n    };\n\n    _this.removeCompanies = function (companies) {\n      var companyIds = [];\n      companies.forEach(function (company) {\n        companyIds.push(company._id);\n      });\n\n      _this.props.removeCompanies({\n        companyIds: companyIds\n      }, _this.props.emptyBulk);\n    };\n\n    _this.moveCursorAtTheEnd = function (e) {\n      var tmpValue = e.target.value;\n      e.target.value = '';\n      e.target.value = tmpValue;\n    };\n\n    _this.afterTag = function () {\n      _this.props.emptyBulk();\n\n      if (_this.props.refetch) {\n        _this.props.refetch();\n      }\n    };\n\n    _this.state = {\n      searchValue: _this.props.searchValue\n    };\n    return _this;\n  }\n\n  _createClass(CompaniesList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          columnsConfig = _this$props2.columnsConfig,\n          companies = _this$props2.companies,\n          history = _this$props2.history,\n          location = _this$props2.location,\n          loading = _this$props2.loading,\n          toggleBulk = _this$props2.toggleBulk,\n          bulk = _this$props2.bulk,\n          isAllSelected = _this$props2.isAllSelected,\n          totalCount = _this$props2.totalCount,\n          mergeCompanies = _this$props2.mergeCompanies,\n          queryParams = _this$props2.queryParams,\n          exportCompanies = _this$props2.exportCompanies;\n      var mainContent = React.createElement(CompaniesTableWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Table, {\n        whiteSpace: \"nowrap\",\n        bordered: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        checked: isAllSelected,\n        componentClass: \"checkbox\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), columnsConfig.map(function (_ref) {\n        var name = _ref.name,\n            label = _ref.label;\n        return React.createElement(\"th\", {\n          key: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(SortHandler, {\n          sortField: name,\n          label: __(label),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }));\n      }), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, __('Tags')))), React.createElement(\"tbody\", {\n        id: \"companies\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, companies.map(function (company) {\n        return React.createElement(CompanyRow, {\n          company: company,\n          columnsConfig: columnsConfig,\n          isChecked: bulk.includes(company),\n          key: company._id,\n          history: history,\n          toggleBulk: toggleBulk,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        });\n      }))));\n      var addTrigger = React.createElement(Button, {\n        btnStyle: \"success\",\n        size: \"small\",\n        icon: \"plus-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Add company\");\n      var editColumns = React.createElement(\"a\", {\n        href: \"#edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, __('Choose Properties/View'));\n      var mergeButton = React.createElement(Button, {\n        btnStyle: \"primary\",\n        size: \"small\",\n        icon: \"merge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Merge\");\n      var actionBarLeft;\n\n      var companiesMerge = function companiesMerge(props) {\n        return React.createElement(CompaniesMerge, Object.assign({}, props, {\n          objects: bulk,\n          save: mergeCompanies,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }));\n      };\n\n      if (bulk.length > 0) {\n        var tagButton = React.createElement(Button, {\n          btnStyle: \"simple\",\n          size: \"small\",\n          icon: \"tag-alt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, \"Tag\");\n\n        var onClick = function onClick() {\n          return confirm().then(function () {\n            _this2.removeCompanies(bulk);\n          }).catch(function (error) {\n            Alert.error(error.message);\n          });\n        };\n\n        var refetchQuery = {\n          query: gql(queries.companyCounts),\n          variables: {\n            only: 'byTag'\n          }\n        };\n        actionBarLeft = React.createElement(BarItems, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(TaggerPopover, {\n          type: \"company\",\n          successCallback: this.afterTag,\n          targets: bulk,\n          trigger: tagButton,\n          refetchQueries: [refetchQuery],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }), bulk.length === 2 && React.createElement(ModalTrigger, {\n          title: \"Merge Companies\",\n          size: \"lg\",\n          dialogClassName: \"modal-1000w\",\n          trigger: mergeButton,\n          content: companiesMerge,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }), React.createElement(Button, {\n          btnStyle: \"danger\",\n          size: \"small\",\n          icon: \"cancel-1\",\n          onClick: onClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, \"Remove\"));\n      }\n\n      var manageColumns = function manageColumns(props) {\n        return React.createElement(ManageColumns, Object.assign({}, props, {\n          location: location,\n          history: history,\n          contentType: \"company\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }));\n      };\n\n      var companyForm = function companyForm(props) {\n        return React.createElement(CompanyForm, Object.assign({}, props, {\n          queryParams: queryParams,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }));\n      };\n\n      var actionBarRight = React.createElement(BarItems, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        placeholder: __('Type to search'),\n        onChange: this.search,\n        value: this.state.searchValue,\n        autoFocus: true,\n        onFocus: this.moveCursorAtTheEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }), React.createElement(Dropdown, {\n        className: \"dropdown-btn\",\n        alignRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        as: DropdownToggle,\n        id: \"dropdown-customize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, __('Customize '), \" \", React.createElement(Icon, {\n        icon: \"angle-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }))), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(ModalTrigger, {\n        title: \"Manage Columns\",\n        trigger: editColumns,\n        content: manageColumns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/settings/properties?type=company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, __('Manage properties'))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#export\",\n        onClick: exportCompanies.bind(this, bulk),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, __('Export this companies'))))), React.createElement(Link, {\n        to: \"/settings/importHistories?type=company\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"primary\",\n        size: \"small\",\n        icon: \"arrow-from-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, __('Go to import'))), React.createElement(ModalTrigger, {\n        title: \"New company\",\n        trigger: addTrigger,\n        autoOpenKey: \"showCompanyModal\",\n        size: \"lg\",\n        content: companyForm,\n        backDrop: \"static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }));\n      var actionBar = React.createElement(Wrapper.ActionBar, {\n        right: actionBarRight,\n        left: actionBarLeft,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      });\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          title: __(\"Companies\") + \" (\".concat(totalCount, \")\"),\n          queryParams: queryParams,\n          submenu: menuContacts,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }),\n        actionBar: actionBar,\n        footer: React.createElement(Pagination, {\n          count: totalCount,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }),\n        leftSidebar: React.createElement(Sidebar, {\n          loadingMainQuery: loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }),\n        content: React.createElement(DataWithLoader, {\n          data: mainContent,\n          loading: loading,\n          count: companies.length,\n          emptyText: \"Add in your first company!\",\n          emptyImage: \"/images/actions/1.svg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return CompaniesList;\n}(React.Component);\n\nexport default withRouter(CompaniesList);","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/companies/components/list/CompaniesList.tsx"],"names":["gql","Button","DataWithLoader","DropdownToggle","FormControl","Icon","ModalTrigger","Pagination","SortHandler","Table","__","Alert","confirm","router","menuContacts","queries","CompaniesTableWrapper","Wrapper","BarItems","ManageColumns","TaggerPopover","React","Dropdown","withRouter","Link","CompanyForm","CompaniesMerge","CompanyRow","Sidebar","CompaniesList","props","timer","undefined","onChange","toggleAll","companies","search","e","clearTimeout","history","searchValue","target","value","setState","setTimeout","removeParams","setParams","removeCompanies","companyIds","forEach","company","push","_id","emptyBulk","moveCursorAtTheEnd","tmpValue","afterTag","refetch","state","columnsConfig","location","loading","toggleBulk","bulk","isAllSelected","totalCount","mergeCompanies","queryParams","exportCompanies","mainContent","map","name","label","includes","addTrigger","editColumns","mergeButton","actionBarLeft","companiesMerge","length","tagButton","onClick","then","catch","error","message","refetchQuery","query","companyCounts","variables","only","manageColumns","companyForm","actionBarRight","bind","actionBar","Component"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport Button from 'modules/common/components/Button';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport DropdownToggle from 'modules/common/components/DropdownToggle';\nimport FormControl from 'modules/common/components/form/Control';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport Pagination from 'modules/common/components/pagination/Pagination';\nimport SortHandler from 'modules/common/components/SortHandler';\nimport Table from 'modules/common/components/table';\nimport { __, Alert, confirm, router } from 'modules/common/utils';\nimport { menuContacts } from 'modules/common/utils/menus';\nimport { queries } from 'modules/companies/graphql';\nimport { CompaniesTableWrapper } from 'modules/companies/styles';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport { BarItems } from 'modules/layout/styles';\nimport ManageColumns from 'modules/settings/properties/containers/ManageColumns';\nimport TaggerPopover from 'modules/tags/components/TaggerPopover';\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { IRouterProps } from '../../../common/types';\nimport { IConfigColumn } from '../../../settings/properties/types';\nimport CompanyForm from '../../containers/CompanyForm';\nimport { ICompany } from '../../types';\nimport CompaniesMerge from '../detail/CompaniesMerge';\nimport CompanyRow from './CompanyRow';\nimport Sidebar from './Sidebar';\n\ninterface IProps extends IRouterProps {\n  companies: ICompany[];\n  columnsConfig: IConfigColumn[];\n  loading: boolean;\n  searchValue: string;\n  totalCount: number;\n  // TODO: check is below line not throwing error ?\n  toggleBulk: () => void;\n  toggleAll: (targets: ICompany[], containerId: string) => void;\n  bulk: any[];\n  isAllSelected: boolean;\n  emptyBulk: () => void;\n  removeCompanies: (\n    doc: { companyIds: string[] },\n    emptyBulk: () => void\n  ) => void;\n  mergeCompanies: () => void;\n  queryParams: any;\n  exportCompanies: (bulk: string[]) => void;\n  refetch?: () => void;\n}\n\ntype State = {\n  searchValue?: string;\n};\n\nclass CompaniesList extends React.Component<IProps, State> {\n  private timer?: NodeJS.Timer = undefined;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchValue: this.props.searchValue\n    };\n  }\n\n  onChange = () => {\n    const { toggleAll, companies } = this.props;\n    toggleAll(companies, 'companies');\n  };\n\n  search = e => {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n\n    const { history } = this.props;\n    const searchValue = e.target.value;\n\n    this.setState({ searchValue });\n    this.timer = setTimeout(() => {\n      router.removeParams(history, 'page');\n      router.setParams(history, { searchValue });\n    }, 500);\n  };\n\n  removeCompanies = companies => {\n    const companyIds: string[] = [];\n\n    companies.forEach(company => {\n      companyIds.push(company._id);\n    });\n\n    this.props.removeCompanies({ companyIds }, this.props.emptyBulk);\n  };\n\n  moveCursorAtTheEnd = e => {\n    const tmpValue = e.target.value;\n    e.target.value = '';\n    e.target.value = tmpValue;\n  };\n\n  afterTag = () => {\n    this.props.emptyBulk();\n\n    if (this.props.refetch) {\n      this.props.refetch();\n    }\n  };\n\n  render() {\n    const {\n      columnsConfig,\n      companies,\n      history,\n      location,\n      loading,\n      toggleBulk,\n      bulk,\n      isAllSelected,\n      totalCount,\n      mergeCompanies,\n      queryParams,\n      exportCompanies\n    } = this.props;\n\n    const mainContent = (\n      <CompaniesTableWrapper>\n        <Table whiteSpace=\"nowrap\" bordered={true} hover={true}>\n          <thead>\n            <tr>\n              <th>\n                <FormControl\n                  checked={isAllSelected}\n                  componentClass=\"checkbox\"\n                  onChange={this.onChange}\n                />\n              </th>\n              {columnsConfig.map(({ name, label }) => (\n                <th key={name}>\n                  <SortHandler sortField={name} label={__(label)} />\n                </th>\n              ))}\n              <th>{__('Tags')}</th>\n            </tr>\n          </thead>\n          <tbody id=\"companies\">\n            {companies.map(company => (\n              <CompanyRow\n                company={company}\n                columnsConfig={columnsConfig}\n                isChecked={bulk.includes(company)}\n                key={company._id}\n                history={history}\n                toggleBulk={toggleBulk}\n              />\n            ))}\n          </tbody>\n        </Table>\n      </CompaniesTableWrapper>\n    );\n\n    const addTrigger = (\n      <Button btnStyle=\"success\" size=\"small\" icon=\"plus-circle\">\n        Add company\n      </Button>\n    );\n\n    const editColumns = <a href=\"#edit\">{__('Choose Properties/View')}</a>;\n\n    const mergeButton = (\n      <Button btnStyle=\"primary\" size=\"small\" icon=\"merge\">\n        Merge\n      </Button>\n    );\n\n    let actionBarLeft: React.ReactNode;\n\n    const companiesMerge = props => {\n      return <CompaniesMerge {...props} objects={bulk} save={mergeCompanies} />;\n    };\n\n    if (bulk.length > 0) {\n      const tagButton = (\n        <Button btnStyle=\"simple\" size=\"small\" icon=\"tag-alt\">\n          Tag\n        </Button>\n      );\n\n      const onClick = () =>\n        confirm()\n          .then(() => {\n            this.removeCompanies(bulk);\n          })\n          .catch(error => {\n            Alert.error(error.message);\n          });\n\n      const refetchQuery = {\n        query: gql(queries.companyCounts),\n        variables: { only: 'byTag' }\n      };\n\n      actionBarLeft = (\n        <BarItems>\n          <TaggerPopover\n            type=\"company\"\n            successCallback={this.afterTag}\n            targets={bulk}\n            trigger={tagButton}\n            refetchQueries={[refetchQuery]}\n          />\n\n          {bulk.length === 2 && (\n            <ModalTrigger\n              title=\"Merge Companies\"\n              size=\"lg\"\n              dialogClassName=\"modal-1000w\"\n              trigger={mergeButton}\n              content={companiesMerge}\n            />\n          )}\n\n          <Button\n            btnStyle=\"danger\"\n            size=\"small\"\n            icon=\"cancel-1\"\n            onClick={onClick}\n          >\n            Remove\n          </Button>\n        </BarItems>\n      );\n    }\n\n    const manageColumns = props => {\n      return (\n        <ManageColumns\n          {...props}\n          location={location}\n          history={history}\n          contentType=\"company\"\n        />\n      );\n    };\n\n    const companyForm = props => {\n      return <CompanyForm {...props} queryParams={queryParams} />;\n    };\n\n    const actionBarRight = (\n      <BarItems>\n        <FormControl\n          type=\"text\"\n          placeholder={__('Type to search')}\n          onChange={this.search}\n          value={this.state.searchValue}\n          autoFocus={true}\n          onFocus={this.moveCursorAtTheEnd}\n        />\n\n        <Dropdown className=\"dropdown-btn\" alignRight={true}>\n          <Dropdown.Toggle as={DropdownToggle} id=\"dropdown-customize\">\n            <Button btnStyle=\"simple\" size=\"small\">\n              {__('Customize ')} <Icon icon=\"angle-down\" />\n            </Button>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <li>\n              <ModalTrigger\n                title=\"Manage Columns\"\n                trigger={editColumns}\n                content={manageColumns}\n              />\n            </li>\n            <li>\n              <Link to=\"/settings/properties?type=company\">\n                {__('Manage properties')}\n              </Link>\n            </li>\n            <li>\n              <a href=\"#export\" onClick={exportCompanies.bind(this, bulk)}>\n                {__('Export this companies')}\n              </a>\n            </li>\n          </Dropdown.Menu>\n        </Dropdown>\n        <Link to=\"/settings/importHistories?type=company\">\n          <Button btnStyle=\"primary\" size=\"small\" icon=\"arrow-from-right\">\n            {__('Go to import')}\n          </Button>\n        </Link>\n        <ModalTrigger\n          title=\"New company\"\n          trigger={addTrigger}\n          autoOpenKey=\"showCompanyModal\"\n          size=\"lg\"\n          content={companyForm}\n          backDrop=\"static\"\n        />\n      </BarItems>\n    );\n\n    const actionBar = (\n      <Wrapper.ActionBar right={actionBarRight} left={actionBarLeft} />\n    );\n\n    return (\n      <Wrapper\n        header={\n          <Wrapper.Header\n            title={__(`Companies`) + ` (${totalCount})`}\n            queryParams={queryParams}\n            submenu={menuContacts}\n          />\n        }\n        actionBar={actionBar}\n        footer={<Pagination count={totalCount} />}\n        leftSidebar={<Sidebar loadingMainQuery={loading} />}\n        content={\n          <DataWithLoader\n            data={mainContent}\n            loading={loading}\n            count={companies.length}\n            emptyText=\"Add in your first company!\"\n            emptyImage=\"/images/actions/1.svg\"\n          />\n        }\n      />\n    );\n  }\n}\n\nexport default withRouter<IRouterProps>(CompaniesList);\n"]},"metadata":{},"sourceType":"module"}