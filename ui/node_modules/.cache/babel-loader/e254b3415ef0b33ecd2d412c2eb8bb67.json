{"ast":null,"code":"import _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/facebook/Form.tsx\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport EmptyState from \"modules/common/components/EmptyState\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport Spinner from \"modules/common/components/Spinner\";\nimport { Step, Steps } from \"modules/common/components/step\";\nimport { ControlWrapper, FlexItem, Indicator, LeftItem, Preview, StepWrapper } from \"modules/common/components/step/styles\";\nimport { __ } from \"modules/common/utils\";\nimport Wrapper from \"modules/layout/components/Wrapper\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { INTEGRATION_KINDS } from \"../../constants\";\nimport Accounts from \"../../containers/Accounts\";\nimport SelectBrand from \"../../containers/SelectBrand\";\nimport SelectChannels from \"../../containers/SelectChannels\";\nimport { AccountBox, AccountItem, AccountTitle, Content, ImageWrapper, MessengerPreview, TextWrapper } from \"../../styles\";\n\nvar Facebook =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Facebook, _React$Component);\n\n  function Facebook(props) {\n    var _this;\n\n    _classCallCheck(this, Facebook);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Facebook).call(this, props));\n\n    _this.onSelectPages = function (pageId) {\n      var selectedPages = _this.state.selectedPages;\n\n      if (selectedPages.includes(pageId)) {\n        return _this.setState({\n          selectedPages: selectedPages.filter(function (item) {\n            return item !== pageId;\n          })\n        });\n      }\n\n      _this.setState({\n        selectedPages: [].concat(_toConsumableArray(selectedPages), [pageId])\n      });\n    };\n\n    _this.generateDoc = function (values) {\n      var _this$props = _this.props,\n          accountId = _this$props.accountId,\n          kind = _this$props.kind;\n      return {\n        name: values.messengerName,\n        brandId: values.brandId,\n        kind: kind,\n        accountId: accountId ? accountId : values.accountId,\n        channelIds: _this.state.channelIds,\n        data: {\n          pageIds: _this.state.selectedPages\n        }\n      };\n    };\n\n    _this.onChange = function (key, value) {\n      _this.setState(_defineProperty({}, key, value));\n    };\n\n    _this.channelOnChange = function (values) {\n      return _this.onChange(\"channelIds\", values);\n    };\n\n    _this.renderContent = function (formProps) {\n      var renderButton = _this.props.renderButton;\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted;\n      var _this$props2 = _this.props,\n          onRemoveAccount = _this$props2.onRemoveAccount,\n          onAccountSelect = _this$props2.onAccountSelect;\n      return React.createElement(React.Fragment, null, React.createElement(Steps, {\n        active: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Step, {\n        img: \"/images/icons/erxes-01.svg\",\n        title: \"Connect Account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(LeftItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Accounts, {\n        kind: \"facebook\",\n        addLink: \"fblogin\",\n        onSelect: onAccountSelect,\n        onRemove: onRemoveAccount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })))), React.createElement(Step, {\n        img: \"/images/icons/erxes-04.svg\",\n        title: \"Connect Your Pages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, _this.renderPages()), React.createElement(Step, {\n        img: \"/images/icons/erxes-16.svg\",\n        title: \"Integration Setup\",\n        noButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(LeftItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Integration Name\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, __(\"Name this integration to differentiate from the rest\")), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"messengerName\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }))), React.createElement(SelectBrand, {\n        isRequired: true,\n        description: __(\"Which specific Brand does this integration belong to?\"),\n        formProps: formProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(SelectChannels, {\n        defaultValue: _this.state.channelIds,\n        isRequired: true,\n        onChange: _this.channelOnChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }))))), React.createElement(ControlWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Indicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, __(\"You are creating\"), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \" \", _this.props.kind), \" \", __(\"integration\")), React.createElement(Button.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/settings/integrations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        icon: \"times-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Cancel\")), renderButton({\n        name: \"integration\",\n        values: _this.generateDoc(values),\n        isSubmitted: isSubmitted,\n        callback: _this.props.callBack\n      }))));\n    };\n\n    _this.renderForm = function () {\n      return React.createElement(Form, {\n        renderContent: _this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      });\n    };\n\n    _this.state = {\n      selectedPages: [],\n      channelIds: []\n    };\n    return _this;\n  }\n\n  _createClass(Facebook, [{\n    key: \"renderPages\",\n    value: function renderPages() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          pages = _this$props3.pages,\n          loadingPages = _this$props3.loadingPages;\n\n      if (loadingPages) {\n        return React.createElement(Spinner, {\n          objective: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        });\n      }\n\n      if (pages.length === 0) {\n        return React.createElement(EmptyState, {\n          icon: \"folder-2\",\n          text: __(\"There is no pages\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(LeftItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(AccountBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(AccountTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, __(\"Facebook Pages\")), pages.map(function (page) {\n        return React.createElement(AccountItem, {\n          key: page.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, page.name, React.createElement(Button, {\n          uppercase: false,\n          btnStyle: _this2.state.selectedPages.includes(page.id) ? \"primary\" : \"simple\",\n          onClick: _this2.onSelectPages.bind(_this2, page.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, _this2.state.selectedPages.includes(page.id) ? __(\"Selected\") : __(\"Select\")));\n      }))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var title = __(\"Facebook Posts\");\n\n      var description = __(\"Connect your Facebook Posts to start receiving Facebook post and comments in your team inbox\");\n\n      if (this.props.kind === INTEGRATION_KINDS.FACEBOOK_MESSENGER) {\n        title = __(\"Facebook Messenger\");\n        description = __(\"Connect your Facebook Messenger to start receiving Facebook messages in your team inbox\");\n      }\n\n      var breadcrumb = [{\n        title: __(\"Settings\"),\n        link: \"/settings\"\n      }, {\n        title: __(\"App store\"),\n        link: \"/settings/integrations\"\n      }, {\n        title: title\n      }];\n      return React.createElement(StepWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Wrapper.Header, {\n        title: title,\n        breadcrumb: breadcrumb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, this.renderForm(), React.createElement(MessengerPreview, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Preview, {\n        fullHeight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(ImageWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(TextWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, __(\"Connect your\"), \" \", title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, description), React.createElement(\"img\", {\n        alt: title,\n        src: \"/images/previews/facebook.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Facebook;\n}(React.Component);\n\nexport default Facebook;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/facebook/Form.tsx"],"names":["Button","EmptyState","FormControl","Form","FormGroup","ControlLabel","Spinner","Step","Steps","ControlWrapper","FlexItem","Indicator","LeftItem","Preview","StepWrapper","__","Wrapper","React","Link","INTEGRATION_KINDS","Accounts","SelectBrand","SelectChannels","AccountBox","AccountItem","AccountTitle","Content","ImageWrapper","MessengerPreview","TextWrapper","Facebook","props","onSelectPages","pageId","selectedPages","state","includes","setState","filter","item","generateDoc","values","accountId","kind","name","messengerName","brandId","channelIds","data","pageIds","onChange","key","value","channelOnChange","renderContent","formProps","renderButton","isSubmitted","onRemoveAccount","onAccountSelect","renderPages","callback","callBack","renderForm","pages","loadingPages","length","map","page","id","bind","title","description","FACEBOOK_MESSENGER","breadcrumb","link","Component"],"mappings":"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","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport EmptyState from \"modules/common/components/EmptyState\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport Spinner from \"modules/common/components/Spinner\";\nimport { Step, Steps } from \"modules/common/components/step\";\nimport {\n  ControlWrapper,\n  FlexItem,\n  Indicator,\n  LeftItem,\n  Preview,\n  StepWrapper,\n} from \"modules/common/components/step/styles\";\nimport { IButtonMutateProps, IFormProps } from \"modules/common/types\";\nimport { __ } from \"modules/common/utils\";\nimport Wrapper from \"modules/layout/components/Wrapper\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { INTEGRATION_KINDS } from \"../../constants\";\nimport Accounts from \"../../containers/Accounts\";\nimport SelectBrand from \"../../containers/SelectBrand\";\nimport SelectChannels from \"../../containers/SelectChannels\";\nimport {\n  AccountBox,\n  AccountItem,\n  AccountTitle,\n  Content,\n  ImageWrapper,\n  MessengerPreview,\n  TextWrapper,\n} from \"../../styles\";\nimport { IPages } from \"../../types\";\n\ntype Props = {\n  kind: string;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  onAccountSelect: (accountId?: string) => void;\n  pages: IPages[];\n  accountId?: string;\n  onRemoveAccount: (accountId: string) => void;\n  callBack: () => void;\n  loadingPages?: boolean;\n};\n\ntype State = {\n  selectedPages: string[];\n  channelIds: string[];\n};\n\nclass Facebook extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedPages: [],\n      channelIds: [],\n    };\n  }\n\n  onSelectPages = (pageId: string) => {\n    const { selectedPages } = this.state;\n    if (selectedPages.includes(pageId)) {\n      return this.setState({\n        selectedPages: selectedPages.filter((item) => item !== pageId),\n      });\n    }\n\n    this.setState({ selectedPages: [...selectedPages, pageId] });\n  };\n\n  generateDoc = (values: {\n    messengerName: string;\n    brandId: string;\n    accountId: string;\n  }) => {\n    const { accountId, kind } = this.props;\n\n    return {\n      name: values.messengerName,\n      brandId: values.brandId,\n      kind,\n      accountId: accountId ? accountId : values.accountId,\n      channelIds: this.state.channelIds,\n      data: {\n        pageIds: this.state.selectedPages,\n      },\n    };\n  };\n\n  renderPages() {\n    const { pages, loadingPages } = this.props;\n\n    if (loadingPages) {\n      return <Spinner objective={true} />;\n    }\n\n    if (pages.length === 0) {\n      return <EmptyState icon=\"folder-2\" text={__(\"There is no pages\")} />;\n    }\n\n    return (\n      <FlexItem>\n        <LeftItem>\n          <AccountBox>\n            <AccountTitle>{__(\"Facebook Pages\")}</AccountTitle>\n            {pages.map((page) => (\n              <AccountItem key={page.id}>\n                {page.name}\n\n                <Button\n                  uppercase={false}\n                  btnStyle={\n                    this.state.selectedPages.includes(page.id)\n                      ? \"primary\"\n                      : \"simple\"\n                  }\n                  onClick={this.onSelectPages.bind(this, page.id)}\n                >\n                  {this.state.selectedPages.includes(page.id)\n                    ? __(\"Selected\")\n                    : __(\"Select\")}\n                </Button>\n              </AccountItem>\n            ))}\n          </AccountBox>\n        </LeftItem>\n      </FlexItem>\n    );\n  }\n\n  onChange = <T extends keyof State>(key: T, value: State[T]) => {\n    this.setState({ [key]: value } as Pick<State, keyof State>);\n  };\n\n  channelOnChange = (values: string[]) => this.onChange(\"channelIds\", values);\n\n  renderContent = (formProps: IFormProps) => {\n    const { renderButton } = this.props;\n    const { values, isSubmitted } = formProps;\n    const { onRemoveAccount, onAccountSelect } = this.props;\n\n    return (\n      <>\n        <Steps active={1}>\n          <Step img=\"/images/icons/erxes-01.svg\" title=\"Connect Account\">\n            <FlexItem>\n              <LeftItem>\n                <Accounts\n                  kind=\"facebook\"\n                  addLink=\"fblogin\"\n                  onSelect={onAccountSelect}\n                  onRemove={onRemoveAccount}\n                />\n              </LeftItem>\n            </FlexItem>\n          </Step>\n\n          <Step img=\"/images/icons/erxes-04.svg\" title=\"Connect Your Pages\">\n            {this.renderPages()}\n          </Step>\n\n          <Step\n            img=\"/images/icons/erxes-16.svg\"\n            title=\"Integration Setup\"\n            noButton={true}\n          >\n            <FlexItem>\n              <LeftItem>\n                <FormGroup>\n                  <ControlLabel required={true}>Integration Name</ControlLabel>\n                  <p>\n                    {__(\"Name this integration to differentiate from the rest\")}\n                  </p>\n                  <FormControl\n                    {...formProps}\n                    name=\"messengerName\"\n                    required={true}\n                  />\n                </FormGroup>\n\n                <SelectBrand\n                  isRequired={true}\n                  description={__(\n                    \"Which specific Brand does this integration belong to?\"\n                  )}\n                  formProps={formProps}\n                />\n\n                <SelectChannels\n                  defaultValue={this.state.channelIds}\n                  isRequired={true}\n                  onChange={this.channelOnChange}\n                />\n              </LeftItem>\n            </FlexItem>\n          </Step>\n        </Steps>\n        <ControlWrapper>\n          <Indicator>\n            {__(\"You are creating\")}\n            <strong> {this.props.kind}</strong> {__(\"integration\")}\n          </Indicator>\n          <Button.Group>\n            <Link to=\"/settings/integrations\">\n              <Button btnStyle=\"simple\" icon=\"times-circle\" uppercase={false}>\n                Cancel\n              </Button>\n            </Link>\n            {renderButton({\n              name: \"integration\",\n              values: this.generateDoc(values),\n              isSubmitted,\n              callback: this.props.callBack,\n            })}\n          </Button.Group>\n        </ControlWrapper>\n      </>\n    );\n  };\n\n  renderForm = () => {\n    return <Form renderContent={this.renderContent} />;\n  };\n\n  render() {\n    let title = __(\"Facebook Posts\");\n    let description = __(\n      \"Connect your Facebook Posts to start receiving Facebook post and comments in your team inbox\"\n    );\n\n    if (this.props.kind === INTEGRATION_KINDS.FACEBOOK_MESSENGER) {\n      title = __(\"Facebook Messenger\");\n      description = __(\n        \"Connect your Facebook Messenger to start receiving Facebook messages in your team inbox\"\n      );\n    }\n\n    const breadcrumb = [\n      { title: __(\"Settings\"), link: \"/settings\" },\n      { title: __(\"App store\"), link: \"/settings/integrations\" },\n      { title },\n    ];\n\n    return (\n      <StepWrapper>\n        <Wrapper.Header title={title} breadcrumb={breadcrumb} />\n        <Content>\n          {this.renderForm()}\n\n          <MessengerPreview>\n            <Preview fullHeight={true}>\n              <ImageWrapper>\n                <TextWrapper>\n                  <h1>\n                    {__(\"Connect your\")} {title}\n                  </h1>\n                  <p>{description}</p>\n                  <img alt={title} src=\"/images/previews/facebook.png\" />\n                </TextWrapper>\n              </ImageWrapper>\n            </Preview>\n          </MessengerPreview>\n        </Content>\n      </StepWrapper>\n    );\n  }\n}\n\nexport default Facebook;\n"]},"metadata":{},"sourceType":"module"}