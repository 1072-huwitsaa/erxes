{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/gmail/Form.tsx\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport Info from \"modules/common/components/Info\";\nimport { Step, Steps } from \"modules/common/components/step\";\nimport { ControlWrapper, FlexItem, Indicator, LeftItem, Preview, StepWrapper } from \"modules/common/components/step/styles\";\nimport { __ } from \"modules/common/utils\";\nimport Wrapper from \"modules/layout/components/Wrapper\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Accounts from \"../../containers/Accounts\";\nimport SelectBrand from \"../../containers/SelectBrand\";\nimport SelectChannels from \"../../containers/SelectChannels\";\nimport { Content, ImageWrapper, MessengerPreview, TextWrapper } from \"../../styles\";\n\nvar Gmail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Gmail, _React$Component);\n\n  function Gmail(props) {\n    var _this;\n\n    _classCallCheck(this, Gmail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Gmail).call(this, props));\n\n    _this.generateDoc = function (values) {\n      var _this$props = _this.props,\n          accountId = _this$props.accountId,\n          email = _this$props.email;\n      return _objectSpread({}, values, {\n        kind: \"gmail\",\n        accountId: accountId,\n        channelIds: _this.state.channelIds,\n        data: {\n          email: email\n        }\n      });\n    };\n\n    _this.channelOnChange = function (values) {\n      _this.setState({\n        channelIds: values\n      });\n    };\n\n    _this.renderContent = function (formProps) {\n      var _this$props2 = _this.props,\n          onRemoveAccount = _this$props2.onRemoveAccount,\n          onAccountSelect = _this$props2.onAccountSelect,\n          renderButton = _this$props2.renderButton;\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted;\n      return React.createElement(React.Fragment, null, React.createElement(Steps, {\n        active: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Step, {\n        img: \"/images/icons/erxes-01.svg\",\n        title: \"Connect Account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(LeftItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, __(\"Email add account description question\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), __(\"Email add account description\"))), React.createElement(Accounts, {\n        kind: \"gmail\",\n        addLink: \"gmail/login\",\n        onSelect: onAccountSelect,\n        onRemove: onRemoveAccount,\n        formProps: formProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })))), React.createElement(Step, {\n        img: \"/images/icons/erxes-16.svg\",\n        title: \"Integration Setup\",\n        noButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(LeftItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Integration Name\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, __(\"Name this integration to differentiate from the rest\")), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"name\",\n        required: true,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))), React.createElement(SelectBrand, {\n        isRequired: true,\n        formProps: formProps,\n        description: __(\"Which specific Brand does this integration belong to?\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(SelectChannels, {\n        defaultValue: _this.state.channelIds,\n        isRequired: true,\n        onChange: _this.channelOnChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))))), React.createElement(ControlWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Indicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, __(\"You are creating\"), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \" \", __(\"Gmail\")), \" \", __(\"integration\")), React.createElement(Button.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/settings/integrations\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        icon: \"times-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Cancel\")), renderButton({\n        name: \"integration\",\n        values: _this.generateDoc(values),\n        isSubmitted: isSubmitted,\n        callback: _this.props.callBack\n      }))));\n    };\n\n    _this.renderForm = function () {\n      return React.createElement(Form, {\n        renderContent: _this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      });\n    };\n\n    _this.state = {\n      channelIds: []\n    };\n    return _this;\n  }\n\n  _createClass(Gmail, [{\n    key: \"render\",\n    value: function render() {\n      var title = __(\"Gmail\");\n\n      var breadcrumb = [{\n        title: __(\"Settings\"),\n        link: \"/settings\"\n      }, {\n        title: __(\"App store\"),\n        link: \"/settings/integrations\"\n      }, {\n        title: title\n      }];\n      return React.createElement(StepWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Wrapper.Header, {\n        title: title,\n        breadcrumb: breadcrumb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, this.renderForm(), React.createElement(MessengerPreview, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Preview, {\n        fullHeight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(ImageWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(TextWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, __(\"Connect your\"), \" \", title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, __(\"Connect your Gmail to start receiving emails in your team inbox\")), React.createElement(\"img\", {\n        alt: title,\n        src: \"/images/previews/facebook.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Gmail;\n}(React.Component);\n\nexport default Gmail;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/gmail/Form.tsx"],"names":["Button","FormControl","Form","FormGroup","ControlLabel","Info","Step","Steps","ControlWrapper","FlexItem","Indicator","LeftItem","Preview","StepWrapper","__","Wrapper","React","Link","Accounts","SelectBrand","SelectChannels","Content","ImageWrapper","MessengerPreview","TextWrapper","Gmail","props","generateDoc","values","accountId","email","kind","channelIds","state","data","channelOnChange","setState","renderContent","formProps","onRemoveAccount","onAccountSelect","renderButton","isSubmitted","name","callback","callBack","renderForm","title","breadcrumb","link","Component"],"mappings":"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","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport FormGroup from \"modules/common/components/form/Group\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport Info from \"modules/common/components/Info\";\nimport { Step, Steps } from \"modules/common/components/step\";\nimport {\n  ControlWrapper,\n  FlexItem,\n  Indicator,\n  LeftItem,\n  Preview,\n  StepWrapper,\n} from \"modules/common/components/step/styles\";\nimport { IButtonMutateProps, IFormProps } from \"modules/common/types\";\nimport { __ } from \"modules/common/utils\";\nimport Wrapper from \"modules/layout/components/Wrapper\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Accounts from \"../../containers/Accounts\";\nimport SelectBrand from \"../../containers/SelectBrand\";\nimport SelectChannels from \"../../containers/SelectChannels\";\nimport {\n  Content,\n  ImageWrapper,\n  MessengerPreview,\n  TextWrapper,\n} from \"../../styles\";\n\ntype Props = {\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  onAccountSelect: (accountId?: string) => void;\n  onRemoveAccount: (accountId: string) => void;\n  callBack: () => void;\n  accountId: string;\n  email: string;\n};\n\ntype State = {\n  channelIds: string[];\n};\n\nclass Gmail extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      channelIds: [],\n    };\n  }\n\n  generateDoc = (values: { name: string; brandId: string }) => {\n    const { accountId, email } = this.props;\n\n    return {\n      ...values,\n      kind: \"gmail\",\n      accountId,\n      channelIds: this.state.channelIds,\n      data: { email },\n    };\n  };\n\n  channelOnChange = (values: string[]) => {\n    this.setState({ channelIds: values } as Pick<State, keyof State>);\n  };\n\n  renderContent = (formProps: IFormProps) => {\n    const { onRemoveAccount, onAccountSelect, renderButton } = this.props;\n    const { values, isSubmitted } = formProps;\n\n    return (\n      <>\n        <Steps active={1}>\n          <Step img=\"/images/icons/erxes-01.svg\" title=\"Connect Account\">\n            <FlexItem>\n              <LeftItem>\n                <FormGroup>\n                  <Info>\n                    <strong>\n                      {__(\"Email add account description question\")}\n                    </strong>\n                    <br />\n                    {__(\"Email add account description\")}\n                  </Info>\n                </FormGroup>\n\n                <Accounts\n                  kind=\"gmail\"\n                  addLink=\"gmail/login\"\n                  onSelect={onAccountSelect}\n                  onRemove={onRemoveAccount}\n                  formProps={formProps}\n                />\n              </LeftItem>\n            </FlexItem>\n          </Step>\n\n          <Step\n            img=\"/images/icons/erxes-16.svg\"\n            title=\"Integration Setup\"\n            noButton={true}\n          >\n            <FlexItem>\n              <LeftItem>\n                <FormGroup>\n                  <ControlLabel required={true}>Integration Name</ControlLabel>\n                  <p>\n                    {__(\"Name this integration to differentiate from the rest\")}\n                  </p>\n                  <FormControl\n                    {...formProps}\n                    name=\"name\"\n                    required={true}\n                    autoFocus={true}\n                  />\n                </FormGroup>\n\n                <SelectBrand\n                  isRequired={true}\n                  formProps={formProps}\n                  description={__(\n                    \"Which specific Brand does this integration belong to?\"\n                  )}\n                />\n\n                <SelectChannels\n                  defaultValue={this.state.channelIds}\n                  isRequired={true}\n                  onChange={this.channelOnChange}\n                />\n              </LeftItem>\n            </FlexItem>\n          </Step>\n        </Steps>\n        <ControlWrapper>\n          <Indicator>\n            {__(\"You are creating\")}\n            <strong> {__(\"Gmail\")}</strong> {__(\"integration\")}\n          </Indicator>\n          <Button.Group>\n            <Link to=\"/settings/integrations\">\n              <Button btnStyle=\"simple\" icon=\"times-circle\" uppercase={false}>\n                Cancel\n              </Button>\n            </Link>\n            {renderButton({\n              name: \"integration\",\n              values: this.generateDoc(values),\n              isSubmitted,\n              callback: this.props.callBack,\n            })}\n          </Button.Group>\n        </ControlWrapper>\n      </>\n    );\n  };\n\n  renderForm = () => {\n    return <Form renderContent={this.renderContent} />;\n  };\n\n  render() {\n    const title = __(\"Gmail\");\n\n    const breadcrumb = [\n      { title: __(\"Settings\"), link: \"/settings\" },\n      { title: __(\"App store\"), link: \"/settings/integrations\" },\n      { title },\n    ];\n\n    return (\n      <StepWrapper>\n        <Wrapper.Header title={title} breadcrumb={breadcrumb} />\n        <Content>\n          {this.renderForm()}\n\n          <MessengerPreview>\n            <Preview fullHeight={true}>\n              <ImageWrapper>\n                <TextWrapper>\n                  <h1>\n                    {__(\"Connect your\")} {title}\n                  </h1>\n                  <p>\n                    {__(\n                      \"Connect your Gmail to start receiving emails in your team inbox\"\n                    )}\n                  </p>\n                  <img alt={title} src=\"/images/previews/facebook.png\" />\n                </TextWrapper>\n              </ImageWrapper>\n            </Preview>\n          </MessengerPreview>\n        </Content>\n      </StepWrapper>\n    );\n  }\n}\n\nexport default Gmail;\n"]},"metadata":{},"sourceType":"module"}