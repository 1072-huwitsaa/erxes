{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/productService/containers/product/ProductList.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport Bulk from 'modules/common/components/Bulk';\nimport { Alert, withProps } from 'modules/common/utils';\nimport { generatePaginationParams } from 'modules/common/utils/router';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport List from '../../components/product/ProductList';\nimport { mutations, queries } from '../../graphql';\n\nvar ProductListContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProductListContainer, _React$Component);\n\n  function ProductListContainer() {\n    _classCallCheck(this, ProductListContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProductListContainer).apply(this, arguments));\n  }\n\n  _createClass(ProductListContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          productsQuery = _this$props.productsQuery,\n          productsCountQuery = _this$props.productsCountQuery,\n          productsRemove = _this$props.productsRemove,\n          queryParams = _this$props.queryParams,\n          productCategoryDetailQuery = _this$props.productCategoryDetailQuery;\n      var products = productsQuery.products || []; // remove action\n\n      var remove = function remove(_ref, emptyBulk) {\n        var productIds = _ref.productIds;\n        productsRemove({\n          variables: {\n            productIds: productIds\n          }\n        }).then(function () {\n          emptyBulk();\n          Alert.success('You successfully deleted a product');\n        }).catch(function (e) {\n          Alert.error(e.message);\n        });\n      };\n\n      var searchValue = this.props.queryParams.searchValue || '';\n\n      var updatedProps = _objectSpread({}, this.props, {\n        queryParams: queryParams,\n        products: products,\n        remove: remove,\n        loading: productsQuery.loading,\n        searchValue: searchValue,\n        productsCount: productsCountQuery.productsTotalCount || 0,\n        currentCategory: productCategoryDetailQuery.productCategoryDetail || {}\n      });\n\n      var productList = function productList(props) {\n        return React.createElement(List, Object.assign({}, updatedProps, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }));\n      };\n\n      var refetch = function refetch() {\n        _this.props.productsQuery.refetch();\n      };\n\n      return React.createElement(Bulk, {\n        content: productList,\n        refetch: refetch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ProductListContainer;\n}(React.Component);\n\nvar getRefetchQueries = function getRefetchQueries() {\n  return ['products', 'productCategorires', 'productCategoriesCount', 'productsTotalCount', 'productCountByTags'];\n};\n\nvar options = function options() {\n  return {\n    refetchQueries: getRefetchQueries()\n  };\n};\n\nexport default withProps(compose(graphql(gql(queries.products), {\n  name: 'productsQuery',\n  options: function options(_ref2) {\n    var queryParams = _ref2.queryParams;\n    return {\n      variables: _objectSpread({\n        categoryId: queryParams.categoryId,\n        tag: queryParams.tag,\n        searchValue: queryParams.searchValue,\n        type: queryParams.type\n      }, generatePaginationParams(queryParams))\n    };\n  }\n}), graphql(gql(queries.productsCount), {\n  name: 'productsCountQuery'\n}), graphql(gql(mutations.productsRemove), {\n  name: 'productsRemove',\n  options: options\n}), graphql(gql(queries.productCategoryDetail), {\n  name: 'productCategoryDetailQuery',\n  options: function options(_ref3) {\n    var queryParams = _ref3.queryParams;\n    return {\n      variables: {\n        _id: queryParams.categoryId\n      }\n    };\n  }\n}))(ProductListContainer));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/productService/containers/product/ProductList.tsx"],"names":["gql","compose","Bulk","Alert","withProps","generatePaginationParams","React","graphql","List","mutations","queries","ProductListContainer","props","productsQuery","productsCountQuery","productsRemove","queryParams","productCategoryDetailQuery","products","remove","emptyBulk","productIds","variables","then","success","catch","e","error","message","searchValue","updatedProps","loading","productsCount","productsTotalCount","currentCategory","productCategoryDetail","productList","refetch","Component","getRefetchQueries","options","refetchQueries","name","categoryId","tag","type","_id"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport Bulk from 'modules/common/components/Bulk';\nimport { Alert, withProps } from 'modules/common/utils';\nimport { generatePaginationParams } from 'modules/common/utils/router';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport List from '../../components/product/ProductList';\nimport { mutations, queries } from '../../graphql';\nimport {\n  CategoryDetailQueryResponse,\n  ProductRemoveMutationResponse,\n  ProductsCountQueryResponse,\n  ProductsQueryResponse\n} from '../../types';\n\ntype Props = {\n  queryParams: any;\n  history: any;\n};\n\ntype FinalProps = {\n  productsQuery: ProductsQueryResponse;\n  productsCountQuery: ProductsCountQueryResponse;\n  productCategoryDetailQuery: CategoryDetailQueryResponse;\n} & Props &\n  ProductRemoveMutationResponse;\n\nclass ProductListContainer extends React.Component<FinalProps> {\n  render() {\n    const {\n      productsQuery,\n      productsCountQuery,\n      productsRemove,\n      queryParams,\n      productCategoryDetailQuery\n    } = this.props;\n\n    const products = productsQuery.products || [];\n\n    // remove action\n    const remove = ({ productIds }, emptyBulk) => {\n      productsRemove({\n        variables: { productIds }\n      })\n        .then(() => {\n          emptyBulk();\n          Alert.success('You successfully deleted a product');\n        })\n        .catch(e => {\n          Alert.error(e.message);\n        });\n    };\n\n    const searchValue = this.props.queryParams.searchValue || '';\n\n    const updatedProps = {\n      ...this.props,\n      queryParams,\n      products,\n      remove,\n      loading: productsQuery.loading,\n      searchValue,\n      productsCount: productsCountQuery.productsTotalCount || 0,\n      currentCategory: productCategoryDetailQuery.productCategoryDetail || {}\n    };\n\n    const productList = props => {\n      return <List {...updatedProps} {...props} />;\n    };\n\n    const refetch = () => {\n      this.props.productsQuery.refetch();\n    };\n\n    return <Bulk content={productList} refetch={refetch} />;\n  }\n}\n\nconst getRefetchQueries = () => {\n  return [\n    'products',\n    'productCategorires',\n    'productCategoriesCount',\n    'productsTotalCount',\n    'productCountByTags'\n  ];\n};\n\nconst options = () => ({\n  refetchQueries: getRefetchQueries()\n});\n\nexport default withProps<Props>(\n  compose(\n    graphql<Props, ProductsQueryResponse, { page: number; perPage: number }>(\n      gql(queries.products),\n      {\n        name: 'productsQuery',\n        options: ({ queryParams }) => ({\n          variables: {\n            categoryId: queryParams.categoryId,\n            tag: queryParams.tag,\n            searchValue: queryParams.searchValue,\n            type: queryParams.type,\n            ...generatePaginationParams(queryParams)\n          }\n        })\n      }\n    ),\n    graphql<Props, ProductsCountQueryResponse>(gql(queries.productsCount), {\n      name: 'productsCountQuery'\n    }),\n    graphql<Props, ProductRemoveMutationResponse, { productIds: string[] }>(\n      gql(mutations.productsRemove),\n      {\n        name: 'productsRemove',\n        options\n      }\n    ),\n    graphql<Props, CategoryDetailQueryResponse>(\n      gql(queries.productCategoryDetail),\n      {\n        name: 'productCategoryDetailQuery',\n        options: ({ queryParams }) => ({\n          variables: {\n            _id: queryParams.categoryId\n          }\n        })\n      }\n    )\n  )(ProductListContainer)\n);\n"]},"metadata":{},"sourceType":"module"}