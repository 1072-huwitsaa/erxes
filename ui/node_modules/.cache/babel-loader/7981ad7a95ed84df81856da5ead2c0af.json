{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/email/components/Signature.tsx\";\nimport Button from 'modules/common/components/Button';\nimport EditorCK from 'modules/common/components/EditorCK';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport Info from 'modules/common/components/Info';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { __, Alert } from 'modules/common/utils';\nimport { MAIL_TOOLBARS_CONFIG } from 'modules/settings/integrations/constants';\nimport React from 'react';\n\nvar Signature =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Signature, _React$Component);\n\n  function Signature(props) {\n    var _this;\n\n    _classCallCheck(this, Signature);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Signature).call(this, props));\n\n    _this.onChangeContent = function (e) {\n      var content = e.editor.getData();\n\n      _this.setState({\n        content: content\n      });\n\n      var current = _this.getCurrent(_this.state.currentId);\n\n      if (current) {\n        current.signature = content;\n\n        _this.setState({\n          signatures: _this.state.signatures\n        });\n      }\n    };\n\n    _this.getCurrent = function (currentId) {\n      if (!currentId) {\n        return {\n          signature: ''\n        };\n      }\n\n      return _this.state.signatures.find(function (signature) {\n        return (signature.brandId || '').toString() === currentId;\n      });\n    };\n\n    _this.changeCurrent = function (e) {\n      var currentId = e.target.value;\n\n      _this.setState({\n        currentId: currentId\n      });\n\n      var current = _this.getCurrent(currentId);\n\n      return _this.setState({\n        content: current && current.signature || ''\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var _this$props = _this.props,\n          save = _this$props.save,\n          closeModal = _this$props.closeModal;\n\n      if (!_this.state.currentId) {\n        return Alert.error('Select a brand');\n      }\n\n      save(_this.state.signatures, closeModal);\n    };\n\n    _this.state = {\n      signatures: props.signatures,\n      currentId: undefined,\n      content: ''\n    };\n    return _this;\n  }\n\n  _createClass(Signature, [{\n    key: \"renderSignatureEditor\",\n    value: function renderSignatureEditor() {\n      if (!this.state.currentId) {\n        return React.createElement(EmptyState, {\n          text: \"Nothing selected\",\n          image: \"/images/actions/29.svg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Signature\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, __('An email signature is an opportunity to share information that helps build recognition and trust.')), React.createElement(EditorCK, {\n        content: this.state.content,\n        toolbar: MAIL_TOOLBARS_CONFIG,\n        autoFocus: true,\n        autoGrow: true,\n        autoGrowMinHeight: 160,\n        onChange: this.onChangeContent,\n        name: \"signature_\".concat(this.state.currentId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, __('You can use Markdown to format your signature.')), React.createElement(\"form\", {\n        id: \"signature-form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Choose a brand\"), React.createElement(FormControl, {\n        componentClass: \"select\",\n        onChange: this.changeCurrent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"------------\"), this.props.signatures.map(function (signature) {\n        return React.createElement(\"option\", {\n          key: signature.brandId,\n          value: signature.brandId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, signature.brandName);\n      }))), this.renderSignatureEditor(), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        onClick: this.props.closeModal,\n        icon: \"times-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Close\"), React.createElement(Button, {\n        btnStyle: \"success\",\n        type: \"submit\",\n        icon: \"check-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Save\"))));\n    }\n  }]);\n\n  return Signature;\n}(React.Component);\n\nexport default Signature;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/email/components/Signature.tsx"],"names":["Button","EditorCK","EmptyState","FormControl","FormGroup","ControlLabel","Info","ModalFooter","__","Alert","MAIL_TOOLBARS_CONFIG","React","Signature","props","onChangeContent","e","content","editor","getData","setState","current","getCurrent","state","currentId","signature","signatures","find","brandId","toString","changeCurrent","target","value","handleSubmit","preventDefault","save","closeModal","error","undefined","map","brandName","renderSignatureEditor","Component"],"mappings":"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","sourcesContent":["import Button from 'modules/common/components/Button';\nimport EditorCK from 'modules/common/components/EditorCK';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport Info from 'modules/common/components/Info';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { __, Alert } from 'modules/common/utils';\nimport { MAIL_TOOLBARS_CONFIG } from 'modules/settings/integrations/constants';\nimport React from 'react';\nimport { IEmailSignatureWithBrand } from '../types';\n\ntype Props = {\n  signatures: IEmailSignatureWithBrand[];\n  save: (signatures: IEmailSignatureWithBrand[], callback: () => void) => void;\n  closeModal: () => void;\n};\n\ntype State = {\n  signatures: IEmailSignatureWithBrand[];\n  currentId?: string;\n  content: string;\n};\n\nclass Signature extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      signatures: props.signatures,\n      currentId: undefined,\n      content: ''\n    };\n  }\n\n  onChangeContent = e => {\n    const content = e.editor.getData();\n    this.setState({ content });\n\n    const current = this.getCurrent(this.state.currentId);\n\n    if (current) {\n      current.signature = content;\n\n      this.setState({ signatures: this.state.signatures });\n    }\n  };\n\n  getCurrent = (currentId?: string) => {\n    if (!currentId) {\n      return { signature: '' };\n    }\n\n    return this.state.signatures.find(\n      signature => (signature.brandId || '').toString() === currentId\n    );\n  };\n\n  changeCurrent = e => {\n    const currentId = e.target.value;\n\n    this.setState({ currentId });\n\n    const current = this.getCurrent(currentId);\n\n    return this.setState({ content: (current && current.signature) || '' });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { save, closeModal } = this.props;\n\n    if (!this.state.currentId) {\n      return Alert.error('Select a brand');\n    }\n\n    save(this.state.signatures, closeModal);\n  };\n\n  renderSignatureEditor() {\n    if (!this.state.currentId) {\n      return (\n        <EmptyState text=\"Nothing selected\" image=\"/images/actions/29.svg\" />\n      );\n    }\n\n    return (\n      <FormGroup>\n        <ControlLabel>Signature</ControlLabel>\n        <p>\n          {__(\n            'An email signature is an opportunity to share information that helps build recognition and trust.'\n          )}\n        </p>\n\n        <EditorCK\n          content={this.state.content}\n          toolbar={MAIL_TOOLBARS_CONFIG}\n          autoFocus={true}\n          autoGrow={true}\n          autoGrowMinHeight={160}\n          onChange={this.onChangeContent}\n          name={`signature_${this.state.currentId}`}\n        />\n      </FormGroup>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <Info>{__('You can use Markdown to format your signature.')}</Info>\n\n        <form id=\"signature-form\" onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <ControlLabel required={true}>Choose a brand</ControlLabel>\n\n            <FormControl componentClass=\"select\" onChange={this.changeCurrent}>\n              <option value=\"\">------------</option>\n\n              {this.props.signatures.map(signature => (\n                <option key={signature.brandId} value={signature.brandId}>\n                  {signature.brandName}\n                </option>\n              ))}\n            </FormControl>\n          </FormGroup>\n\n          {this.renderSignatureEditor()}\n          <ModalFooter>\n            <Button\n              btnStyle=\"simple\"\n              onClick={this.props.closeModal}\n              icon=\"times-circle\"\n              uppercase={false}\n            >\n              Close\n            </Button>\n\n            <Button btnStyle=\"success\" type=\"submit\" icon=\"check-circle\" uppercase={false}>\n              Save\n            </Button>\n          </ModalFooter>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Signature;\n"]},"metadata":{},"sourceType":"module"}