{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/checklists/components/AddForm.tsx\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport { FormFooter } from \"modules/boards/styles/item\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport * as React from \"react\";\n\nvar AddForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddForm, _React$Component);\n\n  function AddForm(props) {\n    var _this;\n\n    _classCallCheck(this, AddForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddForm).call(this, props));\n\n    _this.generateDoc = function (values) {\n      var _this$props = _this.props,\n          itemId = _this$props.itemId,\n          type = _this$props.type;\n      var title = _this.state.title;\n      var finalValues = values;\n      return {\n        title: finalValues.title || title,\n        contentType: type,\n        contentTypeId: itemId\n      };\n    };\n\n    _this.onChangeTitle = function (e) {\n      return _this.setState({\n        title: e.currentTarget.value\n      });\n    };\n\n    _this.close = function () {\n      var afterSave = _this.props.afterSave;\n\n      if (afterSave) {\n        afterSave();\n      }\n    };\n\n    _this.handleFocus = function (event) {\n      return event.target.select();\n    };\n\n    _this.renderContent = function (formProps) {\n      var renderButton = _this.props.renderButton;\n      var isSubmitted = formProps.isSubmitted,\n          values = formProps.values;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Name\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        autoFocus: true,\n        onChange: _this.onChangeTitle,\n        value: _this.state.title,\n        placeholder: \"Checklist\",\n        onFocus: _this.handleFocus,\n        name: \"title\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))), React.createElement(FormFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        icon: \"times\",\n        onClick: _this.close,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Close\"), renderButton({\n        values: _this.generateDoc(values),\n        isSubmitted: isSubmitted,\n        callback: _this.close\n      })));\n    };\n\n    _this.state = {\n      title: \"Checklist\"\n    };\n    return _this;\n  }\n\n  _createClass(AddForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return AddForm;\n}(React.Component);\n\nexport default AddForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/checklists/components/AddForm.tsx"],"names":["Button","FormFooter","FormControl","Form","ControlLabel","React","AddForm","props","generateDoc","values","itemId","type","title","state","finalValues","contentType","contentTypeId","onChangeTitle","e","setState","currentTarget","value","close","afterSave","handleFocus","event","target","select","renderContent","formProps","renderButton","isSubmitted","callback","Component"],"mappings":"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","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport { FormFooter } from \"modules/boards/styles/item\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport Form from \"modules/common/components/form/Form\";\nimport ControlLabel from \"modules/common/components/form/Label\";\nimport { IButtonMutateProps, IFormProps } from \"modules/common/types\";\nimport * as React from \"react\";\n\ntype IProps = {\n  itemId: string;\n  type: string;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  afterSave?: () => void;\n};\n\ntype State = {\n  title: string;\n};\n\nclass AddForm extends React.Component<IProps, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"Checklist\",\n    };\n  }\n\n  generateDoc = (values: {\n    title: string;\n    contentType: string;\n    contentTypeId: string;\n  }) => {\n    const { itemId, type } = this.props;\n    const { title } = this.state;\n\n    const finalValues = values;\n\n    return {\n      title: finalValues.title || title,\n      contentType: type,\n      contentTypeId: itemId,\n    };\n  };\n\n  onChangeTitle = (e) =>\n    this.setState({ title: (e.currentTarget as HTMLInputElement).value });\n\n  close = () => {\n    const { afterSave } = this.props;\n\n    if (afterSave) {\n      afterSave();\n    }\n  };\n\n  handleFocus = (event) => event.target.select();\n\n  renderContent = (formProps: IFormProps) => {\n    const { renderButton } = this.props;\n    const { isSubmitted, values } = formProps;\n\n    return (\n      <>\n        <div>\n          <ControlLabel required={true}>Name</ControlLabel>\n          <FormControl\n            {...formProps}\n            autoFocus={true}\n            onChange={this.onChangeTitle}\n            value={this.state.title}\n            placeholder=\"Checklist\"\n            onFocus={this.handleFocus}\n            name=\"title\"\n            required={true}\n          />\n        </div>\n        <FormFooter>\n          <Button\n            btnStyle=\"simple\"\n            icon=\"times\"\n            onClick={this.close}\n            size=\"small\"\n          >\n            Close\n          </Button>\n\n          {renderButton({\n            values: this.generateDoc(values),\n            isSubmitted,\n            callback: this.close,\n          })}\n        </FormFooter>\n      </>\n    );\n  };\n\n  render() {\n    return <Form renderContent={this.renderContent} />;\n  }\n}\n\nexport default AddForm;\n"]},"metadata":{},"sourceType":"module"}