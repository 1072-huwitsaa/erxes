{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/assignBox/AssignBox.tsx\";\nimport client from 'apolloClient';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash/debounce';\nimport FilterableList from 'modules/common/components/filterableList/FilterableList';\nimport { __, getUserAvatar } from 'modules/common/utils';\nimport Alert from 'modules/common/utils/Alert';\nimport React from 'react';\nimport { queries } from '../../graphql';\n\nvar AssignBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AssignBox, _React$Component);\n\n  function AssignBox(props) {\n    var _this;\n\n    _classCallCheck(this, AssignBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssignBox).call(this, props));\n\n    _this.fetchUsers = function (e) {\n      var searchValue = e ? e.target.value : '';\n      debounce(function () {\n        client.query({\n          query: gql(queries.userList),\n          variables: {\n            perPage: 20,\n            searchValue: searchValue,\n            requireUsername: true\n          }\n        }).then(function (response) {\n          var verifiedUsers = (response.data.users || []).filter(function (user) {\n            return user.username;\n          }) || [];\n\n          _this.setState({\n            loading: response.loading,\n            assigneesForList: _this.generateAssignParams(verifiedUsers, _this.props.targets)\n          });\n        }).catch(function (error) {\n          Alert.error(error.message);\n        });\n      }, 500)();\n    };\n\n    _this.assign = function (items, id) {\n      var _this$props = _this.props,\n          assign = _this$props.assign,\n          targets = _this$props.targets,\n          afterSave = _this$props.afterSave;\n      assign({\n        conversationIds: targets.map(function (a) {\n          return a._id;\n        }),\n        assignedUserId: id\n      }, function (error) {\n        if (error) {\n          Alert.error(error.message);\n        }\n      });\n\n      if (afterSave) {\n        afterSave();\n      }\n    };\n\n    _this.removeAssignee = function () {\n      var _this$props2 = _this.props,\n          clear = _this$props2.clear,\n          targets = _this$props2.targets,\n          afterSave = _this$props2.afterSave;\n      clear(targets.map(function (t) {\n        return t._id;\n      }), function (error) {\n        if (error) {\n          Alert.error(\"Error: \".concat(error.message));\n        }\n      });\n\n      if (afterSave) {\n        afterSave();\n      }\n    };\n\n    _this.state = {\n      assigneesForList: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(AssignBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchUsers();\n    }\n  }, {\n    key: \"generateAssignParams\",\n    value: function generateAssignParams() {\n      var assignees = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var targets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      return assignees.map(function (assignee) {\n        var count = targets.reduce(function (memo, target) {\n          var index = 0;\n\n          if (target.assignedUserId && target.assignedUserId.indexOf(assignee._id) > -1) {\n            index += 1;\n          }\n\n          return memo + index;\n        }, 0);\n        var state = 'none';\n\n        if (count === targets.length) {\n          state = 'all';\n        } else if (count < targets.length && count > 0) {\n          state = 'some';\n        }\n\n        return {\n          _id: assignee._id,\n          title: assignee.details && assignee.details.fullName || assignee.email,\n          avatar: getUserAvatar(assignee),\n          selectedBy: state\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          event = _this$props3.event,\n          className = _this$props3.className;\n      var links = [{\n        title: __('Remove assignee'),\n        href: '#',\n        onClick: this.removeAssignee\n      }];\n      var props = {\n        className: className,\n        links: links,\n        selectable: true,\n        loading: this.state.loading,\n        items: this.state.assigneesForList,\n        onSearch: this.fetchUsers\n      };\n\n      if (event) {\n        props[event] = this.assign;\n      }\n\n      return React.createElement(FilterableList, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AssignBox;\n}(React.Component);\n\nexport default AssignBox;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/assignBox/AssignBox.tsx"],"names":["client","gql","debounce","FilterableList","__","getUserAvatar","Alert","React","queries","AssignBox","props","fetchUsers","e","searchValue","target","value","query","userList","variables","perPage","requireUsername","then","response","verifiedUsers","data","users","filter","user","username","setState","loading","assigneesForList","generateAssignParams","targets","catch","error","message","assign","items","id","afterSave","conversationIds","map","a","_id","assignedUserId","removeAssignee","clear","t","state","assignees","assignee","count","reduce","memo","index","indexOf","length","title","details","fullName","email","avatar","selectedBy","event","className","links","href","onClick","selectable","onSearch","Component"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AACA,SAASC,EAAT,EAAaC,aAAb,QAAkC,sBAAlC;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,eAAxB;;IA4BMC,S;;;;;AACJ,qBAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACxB,mFAAMA,KAAN;;AADwB,UAa1BC,UAb0B,GAab,UAACC,CAAD,EAAQ;AACnB,UAAMC,WAAW,GAAGD,CAAC,GAAGA,CAAC,CAACE,MAAF,CAASC,KAAZ,GAAoB,EAAzC;AAEAb,MAAAA,QAAQ,CAAC,YAAM;AACbF,QAAAA,MAAM,CACHgB,KADH,CACS;AACLA,UAAAA,KAAK,EAAEf,GAAG,CAACO,OAAO,CAACS,QAAT,CADL;AAELC,UAAAA,SAAS,EAAE;AACTC,YAAAA,OAAO,EAAE,EADA;AAETN,YAAAA,WAAW,EAAXA,WAFS;AAGTO,YAAAA,eAAe,EAAE;AAHR;AAFN,SADT,EASGC,IATH,CASQ,UAACC,QAAD,EAA+D;AACnE,cAAMC,aAAa,GACjB,CAACD,QAAQ,CAACE,IAAT,CAAcC,KAAd,IAAuB,EAAxB,EAA4BC,MAA5B,CAAmC,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACC,QAAT;AAAA,WAAvC,KAA6D,EAD/D;;AAGA,gBAAKC,QAAL,CAAc;AACZC,YAAAA,OAAO,EAAER,QAAQ,CAACQ,OADN;AAEZC,YAAAA,gBAAgB,EAAE,MAAKC,oBAAL,CAChBT,aADgB,EAEhB,MAAKb,KAAL,CAAWuB,OAFK;AAFN,WAAd;AAOD,SApBH,EAqBGC,KArBH,CAqBS,UAAAC,KAAK,EAAI;AACd7B,UAAAA,KAAK,CAAC6B,KAAN,CAAYA,KAAK,CAACC,OAAlB;AACD,SAvBH;AAwBD,OAzBO,EAyBL,GAzBK,CAAR;AA0BD,KA1CyB;;AAAA,UA4E1BC,MA5E0B,GA4EjB,UAACC,KAAD,EAAqBC,EAArB,EAAoC;AAAA,wBACJ,MAAK7B,KADD;AAAA,UACnC2B,MADmC,eACnCA,MADmC;AAAA,UAC3BJ,OAD2B,eAC3BA,OAD2B;AAAA,UAClBO,SADkB,eAClBA,SADkB;AAG3CH,MAAAA,MAAM,CACJ;AACEI,QAAAA,eAAe,EAAER,OAAO,CAACS,GAAR,CAAY,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,GAAN;AAAA,SAAb,CADnB;AAEEC,QAAAA,cAAc,EAAEN;AAFlB,OADI,EAKJ,UAAAJ,KAAK,EAAI;AACP,YAAIA,KAAJ,EAAW;AACT7B,UAAAA,KAAK,CAAC6B,KAAN,CAAYA,KAAK,CAACC,OAAlB;AACD;AACF,OATG,CAAN;;AAYA,UAAII,SAAJ,EAAe;AACbA,QAAAA,SAAS;AACV;AACF,KA9FyB;;AAAA,UAgG1BM,cAhG0B,GAgGT,YAAM;AAAA,yBACiB,MAAKpC,KADtB;AAAA,UACbqC,KADa,gBACbA,KADa;AAAA,UACNd,OADM,gBACNA,OADM;AAAA,UACGO,SADH,gBACGA,SADH;AAGrBO,MAAAA,KAAK,CACHd,OAAO,CAACS,GAAR,CAAY,UAAAM,CAAC;AAAA,eAAIA,CAAC,CAACJ,GAAN;AAAA,OAAb,CADG,EAEH,UAAAT,KAAK,EAAI;AACP,YAAIA,KAAJ,EAAW;AACT7B,UAAAA,KAAK,CAAC6B,KAAN,kBAAsBA,KAAK,CAACC,OAA5B;AACD;AACF,OANE,CAAL;;AASA,UAAII,SAAJ,EAAe;AACbA,QAAAA,SAAS;AACV;AACF,KA/GyB;;AAGxB,UAAKS,KAAL,GAAa;AACXlB,MAAAA,gBAAgB,EAAE,EADP;AAEXD,MAAAA,OAAO,EAAE;AAFE,KAAb;AAHwB;AAOzB;;;;wCAEmB;AAClB,WAAKnB,UAAL;AACD;;;2CAiC4E;AAAA,UAAxDuC,SAAwD,uEAAnC,EAAmC;AAAA,UAA/BjB,OAA+B,uEAAJ,EAAI;AAC3E,aAAOiB,SAAS,CAACR,GAAV,CAAc,UAAAS,QAAQ,EAAI;AAC/B,YAAMC,KAAK,GAAGnB,OAAO,CAACoB,MAAR,CAAe,UAACC,IAAD,EAAOxC,MAAP,EAAkB;AAC7C,cAAIyC,KAAK,GAAG,CAAZ;;AAEA,cACEzC,MAAM,CAAC+B,cAAP,IACA/B,MAAM,CAAC+B,cAAP,CAAsBW,OAAtB,CAA8BL,QAAQ,CAACP,GAAvC,IAA8C,CAAC,CAFjD,EAGE;AACAW,YAAAA,KAAK,IAAI,CAAT;AACD;;AAED,iBAAOD,IAAI,GAAGC,KAAd;AACD,SAXa,EAWX,CAXW,CAAd;AAaA,YAAIN,KAAK,GAAG,MAAZ;;AACA,YAAIG,KAAK,KAAKnB,OAAO,CAACwB,MAAtB,EAA8B;AAC5BR,UAAAA,KAAK,GAAG,KAAR;AACD,SAFD,MAEO,IAAIG,KAAK,GAAGnB,OAAO,CAACwB,MAAhB,IAA0BL,KAAK,GAAG,CAAtC,EAAyC;AAC9CH,UAAAA,KAAK,GAAG,MAAR;AACD;;AAED,eAAO;AACLL,UAAAA,GAAG,EAAEO,QAAQ,CAACP,GADT;AAELc,UAAAA,KAAK,EACFP,QAAQ,CAACQ,OAAT,IAAoBR,QAAQ,CAACQ,OAAT,CAAiBC,QAAtC,IAAmDT,QAAQ,CAACU,KAHzD;AAILC,UAAAA,MAAM,EAAEzD,aAAa,CAAC8C,QAAD,CAJhB;AAKLY,UAAAA,UAAU,EAAEd;AALP,SAAP;AAOD,OA5BM,CAAP;AA6BD;;;6BAuCQ;AAAA,yBACsB,KAAKvC,KAD3B;AAAA,UACCsD,KADD,gBACCA,KADD;AAAA,UACQC,SADR,gBACQA,SADR;AAGP,UAAMC,KAAK,GAAG,CACZ;AACER,QAAAA,KAAK,EAAEtD,EAAE,CAAC,iBAAD,CADX;AAEE+D,QAAAA,IAAI,EAAE,GAFR;AAGEC,QAAAA,OAAO,EAAE,KAAKtB;AAHhB,OADY,CAAd;AAQA,UAAMpC,KAAK,GAAG;AACZuD,QAAAA,SAAS,EAATA,SADY;AAEZC,QAAAA,KAAK,EAALA,KAFY;AAGZG,QAAAA,UAAU,EAAE,IAHA;AAIZvC,QAAAA,OAAO,EAAE,KAAKmB,KAAL,CAAWnB,OAJR;AAKZQ,QAAAA,KAAK,EAAE,KAAKW,KAAL,CAAWlB,gBALN;AAMZuC,QAAAA,QAAQ,EAAE,KAAK3D;AANH,OAAd;;AASA,UAAIqD,KAAJ,EAAW;AACTtD,QAAAA,KAAK,CAACsD,KAAD,CAAL,GAAe,KAAK3B,MAApB;AACD;;AAED,aAAO,oBAAC,cAAD,oBAAoB3B,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EA3IqBH,KAAK,CAACgE,S;;AA8I9B,eAAe9D,SAAf","sourcesContent":["import client from 'apolloClient';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash/debounce';\nimport FilterableList from 'modules/common/components/filterableList/FilterableList';\nimport { __, getUserAvatar } from 'modules/common/utils';\nimport Alert from 'modules/common/utils/Alert';\nimport React from 'react';\nimport { IUser } from '../../../auth/types';\nimport { queries } from '../../graphql';\nimport { IConversation } from '../../types';\n\ninterface IAssignee {\n  _id: string;\n  title?: string;\n  avatar?: string;\n  selectedBy: string;\n}\n\ntype Props = {\n  targets: IConversation[];\n  event?: string;\n  className?: string;\n  afterSave?: () => void;\n  // from containers\n  assign: (\n    doc: { conversationIds?: string[]; assignedUserId: string },\n    callback: (error: Error) => void\n  ) => void;\n  clear: (userIds: string[], callback: (error: Error) => void) => void;\n};\n\ntype State = {\n  assigneesForList: IAssignee[];\n  loading: boolean;\n};\n\nclass AssignBox extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      assigneesForList: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n  }\n\n  fetchUsers = (e?) => {\n    const searchValue = e ? e.target.value : '';\n\n    debounce(() => {\n      client\n        .query({\n          query: gql(queries.userList),\n          variables: {\n            perPage: 20,\n            searchValue,\n            requireUsername: true\n          }\n        })\n        .then((response: { loading: boolean; data: { users?: IUser[] } }) => {\n          const verifiedUsers =\n            (response.data.users || []).filter(user => user.username) || [];\n\n          this.setState({\n            loading: response.loading,\n            assigneesForList: this.generateAssignParams(\n              verifiedUsers,\n              this.props.targets\n            )\n          });\n        })\n        .catch(error => {\n          Alert.error(error.message);\n        });\n    }, 500)();\n  };\n\n  generateAssignParams(assignees: IUser[] = [], targets: IConversation[] = []) {\n    return assignees.map(assignee => {\n      const count = targets.reduce((memo, target) => {\n        let index = 0;\n\n        if (\n          target.assignedUserId &&\n          target.assignedUserId.indexOf(assignee._id) > -1\n        ) {\n          index += 1;\n        }\n\n        return memo + index;\n      }, 0);\n\n      let state = 'none';\n      if (count === targets.length) {\n        state = 'all';\n      } else if (count < targets.length && count > 0) {\n        state = 'some';\n      }\n\n      return {\n        _id: assignee._id,\n        title:\n          (assignee.details && assignee.details.fullName) || assignee.email,\n        avatar: getUserAvatar(assignee),\n        selectedBy: state\n      };\n    });\n  }\n\n  assign = (items: IAssignee[], id: string) => {\n    const { assign, targets, afterSave } = this.props;\n\n    assign(\n      {\n        conversationIds: targets.map(a => a._id),\n        assignedUserId: id\n      },\n      error => {\n        if (error) {\n          Alert.error(error.message);\n        }\n      }\n    );\n\n    if (afterSave) {\n      afterSave();\n    }\n  };\n\n  removeAssignee = () => {\n    const { clear, targets, afterSave } = this.props;\n\n    clear(\n      targets.map(t => t._id),\n      error => {\n        if (error) {\n          Alert.error(`Error: ${error.message}`);\n        }\n      }\n    );\n\n    if (afterSave) {\n      afterSave();\n    }\n  };\n\n  render() {\n    const { event, className } = this.props;\n\n    const links = [\n      {\n        title: __('Remove assignee'),\n        href: '#',\n        onClick: this.removeAssignee\n      }\n    ];\n\n    const props = {\n      className,\n      links,\n      selectable: true,\n      loading: this.state.loading,\n      items: this.state.assigneesForList,\n      onSearch: this.fetchUsers\n    };\n\n    if (event) {\n      props[event] = this.assign;\n    }\n\n    return <FilterableList {...props} />;\n  }\n}\n\nexport default AssignBox;\n"]},"metadata":{},"sourceType":"module"}