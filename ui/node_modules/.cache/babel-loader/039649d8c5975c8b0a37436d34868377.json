{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/properties/containers/PropertyGroupForm.tsx\";\nimport gql from 'graphql-tag';\nimport ButtonMutate from 'modules/common/components/ButtonMutate';\nimport React from 'react';\nimport PropertyGroupForm from '../components/PropertyGroupForm';\nimport { mutations, queries } from '../graphql';\n\nvar PropertyGroupFormContainer = function PropertyGroupFormContainer(props) {\n  var queryParams = props.queryParams;\n  var type = queryParams.type;\n\n  var renderButton = function renderButton(_ref) {\n    var name = _ref.name,\n        values = _ref.values,\n        isSubmitted = _ref.isSubmitted,\n        callback = _ref.callback,\n        object = _ref.object;\n    return React.createElement(ButtonMutate, {\n      mutation: object ? mutations.fieldsGroupsEdit : mutations.fieldsGroupsAdd,\n      variables: values,\n      callback: callback,\n      refetchQueries: getRefetchQueries(queryParams),\n      isSubmitted: isSubmitted,\n      type: \"submit\",\n      uppercase: false,\n      icon: \"check-circle\",\n      successMessage: \"You successfully \".concat(object ? 'updated' : 'added', \" a \").concat(name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  };\n\n  var updatedProps = _objectSpread({}, props, {\n    type: type,\n    renderButton: renderButton\n  });\n\n  return React.createElement(PropertyGroupForm, Object.assign({}, updatedProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n\nvar getRefetchQueries = function getRefetchQueries(queryParams) {\n  return [{\n    query: gql(queries.fieldsGroups),\n    variables: {\n      contentType: queryParams.type\n    }\n  }];\n};\n\nexport default PropertyGroupFormContainer;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/properties/containers/PropertyGroupForm.tsx"],"names":["gql","ButtonMutate","React","PropertyGroupForm","mutations","queries","PropertyGroupFormContainer","props","queryParams","type","renderButton","name","values","isSubmitted","callback","object","fieldsGroupsEdit","fieldsGroupsAdd","getRefetchQueries","updatedProps","query","fieldsGroups","variables","contentType"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,YAAnC;;AAOA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,KAAD,EAAkB;AAAA,MAC3CC,WAD2C,GAC3BD,KAD2B,CAC3CC,WAD2C;AAAA,MAE3CC,IAF2C,GAElCD,WAFkC,CAE3CC,IAF2C;;AAInD,MAAMC,YAAY,GAAG,SAAfA,YAAe,OAMK;AAAA,QALxBC,IAKwB,QALxBA,IAKwB;AAAA,QAJxBC,MAIwB,QAJxBA,MAIwB;AAAA,QAHxBC,WAGwB,QAHxBA,WAGwB;AAAA,QAFxBC,QAEwB,QAFxBA,QAEwB;AAAA,QADxBC,MACwB,QADxBA,MACwB;AACxB,WACE,oBAAC,YAAD;AACE,MAAA,QAAQ,EACNA,MAAM,GAAGX,SAAS,CAACY,gBAAb,GAAgCZ,SAAS,CAACa,eAFpD;AAIE,MAAA,SAAS,EAAEL,MAJb;AAKE,MAAA,QAAQ,EAAEE,QALZ;AAME,MAAA,cAAc,EAAEI,iBAAiB,CAACV,WAAD,CANnC;AAOE,MAAA,WAAW,EAAEK,WAPf;AAQE,MAAA,IAAI,EAAC,QARP;AASE,MAAA,SAAS,EAAE,KATb;AAUE,MAAA,IAAI,EAAC,cAVP;AAWE,MAAA,cAAc,6BACZE,MAAM,GAAG,SAAH,GAAe,OADT,gBAERJ,IAFQ,CAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAiBD,GAxBD;;AA0BA,MAAMQ,YAAY,qBACbZ,KADa;AAEhBE,IAAAA,IAAI,EAAJA,IAFgB;AAGhBC,IAAAA,YAAY,EAAZA;AAHgB,IAAlB;;AAMA,SAAO,oBAAC,iBAAD,oBAAuBS,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CArCD;;AAuCA,IAAMD,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAV,WAAW,EAAI;AACvC,SAAO,CACL;AACEY,IAAAA,KAAK,EAAEpB,GAAG,CAACK,OAAO,CAACgB,YAAT,CADZ;AAEEC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,WAAW,EAAEf,WAAW,CAACC;AAA3B;AAFb,GADK,CAAP;AAMD,CAPD;;AASA,eAAeH,0BAAf","sourcesContent":["import gql from 'graphql-tag';\nimport ButtonMutate from 'modules/common/components/ButtonMutate';\nimport { IButtonMutateProps } from 'modules/common/types';\nimport React from 'react';\nimport PropertyGroupForm from '../components/PropertyGroupForm';\nimport { mutations, queries } from '../graphql';\n\ntype Props = {\n  queryParams: any;\n  closeModal: () => void;\n};\n\nconst PropertyGroupFormContainer = (props: Props) => {\n  const { queryParams } = props;\n  const { type } = queryParams;\n\n  const renderButton = ({\n    name,\n    values,\n    isSubmitted,\n    callback,\n    object\n  }: IButtonMutateProps) => {\n    return (\n      <ButtonMutate\n        mutation={\n          object ? mutations.fieldsGroupsEdit : mutations.fieldsGroupsAdd\n        }\n        variables={values}\n        callback={callback}\n        refetchQueries={getRefetchQueries(queryParams)}\n        isSubmitted={isSubmitted}\n        type=\"submit\"\n        uppercase={false}\n        icon=\"check-circle\"\n        successMessage={`You successfully ${\n          object ? 'updated' : 'added'\n        } a ${name}`}\n      />\n    );\n  };\n\n  const updatedProps = {\n    ...props,\n    type,\n    renderButton\n  };\n\n  return <PropertyGroupForm {...updatedProps} />;\n};\n\nconst getRefetchQueries = queryParams => {\n  return [\n    {\n      query: gql(queries.fieldsGroups),\n      variables: { contentType: queryParams.type }\n    }\n  ];\n};\n\nexport default PropertyGroupFormContainer;\n"]},"metadata":{},"sourceType":"module"}