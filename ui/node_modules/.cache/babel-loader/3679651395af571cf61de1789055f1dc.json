{"ast":null,"code":"import _toConsumableArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/robot/components/onboard/Customization.tsx\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  border: 1px solid \", \";\\n  background: \", \";\\n\\tpadding: 5px 16px;\\n\\tmargin-bottom: 8px\\n\\tflex: 1;\\n  border-radius: 4px;\\n  transition: all 0.3s ease;\\n  color: \", \";\\n\\n  &:last-child {\\n    margin-bottom: 0;\\n  }\\n\\n\\t&:hover {\\n\\t\\tcursor: pointer;\\n\\t}\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 20px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 425px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { colors } from 'modules/common/styles';\nimport { rgba } from 'modules/common/styles/color';\nimport { __ } from 'modules/common/utils';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport styledTS from 'styled-components-ts';\nimport { FEATURES } from '../../constants';\nimport { SubContent } from '../styles';\nvar Container = styled.div(_templateObject());\nvar Features = styled.div(_templateObject2());\nvar FeatureName = styledTS(styled.div)(_templateObject3(), function (props) {\n  return props.chosen ? colors.colorSecondary : '#ddd';\n}, function (props) {\n  return props.chosen && rgba(colors.colorSecondary, 0.1);\n}, function (props) {\n  return props.chosen ? colors.colorSecondary : colors.textPrimary;\n});\n\nfunction Customization(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      features = _useState2[0],\n      setFeatures = _useState2[1];\n\n  var saveFeatures = function saveFeatures() {\n    var featuresToSave = [];\n    features.map(function (feature) {\n      return featuresToSave.push(feature.key);\n    }); // save to localstorages\n\n    localStorage.setItem('erxes_customization_features', JSON.stringify(featuresToSave));\n    props.changeRoute('todoList');\n  };\n\n  var renderItem = function renderItem(item) {\n    var isChosen = features.includes(item);\n\n    var toggleItem = function toggleItem() {\n      if (isChosen) {\n        return setFeatures(features.filter(function (feature) {\n          return item.key !== feature.key;\n        }));\n      }\n\n      return setFeatures([].concat(_toConsumableArray(features), [item]));\n    };\n\n    return React.createElement(FeatureName, {\n      id: \"robot-item-\".concat(item.key),\n      key: item.key,\n      onClick: toggleItem,\n      chosen: isChosen,\n      dangerouslySetInnerHTML: {\n        __html: item.name\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(SubContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __('Where do you want to start'), \"?\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"There are a ton of things you can do with \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"erxes\"), \".\", __(\"Let's pick the place to start, and we'll help you to get the most out of it\"), \".\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"You can choose \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"at least two\"), \" fields in your priority order\"))), React.createElement(Features, {\n    id: \"robot-features\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, FEATURES.map(function (feature) {\n    return renderItem(feature);\n  })), props.renderButton('Finish', saveFeatures, 'check-circle', features.length < 2));\n}\n\nexport default Customization;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/robot/components/onboard/Customization.tsx"],"names":["colors","rgba","__","React","useState","styled","styledTS","FEATURES","SubContent","Container","div","Features","FeatureName","props","chosen","colorSecondary","textPrimary","Customization","features","setFeatures","saveFeatures","featuresToSave","map","feature","push","key","localStorage","setItem","JSON","stringify","changeRoute","renderItem","item","isChosen","includes","toggleItem","filter","__html","name","renderButton","length"],"mappings":"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","sourcesContent":["import { colors } from 'modules/common/styles';\nimport { rgba } from 'modules/common/styles/color';\nimport { __ } from 'modules/common/utils';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport styledTS from 'styled-components-ts';\nimport { FEATURES } from '../../constants';\nimport { IFeatureEntry } from '../../types';\nimport { SubContent } from '../styles';\n\nconst Container = styled.div`\n  width: 425px;\n`;\n\nconst Features = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n`;\n\nconst FeatureName = styledTS<{ chosen: boolean }>(styled.div)`\n  border: 1px solid ${props => (props.chosen ? colors.colorSecondary : '#ddd')};\n  background: ${props => props.chosen && rgba(colors.colorSecondary, 0.1)};\n\tpadding: 5px 16px;\n\tmargin-bottom: 8px\n\tflex: 1;\n  border-radius: 4px;\n  transition: all 0.3s ease;\n  color: ${props =>\n    props.chosen ? colors.colorSecondary : colors.textPrimary};\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`;\n\ntype Props = {\n  renderButton: (\n    text: string,\n    onClick,\n    icon: string,\n    disabled: boolean\n  ) => React.ReactNode;\n  changeRoute: (route: string) => void;\n};\n\nfunction Customization(props: Props) {\n  const [features, setFeatures] = useState<IFeatureEntry[]>([]);\n\n  const saveFeatures = () => {\n    const featuresToSave: string[] = [];\n\n    features.map(feature => {\n      return featuresToSave.push(feature.key);\n    });\n\n    // save to localstorages\n    localStorage.setItem(\n      'erxes_customization_features',\n      JSON.stringify(featuresToSave)\n    );\n\n    props.changeRoute('todoList');\n  };\n\n  const renderItem = (item: IFeatureEntry) => {\n    const isChosen = features.includes(item);\n\n    const toggleItem = () => {\n      if (isChosen) {\n        return setFeatures(\n          features.filter(feature => item.key !== feature.key)\n        );\n      }\n\n      return setFeatures([...features, item]);\n    };\n\n    return (\n      <FeatureName\n        id={`robot-item-${item.key}`}\n        key={item.key}\n        onClick={toggleItem}\n        chosen={isChosen}\n        dangerouslySetInnerHTML={{ __html: item.name }}\n      />\n    );\n  };\n\n  return (\n    <Container>\n      <SubContent>\n        <h3>{__('Where do you want to start')}?</h3>\n        <p>\n          There are a ton of things you can do with <strong>erxes</strong>.\n          {__(\n            \"Let's pick the place to start, and we'll help you to get the most out of it\"\n          )}\n          .\n        </p>\n        <p>\n          <i>\n            You can choose <strong>at least two</strong> fields in your priority\n            order\n          </i>\n        </p>\n      </SubContent>\n      <Features id=\"robot-features\">\n        {FEATURES.map(feature => renderItem(feature))}\n      </Features>\n      {props.renderButton(\n        'Finish',\n        saveFeatures,\n        'check-circle',\n        features.length < 2\n      )}\n    </Container>\n  );\n}\n\nexport default Customization;\n"]},"metadata":{},"sourceType":"module"}