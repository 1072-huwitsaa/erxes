{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactCustomScrollbars = require('react-custom-scrollbars');\n\nvar _Group = require('./Group');\n\nvar _Group2 = _interopRequireDefault(_Group);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Groups = function (_Component) {\n  _inherits(Groups, _Component);\n\n  function Groups() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Groups);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Groups.__proto__ || Object.getPrototypeOf(Groups)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      activeGroup: 0\n    }, _this.onScroll = function (values) {\n      var _this$props = _this.props,\n          groups = _this$props.groups,\n          onGroupScroll = _this$props.onGroupScroll;\n      var activeGroup = 0;\n      groups.forEach(function (group, index) {\n        if (values.scrollTop >= group.top) {\n          activeGroup = index;\n\n          _this.setState({\n            activeGroup: activeGroup\n          });\n        }\n      });\n      onGroupScroll(activeGroup);\n    }, _this.onWheel = function (e) {\n      // Disable page scroll, but enable groups scroll\n      var _this$scrollbars$getV = _this.scrollbars.getValues(),\n          clientHeight = _this$scrollbars$getV.clientHeight,\n          scrollHeight = _this$scrollbars$getV.scrollHeight,\n          scrollTop = _this$scrollbars$getV.scrollTop;\n\n      if (e.deltaY > 0) {\n        if (scrollTop < scrollHeight - clientHeight - e.deltaY) {\n          e.stopPropagation();\n        } else {\n          _this.scrollbars.scrollToBottom();\n        }\n      } else {\n        if (scrollTop > -e.deltaY) {\n          // eslint-disable-line no-lonely-if\n          e.stopPropagation();\n        } else {\n          _this.scrollbars.scrollTop();\n        }\n      }\n    }, _this.scrollToGroup = function (groupIndex) {\n      var groups = _this.props.groups;\n\n      _this.scrollbars.scrollTop(groups[groupIndex].topList);\n    }, _this.calculateBounds = function () {\n      var _this$scrollbars$getV2 = _this.scrollbars.getValues(),\n          scrollHeight = _this$scrollbars$getV2.scrollHeight,\n          scrollTop = _this$scrollbars$getV2.scrollTop;\n\n      if (scrollHeight) {\n        var groups = _this.props.groups;\n        var containerTop = _this.container.getBoundingClientRect().top - scrollTop;\n        groups.forEach(function (group) {\n          var groupTop = group.instance.container.getBoundingClientRect().top;\n          var listTop = group.instance.list.getBoundingClientRect().top;\n          group.top = groupTop - containerTop; // eslint-disable-line no-param-reassign\n\n          group.topList = listTop - containerTop; // eslint-disable-line no-param-reassign\n        });\n      }\n    }, _this.isRenderedGroupActive = function (index) {\n      var activeGroup = _this.state.activeGroup;\n      var isOpen = _this.props.isOpen;\n      return activeGroup === index || isOpen && activeGroup + 1 === index; // we also preload next group when popup is open\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Groups, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.calculateBounds();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.calculateBounds();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          cacheBustParam = _props.cacheBustParam,\n          imagePath = _props.imagePath,\n          imageType = _props.imageType,\n          _props$theme = _props.theme,\n          theme = _props$theme === undefined ? {} : _props$theme,\n          _props$groups = _props.groups,\n          groups = _props$groups === undefined ? [] : _props$groups,\n          emojis = _props.emojis,\n          checkMouseDown = _props.checkMouseDown,\n          onEmojiSelect = _props.onEmojiSelect,\n          onEmojiMouseDown = _props.onEmojiMouseDown,\n          useNativeArt = _props.useNativeArt;\n      return _react2.default.createElement('div', {\n        className: theme.emojiSelectPopoverGroups,\n        onWheel: this.onWheel,\n        ref: function ref(element) {\n          _this2.container = element;\n        }\n      }, _react2.default.createElement(_reactCustomScrollbars.Scrollbars, {\n        onScrollFrame: this.onScroll,\n        renderTrackVertical: function renderTrackVertical() {\n          return _react2.default.createElement('div', {\n            className: theme.emojiSelectPopoverScrollbar\n          });\n        },\n        renderThumbVertical: function renderThumbVertical(props) {\n          return _react2.default.createElement('div', _extends({}, props, {\n            className: theme.emojiSelectPopoverScrollbarThumb\n          }));\n        },\n        ref: function ref(element) {\n          _this2.scrollbars = element;\n        }\n      }, groups.map(function (group, index) {\n        return _react2.default.createElement(_Group2.default, {\n          key: 'group#' + index + '[' + group.categories.join(',') + ']' // eslint-disable-line react/no-array-index-key\n          ,\n          theme: theme,\n          group: group,\n          emojis: emojis,\n          imagePath: imagePath,\n          imageType: imageType,\n          cacheBustParam: cacheBustParam,\n          checkMouseDown: checkMouseDown,\n          onEmojiSelect: onEmojiSelect,\n          onEmojiMouseDown: onEmojiMouseDown,\n          ref: function ref(element) {\n            group.instance = element; // eslint-disable-line no-param-reassign\n          },\n          useNativeArt: useNativeArt,\n          isActive: _this2.isRenderedGroupActive(index)\n        });\n      })));\n    }\n  }]);\n\n  return Groups;\n}(_react.Component);\n\nGroups.propTypes = {\n  cacheBustParam: _propTypes2.default.string.isRequired,\n  imagePath: _propTypes2.default.string.isRequired,\n  imageType: _propTypes2.default.string.isRequired,\n  theme: _propTypes2.default.object.isRequired,\n  groups: _propTypes2.default.arrayOf(_propTypes2.default.object).isRequired,\n  emojis: _propTypes2.default.object.isRequired,\n  checkMouseDown: _propTypes2.default.func.isRequired,\n  onEmojiSelect: _propTypes2.default.func.isRequired,\n  onEmojiMouseDown: _propTypes2.default.func.isRequired,\n  onGroupScroll: _propTypes2.default.func.isRequired,\n  useNativeArt: _propTypes2.default.bool,\n  isOpen: _propTypes2.default.bool\n};\nexports.default = Groups;","map":null,"metadata":{},"sourceType":"script"}