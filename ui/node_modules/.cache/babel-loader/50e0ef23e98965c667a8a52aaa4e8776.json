{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/containers/EmailForm.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withProps } from '../../common/utils';\nimport EmailForm from '../components/EmailForm';\nimport { queries } from '../graphql';\n\nvar EmailFormContainer = function EmailFormContainer(props) {\n  var engageVerifiedEmailsQuery = props.engageVerifiedEmailsQuery;\n  var verifiedEmails = engageVerifiedEmailsQuery.engageVerifiedEmails || [];\n  var error = engageVerifiedEmailsQuery.error;\n\n  var updatedProps = _objectSpread({}, props, {\n    error: error && error.message,\n    verifiedEmails: verifiedEmails\n  });\n\n  return React.createElement(EmailForm, Object.assign({}, updatedProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nexport default withProps(compose(graphql(gql(queries.verifiedEmails), {\n  name: 'engageVerifiedEmailsQuery'\n}))(EmailFormContainer));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/containers/EmailForm.tsx"],"names":["gql","compose","React","graphql","withProps","EmailForm","queries","EmailFormContainer","props","engageVerifiedEmailsQuery","verifiedEmails","engageVerifiedEmails","error","updatedProps","message","name"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAuB;AAAA,MACxCC,yBADwC,GACVD,KADU,CACxCC,yBADwC;AAGhD,MAAMC,cAAc,GAAGD,yBAAyB,CAACE,oBAA1B,IAAkD,EAAzE;AACA,MAAMC,KAAK,GAAGH,yBAAyB,CAACG,KAAxC;;AAEA,MAAMC,YAAY,qBACbL,KADa;AAEhBI,IAAAA,KAAK,EAAEA,KAAK,IAAIA,KAAK,CAACE,OAFN;AAGhBJ,IAAAA,cAAc,EAAdA;AAHgB,IAAlB;;AAMA,SAAO,oBAAC,SAAD,oBAAeG,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAbD;;AAeA,eAAeT,SAAS,CACtBH,OAAO,CACLE,OAAO,CACLH,GAAG,CAACM,OAAO,CAACI,cAAT,CADE,EAEL;AAAEK,EAAAA,IAAI,EAAE;AAAR,CAFK,CADF,CAAP,CAKER,kBALF,CADsB,CAAxB","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withProps } from '../../common/utils';\nimport EmailForm from '../components/EmailForm';\nimport { queries } from '../graphql';\nimport { EngageVerifiedEmailsQueryResponse, IEmailFormProps } from '../types';\n\ntype FinalProps = {\n  engageVerifiedEmailsQuery: EngageVerifiedEmailsQueryResponse;\n} & IEmailFormProps;\n\nconst EmailFormContainer = (props: FinalProps) => {\n  const { engageVerifiedEmailsQuery } = props;\n\n  const verifiedEmails = engageVerifiedEmailsQuery.engageVerifiedEmails || [];\n  const error = engageVerifiedEmailsQuery.error;\n\n  const updatedProps = {\n    ...props,\n    error: error && error.message,\n    verifiedEmails\n  };\n\n  return <EmailForm {...updatedProps} />;\n};\n\nexport default withProps<IEmailFormProps>(\n  compose(\n    graphql<IEmailFormProps, EngageVerifiedEmailsQueryResponse>(\n      gql(queries.verifiedEmails),\n      { name: 'engageVerifiedEmailsQuery' }\n    )\n  )(EmailFormContainer)\n);\n"]},"metadata":{},"sourceType":"module"}