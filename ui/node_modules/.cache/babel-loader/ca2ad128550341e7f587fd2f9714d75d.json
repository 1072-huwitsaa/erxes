{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/containers/AssignBox.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport Alert from 'modules/common/utils/Alert';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withProps } from '../../common/utils';\nimport AssignBox from '../components/assignBox/AssignBox';\nimport { mutations } from '../graphql';\nimport { refetchSidebarConversationsOptions } from '../utils';\n\nvar AssignBoxContainer = function AssignBoxContainer(props) {\n  var assignMutation = props.assignMutation,\n      conversationsUnassign = props.conversationsUnassign;\n\n  var assign = function assign(_ref, callback) {\n    var conversationIds = _ref.conversationIds,\n        assignedUserId = _ref.assignedUserId;\n    assignMutation({\n      variables: {\n        conversationIds: conversationIds,\n        assignedUserId: assignedUserId\n      }\n    }).then(function () {\n      Alert.success('The conversation Assignee has been renewed.');\n    }).catch(function (e) {\n      callback(e);\n      Alert.error(e.message);\n    });\n  };\n\n  var clear = function clear(conversationIds) {\n    conversationsUnassign({\n      variables: {\n        _ids: conversationIds\n      }\n    }).then(function () {\n      Alert.success('The conversation Assignee removed');\n    }).catch(function (e) {\n      Alert.error(e.message);\n    });\n  };\n\n  var updatedProps = _objectSpread({}, props, {\n    assign: assign,\n    clear: clear\n  });\n\n  return React.createElement(AssignBox, Object.assign({}, updatedProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n};\n\nexport default withProps(compose(graphql(gql(mutations.conversationsAssign), {\n  name: 'assignMutation',\n  options: function options() {\n    return refetchSidebarConversationsOptions();\n  }\n}), graphql(gql(mutations.conversationsUnassign), {\n  name: 'conversationsUnassign',\n  options: function options() {\n    return refetchSidebarConversationsOptions();\n  }\n}))(AssignBoxContainer));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/containers/AssignBox.tsx"],"names":["gql","compose","Alert","React","graphql","withProps","AssignBox","mutations","refetchSidebarConversationsOptions","AssignBoxContainer","props","assignMutation","conversationsUnassign","assign","callback","conversationIds","assignedUserId","variables","then","success","catch","e","error","message","clear","_ids","updatedProps","conversationsAssign","name","options"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAQA,SAASC,kCAAT,QAAmD,UAAnD;;AAUA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAuB;AAAA,MACxCC,cADwC,GACED,KADF,CACxCC,cADwC;AAAA,MACxBC,qBADwB,GACEF,KADF,CACxBE,qBADwB;;AAGhD,MAAMC,MAAM,GAAG,SAATA,MAAS,OAKbC,QALa,EAMV;AAAA,QAJDC,eAIC,QAJDA,eAIC;AAAA,QAHDC,cAGC,QAHDA,cAGC;AACHL,IAAAA,cAAc,CAAC;AACbM,MAAAA,SAAS,EAAE;AACTF,QAAAA,eAAe,EAAfA,eADS;AAETC,QAAAA,cAAc,EAAdA;AAFS;AADE,KAAD,CAAd,CAMGE,IANH,CAMQ,YAAM;AACVhB,MAAAA,KAAK,CAACiB,OAAN,CAAc,6CAAd;AACD,KARH,EASGC,KATH,CASS,UAAAC,CAAC,EAAI;AACVP,MAAAA,QAAQ,CAACO,CAAD,CAAR;AACAnB,MAAAA,KAAK,CAACoB,KAAN,CAAYD,CAAC,CAACE,OAAd;AACD,KAZH;AAaD,GApBD;;AAsBA,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACT,eAAD,EAA+B;AAC3CH,IAAAA,qBAAqB,CAAC;AACpBK,MAAAA,SAAS,EAAE;AACTQ,QAAAA,IAAI,EAAEV;AADG;AADS,KAAD,CAArB,CAKGG,IALH,CAKQ,YAAM;AACVhB,MAAAA,KAAK,CAACiB,OAAN,CAAc,mCAAd;AACD,KAPH,EAQGC,KARH,CAQS,UAAAC,CAAC,EAAI;AACVnB,MAAAA,KAAK,CAACoB,KAAN,CAAYD,CAAC,CAACE,OAAd;AACD,KAVH;AAWD,GAZD;;AAcA,MAAMG,YAAY,qBACbhB,KADa;AAEhBG,IAAAA,MAAM,EAANA,MAFgB;AAGhBW,IAAAA,KAAK,EAALA;AAHgB,IAAlB;;AAMA,SAAO,oBAAC,SAAD,oBAAeE,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CA9CD;;AAgDA,eAAerB,SAAS,CACtBJ,OAAO,CACLG,OAAO,CACLJ,GAAG,CAACO,SAAS,CAACoB,mBAAX,CADE,EAEL;AACEC,EAAAA,IAAI,EAAE,gBADR;AAEEC,EAAAA,OAAO,EAAE;AAAA,WAAMrB,kCAAkC,EAAxC;AAAA;AAFX,CAFK,CADF,EAQLJ,OAAO,CACLJ,GAAG,CAACO,SAAS,CAACK,qBAAX,CADE,EAEL;AACEgB,EAAAA,IAAI,EAAE,uBADR;AAEEC,EAAAA,OAAO,EAAE;AAAA,WAAMrB,kCAAkC,EAAxC;AAAA;AAFX,CAFK,CARF,CAAP,CAeEC,kBAfF,CADsB,CAAxB","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport Alert from 'modules/common/utils/Alert';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withProps } from '../../common/utils';\nimport AssignBox from '../components/assignBox/AssignBox';\nimport { mutations } from '../graphql';\nimport {\n  AssignMutationResponse,\n  AssignMutationVariables,\n  IConversation,\n  UnAssignMutationResponse,\n  UnAssignMutationVariables\n} from '../types';\nimport { refetchSidebarConversationsOptions } from '../utils';\n\ntype Props = {\n  targets: IConversation[];\n  event: string;\n  afterSave: () => void;\n};\n\ntype FinalProps = Props & AssignMutationResponse & UnAssignMutationResponse;\n\nconst AssignBoxContainer = (props: FinalProps) => {\n  const { assignMutation, conversationsUnassign } = props;\n\n  const assign = (\n    {\n      conversationIds,\n      assignedUserId\n    }: { conversationIds?: string[]; assignedUserId: string },\n    callback: (e) => void\n  ) => {\n    assignMutation({\n      variables: {\n        conversationIds,\n        assignedUserId\n      }\n    })\n      .then(() => {\n        Alert.success('The conversation Assignee has been renewed.');\n      })\n      .catch(e => {\n        callback(e);\n        Alert.error(e.message);\n      });\n  };\n\n  const clear = (conversationIds: string[]) => {\n    conversationsUnassign({\n      variables: {\n        _ids: conversationIds\n      }\n    })\n      .then(() => {\n        Alert.success('The conversation Assignee removed');\n      })\n      .catch(e => {\n        Alert.error(e.message);\n      });\n  };\n\n  const updatedProps = {\n    ...props,\n    assign,\n    clear\n  };\n\n  return <AssignBox {...updatedProps} />;\n};\n\nexport default withProps<Props>(\n  compose(\n    graphql<Props, AssignMutationResponse, AssignMutationVariables>(\n      gql(mutations.conversationsAssign),\n      {\n        name: 'assignMutation',\n        options: () => refetchSidebarConversationsOptions()\n      }\n    ),\n    graphql<Props, UnAssignMutationResponse, UnAssignMutationVariables>(\n      gql(mutations.conversationsUnassign),\n      {\n        name: 'conversationsUnassign',\n        options: () => refetchSidebarConversationsOptions()\n      }\n    )\n  )(AssignBoxContainer)\n);\n"]},"metadata":{},"sourceType":"module"}