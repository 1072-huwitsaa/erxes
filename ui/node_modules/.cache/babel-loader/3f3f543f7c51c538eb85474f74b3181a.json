{"ast":null,"code":"import _slicedToArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/checklists/components/List.tsx\";\nimport Button from 'erxes-common-ui/lib/components/button';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport debounce from 'lodash/debounce';\nimport { Form, FormControl } from 'modules/common/components/form';\nimport ProgressBar from 'modules/common/components/ProgressBar';\nimport SortableList from 'modules/common/components/SortableList';\nimport colors from 'modules/common/styles/colors';\nimport { __, isEmptyContent } from 'modules/common/utils';\nimport React, { useEffect, useState } from 'react';\nimport Item from '../containers/Item';\nimport { ChecklistTitle, ChecklistTitleWrapper, ChecklistWrapper, FormControlWrapper, FormWrapper, Progress } from '../styles';\n\nfunction List(props) {\n  var item = props.item;\n\n  var _React$useState = React.useState(item.items),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      items = _React$useState2[0],\n      setItems = _React$useState2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEditingTitle = _useState2[0],\n      setIsEditingTitle = _useState2[1];\n\n  var _useState3 = useState(item.items.length === 0 ? true : false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAddingItem = _useState4[0],\n      setIsAddingItem = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isHidden = _useState6[0],\n      setIsHidden = _useState6[1];\n\n  var _useState7 = useState(getUnsavedContent(props.item._id) || ''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      itemContent = _useState8[0],\n      setItemContent = _useState8[1];\n\n  var _useState9 = useState(item.title),\n      _useState10 = _slicedToArray(_useState9, 2),\n      title = _useState10[0],\n      setTitle = _useState10[1];\n\n  var _useState11 = useState(item.title),\n      _useState12 = _slicedToArray(_useState11, 2),\n      beforeTitle = _useState12[0],\n      setBeforeTitle = _useState12[1];\n\n  useEffect(function () {\n    setItems(item.items);\n  }, [item.items]);\n  useEffect(function () {\n    setTitle(item.title);\n    setBeforeTitle(item.title);\n  }, [item.title]);\n\n  function onAddItemClick() {\n    setIsAddingItem(true);\n  }\n\n  function onFocus(event) {\n    event.target.select();\n  }\n\n  function onCancel(toggle) {\n    localStorage.setItem(item._id, itemContent);\n    debounce(function () {\n      setIsAddingItem(Boolean(toggle));\n    }, 100)();\n  }\n\n  function onBlur() {\n    if (isEmptyContent(itemContent)) {\n      return;\n    }\n\n    onCancel(true);\n  }\n\n  function removeClick() {\n    var remove = props.remove;\n    remove(item._id);\n  }\n\n  function getUnsavedContent(id) {\n    return localStorage.getItem(id) || '';\n  }\n\n  function onContentChange(e) {\n    setItemContent(e.currentTarget.value);\n  }\n\n  function onSubmitAddItem(e) {\n    e.preventDefault();\n    saveAddItem();\n  }\n\n  function onChangeItems(updatedItems, destinationIndex) {\n    setItems(updatedItems);\n    props.updateOrderItems(updatedItems[destinationIndex], destinationIndex);\n  }\n\n  function onKeyPressAddItem(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      saveAddItem();\n      onBlur();\n    }\n  }\n\n  function saveAddItem() {\n    // check if a string contains whitespace or empty\n    if (isEmptyContent(itemContent)) {\n      return;\n    }\n\n    var content = itemContent.match(/^.*((\\r\\n|\\n|\\r)|$)/gm) || []; // for sorting alphanumerical strings\n\n    var collator = new Intl.Collator(undefined, {\n      numeric: true,\n      sensitivity: 'base'\n    });\n    content.sort(collator.compare).map(function (text) {\n      return props.addItem(text);\n    });\n    setItemContent('');\n    setIsAddingItem(false);\n    localStorage.removeItem(item._id);\n  }\n\n  function renderIsCheckedBtn() {\n    var onClickHideShowBtn = function onClickHideShowBtn() {\n      return setIsHidden(!isHidden);\n    };\n\n    var btnText = isHidden ? 'Show checked items' : 'Hide completed items';\n\n    if (item.percent) {\n      return React.createElement(Button, {\n        btnStyle: \"simple\",\n        size: \"small\",\n        onClick: onClickHideShowBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, __(btnText));\n    }\n\n    return null;\n  }\n\n  function renderTitle() {\n    var onClick = function onClick() {\n      return setIsEditingTitle(true);\n    };\n\n    if (isEditingTitle) {\n      return null;\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"h5\", {\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, renderIsCheckedBtn(), React.createElement(Button, {\n      btnStyle: \"simple\",\n      size: \"small\",\n      onClick: removeClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n  function generateDoc(values) {\n    return {\n      _id: item._id,\n      title: values.title || title\n    };\n  }\n\n  function renderTitleInput(formProps) {\n    var isSubmitted = formProps.isSubmitted,\n        values = formProps.values;\n\n    if (!isEditingTitle) {\n      return null;\n    }\n\n    var cancelEditing = function cancelEditing() {\n      setIsEditingTitle(false);\n      setTitle(beforeTitle);\n    };\n\n    var onChangeTitle = function onChangeTitle(e) {\n      return setTitle(e.currentTarget.value);\n    };\n\n    var onSubmit = function onSubmit() {\n      setIsEditingTitle(false);\n      setBeforeTitle(title);\n    };\n\n    return React.createElement(FormControlWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(FormControl, Object.assign({}, formProps, {\n      name: \"title\",\n      autoFocus: true,\n      componentClass: \"textarea\",\n      onChange: onChangeTitle,\n      value: title,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), props.renderButton({\n      values: generateDoc(values),\n      isSubmitted: isSubmitted,\n      callback: onSubmit\n    }), React.createElement(Button, {\n      btnStyle: \"simple\",\n      onClick: cancelEditing,\n      size: \"small\",\n      icon: \"times\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }));\n  }\n\n  function renderProgressBar() {\n    return React.createElement(Progress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, item.percent.toFixed(0), \"%\"), React.createElement(ProgressBar, {\n      percentage: item.percent,\n      color: colors.colorPrimary,\n      height: \"10px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }));\n  }\n\n  function renderItems() {\n    if (isHidden) {\n      return item.items.filter(function (data) {\n        return !data.isChecked;\n      }).map(function (data) {\n        return React.createElement(Item, {\n          key: data._id,\n          item: data,\n          convertToCard: props.convertToCard,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        });\n      });\n    }\n\n    var child = function child(childItem) {\n      return React.createElement(Item, {\n        key: childItem._id,\n        item: childItem,\n        convertToCard: props.convertToCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      });\n    };\n\n    return React.createElement(SortableList, {\n      fields: items,\n      child: child,\n      isModal: false,\n      onChangeFields: onChangeItems,\n      isDragDisabled: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    });\n  }\n\n  function renderAddInput() {\n    if (isAddingItem) {\n      var onClick = function onClick() {\n        return onCancel(false);\n      };\n\n      return React.createElement(FormWrapper, {\n        add: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(FormControlWrapper, {\n        onBlur: onBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        componentClass: \"textarea\",\n        placeholder: \"Add an item\",\n        onChange: onContentChange,\n        onKeyPress: onKeyPressAddItem,\n        autoFocus: true,\n        onFocus: onFocus,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }), React.createElement(Button, {\n        btnStyle: \"success\",\n        size: \"small\",\n        icon: \"check-1\",\n        onMouseDown: onSubmitAddItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), React.createElement(Button, {\n        btnStyle: \"simple\",\n        size: \"small\",\n        onClick: onClick,\n        icon: \"times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(Button, {\n      size: \"small\",\n      btnStyle: \"simple\",\n      onClick: onAddItemClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, __('Add an item'));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(ChecklistTitleWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    icon: \"checked\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }), React.createElement(ChecklistTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, renderTitle(), React.createElement(Form, {\n    renderContent: renderTitleInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }))), renderProgressBar(), React.createElement(ChecklistWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }, renderItems(), renderAddInput()));\n}\n\nexport default List;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/checklists/components/List.tsx"],"names":["Button","Icon","debounce","Form","FormControl","ProgressBar","SortableList","colors","__","isEmptyContent","React","useEffect","useState","Item","ChecklistTitle","ChecklistTitleWrapper","ChecklistWrapper","FormControlWrapper","FormWrapper","Progress","List","props","item","items","setItems","isEditingTitle","setIsEditingTitle","length","isAddingItem","setIsAddingItem","isHidden","setIsHidden","getUnsavedContent","_id","itemContent","setItemContent","title","setTitle","beforeTitle","setBeforeTitle","onAddItemClick","onFocus","event","target","select","onCancel","toggle","localStorage","setItem","Boolean","onBlur","removeClick","remove","id","getItem","onContentChange","e","currentTarget","value","onSubmitAddItem","preventDefault","saveAddItem","onChangeItems","updatedItems","destinationIndex","updateOrderItems","onKeyPressAddItem","key","content","match","collator","Intl","Collator","undefined","numeric","sensitivity","sort","compare","map","text","addItem","removeItem","renderIsCheckedBtn","onClickHideShowBtn","btnText","percent","renderTitle","onClick","generateDoc","values","renderTitleInput","formProps","isSubmitted","cancelEditing","onChangeTitle","onSubmit","renderButton","callback","renderProgressBar","toFixed","colorPrimary","renderItems","filter","data","isChecked","convertToCard","child","childItem","renderAddInput"],"mappings":"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","sourcesContent":["import Button from 'erxes-common-ui/lib/components/button';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport debounce from 'lodash/debounce';\nimport { Form, FormControl } from 'modules/common/components/form';\nimport ProgressBar from 'modules/common/components/ProgressBar';\nimport SortableList from 'modules/common/components/SortableList';\nimport colors from 'modules/common/styles/colors';\nimport { IButtonMutateProps, IFormProps } from 'modules/common/types';\nimport { __, isEmptyContent } from 'modules/common/utils';\nimport React, { useEffect, useState } from 'react';\nimport Item from '../containers/Item';\nimport {\n  ChecklistTitle,\n  ChecklistTitleWrapper,\n  ChecklistWrapper,\n  FormControlWrapper,\n  FormWrapper,\n  Progress\n} from '../styles';\nimport { IChecklist, IChecklistItem } from '../types';\n\ntype Props = {\n  item: IChecklist;\n  addItem: (content: string) => void;\n  convertToCard: (name: string, callback: () => void) => void;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  remove: (checklistId: string) => void;\n  updateOrderItems: (item: IChecklistItem, destinationIndex: number) => void;\n};\n\nfunction List(props: Props) {\n  const { item } = props;\n\n  const [items, setItems] = React.useState(item.items);\n  const [isEditingTitle, setIsEditingTitle] = useState(false);\n  const [isAddingItem, setIsAddingItem] = useState(\n    item.items.length === 0 ? true : false\n  );\n  const [isHidden, setIsHidden] = useState(false);\n  const [itemContent, setItemContent] = useState(\n    getUnsavedContent(props.item._id) || ''\n  );\n  const [title, setTitle] = useState(item.title);\n  const [beforeTitle, setBeforeTitle] = useState(item.title);\n\n  useEffect(() => {\n    setItems(item.items);\n  }, [item.items]);\n\n  useEffect(() => {\n    setTitle(item.title);\n    setBeforeTitle(item.title);\n  }, [item.title]);\n\n  function onAddItemClick() {\n    setIsAddingItem(true);\n  }\n\n  function onFocus(event) {\n    event.target.select();\n  }\n\n  function onCancel(toggle?: boolean) {\n    localStorage.setItem(item._id, itemContent);\n\n    debounce(() => {\n      setIsAddingItem(Boolean(toggle));\n    }, 100)();\n  }\n\n  function onBlur() {\n    if (isEmptyContent(itemContent)) {\n      return;\n    }\n\n    onCancel(true);\n  }\n\n  function removeClick() {\n    const { remove } = props;\n\n    remove(item._id);\n  }\n\n  function getUnsavedContent(id: string) {\n    return localStorage.getItem(id) || '';\n  }\n\n  function onContentChange(e) {\n    setItemContent((e.currentTarget as HTMLTextAreaElement).value);\n  }\n\n  function onSubmitAddItem(e) {\n    e.preventDefault();\n\n    saveAddItem();\n  }\n\n  function onChangeItems(updatedItems, destinationIndex) {\n    setItems(updatedItems);\n    props.updateOrderItems(updatedItems[destinationIndex], destinationIndex);\n  }\n\n  function onKeyPressAddItem(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n\n      saveAddItem();\n      onBlur();\n    }\n  }\n\n  function saveAddItem() {\n    // check if a string contains whitespace or empty\n    if (isEmptyContent(itemContent)) {\n      return;\n    }\n\n    const content = itemContent.match(/^.*((\\r\\n|\\n|\\r)|$)/gm) || [];\n\n    // for sorting alphanumerical strings\n    const collator = new Intl.Collator(undefined, {\n      numeric: true,\n      sensitivity: 'base'\n    });\n\n    content.sort(collator.compare).map(text => props.addItem(text));\n\n    setItemContent('');\n    setIsAddingItem(false);\n\n    localStorage.removeItem(item._id);\n  }\n\n  function renderIsCheckedBtn() {\n    const onClickHideShowBtn = () => setIsHidden(!isHidden);\n    const btnText = isHidden ? 'Show checked items' : 'Hide completed items';\n\n    if (item.percent) {\n      return (\n        <Button btnStyle=\"simple\" size=\"small\" onClick={onClickHideShowBtn}>\n          {__(btnText)}\n        </Button>\n      );\n    }\n\n    return null;\n  }\n\n  function renderTitle() {\n    const onClick = () => setIsEditingTitle(true);\n\n    if (isEditingTitle) {\n      return null;\n    }\n\n    return (\n      <>\n        <h5 onClick={onClick}>{title}</h5>\n        <div>\n          {renderIsCheckedBtn()}\n          <Button btnStyle=\"simple\" size=\"small\" onClick={removeClick}>\n            Delete\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  function generateDoc(values: { title: string }) {\n    return {\n      _id: item._id,\n      title: values.title || title\n    };\n  }\n\n  function renderTitleInput(formProps: IFormProps) {\n    const { isSubmitted, values } = formProps;\n\n    if (!isEditingTitle) {\n      return null;\n    }\n\n    const cancelEditing = () => {\n      setIsEditingTitle(false);\n      setTitle(beforeTitle);\n    };\n\n    const onChangeTitle = e =>\n      setTitle((e.currentTarget as HTMLTextAreaElement).value);\n\n    const onSubmit = () => {\n      setIsEditingTitle(false);\n      setBeforeTitle(title);\n    };\n\n    return (\n      <FormControlWrapper>\n        <FormControl\n          {...formProps}\n          name=\"title\"\n          autoFocus={true}\n          componentClass=\"textarea\"\n          onChange={onChangeTitle}\n          value={title}\n          required={true}\n        />\n\n        {props.renderButton({\n          values: generateDoc(values),\n          isSubmitted,\n          callback: onSubmit\n        })}\n\n        <Button\n          btnStyle=\"simple\"\n          onClick={cancelEditing}\n          size=\"small\"\n          icon=\"times\"\n        />\n      </FormControlWrapper>\n    );\n  }\n\n  function renderProgressBar() {\n    return (\n      <Progress>\n        <span>{item.percent.toFixed(0)}%</span>\n        <ProgressBar\n          percentage={item.percent}\n          color={colors.colorPrimary}\n          height=\"10px\"\n        />\n      </Progress>\n    );\n  }\n\n  function renderItems() {\n    if (isHidden) {\n      return item.items\n        .filter(data => !data.isChecked)\n        .map(data => (\n          <Item\n            key={data._id}\n            item={data}\n            convertToCard={props.convertToCard}\n          />\n        ));\n    }\n\n    const child = childItem => (\n      <Item\n        key={childItem._id}\n        item={childItem}\n        convertToCard={props.convertToCard}\n      />\n    );\n\n    return (\n      <SortableList\n        fields={items}\n        child={child}\n        isModal={false}\n        onChangeFields={onChangeItems}\n        isDragDisabled={false}\n      />\n    );\n  }\n\n  function renderAddInput() {\n    if (isAddingItem) {\n      const onClick = () => onCancel(false);\n\n      return (\n        <FormWrapper add={true}>\n          <FormControlWrapper onBlur={onBlur}>\n            <FormControl\n              componentClass=\"textarea\"\n              placeholder=\"Add an item\"\n              onChange={onContentChange}\n              onKeyPress={onKeyPressAddItem}\n              autoFocus={true}\n              onFocus={onFocus}\n              required={true}\n            />\n            <Button\n              btnStyle=\"success\"\n              size=\"small\"\n              icon=\"check-1\"\n              onMouseDown={onSubmitAddItem}\n            />\n            <Button\n              btnStyle=\"simple\"\n              size=\"small\"\n              onClick={onClick}\n              icon=\"times\"\n            />\n          </FormControlWrapper>\n        </FormWrapper>\n      );\n    }\n\n    return (\n      <Button size=\"small\" btnStyle=\"simple\" onClick={onAddItemClick}>\n        {__('Add an item')}\n      </Button>\n    );\n  }\n\n  return (\n    <>\n      <ChecklistTitleWrapper>\n        <Icon icon=\"checked\" />\n\n        <ChecklistTitle>\n          {renderTitle()}\n          <Form renderContent={renderTitleInput} />\n        </ChecklistTitle>\n      </ChecklistTitleWrapper>\n\n      {renderProgressBar()}\n\n      <ChecklistWrapper>\n        {renderItems()}\n        {renderAddInput()}\n      </ChecklistWrapper>\n    </>\n  );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}