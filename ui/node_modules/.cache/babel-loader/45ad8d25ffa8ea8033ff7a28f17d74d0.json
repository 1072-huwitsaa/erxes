{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/growthHacks/components/FormBuilder.tsx\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport { CloseModal, ModalFooter } from \"modules/common/styles/main\";\nimport { __ } from \"modules/common/utils\";\nimport CreateForm from \"modules/forms/containers/CreateForm\";\nimport EditForm from \"modules/forms/containers/EditForm\";\nimport { ShowPreview } from \"modules/forms/styles\";\nimport React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { ContentWrapper, PreviewWrapper } from \"../styles\";\n\nvar FormBuilder =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormBuilder, _React$Component);\n\n  function FormBuilder(_props) {\n    var _this;\n\n    _classCallCheck(this, FormBuilder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormBuilder).call(this, _props));\n\n    _this.renderFooter = function (items) {\n      if (items === 0) {\n        return null;\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(ShowPreview, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), \" \", __(\"Form preview\")), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        type: \"button\",\n        icon: \"cancel-1\",\n        onClick: _this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        btnStyle: \"success\",\n        type: \"button\",\n        icon: \"cancel-1\",\n        onClick: _this.saveForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Save\")));\n    };\n\n    _this.renderFormPreviewWrapper = function (previewRenderer, fields) {\n      return React.createElement(PreviewWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, previewRenderer(), _this.renderFooter(fields ? fields.length : 0));\n    };\n\n    _this.saveForm = function () {\n      _this.setState({\n        isReadyToSaveForm: true\n      });\n    };\n\n    _this.afterFormDbSave = function (formId) {\n      var _this$props = _this.props,\n          stage = _this$props.stage,\n          onChange = _this$props.onChange,\n          onHide = _this$props.onHide;\n      onChange(stage._id, \"formId\", formId);\n      onHide();\n\n      _this.setState({\n        isReadyToSaveForm: false\n      });\n    };\n\n    _this.closeModal = function () {\n      _this.props.onHide();\n    };\n\n    _this.renderFormContent = function () {\n      var stage = _this.props.stage;\n      var props = {\n        renderPreviewWrapper: _this.renderFormPreviewWrapper,\n        afterDbSave: _this.afterFormDbSave,\n        isReadyToSave: _this.state.isReadyToSaveForm,\n        hideOptionalFields: true,\n        type: \"growthHack\"\n      };\n\n      if (stage.formId) {\n        return React.createElement(EditForm, Object.assign({}, props, {\n          formId: stage.formId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(CreateForm, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }));\n    };\n\n    _this.renderContent = function () {\n      return React.createElement(ContentWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, _this.renderFormContent());\n    };\n\n    _this.state = {\n      isReadyToSaveForm: false\n    };\n    return _this;\n  }\n\n  _createClass(FormBuilder, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        dialogClassName: \"modal-1000w\",\n        enforceFocus: false,\n        size: \"lg\",\n        show: true,\n        onHide: this.closeModal,\n        backdrop: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(CloseModal, {\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"times\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), this.renderContent());\n    }\n  }]);\n\n  return FormBuilder;\n}(React.Component);\n\nexport default FormBuilder;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/growthHacks/components/FormBuilder.tsx"],"names":["Button","Icon","CloseModal","ModalFooter","__","CreateForm","EditForm","ShowPreview","React","Modal","ContentWrapper","PreviewWrapper","FormBuilder","props","renderFooter","items","closeModal","saveForm","renderFormPreviewWrapper","previewRenderer","fields","length","setState","isReadyToSaveForm","afterFormDbSave","formId","stage","onChange","onHide","_id","renderFormContent","renderPreviewWrapper","afterDbSave","isReadyToSave","state","hideOptionalFields","type","renderContent","Component"],"mappings":"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","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport { IStage } from \"modules/boards/types\";\nimport { CloseModal, ModalFooter } from \"modules/common/styles/main\";\nimport { __ } from \"modules/common/utils\";\nimport CreateForm from \"modules/forms/containers/CreateForm\";\nimport EditForm from \"modules/forms/containers/EditForm\";\nimport { ShowPreview } from \"modules/forms/styles\";\nimport { IField } from \"modules/settings/properties/types\";\nimport React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { ContentWrapper, PreviewWrapper } from \"../styles\";\n\ntype Props = {\n  onChange: (stageId: string, name: string, value: string) => void;\n  onHide: () => void;\n  stage: IStage;\n};\n\nclass FormBuilder extends React.Component<\n  Props,\n  { isReadyToSaveForm: boolean }\n> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      isReadyToSaveForm: false,\n    };\n  }\n\n  renderFooter = (items: number) => {\n    if (items === 0) {\n      return null;\n    }\n\n    return (\n      <>\n        <ShowPreview>\n          <Icon icon=\"eye\" /> {__(\"Form preview\")}\n        </ShowPreview>\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            type=\"button\"\n            icon=\"cancel-1\"\n            onClick={this.closeModal}\n          >\n            Cancel\n          </Button>\n\n          <Button\n            btnStyle=\"success\"\n            type=\"button\"\n            icon=\"cancel-1\"\n            onClick={this.saveForm}\n          >\n            Save\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  };\n\n  renderFormPreviewWrapper = (previewRenderer, fields: IField[]) => {\n    return (\n      <PreviewWrapper>\n        {previewRenderer()}\n        {this.renderFooter(fields ? fields.length : 0)}\n      </PreviewWrapper>\n    );\n  };\n\n  saveForm = () => {\n    this.setState({ isReadyToSaveForm: true });\n  };\n\n  afterFormDbSave = (formId: string) => {\n    const { stage, onChange, onHide } = this.props;\n\n    onChange(stage._id, \"formId\", formId);\n    onHide();\n\n    this.setState({ isReadyToSaveForm: false });\n  };\n\n  closeModal = () => {\n    this.props.onHide();\n  };\n\n  renderFormContent = () => {\n    const { stage } = this.props;\n\n    const props = {\n      renderPreviewWrapper: this.renderFormPreviewWrapper,\n      afterDbSave: this.afterFormDbSave,\n      isReadyToSave: this.state.isReadyToSaveForm,\n      hideOptionalFields: true,\n      type: \"growthHack\",\n    };\n\n    if (stage.formId) {\n      return <EditForm {...props} formId={stage.formId} />;\n    }\n\n    return <CreateForm {...props} />;\n  };\n\n  renderContent = () => {\n    return <ContentWrapper>{this.renderFormContent()}</ContentWrapper>;\n  };\n\n  render() {\n    return (\n      <Modal\n        dialogClassName=\"modal-1000w\"\n        enforceFocus={false}\n        size=\"lg\"\n        show={true}\n        onHide={this.closeModal}\n        backdrop={false}\n      >\n        <CloseModal onClick={this.closeModal}>\n          <Icon icon=\"times\" />\n        </CloseModal>\n        {this.renderContent()}\n      </Modal>\n    );\n  }\n}\n\nexport default FormBuilder;\n"]},"metadata":{},"sourceType":"module"}