{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/profile/containers/ChangePassword.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        mutation usersChangePassword(\\n          $currentPassword: String!\\n          $newPassword: String!\\n        ) {\\n          usersChangePassword(\\n            currentPassword: $currentPassword\\n            newPassword: $newPassword\\n          ) {\\n            _id\\n          }\\n        }\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { Alert, withProps } from 'modules/common/utils';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport ChangePassword from '../components/ChangePassword';\n\nvar ChangePasswordContainer = function ChangePasswordContainer(props) {\n  var changePasswordMutation = props.changePasswordMutation;\n\n  var save = function save(_ref) {\n    var currentPassword = _ref.currentPassword,\n        newPassword = _ref.newPassword,\n        confirmation = _ref.confirmation;\n\n    if (newPassword !== confirmation) {\n      return Alert.error(\"Password didn't match\");\n    }\n\n    if (!currentPassword || currentPassword === 0) {\n      return Alert.error('Please enter a current password');\n    }\n\n    if (!newPassword || newPassword === 0) {\n      return Alert.error('Please enter a new password');\n    }\n\n    changePasswordMutation({\n      variables: {\n        currentPassword: currentPassword,\n        newPassword: newPassword\n      }\n    }).then(function () {\n      Alert.success('Your password has been changed and updated');\n      props.closeModal();\n    }).catch(function (error) {\n      Alert.error(error.message);\n    });\n  };\n\n  var updatedProps = _objectSpread({}, props, {\n    save: save\n  });\n\n  return React.createElement(ChangePassword, Object.assign({}, updatedProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nexport default withProps(compose(graphql(gql(_templateObject()), {\n  name: 'changePasswordMutation'\n}))(ChangePasswordContainer));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/profile/containers/ChangePassword.tsx"],"names":["gql","compose","Alert","withProps","React","graphql","ChangePassword","ChangePasswordContainer","props","changePasswordMutation","save","currentPassword","newPassword","confirmation","error","variables","then","success","closeModal","catch","message","updatedProps","name"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,sBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;AAOA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAC9BC,KAD8B,EAE3B;AAAA,MACKC,sBADL,GACgCD,KADhC,CACKC,sBADL;;AAGH,MAAMC,IAAI,GAAG,SAAPA,IAAO,OAAoD;AAAA,QAAjDC,eAAiD,QAAjDA,eAAiD;AAAA,QAAhCC,WAAgC,QAAhCA,WAAgC;AAAA,QAAnBC,YAAmB,QAAnBA,YAAmB;;AAC/D,QAAID,WAAW,KAAKC,YAApB,EAAkC;AAChC,aAAOX,KAAK,CAACY,KAAN,CAAY,uBAAZ,CAAP;AACD;;AAED,QAAI,CAACH,eAAD,IAAoBA,eAAe,KAAK,CAA5C,EAA+C;AAC7C,aAAOT,KAAK,CAACY,KAAN,CAAY,iCAAZ,CAAP;AACD;;AAED,QAAI,CAACF,WAAD,IAAgBA,WAAW,KAAK,CAApC,EAAuC;AACrC,aAAOV,KAAK,CAACY,KAAN,CAAY,6BAAZ,CAAP;AACD;;AAEDL,IAAAA,sBAAsB,CAAC;AAAEM,MAAAA,SAAS,EAAE;AAAEJ,QAAAA,eAAe,EAAfA,eAAF;AAAmBC,QAAAA,WAAW,EAAXA;AAAnB;AAAb,KAAD,CAAtB,CACGI,IADH,CACQ,YAAM;AACVd,MAAAA,KAAK,CAACe,OAAN,CAAc,4CAAd;AACAT,MAAAA,KAAK,CAACU,UAAN;AACD,KAJH,EAKGC,KALH,CAKS,UAAAL,KAAK,EAAI;AACdZ,MAAAA,KAAK,CAACY,KAAN,CAAYA,KAAK,CAACM,OAAlB;AACD,KAPH;AAQD,GArBD;;AAuBA,MAAMC,YAAY,qBACbb,KADa;AAEhBE,IAAAA,IAAI,EAAJA;AAFgB,IAAlB;;AAKA,SAAO,oBAAC,cAAD,oBAAoBW,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAlCD;;AAoCA,eAAelB,SAAS,CACtBF,OAAO,CACLI,OAAO,CACLL,GADK,qBAcL;AACEsB,EAAAA,IAAI,EAAE;AADR,CAdK,CADF,CAAP,CAmBEf,uBAnBF,CADsB,CAAxB","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { Alert, withProps } from 'modules/common/utils';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport ChangePassword from '../components/ChangePassword';\nimport { ChangePasswordMutationResponse } from '../types';\n\ntype Props = {\n  closeModal: () => void;\n};\n\nconst ChangePasswordContainer = (\n  props: Props & ChangePasswordMutationResponse\n) => {\n  const { changePasswordMutation } = props;\n\n  const save = ({ currentPassword, newPassword, confirmation }) => {\n    if (newPassword !== confirmation) {\n      return Alert.error(\"Password didn't match\");\n    }\n\n    if (!currentPassword || currentPassword === 0) {\n      return Alert.error('Please enter a current password');\n    }\n\n    if (!newPassword || newPassword === 0) {\n      return Alert.error('Please enter a new password');\n    }\n\n    changePasswordMutation({ variables: { currentPassword, newPassword } })\n      .then(() => {\n        Alert.success('Your password has been changed and updated');\n        props.closeModal();\n      })\n      .catch(error => {\n        Alert.error(error.message);\n      });\n  };\n\n  const updatedProps = {\n    ...props,\n    save\n  };\n\n  return <ChangePassword {...updatedProps} />;\n};\n\nexport default withProps<Props>(\n  compose(\n    graphql(\n      gql`\n        mutation usersChangePassword(\n          $currentPassword: String!\n          $newPassword: String!\n        ) {\n          usersChangePassword(\n            currentPassword: $currentPassword\n            newPassword: $newPassword\n          ) {\n            _id\n          }\n        }\n      `,\n      {\n        name: 'changePasswordMutation'\n      }\n    )\n  )(ChangePasswordContainer)\n);\n"]},"metadata":{},"sourceType":"module"}