{"ast":null,"code":"import _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/messenger/steps/Availability.tsx\";\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { FlexItem, LeftItem } from 'modules/common/components/step/styles';\nimport Toggle from 'modules/common/components/Toggle';\nimport timezones from 'modules/common/constants/timezones';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport Select from 'react-select-plus';\nimport OnlineHours from './OnlineHours';\n\nvar Availability =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Availability, _React$Component);\n\n  function Availability() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Availability);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Availability)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSelectChange = function (e, name) {\n      var value = '';\n\n      if (e) {\n        value = e.value;\n      }\n\n      _this.setState(_defineProperty({}, name, value));\n\n      _this.props.onChange(name, value);\n    };\n\n    _this.onChangeFunction = function (name, value) {\n      _this.setState(_defineProperty({}, name, value));\n\n      _this.props.onChange(name, value);\n    };\n\n    _this.onOnlineHoursChange = function (onlineHours) {\n      _this.setState({\n        onlineHours: onlineHours\n      });\n\n      _this.props.onChange('onlineHours', onlineHours);\n    };\n\n    return _this;\n  }\n\n  _createClass(Availability, [{\n    key: \"renderOnlineHours\",\n    value: function renderOnlineHours() {\n      if (this.props.availabilityMethod === 'manual') {\n        return null;\n      }\n\n      return React.createElement(OnlineHours, {\n        prevOptions: this.props.onlineHours || [],\n        onChange: this.onOnlineHoursChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderIsOnline\",\n    value: function renderIsOnline() {\n      var _this2 = this;\n\n      if (this.props.availabilityMethod === 'auto') {\n        return null;\n      }\n\n      var onChange = function onChange(e) {\n        return _this2.onChangeFunction('isOnline', e.target.checked);\n      };\n\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Visible online to visitor or customer\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Toggle, {\n        checked: this.props.isOnline,\n        onChange: onChange,\n        icons: {\n          checked: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, \"Yes\"),\n          unchecked: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, \"No\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var onChange = function onChange(e) {\n        return _this3.onChangeFunction('availabilityMethod', e.currentTarget.value);\n      };\n\n      var timezoneOnChange = function timezoneOnChange(e) {\n        return _this3.onSelectChange(e, 'timezone');\n      };\n\n      return React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(LeftItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        value: \"manual\",\n        componentClass: \"radio\",\n        checked: this.props.availabilityMethod === 'manual',\n        onChange: onChange,\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, __('Turn online/offline manually')), React.createElement(FormControl, {\n        value: \"auto\",\n        componentClass: \"radio\",\n        checked: this.props.availabilityMethod === 'auto',\n        onChange: onChange,\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, __('Set to follow your schedule'))), this.renderIsOnline(), this.renderOnlineHours(), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Time zone\"), React.createElement(Select, {\n        value: this.props.timezone,\n        options: timezones,\n        onChange: timezoneOnChange,\n        clearable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Availability;\n}(React.Component);\n\nexport default Availability;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/messenger/steps/Availability.tsx"],"names":["FormControl","FormGroup","ControlLabel","FlexItem","LeftItem","Toggle","timezones","__","React","Select","OnlineHours","Availability","onSelectChange","e","name","value","setState","props","onChange","onChangeFunction","onOnlineHoursChange","onlineHours","availabilityMethod","target","checked","isOnline","unchecked","currentTarget","timezoneOnChange","renderIsOnline","renderOnlineHours","timezone","Component"],"mappings":"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","sourcesContent":["import FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { FlexItem, LeftItem } from 'modules/common/components/step/styles';\nimport Toggle from 'modules/common/components/Toggle';\nimport timezones from 'modules/common/constants/timezones';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport Select from 'react-select-plus';\nimport { IOnlineHour } from '../../../types';\nimport OnlineHours from './OnlineHours';\n\ntype Props = {\n  onChange: (\n    name: 'onlineHours' | 'isOnline' | 'availabilityMethod' | 'timezone',\n    value: string\n  ) => void;\n  isOnline: boolean;\n  availabilityMethod?: string;\n  timezone?: string;\n  onlineHours?: IOnlineHour[];\n};\n\nclass Availability extends React.Component<Props> {\n  onSelectChange = (e, name) => {\n    let value = '';\n\n    if (e) {\n      value = e.value;\n    }\n\n    this.setState({ [name]: value });\n    this.props.onChange(name, value);\n  };\n\n  onChangeFunction = (name, value) => {\n    this.setState({ [name]: value });\n    this.props.onChange(name, value);\n  };\n\n  onOnlineHoursChange = onlineHours => {\n    this.setState({ onlineHours });\n    this.props.onChange('onlineHours', onlineHours);\n  };\n\n  renderOnlineHours() {\n    if (this.props.availabilityMethod === 'manual') {\n      return null;\n    }\n\n    return (\n      <OnlineHours\n        prevOptions={this.props.onlineHours || []}\n        onChange={this.onOnlineHoursChange}\n      />\n    );\n  }\n\n  renderIsOnline() {\n    if (this.props.availabilityMethod === 'auto') {\n      return null;\n    }\n\n    const onChange = e => this.onChangeFunction('isOnline', e.target.checked);\n\n    return (\n      <FormGroup>\n        <ControlLabel>Visible online to visitor or customer</ControlLabel>\n        <div>\n          <Toggle\n            checked={this.props.isOnline}\n            onChange={onChange}\n            icons={{\n              checked: <span>Yes</span>,\n              unchecked: <span>No</span>\n            }}\n          />\n        </div>\n      </FormGroup>\n    );\n  }\n\n  render() {\n    const onChange = e =>\n      this.onChangeFunction(\n        'availabilityMethod',\n        (e.currentTarget as HTMLInputElement).value\n      );\n\n    const timezoneOnChange = e => this.onSelectChange(e, 'timezone');\n\n    return (\n      <FlexItem>\n        <LeftItem>\n          <FormGroup>\n            <FormControl\n              value=\"manual\"\n              componentClass=\"radio\"\n              checked={this.props.availabilityMethod === 'manual'}\n              onChange={onChange}\n              inline={true}\n            >\n              {__('Turn online/offline manually')}\n            </FormControl>\n\n            <FormControl\n              value=\"auto\"\n              componentClass=\"radio\"\n              checked={this.props.availabilityMethod === 'auto'}\n              onChange={onChange}\n              inline={true}\n            >\n              {__('Set to follow your schedule')}\n            </FormControl>\n          </FormGroup>\n\n          {this.renderIsOnline()}\n          {this.renderOnlineHours()}\n\n          <FormGroup>\n            <ControlLabel>Time zone</ControlLabel>\n\n            <Select\n              value={this.props.timezone}\n              options={timezones}\n              onChange={timezoneOnChange}\n              clearable={false}\n            />\n          </FormGroup>\n        </LeftItem>\n      </FlexItem>\n    );\n  }\n}\n\nexport default Availability;\n"]},"metadata":{},"sourceType":"module"}