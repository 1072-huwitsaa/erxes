{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _toConsumableArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/segments/components/common/Filter.tsx\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport { FormControl } from \"modules/common/components/form\";\nimport { __ } from \"modules/common/utils\";\nimport { FlexRightItem } from \"modules/layout/styles\";\nimport React from \"react\";\nimport Select from \"react-select-plus\";\nimport { ConditionItem, FilterProperty, FilterRow } from \"../styles\";\nvar operators = {\n  string: [{\n    name: \"equals\",\n    value: \"e\"\n  }, {\n    name: \"is not equal to\",\n    value: \"dne\"\n  }, {\n    name: \"contains\",\n    value: \"c\"\n  }, {\n    name: \"does not contain\",\n    value: \"dnc\"\n  }, {\n    name: \"is set\",\n    value: \"is\",\n    noInput: true\n  }, {\n    name: \"is not set\",\n    value: \"ins\",\n    noInput: true\n  }],\n  boolean: [{\n    name: \"is true\",\n    value: \"it\",\n    noInput: true\n  }, {\n    name: \"is false\",\n    value: \"if\",\n    noInput: true\n  }, {\n    name: \"is set\",\n    value: \"is\",\n    noInput: true\n  }, {\n    name: \"is not set\",\n    value: \"ins\",\n    noInput: true\n  }],\n  number: [{\n    name: \"number: equals\",\n    value: \"numbere\"\n  }, {\n    name: \"number: is not equal to\",\n    value: \"numberdne\"\n  }, {\n    name: \"number: is greater than\",\n    value: \"numberigt\"\n  }, {\n    name: \"number: is less than\",\n    value: \"numberilt\"\n  }, {\n    name: \"is set\",\n    value: \"is\",\n    noInput: true\n  }, {\n    name: \"is not set\",\n    value: \"ins\",\n    noInput: true\n  }],\n  date: [{\n    name: \"date: is greater than\",\n    value: \"dateigt\"\n  }, {\n    name: \"date: is less than\",\n    value: \"dateilt\"\n  }, {\n    name: \"will occur before on following n-th minute\",\n    value: \"wobm\"\n  }, {\n    name: \"will occur after on following n-th minute\",\n    value: \"woam\"\n  }, {\n    name: \"will occur before on following n-th day\",\n    value: \"wobd\"\n  }, {\n    name: \"will occur after on following n-th day\",\n    value: \"woad\"\n  }, {\n    name: \"date relative less than\",\n    value: \"drlt\"\n  }, {\n    name: \"date relative greater than\",\n    value: \"drgt\"\n  }, {\n    name: \"is set\",\n    value: \"is\",\n    noInput: true\n  }, {\n    name: \"is not set\",\n    value: \"ins\",\n    noInput: true\n  }]\n};\nvar defaultOperators = [].concat(_toConsumableArray(operators.string), _toConsumableArray(operators.boolean), _toConsumableArray(operators.number), _toConsumableArray(operators.date));\n\nvar Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter(props) {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filter).call(this, props));\n\n    _this.onChange = function () {\n      var _this$state = _this.state,\n          currentName = _this$state.currentName,\n          currentOperator = _this$state.currentOperator,\n          currentValue = _this$state.currentValue;\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          filter = _this$props.filter;\n      return onChange({\n        key: filter.key,\n        name: currentName,\n        operator: currentOperator,\n        value: currentValue\n      });\n    };\n\n    _this.onChangeValue = function (e) {\n      _this.setState({\n        currentValue: e.currentTarget.value\n      }, _this.onChange);\n    };\n\n    _this.onChangeNames = function (e) {\n      _this.setState({\n        currentName: e.currentTarget.value\n      }, _this.onChange);\n    };\n\n    _this.onChangeOperators = function (e) {\n      _this.setState({\n        currentOperator: e.currentTarget.value\n      }, _this.onChange);\n    };\n\n    _this.onChangeSelect = function (option) {\n      var value = !option ? \"\" : option.value.toString();\n\n      _this.setState({\n        currentValue: value\n      }, _this.onChange);\n    };\n\n    _this.onChangeField = function (option) {\n      var value = !option ? \"\" : option.value;\n\n      _this.setState({\n        currentName: value\n      }, _this.onChange);\n    };\n\n    _this.groupByType = function () {\n      var _this$props$fields = _this.props.fields,\n          fields = _this$props$fields === void 0 ? [] : _this$props$fields;\n      return fields.reduce(function (acc, field) {\n        var value = field.value;\n        var key = value && value.includes(\".\") ? value.substr(0, value.indexOf(\".\")) : \"general\";\n\n        if (!acc[key]) {\n          acc[key] = [];\n        }\n\n        acc[key].push(field);\n        return acc;\n      }, {});\n    };\n\n    _this.generateValues = function () {\n      var objects = _this.groupByType();\n\n      var array = [];\n      Object.keys(objects).map(function (key) {\n        var obj = {\n          label: key,\n          options: objects[key]\n        };\n        return array.push(obj);\n      });\n      return array;\n    };\n\n    _this.onRemove = function () {\n      var onRemove = _this.props.onRemove;\n\n      if (onRemove) {\n        onRemove(_this.props.filter.key || \"\");\n      }\n    };\n\n    _this.renderRemoveButton = function () {\n      var onRemove = _this.props.onRemove;\n\n      if (!onRemove) {\n        return;\n      }\n\n      return React.createElement(Button, {\n        className: \"round\",\n        btnStyle: \"danger\",\n        uppercase: false,\n        icon: \"times\",\n        onClick: _this.onRemove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      });\n    };\n\n    _this.renderPropertyComponent = function () {\n      var _this$state2 = _this.state,\n          currentName = _this$state2.currentName,\n          currentValue = _this$state2.currentValue,\n          currentOperator = _this$state2.currentOperator;\n\n      if ([\"is\", \"ins\", \"it\", \"if\"].indexOf(currentOperator) >= 0) {\n        return null;\n      }\n\n      var field = _this.getSelectedField(currentName);\n\n      var _field$selectOptions = field.selectOptions,\n          selectOptions = _field$selectOptions === void 0 ? [] : _field$selectOptions;\n\n      if (selectOptions.length > 0) {\n        return _this.renderSelect(currentValue, selectOptions);\n      }\n\n      return React.createElement(FormControl, {\n        value: currentValue,\n        onChange: _this.onChangeValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      });\n    };\n\n    var _filter = _this.props.filter;\n    _this.state = {\n      key: _filter.key || \"\",\n      currentName: _filter.name,\n      currentOperator: _filter.operator,\n      currentValue: _filter.value\n    };\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"getSelectedField\",\n    value: function getSelectedField(currentName) {\n      var fields = this.props.fields;\n      var field = fields.find(function (item) {\n        return item.value === currentName;\n      }) || {};\n      return field;\n    }\n  }, {\n    key: \"renderNames\",\n    value: function renderNames() {\n      var _this$props2 = this.props,\n          fields = _this$props2.fields,\n          groupData = _this$props2.groupData;\n      var currentName = this.state.currentName;\n      return React.createElement(Select, {\n        key: \"propertyName\",\n        isRequired: true,\n        options: groupData ? this.generateValues() : fields,\n        clearable: false,\n        value: currentName,\n        onChange: this.onChangeField,\n        placeholder: __(\"Select property\"),\n        id: \"New-segment-select-property\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderOperators\",\n    value: function renderOperators() {\n      var _this$state3 = this.state,\n          currentName = _this$state3.currentName,\n          currentOperator = _this$state3.currentOperator;\n      var field = this.getSelectedField(currentName);\n      var type = field.type || \"\";\n      var fieldOperator = operators[type] || defaultOperators;\n      return React.createElement(FormControl, {\n        id: \"segment-select-operator\",\n        key: currentName,\n        componentClass: \"select\",\n        onChange: this.onChangeOperators,\n        value: currentOperator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, __(\"Select operator\"), \"...\"), fieldOperator.map(function (operator, index) {\n        return React.createElement(\"option\", {\n          value: operator.value,\n          key: \"\".concat(index, \"-\").concat(operator.value),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, operator.name);\n      }));\n    }\n  }, {\n    key: \"renderSelect\",\n    value: function renderSelect(value, options) {\n      return React.createElement(Select, {\n        placeholder: __(\"Select value\"),\n        value: value,\n        options: options,\n        isRequired: true,\n        clearable: false,\n        onChange: this.onChangeSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConditionItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(FilterRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(FilterProperty, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, this.renderNames()), React.createElement(FilterProperty, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, this.renderOperators()), React.createElement(FilterProperty, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, this.renderPropertyComponent())), React.createElement(FlexRightItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, this.renderRemoveButton()));\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\n\nexport default Filter;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/segments/components/common/Filter.tsx"],"names":["Button","FormControl","__","FlexRightItem","React","Select","ConditionItem","FilterProperty","FilterRow","operators","string","name","value","noInput","boolean","number","date","defaultOperators","Filter","props","onChange","state","currentName","currentOperator","currentValue","filter","key","operator","onChangeValue","e","setState","currentTarget","onChangeNames","onChangeOperators","onChangeSelect","option","toString","onChangeField","groupByType","fields","reduce","acc","field","includes","substr","indexOf","push","generateValues","objects","array","Object","keys","map","obj","label","options","onRemove","renderRemoveButton","renderPropertyComponent","getSelectedField","selectOptions","length","renderSelect","find","item","groupData","type","fieldOperator","index","renderNames","renderOperators","Component"],"mappings":"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","sourcesContent":["import Button from \"erxes-common-ui/lib/components/button\";\nimport { FormControl } from \"modules/common/components/form\";\nimport { __ } from \"modules/common/utils\";\nimport { FlexRightItem } from \"modules/layout/styles\";\nimport React from \"react\";\nimport Select from \"react-select-plus\";\nimport { IConditionFilter, IField } from \"../../types\";\nimport { ConditionItem, FilterProperty, FilterRow } from \"../styles\";\n\nconst operators = {\n  string: [\n    { name: \"equals\", value: \"e\" },\n    { name: \"is not equal to\", value: \"dne\" },\n    { name: \"contains\", value: \"c\" },\n    { name: \"does not contain\", value: \"dnc\" },\n    { name: \"is set\", value: \"is\", noInput: true },\n    { name: \"is not set\", value: \"ins\", noInput: true },\n  ],\n  boolean: [\n    { name: \"is true\", value: \"it\", noInput: true },\n    { name: \"is false\", value: \"if\", noInput: true },\n    { name: \"is set\", value: \"is\", noInput: true },\n    { name: \"is not set\", value: \"ins\", noInput: true },\n  ],\n  number: [\n    { name: \"number: equals\", value: \"numbere\" },\n    { name: \"number: is not equal to\", value: \"numberdne\" },\n    { name: \"number: is greater than\", value: \"numberigt\" },\n    { name: \"number: is less than\", value: \"numberilt\" },\n    { name: \"is set\", value: \"is\", noInput: true },\n    { name: \"is not set\", value: \"ins\", noInput: true },\n  ],\n  date: [\n    { name: \"date: is greater than\", value: \"dateigt\" },\n    { name: \"date: is less than\", value: \"dateilt\" },\n    { name: \"will occur before on following n-th minute\", value: \"wobm\" },\n    { name: \"will occur after on following n-th minute\", value: \"woam\" },\n    { name: \"will occur before on following n-th day\", value: \"wobd\" },\n    { name: \"will occur after on following n-th day\", value: \"woad\" },\n    { name: \"date relative less than\", value: \"drlt\" },\n    { name: \"date relative greater than\", value: \"drgt\" },\n    { name: \"is set\", value: \"is\", noInput: true },\n    { name: \"is not set\", value: \"ins\", noInput: true },\n  ],\n};\n\nconst defaultOperators = [\n  ...operators.string,\n  ...operators.boolean,\n  ...operators.number,\n  ...operators.date,\n];\n\ntype Props = {\n  fields: IField[];\n  filter: IConditionFilter;\n  onChange: (filter: IConditionFilter) => void;\n  onRemove?: (id: string) => void;\n  groupData?: boolean;\n};\n\ntype State = {\n  key: string;\n  currentName: string;\n  currentOperator: string;\n  currentValue: string;\n};\n\nclass Filter extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    const { filter } = this.props;\n\n    this.state = {\n      key: filter.key || \"\",\n      currentName: filter.name,\n      currentOperator: filter.operator,\n      currentValue: filter.value,\n    };\n  }\n\n  onChange = () => {\n    const { currentName, currentOperator, currentValue } = this.state;\n    const { onChange, filter } = this.props;\n\n    return onChange({\n      key: filter.key,\n      name: currentName,\n      operator: currentOperator,\n      value: currentValue,\n    });\n  };\n\n  onChangeValue = (e: React.FormEvent<HTMLElement>) => {\n    this.setState(\n      { currentValue: (e.currentTarget as HTMLInputElement).value },\n      this.onChange\n    );\n  };\n\n  onChangeNames = (e: React.FormEvent<HTMLElement>) => {\n    this.setState(\n      { currentName: (e.currentTarget as HTMLInputElement).value },\n      this.onChange\n    );\n  };\n\n  onChangeOperators = (e: React.FormEvent<HTMLElement>) => {\n    this.setState(\n      { currentOperator: (e.currentTarget as HTMLInputElement).value },\n      this.onChange\n    );\n  };\n\n  onChangeSelect = (option: { value: string }) => {\n    const value = !option ? \"\" : option.value.toString();\n\n    this.setState({ currentValue: value }, this.onChange);\n  };\n\n  onChangeField = (option: { value: string }) => {\n    const value = !option ? \"\" : option.value;\n\n    this.setState({ currentName: value }, this.onChange);\n  };\n\n  groupByType = () => {\n    const { fields = [] } = this.props;\n\n    return fields.reduce((acc, field) => {\n      const value = field.value;\n      const key =\n        value && value.includes(\".\")\n          ? value.substr(0, value.indexOf(\".\"))\n          : \"general\";\n\n      if (!acc[key]) {\n        acc[key] = [];\n      }\n\n      acc[key].push(field);\n\n      return acc;\n    }, {});\n  };\n\n  getSelectedField(currentName: string) {\n    const { fields } = this.props;\n\n    const field =\n      fields.find((item) => item.value === currentName) || ({} as IField);\n\n    return field;\n  }\n\n  generateValues = () => {\n    const objects = this.groupByType();\n    const array = [] as any;\n\n    Object.keys(objects).map((key) => {\n      const obj = { label: key, options: objects[key] };\n      return array.push(obj);\n    });\n\n    return array;\n  };\n\n  renderNames() {\n    const { fields, groupData } = this.props;\n    const { currentName } = this.state;\n\n    return (\n      <Select\n        key=\"propertyName\"\n        isRequired={true}\n        options={groupData ? this.generateValues() : fields}\n        clearable={false}\n        value={currentName}\n        onChange={this.onChangeField}\n        placeholder={__(\"Select property\")}\n        id=\"New-segment-select-property\"\n      />\n    );\n  }\n\n  renderOperators() {\n    const { currentName, currentOperator } = this.state;\n\n    const field = this.getSelectedField(currentName);\n\n    const type = field.type || \"\";\n    const fieldOperator = operators[type] || defaultOperators;\n\n    return (\n      <FormControl\n        id=\"segment-select-operator\"\n        key={currentName}\n        componentClass=\"select\"\n        onChange={this.onChangeOperators}\n        value={currentOperator}\n      >\n        <option value=\"\">{__(\"Select operator\")}...</option>\n        {fieldOperator.map((operator, index) => (\n          <option value={operator.value} key={`${index}-${operator.value}`}>\n            {operator.name}\n          </option>\n        ))}\n      </FormControl>\n    );\n  }\n\n  onRemove = () => {\n    const { onRemove } = this.props;\n\n    if (onRemove) {\n      onRemove(this.props.filter.key || \"\");\n    }\n  };\n\n  renderRemoveButton = () => {\n    const { onRemove } = this.props;\n\n    if (!onRemove) {\n      return;\n    }\n\n    return (\n      <Button\n        className=\"round\"\n        btnStyle=\"danger\"\n        uppercase={false}\n        icon=\"times\"\n        onClick={this.onRemove}\n      />\n    );\n  };\n\n  renderSelect(\n    value: string | number,\n    options: Array<{ label: string; value: string | number }>\n  ) {\n    return (\n      <Select\n        placeholder={__(\"Select value\")}\n        value={value}\n        options={options}\n        isRequired={true}\n        clearable={false}\n        onChange={this.onChangeSelect}\n      />\n    );\n  }\n\n  renderPropertyComponent = () => {\n    const { currentName, currentValue, currentOperator } = this.state;\n\n    if ([\"is\", \"ins\", \"it\", \"if\"].indexOf(currentOperator) >= 0) {\n      return null;\n    }\n\n    const field = this.getSelectedField(currentName);\n\n    const { selectOptions = [] } = field;\n\n    if (selectOptions.length > 0) {\n      return this.renderSelect(currentValue, selectOptions);\n    }\n\n    return <FormControl value={currentValue} onChange={this.onChangeValue} />;\n  };\n\n  render() {\n    return (\n      <ConditionItem>\n        <FilterRow>\n          <FilterProperty>{this.renderNames()}</FilterProperty>\n          <FilterProperty>{this.renderOperators()}</FilterProperty>\n          <FilterProperty>{this.renderPropertyComponent()}</FilterProperty>\n        </FilterRow>\n        <FlexRightItem>{this.renderRemoveButton()}</FlexRightItem>\n      </ConditionItem>\n    );\n  }\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}