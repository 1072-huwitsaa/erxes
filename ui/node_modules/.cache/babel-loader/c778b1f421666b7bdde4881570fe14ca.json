{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/containers/common/IntegrationForm.tsx\";\nimport ButtonMutate from 'modules/common/components/ButtonMutate';\nimport CallPro from 'modules/settings/integrations/components/callpro/Form';\nimport { mutations } from 'modules/settings/integrations/graphql';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Chatfuel from '../../components/chatfuel/Form';\nimport Telegram from '../../components/telegram/Telegram';\nimport TelnyxForm from '../../components/telnyx/TelnyxForm';\nimport Viber from '../../components/viber/Viber';\nimport WebHookForm from '../../components/webhook/Form';\nimport Whatsapp from '../../components/whatsapp/Whatsapp';\nimport { INTEGRATION_KINDS } from '../../constants';\nimport { getRefetchQueries } from '../utils';\n\nvar IntegrationFormContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IntegrationFormContainer, _React$Component);\n\n  function IntegrationFormContainer(props) {\n    var _this;\n\n    _classCallCheck(this, IntegrationFormContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IntegrationFormContainer).call(this, props));\n\n    _this.onChannelChange = function (values) {\n      _this.setState({\n        channelIds: values\n      });\n    };\n\n    _this.renderButton = function (_ref) {\n      var name = _ref.name,\n          values = _ref.values,\n          isSubmitted = _ref.isSubmitted,\n          callback = _ref.callback;\n      var type = _this.props.type;\n      return React.createElement(ButtonMutate, {\n        mutation: mutations.integrationsCreateExternalIntegration,\n        variables: Object.assign(values, {\n          channelIds: _this.state.channelIds\n        }),\n        callback: callback,\n        isSubmitted: isSubmitted,\n        refetchQueries: getRefetchQueries(type),\n        uppercase: false,\n        type: \"submit\",\n        successMessage: \"You successfully added a \".concat(type, \" \").concat(name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    };\n\n    _this.state = {\n      channelIds: []\n    };\n    return _this;\n  }\n\n  _createClass(IntegrationFormContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          closeModal = _this$props.closeModal,\n          type = _this$props.type;\n      var channelIds = this.state.channelIds;\n      var Component;\n      var updatedProps = {\n        callback: closeModal,\n        renderButton: this.renderButton,\n        channelIds: channelIds,\n        onChannelChange: this.onChannelChange\n      };\n\n      if (type === INTEGRATION_KINDS.CALLPRO) {\n        Component = CallPro;\n      }\n\n      if (type === INTEGRATION_KINDS.CHATFUEL) {\n        Component = Chatfuel;\n      }\n\n      if (type === INTEGRATION_KINDS.SMOOCH_VIBER) {\n        Component = Viber;\n      }\n\n      if (type === INTEGRATION_KINDS.SMOOCH_TELEGRAM) {\n        Component = Telegram;\n      }\n\n      if (type === INTEGRATION_KINDS.WHATSAPP) {\n        Component = Whatsapp;\n      }\n\n      if (type === INTEGRATION_KINDS.TELNYX) {\n        Component = TelnyxForm;\n      }\n\n      if (type === INTEGRATION_KINDS.WEBHOOK) {\n        Component = WebHookForm;\n      }\n\n      return React.createElement(Component, Object.assign({}, updatedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return IntegrationFormContainer;\n}(React.Component);\n\nexport default withRouter(IntegrationFormContainer);","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/containers/common/IntegrationForm.tsx"],"names":["ButtonMutate","CallPro","mutations","React","withRouter","Chatfuel","Telegram","TelnyxForm","Viber","WebHookForm","Whatsapp","INTEGRATION_KINDS","getRefetchQueries","IntegrationFormContainer","props","onChannelChange","values","setState","channelIds","renderButton","name","isSubmitted","callback","type","integrationsCreateExternalIntegration","Object","assign","state","closeModal","Component","updatedProps","CALLPRO","CHATFUEL","SMOOCH_VIBER","SMOOCH_TELEGRAM","WHATSAPP","TELNYX","WEBHOOK"],"mappings":"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","sourcesContent":["import ButtonMutate from 'modules/common/components/ButtonMutate';\nimport { IButtonMutateProps, IRouterProps } from 'modules/common/types';\nimport CallPro from 'modules/settings/integrations/components/callpro/Form';\nimport { mutations } from 'modules/settings/integrations/graphql';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Chatfuel from '../../components/chatfuel/Form';\nimport Telegram from '../../components/telegram/Telegram';\nimport TelnyxForm from '../../components/telnyx/TelnyxForm';\nimport Viber from '../../components/viber/Viber';\nimport WebHookForm from '../../components/webhook/Form';\nimport Whatsapp from '../../components/whatsapp/Whatsapp';\nimport { INTEGRATION_KINDS } from '../../constants';\nimport { getRefetchQueries } from '../utils';\n\ntype Props = {\n  type: string;\n  closeModal: () => void;\n};\n\ntype State = {\n  channelIds: string[];\n};\n\ntype FinalProps = {} & IRouterProps & Props;\n\nclass IntegrationFormContainer extends React.Component<FinalProps, State> {\n  constructor(props: FinalProps) {\n    super(props);\n\n    this.state = { channelIds: [] };\n  }\n\n  onChannelChange = (values: string[]) => {\n    this.setState({ channelIds: values });\n  };\n\n  renderButton = ({\n    name,\n    values,\n    isSubmitted,\n    callback\n  }: IButtonMutateProps) => {\n    const { type } = this.props;\n\n    return (\n      <ButtonMutate\n        mutation={mutations.integrationsCreateExternalIntegration}\n        variables={Object.assign(values, { channelIds: this.state.channelIds })}\n        callback={callback}\n        isSubmitted={isSubmitted}\n        refetchQueries={getRefetchQueries(type)}\n        uppercase={false}\n        type=\"submit\"\n        successMessage={`You successfully added a ${type} ${name}`}\n      />\n    );\n  };\n\n  render() {\n    const { closeModal, type } = this.props;\n    const { channelIds } = this.state;\n\n    let Component;\n\n    const updatedProps = {\n      callback: closeModal,\n      renderButton: this.renderButton,\n      channelIds,\n      onChannelChange: this.onChannelChange\n    };\n\n    if (type === INTEGRATION_KINDS.CALLPRO) {\n      Component = CallPro;\n    }\n\n    if (type === INTEGRATION_KINDS.CHATFUEL) {\n      Component = Chatfuel;\n    }\n\n    if (type === INTEGRATION_KINDS.SMOOCH_VIBER) {\n      Component = Viber;\n    }\n\n    if (type === INTEGRATION_KINDS.SMOOCH_TELEGRAM) {\n      Component = Telegram;\n    }\n\n    if (type === INTEGRATION_KINDS.WHATSAPP) {\n      Component = Whatsapp;\n    }\n\n    if (type === INTEGRATION_KINDS.TELNYX) {\n      Component = TelnyxForm;\n    }\n\n    if (type === INTEGRATION_KINDS.WEBHOOK) {\n      Component = WebHookForm;\n    }\n\n    return <Component {...updatedProps} />;\n  }\n}\n\nexport default withRouter<FinalProps>(IntegrationFormContainer);\n"]},"metadata":{},"sourceType":"module"}