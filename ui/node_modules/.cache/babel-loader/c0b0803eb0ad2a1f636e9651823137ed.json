{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/components/common/TargetMerge.tsx\";\nimport debounce from 'lodash/debounce';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport Select from 'react-select-plus';\n\nvar TargetMergeModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TargetMergeModal, _React$Component);\n\n  function TargetMergeModal(props, context) {\n    var _this;\n\n    _classCallCheck(this, TargetMergeModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TargetMergeModal).call(this, props, context));\n\n    _this.handleSearch = function (value) {\n      var searchObject = _this.props.searchObject;\n      debounce(function () {\n        return searchObject(value, function (objs) {\n          return _this.setState({\n            objects: objs\n          });\n        });\n      }, 1000)();\n    };\n\n    _this.onSelect = function (option) {\n      _this.setState({\n        selectedObject: JSON.parse(option.value)\n      });\n    };\n\n    _this.state = {\n      objects: [],\n      selectedObject: {}\n    };\n    return _this;\n  }\n\n  _createClass(TargetMergeModal, [{\n    key: \"renderMerger\",\n    value: function renderMerger(_ref) {\n      var closeModal = _ref.closeModal;\n      var _this$props = this.props,\n          object = _this$props.object,\n          onSave = _this$props.onSave,\n          mergeForm = _this$props.mergeForm;\n      var selectedObject = this.state.selectedObject;\n\n      if (!selectedObject._id) {\n        return React.createElement(EmptyState, {\n          icon: \"search\",\n          text: \"Please select one to merge\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        });\n      }\n\n      var MergeForm = mergeForm;\n      return React.createElement(MergeForm, {\n        objects: [object, selectedObject],\n        save: onSave,\n        closeModal: closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderSelect\",\n    value: function renderSelect() {\n      var objects = this.state.objects;\n      var generateOptions = this.props.generateOptions;\n      return React.createElement(Select, {\n        placeholder: \"Search\",\n        onInputChange: this.handleSearch,\n        onFocus: this.handleSearch.bind(this, ''),\n        onChange: this.onSelect,\n        options: generateOptions(objects),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var modalContent = function modalContent(props) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, _this2.renderSelect(), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }), _this2.renderMerger(props));\n      };\n\n      return React.createElement(ModalTrigger, {\n        title: __('Merge'),\n        trigger: React.createElement(\"a\", {\n          href: \"#merge\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, __('Merge')),\n        size: \"lg\",\n        content: modalContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TargetMergeModal;\n}(React.Component);\n\nexport default TargetMergeModal;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/customers/components/common/TargetMerge.tsx"],"names":["debounce","EmptyState","ModalTrigger","__","React","Select","TargetMergeModal","props","context","handleSearch","value","searchObject","objs","setState","objects","onSelect","option","selectedObject","JSON","parse","state","closeModal","object","onSave","mergeForm","_id","MergeForm","generateOptions","bind","modalContent","renderSelect","renderMerger","Component"],"mappings":"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","sourcesContent":["import debounce from 'lodash/debounce';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport { __ } from 'modules/common/utils';\nimport { ICustomer } from 'modules/customers/types';\nimport React from 'react';\nimport Select from 'react-select-plus';\n\ntype Props = {\n  object: any;\n  searchObject: (value: string, callback: (objects: any[]) => void) => void;\n  mergeForm: any;\n  generateOptions: (objects: any[]) => void;\n  onSave: (doc: { ids: string[]; data: ICustomer }) => void;\n};\n\ntype State = {\n  objects: any[];\n  selectedObject: any;\n};\n\nclass TargetMergeModal extends React.Component<Props, State> {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      objects: [],\n      selectedObject: {}\n    };\n  }\n\n  handleSearch = value => {\n    const { searchObject } = this.props;\n\n    debounce(\n      () => searchObject(value, objs => this.setState({ objects: objs })),\n      1000\n    )();\n  };\n\n  onSelect = option => {\n    this.setState({ selectedObject: JSON.parse(option.value) });\n  };\n\n  renderMerger({ closeModal }) {\n    const { object, onSave, mergeForm } = this.props;\n    const { selectedObject } = this.state;\n\n    if (!selectedObject._id) {\n      return <EmptyState icon=\"search\" text=\"Please select one to merge\" />;\n    }\n\n    const MergeForm = mergeForm;\n\n    return (\n      <MergeForm\n        objects={[object, selectedObject]}\n        save={onSave}\n        closeModal={closeModal}\n      />\n    );\n  }\n\n  renderSelect() {\n    const { objects } = this.state;\n    const { generateOptions } = this.props;\n\n    return (\n      <Select\n        placeholder=\"Search\"\n        onInputChange={this.handleSearch}\n        onFocus={this.handleSearch.bind(this, '')}\n        onChange={this.onSelect}\n        options={generateOptions(objects)}\n      />\n    );\n  }\n\n  render() {\n    const modalContent = props => {\n      return (\n        <React.Fragment>\n          {this.renderSelect()}\n          <br />\n          {this.renderMerger(props)}\n        </React.Fragment>\n      );\n    };\n\n    return (\n      <ModalTrigger\n        title={__('Merge')}\n        trigger={<a href=\"#merge\">{__('Merge')}</a>}\n        size=\"lg\"\n        content={modalContent}\n      />\n    );\n  }\n}\n\nexport default TargetMergeModal;\n"]},"metadata":{},"sourceType":"module"}