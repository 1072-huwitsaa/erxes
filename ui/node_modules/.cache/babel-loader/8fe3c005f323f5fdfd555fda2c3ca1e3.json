{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/deals/containers/product/ProductChooser.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport Chooser from 'modules/common/components/Chooser';\nimport { Alert, withProps } from 'modules/common/utils';\nimport ProductCategoryChooser from 'modules/deals/components/product/ProductCategoryChooser';\nimport ProductForm from 'modules/settings/productService/containers/product/ProductForm';\nimport { mutations as productMutations, queries as productQueries } from 'modules/settings/productService/graphql';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\n\nvar ProductChooser =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProductChooser, _React$Component);\n\n  function ProductChooser(props) {\n    var _this;\n\n    _classCallCheck(this, ProductChooser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductChooser).call(this, props));\n\n    _this.search = function (value, reload) {\n      if (!reload) {\n        _this.setState({\n          perPage: 0\n        });\n      }\n\n      _this.setState({\n        perPage: _this.state.perPage + 20\n      }, function () {\n        return _this.props.productsQuery.refetch({\n          searchValue: value,\n          perPage: _this.state.perPage\n        });\n      });\n    };\n\n    _this.addProduct = function (doc, callback) {\n      _this.props.productAdd({\n        variables: doc\n      }).then(function () {\n        _this.props.productsQuery.refetch();\n\n        Alert.success('You successfully added a product or service');\n        callback();\n      }).catch(function (e) {\n        Alert.error(e.message);\n      });\n    };\n\n    _this.renderProductCategoryChooser = function () {\n      var _this$props = _this.props,\n          productCategoriesQuery = _this$props.productCategoriesQuery,\n          onChangeCategory = _this$props.onChangeCategory;\n      return React.createElement(ProductCategoryChooser, {\n        categories: productCategoriesQuery.productCategories || [],\n        onChangeCategory: onChangeCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    };\n\n    _this.state = {\n      perPage: 20\n    };\n    return _this;\n  }\n\n  _createClass(ProductChooser, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          data = _this$props2.data,\n          productsQuery = _this$props2.productsQuery,\n          onSelect = _this$props2.onSelect;\n\n      var updatedProps = _objectSpread({}, this.props, {\n        data: {\n          name: data.name,\n          datas: data.products\n        },\n        search: this.search,\n        title: 'Product',\n        renderName: function renderName(product) {\n          if (product.code) {\n            return product.code.concat(' - ', product.name);\n          }\n\n          return product.name;\n        },\n        renderForm: function renderForm(_ref) {\n          var closeModal = _ref.closeModal;\n          return React.createElement(ProductForm, {\n            closeModal: closeModal,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          });\n        },\n        perPage: this.state.perPage,\n        add: this.addProduct,\n        clearState: function clearState() {\n          return _this2.search('', true);\n        },\n        datas: productsQuery.products || [],\n        onSelect: onSelect\n      });\n\n      return React.createElement(Chooser, Object.assign({}, updatedProps, {\n        renderFilter: this.renderProductCategoryChooser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProductChooser;\n}(React.Component);\n\nexport default withProps(compose(graphql(gql(productQueries.products), {\n  name: 'productsQuery',\n  options: function options(props) {\n    return {\n      variables: {\n        perPage: 20,\n        categoryId: props.categoryId\n      }\n    };\n  }\n}), graphql(gql(productQueries.productCategories), {\n  name: 'productCategoriesQuery'\n}), // mutations\ngraphql(gql(productMutations.productAdd), {\n  name: 'productAdd',\n  options: function options() {\n    return {\n      refetchQueries: [{\n        query: gql(productQueries.products),\n        variables: {\n          perPage: 20\n        }\n      }]\n    };\n  }\n}))(ProductChooser));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/deals/containers/product/ProductChooser.tsx"],"names":["gql","compose","Chooser","Alert","withProps","ProductCategoryChooser","ProductForm","mutations","productMutations","queries","productQueries","React","graphql","ProductChooser","props","search","value","reload","setState","perPage","state","productsQuery","refetch","searchValue","addProduct","doc","callback","productAdd","variables","then","success","catch","e","error","message","renderProductCategoryChooser","productCategoriesQuery","onChangeCategory","productCategories","data","onSelect","updatedProps","name","datas","products","title","renderName","product","code","concat","renderForm","closeModal","add","clearState","Component","options","categoryId","refetchQueries","query"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport Chooser from 'modules/common/components/Chooser';\nimport { Alert, withProps } from 'modules/common/utils';\nimport ProductCategoryChooser from 'modules/deals/components/product/ProductCategoryChooser';\nimport ProductForm from 'modules/settings/productService/containers/product/ProductForm';\nimport {\n  mutations as productMutations,\n  queries as productQueries\n} from 'modules/settings/productService/graphql';\nimport { ProductCategoriesQueryResponse } from 'modules/settings/productService/types';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { IProduct, IProductDoc } from '../../../settings/productService/types';\nimport { ProductAddMutationResponse, ProductsQueryResponse } from '../../types';\n\ntype Props = {\n  data: { name: string; products: IProduct[] };\n  categoryId: string;\n  onChangeCategory: (catgeoryId: string) => void;\n  closeModal: () => void;\n  onSelect: (products: IProduct[]) => void;\n};\n\ntype FinalProps = {\n  productsQuery: ProductsQueryResponse;\n  productCategoriesQuery: ProductCategoriesQueryResponse;\n} & Props &\n  ProductAddMutationResponse;\n\nclass ProductChooser extends React.Component<FinalProps, { perPage: number }> {\n  constructor(props) {\n    super(props);\n\n    this.state = { perPage: 20 };\n  }\n\n  search = (value: string, reload?: boolean) => {\n    if (!reload) {\n      this.setState({ perPage: 0 });\n    }\n\n    this.setState({ perPage: this.state.perPage + 20 }, () =>\n      this.props.productsQuery.refetch({\n        searchValue: value,\n        perPage: this.state.perPage\n      })\n    );\n  };\n\n  // add product\n  addProduct = (doc: IProductDoc, callback: () => void) => {\n    this.props\n      .productAdd({\n        variables: doc\n      })\n      .then(() => {\n        this.props.productsQuery.refetch();\n\n        Alert.success('You successfully added a product or service');\n\n        callback();\n      })\n      .catch(e => {\n        Alert.error(e.message);\n      });\n  };\n\n  renderProductCategoryChooser = () => {\n    const { productCategoriesQuery, onChangeCategory } = this.props;\n\n    return (\n      <ProductCategoryChooser\n        categories={productCategoriesQuery.productCategories || []}\n        onChangeCategory={onChangeCategory}\n      />\n    );\n  };\n\n  render() {\n    const { data, productsQuery, onSelect } = this.props;\n\n    const updatedProps = {\n      ...this.props,\n      data: { name: data.name, datas: data.products },\n      search: this.search,\n      title: 'Product',\n      renderName: (product: IProduct) => {\n        if (product.code) {\n          return product.code.concat(' - ', product.name);\n        }\n\n        return product.name;\n      },\n      renderForm: ({ closeModal }: { closeModal: () => void }) => (\n        <ProductForm closeModal={closeModal} />\n      ),\n      perPage: this.state.perPage,\n      add: this.addProduct,\n      clearState: () => this.search('', true),\n      datas: productsQuery.products || [],\n      onSelect\n    };\n\n    return (\n      <Chooser\n        {...updatedProps}\n        renderFilter={this.renderProductCategoryChooser}\n      />\n    );\n  }\n}\n\nexport default withProps<Props>(\n  compose(\n    graphql<\n      { categoryId: string },\n      ProductsQueryResponse,\n      { perPage: number; categoryId: string }\n    >(gql(productQueries.products), {\n      name: 'productsQuery',\n      options: props => ({\n        variables: {\n          perPage: 20,\n          categoryId: props.categoryId\n        }\n      })\n    }),\n    graphql<{}, ProductCategoriesQueryResponse, {}>(\n      gql(productQueries.productCategories),\n      {\n        name: 'productCategoriesQuery'\n      }\n    ),\n    // mutations\n    graphql<{}, ProductAddMutationResponse, IProduct>(\n      gql(productMutations.productAdd),\n      {\n        name: 'productAdd',\n        options: () => ({\n          refetchQueries: [\n            {\n              query: gql(productQueries.products),\n              variables: { perPage: 20 }\n            }\n          ]\n        })\n      }\n    )\n  )(ProductChooser)\n);\n"]},"metadata":{},"sourceType":"module"}