{"ast":null,"code":"import _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/containers/ArchivedItems.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { Alert, confirm, renderWithProps, router as routerUtils } from 'modules/common/utils';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\nimport ArchivedItems from '../components/ArchivedItems';\nimport { mutations, queries } from '../graphql';\n\nvar ArchivedItemsContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ArchivedItemsContainer, _React$Component);\n\n  function ArchivedItemsContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArchivedItemsContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArchivedItemsContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.sendToBoard = function (item) {\n      if (_this.props.type === 'item') {\n        var _this$props = _this.props,\n            setActiveItemMutation = _this$props.setActiveItemMutation,\n            archivedItemsQuery = _this$props.archivedItemsQuery,\n            history = _this$props.history;\n        setActiveItemMutation({\n          variables: {\n            _id: item._id,\n            stageId: item.stageId,\n            status: 'active'\n          }\n        }).then(\n        /*#__PURE__*/\n        _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  Alert.success('You successfully sent to a board');\n                  _context.next = 3;\n                  return archivedItemsQuery.refetch();\n\n                case 3:\n                  routerUtils.setParams(history, {\n                    key: Math.random()\n                  });\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }))).catch(function (error) {\n          Alert.error(error.message);\n        });\n      } else {\n        var _this$props2 = _this.props,\n            setActiveStageMutation = _this$props2.setActiveStageMutation,\n            archivedStagesQuery = _this$props2.archivedStagesQuery,\n            options = _this$props2.options;\n        setActiveStageMutation({\n          variables: {\n            _id: item._id,\n            type: options.type,\n            status: 'active'\n          }\n        }).then(\n        /*#__PURE__*/\n        _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2() {\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  Alert.success('You successfully sent to a board');\n                  _context2.next = 3;\n                  return archivedStagesQuery.refetch();\n\n                case 3:\n                  routerUtils.setParams(_this.props.history, {\n                    key: Math.random()\n                  });\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }))).catch(function (error) {\n          Alert.error(error.message);\n        });\n      }\n    };\n\n    _this.remove = function (item) {\n      if (_this.props.type === 'item') {\n        var _this$props3 = _this.props,\n            removeMutation = _this$props3.removeMutation,\n            archivedItemsQuery = _this$props3.archivedItemsQuery,\n            options = _this$props3.options;\n        confirm().then(function () {\n          return removeMutation({\n            variables: {\n              _id: item._id\n            }\n          }).then(function () {\n            Alert.success(\"You successfully deleted a \".concat(options.type));\n            archivedItemsQuery.refetch();\n          }).catch(function (error) {\n            Alert.error(error.message);\n          });\n        });\n      } else {\n        var _this$props4 = _this.props,\n            removeStageMutation = _this$props4.removeStageMutation,\n            archivedStagesQuery = _this$props4.archivedStagesQuery;\n        confirm().then(function () {\n          return removeStageMutation({\n            variables: {\n              _id: item._id\n            }\n          }).then(function () {\n            Alert.success('You successfully deleted a stage');\n            archivedStagesQuery.refetch();\n          }).catch(function (error) {\n            Alert.error(error.message);\n          });\n        });\n      }\n    };\n\n    _this.loadMore = function () {\n      var _this$props5 = _this.props,\n          search = _this$props5.search,\n          pipelineId = _this$props5.pipelineId,\n          archivedStagesCountQuery = _this$props5.archivedStagesCountQuery,\n          options = _this$props5.options,\n          archivedItemsCountQuery = _this$props5.archivedItemsCountQuery,\n          archivedItemsQuery = _this$props5.archivedItemsQuery,\n          archivedStagesQuery = _this$props5.archivedStagesQuery;\n      var query;\n      var loading;\n      var hasMore;\n      var itemName;\n      var items;\n\n      if (archivedItemsQuery) {\n        query = archivedItemsQuery;\n        loading = archivedItemsQuery.loading || archivedItemsCountQuery.loading;\n        itemName = options.queriesName.archivedItemsQuery;\n        items = archivedItemsQuery[options.queriesName.archivedItemsQuery] || [];\n        hasMore = archivedItemsCountQuery[options.queriesName.archivedItemsCountQuery] > items.length;\n      } else {\n        query = archivedStagesQuery;\n        loading = archivedStagesQuery.loading || archivedStagesCountQuery.loading;\n        itemName = 'archivedStages';\n        items = archivedStagesQuery.archivedStages || [];\n        hasMore = archivedStagesCountQuery.archivedStagesCount > items.length;\n      }\n\n      if (!loading && hasMore) {\n        query.fetchMore({\n          variables: {\n            pipelineId: pipelineId,\n            search: search,\n            perPage: 20,\n            page: items.length\n          },\n          updateQuery: function updateQuery(prev, _ref3) {\n            var fetchMoreResult = _ref3.fetchMoreResult;\n\n            if (!fetchMoreResult) {\n              return prev;\n            }\n\n            var prevItems = prev[itemName] || [];\n            var prevItemIds = prevItems.map(function (m) {\n              return m._id;\n            });\n            var fetchedItems = [];\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = fetchMoreResult[itemName][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var item = _step.value;\n\n                if (!prevItemIds.includes(item._id)) {\n                  fetchedItems.push(item);\n                }\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n\n            return _objectSpread({}, prev, _defineProperty({}, itemName, [].concat(_toConsumableArray(prevItems), fetchedItems)));\n          }\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ArchivedItemsContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          archivedItemsQuery = _this$props6.archivedItemsQuery,\n          archivedStagesQuery = _this$props6.archivedStagesQuery,\n          archivedItemsCountQuery = _this$props6.archivedItemsCountQuery,\n          archivedStagesCountQuery = _this$props6.archivedStagesCountQuery,\n          options = _this$props6.options,\n          type = _this$props6.type;\n      var items;\n      var hasMore;\n\n      if (archivedItemsQuery) {\n        items = archivedItemsQuery[options.queriesName.archivedItemsQuery] || [];\n        hasMore = archivedItemsCountQuery[options.queriesName.archivedItemsCountQuery] > items.length;\n      } else {\n        items = archivedStagesQuery.archivedStages || [];\n        hasMore = archivedStagesCountQuery.archivedStagesCount > items.length;\n      }\n\n      var props = {\n        items: items,\n        sendToBoard: this.sendToBoard,\n        remove: this.remove,\n        type: type,\n        options: options,\n        hasMore: hasMore,\n        loadMore: this.loadMore\n      };\n      return React.createElement(ArchivedItems, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ArchivedItemsContainer;\n}(React.Component);\n\nexport default (function (props) {\n  var options = props.options;\n  return renderWithProps(props, compose(graphql(gql(queries.archivedStages), {\n    name: 'archivedStagesQuery',\n    skip: function skip(_ref4) {\n      var type = _ref4.type;\n      return type === 'item';\n    },\n    options: function options(_ref5) {\n      var pipelineId = _ref5.pipelineId,\n          search = _ref5.search;\n      return {\n        variables: {\n          pipelineId: pipelineId,\n          search: search\n        },\n        fetchPolicy: 'network-only'\n      };\n    }\n  }), graphql(gql(options.queries.archivedItemsQuery), {\n    name: 'archivedItemsQuery',\n    skip: function skip(_ref6) {\n      var type = _ref6.type;\n      return type === 'list';\n    },\n    options: function options(_ref7) {\n      var pipelineId = _ref7.pipelineId,\n          search = _ref7.search;\n      return {\n        variables: {\n          pipelineId: pipelineId,\n          search: search,\n          perPage: 20\n        },\n        fetchPolicy: 'network-only'\n      };\n    }\n  }), graphql(gql(queries.archivedStagesCount), {\n    name: 'archivedStagesCountQuery',\n    skip: function skip(_ref8) {\n      var type = _ref8.type;\n      return type === 'item';\n    },\n    options: function options(_ref9) {\n      var pipelineId = _ref9.pipelineId,\n          search = _ref9.search;\n      return {\n        variables: {\n          pipelineId: pipelineId,\n          search: search\n        },\n        fetchPolicy: 'network-only'\n      };\n    }\n  }), graphql(gql(options.queries.archivedItemsCountQuery), {\n    name: 'archivedItemsCountQuery',\n    skip: function skip(_ref10) {\n      var type = _ref10.type;\n      return type === 'list';\n    },\n    options: function options(_ref11) {\n      var pipelineId = _ref11.pipelineId,\n          search = _ref11.search;\n      return {\n        variables: {\n          pipelineId: pipelineId,\n          search: search\n        },\n        fetchPolicy: 'network-only'\n      };\n    }\n  }), graphql(gql(options.mutations.editMutation), {\n    name: 'setActiveItemMutation',\n    skip: function skip(_ref12) {\n      var type = _ref12.type;\n      return type === 'list';\n    },\n    options: function options() {\n      return {\n        refetchQueries: ['archivedItemsQuery']\n      };\n    }\n  }), graphql(gql(mutations.stagesEdit), {\n    name: 'setActiveStageMutation',\n    skip: function skip(_ref13) {\n      var type = _ref13.type;\n      return type === 'item';\n    }\n  }), graphql(gql(options.mutations.removeMutation), {\n    name: 'removeMutation'\n  }), graphql(gql(mutations.stagesRemove), {\n    name: 'removeStageMutation'\n  }))(withRouter(ArchivedItemsContainer)));\n});","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/containers/ArchivedItems.tsx"],"names":["gql","compose","Alert","confirm","renderWithProps","router","routerUtils","React","graphql","withRouter","ArchivedItems","mutations","queries","ArchivedItemsContainer","sendToBoard","item","props","type","setActiveItemMutation","archivedItemsQuery","history","variables","_id","stageId","status","then","success","refetch","setParams","key","Math","random","catch","error","message","setActiveStageMutation","archivedStagesQuery","options","remove","removeMutation","removeStageMutation","loadMore","search","pipelineId","archivedStagesCountQuery","archivedItemsCountQuery","query","loading","hasMore","itemName","items","queriesName","length","archivedStages","archivedStagesCount","fetchMore","perPage","page","updateQuery","prev","fetchMoreResult","prevItems","prevItemIds","map","m","fetchedItems","includes","push","Component","name","skip","fetchPolicy","editMutation","refetchQueries","stagesEdit","stagesRemove"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { IRouterProps } from 'modules/common/types';\nimport {\n  Alert,\n  confirm,\n  renderWithProps,\n  router as routerUtils\n} from 'modules/common/utils';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\nimport ArchivedItems from '../components/ArchivedItems';\nimport { mutations, queries } from '../graphql';\nimport { IItemParams, IOptions, RemoveMutation, SaveMutation } from '../types';\n\ntype IProps = {\n  options: IOptions;\n  type: string;\n  search: string;\n  pipelineId: string;\n};\n\ntype IFinalProps = {\n  archivedStagesQuery: any;\n  archivedItemsQuery: any;\n  archivedStagesCountQuery: any;\n  archivedItemsCountQuery: any;\n\n  setActiveItemMutation: SaveMutation;\n  setActiveStageMutation: any;\n\n  removeMutation: any;\n  removeStageMutation: any;\n} & IProps &\n  IRouterProps;\n\nclass ArchivedItemsContainer extends React.Component<IFinalProps> {\n  sendToBoard = (item: any) => {\n    if (this.props.type === 'item') {\n      const { setActiveItemMutation, archivedItemsQuery, history } = this.props;\n\n      setActiveItemMutation({\n        variables: { _id: item._id, stageId: item.stageId, status: 'active' }\n      })\n        .then(async () => {\n          Alert.success('You successfully sent to a board');\n\n          await archivedItemsQuery.refetch();\n          routerUtils.setParams(history, { key: Math.random() });\n        })\n        .catch(error => {\n          Alert.error(error.message);\n        });\n    } else {\n      const {\n        setActiveStageMutation,\n        archivedStagesQuery,\n        options\n      } = this.props;\n\n      setActiveStageMutation({\n        variables: { _id: item._id, type: options.type, status: 'active' }\n      })\n        .then(async () => {\n          Alert.success('You successfully sent to a board');\n\n          await archivedStagesQuery.refetch();\n\n          routerUtils.setParams(this.props.history, { key: Math.random() });\n        })\n        .catch(error => {\n          Alert.error(error.message);\n        });\n    }\n  };\n\n  remove = (item: any) => {\n    if (this.props.type === 'item') {\n      const { removeMutation, archivedItemsQuery, options } = this.props;\n\n      confirm().then(() =>\n        removeMutation({\n          variables: { _id: item._id }\n        })\n          .then(() => {\n            Alert.success(`You successfully deleted a ${options.type}`);\n\n            archivedItemsQuery.refetch();\n          })\n          .catch(error => {\n            Alert.error(error.message);\n          })\n      );\n    } else {\n      const { removeStageMutation, archivedStagesQuery } = this.props;\n\n      confirm().then(() =>\n        removeStageMutation({\n          variables: { _id: item._id }\n        })\n          .then(() => {\n            Alert.success('You successfully deleted a stage');\n\n            archivedStagesQuery.refetch();\n          })\n          .catch(error => {\n            Alert.error(error.message);\n          })\n      );\n    }\n  };\n\n  loadMore = () => {\n    const {\n      search,\n      pipelineId,\n      archivedStagesCountQuery,\n      options,\n      archivedItemsCountQuery,\n      archivedItemsQuery,\n      archivedStagesQuery\n    } = this.props;\n\n    let query;\n    let loading;\n    let hasMore;\n    let itemName;\n    let items;\n\n    if (archivedItemsQuery) {\n      query = archivedItemsQuery;\n      loading = archivedItemsQuery.loading || archivedItemsCountQuery.loading;\n      itemName = options.queriesName.archivedItemsQuery;\n      items = archivedItemsQuery[options.queriesName.archivedItemsQuery] || [];\n\n      hasMore =\n        archivedItemsCountQuery[options.queriesName.archivedItemsCountQuery] >\n        items.length;\n    } else {\n      query = archivedStagesQuery;\n      loading = archivedStagesQuery.loading || archivedStagesCountQuery.loading;\n      itemName = 'archivedStages';\n      items = archivedStagesQuery.archivedStages || [];\n      hasMore = archivedStagesCountQuery.archivedStagesCount > items.length;\n    }\n\n    if (!loading && hasMore) {\n      query.fetchMore({\n        variables: {\n          pipelineId,\n          search,\n          perPage: 20,\n          page: items.length\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            return prev;\n          }\n\n          const prevItems = prev[itemName] || [];\n          const prevItemIds = prevItems.map(m => m._id);\n\n          const fetchedItems = [] as any;\n\n          for (const item of fetchMoreResult[itemName]) {\n            if (!prevItemIds.includes(item._id)) {\n              fetchedItems.push(item);\n            }\n          }\n\n          return {\n            ...prev,\n            [itemName]: [...prevItems, ...fetchedItems]\n          };\n        }\n      });\n    }\n  };\n\n  render() {\n    const {\n      archivedItemsQuery,\n      archivedStagesQuery,\n      archivedItemsCountQuery,\n      archivedStagesCountQuery,\n      options,\n      type\n    } = this.props;\n\n    let items;\n    let hasMore;\n\n    if (archivedItemsQuery) {\n      items = archivedItemsQuery[options.queriesName.archivedItemsQuery] || [];\n      hasMore =\n        archivedItemsCountQuery[options.queriesName.archivedItemsCountQuery] >\n        items.length;\n    } else {\n      items = archivedStagesQuery.archivedStages || [];\n      hasMore = archivedStagesCountQuery.archivedStagesCount > items.length;\n    }\n\n    const props = {\n      items,\n      sendToBoard: this.sendToBoard,\n      remove: this.remove,\n      type,\n      options,\n      hasMore,\n      loadMore: this.loadMore\n    };\n\n    return <ArchivedItems {...props} />;\n  }\n}\n\nexport default (props: IProps) => {\n  const { options } = props;\n\n  return renderWithProps<IProps>(\n    props,\n    compose(\n      graphql<IProps>(gql(queries.archivedStages), {\n        name: 'archivedStagesQuery',\n        skip: ({ type }) => type === 'item',\n        options: ({ pipelineId, search }) => ({\n          variables: { pipelineId, search },\n          fetchPolicy: 'network-only'\n        })\n      }),\n      graphql<IProps>(gql(options.queries.archivedItemsQuery), {\n        name: 'archivedItemsQuery',\n        skip: ({ type }) => type === 'list',\n        options: ({ pipelineId, search }) => ({\n          variables: { pipelineId, search, perPage: 20 },\n          fetchPolicy: 'network-only'\n        })\n      }),\n      graphql<IProps>(gql(queries.archivedStagesCount), {\n        name: 'archivedStagesCountQuery',\n        skip: ({ type }) => type === 'item',\n        options: ({ pipelineId, search }) => ({\n          variables: { pipelineId, search },\n          fetchPolicy: 'network-only'\n        })\n      }),\n      graphql<IProps>(gql(options.queries.archivedItemsCountQuery), {\n        name: 'archivedItemsCountQuery',\n        skip: ({ type }) => type === 'list',\n        options: ({ pipelineId, search }) => ({\n          variables: { pipelineId, search },\n          fetchPolicy: 'network-only'\n        })\n      }),\n      graphql<IProps, SaveMutation, IItemParams>(\n        gql(options.mutations.editMutation),\n        {\n          name: 'setActiveItemMutation',\n          skip: ({ type }) => type === 'list',\n          options: () => ({\n            refetchQueries: ['archivedItemsQuery']\n          })\n        }\n      ),\n      graphql<IProps, SaveMutation, IItemParams>(gql(mutations.stagesEdit), {\n        name: 'setActiveStageMutation',\n        skip: ({ type }) => type === 'item'\n      }),\n      graphql<IProps, RemoveMutation, { _id: string }>(\n        gql(options.mutations.removeMutation),\n        {\n          name: 'removeMutation'\n        }\n      ),\n      graphql<IProps>(gql(mutations.stagesRemove), {\n        name: 'removeStageMutation'\n      })\n    )(withRouter(ArchivedItemsContainer))\n  );\n};\n"]},"metadata":{},"sourceType":"module"}