{"ast":null,"code":"var _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/conversation/messages/bot/CustomMessage.tsx\";\nimport * as React from 'react';\nimport { MessageContent } from '../../styles';\nimport { QuickReplies, ReplyButton } from './styles';\nexport default function CustomMessage(_ref) {\n  var botData = _ref.botData;\n\n  if (!botData) {\n    return null;\n  }\n\n  var wrapped = botData.wrapped,\n      component = botData.component;\n\n  if (component !== 'QuickReplies') {\n    return null;\n  }\n\n  var quick_replies = botData.quick_replies;\n\n  var renderButton = function renderButton(item, index) {\n    return React.createElement(ReplyButton, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, item.title);\n  };\n\n  return React.createElement(React.Fragment, null, wrapped ? React.createElement(MessageContent, {\n    staff: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, wrapped.text) : null, React.createElement(QuickReplies, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, quick_replies ? quick_replies.map(renderButton) : null));\n}","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/conversation/messages/bot/CustomMessage.tsx"],"names":["React","MessageContent","QuickReplies","ReplyButton","CustomMessage","botData","wrapped","component","quick_replies","renderButton","item","index","title","text","map"],"mappings":";AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,UAA1C;AAMA,eAAe,SAASC,aAAT,OAA2C;AAAA,MAAlBC,OAAkB,QAAlBA,OAAkB;;AACxD,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AAHuD,MAKhDC,OALgD,GAKzBD,OALyB,CAKhDC,OALgD;AAAA,MAKvCC,SALuC,GAKzBF,OALyB,CAKvCE,SALuC;;AAOxD,MAAIA,SAAS,KAAK,cAAlB,EAAkC;AAChC,WAAO,IAAP;AACD;;AATuD,MAWhDC,aAXgD,GAW9BH,OAX8B,CAWhDG,aAXgD;;AAaxD,MAAMC,YAAY,GAAG,SAAfA,YAAe,CACnBC,IADmB,EAEnBC,KAFmB,EAGhB;AACH,WAAO,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BD,IAAI,CAACE,KAA/B,CAAP;AACD,GALD;;AAOA,SACE,0CACGN,OAAO,GACN,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAE,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,OAAO,CAACO,IAAtC,CADM,GAEJ,IAHN,EAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,aAAa,GAAGA,aAAa,CAACM,GAAd,CAAkBL,YAAlB,CAAH,GAAqC,IADrD,CAJF,CADF;AAUD","sourcesContent":["import { IBotData } from 'modules/inbox/types';\nimport * as React from 'react';\nimport { MessageContent } from '../../styles';\nimport { QuickReplies, ReplyButton } from './styles';\n\ntype Props = {\n  botData: IBotData;\n};\n\nexport default function CustomMessage({ botData }: Props) {\n  if (!botData) {\n    return null;\n  }\n\n  const { wrapped, component } = botData;\n\n  if (component !== 'QuickReplies') {\n    return null;\n  }\n\n  const { quick_replies } = botData;\n\n  const renderButton = (\n    item: { title: string; payload: string },\n    index: number\n  ) => {\n    return <ReplyButton key={index}>{item.title}</ReplyButton>;\n  };\n\n  return (\n    <>\n      {wrapped ? (\n        <MessageContent staff={true}>{wrapped.text}</MessageContent>\n      ) : null}\n      <QuickReplies>\n        {quick_replies ? quick_replies.map(renderButton) : null}\n      </QuickReplies>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}