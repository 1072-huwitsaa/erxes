{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/activityLogs/components/items/email/EngageEmail.tsx\";\nimport dayjs from 'dayjs';\nimport { ActivityDate, ContentShadow, EmailContent, ExpandButton, FlexBody, FlexCenterContent } from 'modules/activityLogs/styles';\nimport { ControlLabel } from 'modules/common/components/form';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Label from 'modules/common/components/Label';\nimport Tip from 'modules/common/components/Tip';\nimport React from 'react';\nimport xss from 'xss';\n\nvar EngageEmail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EngageEmail, _React$Component);\n\n  function EngageEmail(props) {\n    var _this;\n\n    _classCallCheck(this, EngageEmail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EngageEmail).call(this, props));\n\n    _this.onExpand = function () {\n      _this.setState({\n        expand: !_this.state.expand\n      });\n    };\n\n    _this.state = {\n      expand: false\n    };\n    return _this;\n  }\n\n  _createClass(EngageEmail, [{\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$props$email$ema = this.props.email.email,\n          email = _this$props$email$ema === void 0 ? {} : _this$props$email$ema;\n      var content = email.content;\n      var expand = this.state.expand;\n      var longEmail = content.length >= 800;\n      return React.createElement(React.Fragment, null, React.createElement(EmailContent, {\n        longEmail: longEmail,\n        expand: expand,\n        dangerouslySetInnerHTML: {\n          __html: xss(content)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), longEmail && React.createElement(React.Fragment, null, !expand && React.createElement(ContentShadow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(ExpandButton, {\n        onClick: this.onExpand,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, expand ? 'Collapse' : 'Expand', \"\\xA0\", React.createElement(Icon, {\n        icon: expand ? 'angle-up' : 'angle-down',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var createdAt = this.props.activity.createdAt;\n      var _this$props$email = this.props.email,\n          _this$props$email$ema2 = _this$props$email.email,\n          email = _this$props$email$ema2 === void 0 ? {} : _this$props$email$ema2,\n          validCustomersCount = _this$props$email.validCustomersCount,\n          title = _this$props$email.title,\n          fromUser = _this$props$email.fromUser,\n          _this$props$email$sta = _this$props$email.stats,\n          stats = _this$props$email$sta === void 0 ? {\n        send: 0,\n        total: 0\n      } : _this$props$email$sta;\n      var subject = email.subject;\n      var status = React.createElement(Label, {\n        lblStyle: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Sending\");\n\n      if (validCustomersCount === stats.total) {\n        status = React.createElement(Label, {\n          lblStyle: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Sent\");\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(FlexCenterContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(FlexBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Engage email\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, subject), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Title\"), \": \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, title), React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"From\"), \":\", ' ', React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, fromUser.details ? React.createElement(React.Fragment, null, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, fromUser.details.fullName), React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"(\", fromUser.email, \")\")) : fromUser.email))), status, React.createElement(Tip, {\n        text: dayjs(createdAt).format('llll'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(ActivityDate, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, dayjs(createdAt).format('MMM D, h:mm A')))), this.renderContent());\n    }\n  }]);\n\n  return EngageEmail;\n}(React.Component);\n\nexport default EngageEmail;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/activityLogs/components/items/email/EngageEmail.tsx"],"names":["dayjs","ActivityDate","ContentShadow","EmailContent","ExpandButton","FlexBody","FlexCenterContent","ControlLabel","Icon","Label","Tip","React","xss","EngageEmail","props","onExpand","setState","expand","state","email","content","longEmail","length","__html","createdAt","activity","validCustomersCount","title","fromUser","stats","send","total","subject","status","details","fullName","format","renderContent","Component"],"mappings":"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","sourcesContent":["import dayjs from 'dayjs';\nimport {\n  ActivityDate,\n  ContentShadow,\n  EmailContent,\n  ExpandButton,\n  FlexBody,\n  FlexCenterContent\n} from 'modules/activityLogs/styles';\nimport { ControlLabel } from 'modules/common/components/form';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Label from 'modules/common/components/Label';\nimport Tip from 'modules/common/components/Tip';\nimport { IEngageEmail, IEngageMessage } from 'modules/engage/types';\nimport React from 'react';\nimport xss from 'xss';\n\ntype Props = {\n  email: IEngageMessage;\n  emailType: string;\n  activity: any;\n};\n\nclass EngageEmail extends React.Component<Props, { expand: boolean }> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expand: false\n    };\n  }\n\n  onExpand = () => {\n    this.setState({ expand: !this.state.expand });\n  };\n\n  renderContent() {\n    const { email = {} as IEngageEmail } = this.props.email;\n    const { content } = email;\n    const { expand } = this.state;\n    const longEmail = content.length >= 800;\n\n    return (\n      <>\n        <EmailContent\n          longEmail={longEmail}\n          expand={expand}\n          dangerouslySetInnerHTML={{ __html: xss(content) }}\n        />\n        {longEmail && (\n          <>\n            {!expand && <ContentShadow />}\n            <ExpandButton onClick={this.onExpand}>\n              {expand ? 'Collapse' : 'Expand'}&nbsp;\n              <Icon icon={expand ? 'angle-up' : 'angle-down'} />\n            </ExpandButton>\n          </>\n        )}\n      </>\n    );\n  }\n\n  render() {\n    const { createdAt } = this.props.activity;\n\n    const {\n      email = {} as IEngageEmail,\n      validCustomersCount,\n      title,\n      fromUser,\n      stats = { send: 0, total: 0 }\n    } = this.props.email;\n\n    const { subject } = email;\n\n    let status = <Label lblStyle=\"default\">Sending</Label>;\n\n    if (validCustomersCount === stats.total) {\n      status = <Label lblStyle=\"success\">Sent</Label>;\n    }\n\n    return (\n      <>\n        <FlexCenterContent>\n          <FlexBody>\n            <p>Engage email</p>\n            <p>{subject}</p>\n            <div>\n              <ControlLabel>Title</ControlLabel>: <span>{title}</span>\n              <ControlLabel>From</ControlLabel>:{' '}\n              <span>\n                {fromUser.details ? (\n                  <>\n                    <b>{fromUser.details.fullName}</b>\n                    <i>({fromUser.email})</i>\n                  </>\n                ) : (\n                  fromUser.email\n                )}\n              </span>\n            </div>\n          </FlexBody>\n          {status}\n          <Tip text={dayjs(createdAt).format('llll')}>\n            <ActivityDate>\n              {dayjs(createdAt).format('MMM D, h:mm A')}\n            </ActivityDate>\n          </Tip>\n        </FlexCenterContent>\n        {this.renderContent()}\n      </>\n    );\n  }\n}\n\nexport default EngageEmail;\n"]},"metadata":{},"sourceType":"module"}