{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/conversation/Conversation.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 20px;\\n  overflow: hidden;\\n  min-height: 100%;\\n\\n  > div:first-child {\\n    margin-top: 0;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { FacebookPost } from 'modules/inbox/containers/conversationDetail';\nimport React from 'react';\nimport styled from 'styled-components';\nimport CallPro from '../callpro/Callpro';\nimport MailConversation from '../mail/MailConversation';\nimport AttachmentPreview from './AttachmentPreview';\nimport Message from './messages/Message';\nvar Wrapper = styled.div(_templateObject());\n\nvar Conversation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Conversation, _React$Component);\n\n  function Conversation(props) {\n    var _this;\n\n    _classCallCheck(this, Conversation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Conversation).call(this, props));\n\n    _this.onPostToggleClick = function () {\n      var isResolved = _this.state.isResolved;\n\n      _this.setState({\n        isResolved: isResolved ? false : true\n      });\n    };\n\n    _this.state = {\n      isResolved: false\n    };\n    return _this;\n  }\n\n  _createClass(Conversation, [{\n    key: \"renderMessages\",\n    value: function renderMessages(messages, conversationFirstMessage) {\n      var rows = [];\n      var tempId;\n      messages.forEach(function (message) {\n        rows.push(React.createElement(Message, {\n          isSameUser: message.userId ? message.userId === tempId : message.customerId === tempId,\n          conversationFirstMessage: conversationFirstMessage,\n          message: message,\n          key: message._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }));\n        tempId = message.userId ? message.userId : message.customerId;\n      });\n      return rows;\n    }\n  }, {\n    key: \"renderConversation\",\n    value: function renderConversation() {\n      var _this$props = this.props,\n          conversation = _this$props.conversation,\n          conversationMessages = _this$props.conversationMessages,\n          scrollBottom = _this$props.scrollBottom;\n\n      if (!conversation) {\n        return null;\n      }\n\n      var kind = conversation.integration.kind;\n      var messages = (conversationMessages || []).slice();\n      var firstMessage = messages[0];\n\n      if (kind.includes('nylas') || kind === 'gmail') {\n        return React.createElement(MailConversation, {\n          conversation: conversation,\n          conversationMessages: conversationMessages,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n      }\n\n      if (kind === 'facebook-post') {\n        return React.createElement(FacebookPost, {\n          scrollBottom: scrollBottom,\n          conversation: conversation,\n          isResolved: this.state.isResolved,\n          onToggleClick: this.onPostToggleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      }\n\n      if (kind === 'callpro') {\n        return React.createElement(React.Fragment, null, React.createElement(CallPro, {\n          conversation: conversation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }), this.renderMessages(messages, firstMessage));\n      }\n\n      return this.renderMessages(messages, firstMessage);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          attachmentPreview = _this$props2.attachmentPreview,\n          scrollBottom = _this$props2.scrollBottom;\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.renderConversation(), React.createElement(AttachmentPreview, {\n        onLoad: scrollBottom,\n        attachmentPreview: attachmentPreview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Conversation;\n}(React.Component);\n\nexport default Conversation;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/conversation/Conversation.tsx"],"names":["FacebookPost","React","styled","CallPro","MailConversation","AttachmentPreview","Message","Wrapper","div","Conversation","props","onPostToggleClick","isResolved","state","setState","messages","conversationFirstMessage","rows","tempId","forEach","message","push","userId","customerId","_id","conversation","conversationMessages","scrollBottom","kind","integration","slice","firstMessage","includes","renderMessages","attachmentPreview","renderConversation","Component"],"mappings":";;;;;;;;;;;;;;;;;;AACA,SAASA,YAAT,QAA6B,6CAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAUA,IAAMC,OAAO,GAAGL,MAAM,CAACM,GAAV,mBAAb;;IAUMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;;AADiB,UAiCnBC,iBAjCmB,GAiCC,YAAM;AAAA,UAChBC,UADgB,GACD,MAAKC,KADJ,CAChBD,UADgB;;AAGxB,YAAKE,QAAL,CAAc;AAAEF,QAAAA,UAAU,EAAEA,UAAU,GAAG,KAAH,GAAW;AAAnC,OAAd;AACD,KArCkB;;AAGjB,UAAKC,KAAL,GAAa;AACXD,MAAAA,UAAU,EAAE;AADD,KAAb;AAHiB;AAMlB;;;;mCAEcG,Q,EAAsBC,wB,EAAoC;AACvE,UAAMC,IAAuB,GAAG,EAAhC;AAEA,UAAIC,MAAJ;AAEAH,MAAAA,QAAQ,CAACI,OAAT,CAAiB,UAAAC,OAAO,EAAI;AAC1BH,QAAAA,IAAI,CAACI,IAAL,CACE,oBAAC,OAAD;AACE,UAAA,UAAU,EACRD,OAAO,CAACE,MAAR,GACIF,OAAO,CAACE,MAAR,KAAmBJ,MADvB,GAEIE,OAAO,CAACG,UAAR,KAAuBL,MAJ/B;AAME,UAAA,wBAAwB,EAAEF,wBAN5B;AAOE,UAAA,OAAO,EAAEI,OAPX;AAQE,UAAA,GAAG,EAAEA,OAAO,CAACI,GARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaAN,QAAAA,MAAM,GAAGE,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAACE,MAAzB,GAAkCF,OAAO,CAACG,UAAnD;AACD,OAfD;AAiBA,aAAON,IAAP;AACD;;;yCAQoB;AAAA,wBAC0C,KAAKP,KAD/C;AAAA,UACXe,YADW,eACXA,YADW;AAAA,UACGC,oBADH,eACGA,oBADH;AAAA,UACyBC,YADzB,eACyBA,YADzB;;AAGnB,UAAI,CAACF,YAAL,EAAmB;AACjB,eAAO,IAAP;AACD;;AALkB,UAOXG,IAPW,GAOFH,YAAY,CAACI,WAPX,CAOXD,IAPW;AAQnB,UAAMb,QAAQ,GAAG,CAACW,oBAAoB,IAAI,EAAzB,EAA6BI,KAA7B,EAAjB;AACA,UAAMC,YAAY,GAAGhB,QAAQ,CAAC,CAAD,CAA7B;;AAEA,UAAIa,IAAI,CAACI,QAAL,CAAc,OAAd,KAA0BJ,IAAI,KAAK,OAAvC,EAAgD;AAC9C,eACE,oBAAC,gBAAD;AACE,UAAA,YAAY,EAAEH,YADhB;AAEE,UAAA,oBAAoB,EAAEC,oBAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AAED,UAAIE,IAAI,KAAK,eAAb,EAA8B;AAC5B,eACE,oBAAC,YAAD;AACE,UAAA,YAAY,EAAED,YADhB;AAEE,UAAA,YAAY,EAAEF,YAFhB;AAGE,UAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWD,UAHzB;AAIE,UAAA,aAAa,EAAE,KAAKD,iBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,UAAIiB,IAAI,KAAK,SAAb,EAAwB;AACtB,eACE,0CACE,oBAAC,OAAD;AAAS,UAAA,YAAY,EAAEH,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEG,KAAKQ,cAAL,CAAoBlB,QAApB,EAA8BgB,YAA9B,CAFH,CADF;AAMD;;AAED,aAAO,KAAKE,cAAL,CAAoBlB,QAApB,EAA8BgB,YAA9B,CAAP;AACD;;;6BAEQ;AAAA,yBACqC,KAAKrB,KAD1C;AAAA,UACCwB,iBADD,gBACCA,iBADD;AAAA,UACoBP,YADpB,gBACoBA,YADpB;AAGP,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKQ,kBAAL,EADH,EAEE,oBAAC,iBAAD;AACE,QAAA,MAAM,EAAER,YADV;AAEE,QAAA,iBAAiB,EAAEO,iBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AASD;;;;EA/FwBjC,KAAK,CAACmC,S;;AAkGjC,eAAe3B,YAAf","sourcesContent":["import { IAttachmentPreview } from 'modules/common/types';\nimport { FacebookPost } from 'modules/inbox/containers/conversationDetail';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { IConversation, IMessage } from '../../../../types';\nimport CallPro from '../callpro/Callpro';\nimport MailConversation from '../mail/MailConversation';\nimport AttachmentPreview from './AttachmentPreview';\nimport Message from './messages/Message';\n\ntype Props = {\n  conversation: IConversation;\n  conversationMessages: IMessage[];\n  attachmentPreview: IAttachmentPreview;\n  scrollBottom: () => void;\n  loading: boolean;\n};\n\nconst Wrapper = styled.div`\n  padding: 20px;\n  overflow: hidden;\n  min-height: 100%;\n\n  > div:first-child {\n    margin-top: 0;\n  }\n`;\n\nclass Conversation extends React.Component<Props, { isResolved: boolean }> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isResolved: false\n    };\n  }\n\n  renderMessages(messages: IMessage[], conversationFirstMessage: IMessage) {\n    const rows: React.ReactNode[] = [];\n\n    let tempId;\n\n    messages.forEach(message => {\n      rows.push(\n        <Message\n          isSameUser={\n            message.userId\n              ? message.userId === tempId\n              : message.customerId === tempId\n          }\n          conversationFirstMessage={conversationFirstMessage}\n          message={message}\n          key={message._id}\n        />\n      );\n\n      tempId = message.userId ? message.userId : message.customerId;\n    });\n\n    return rows;\n  }\n\n  onPostToggleClick = () => {\n    const { isResolved } = this.state;\n\n    this.setState({ isResolved: isResolved ? false : true });\n  };\n\n  renderConversation() {\n    const { conversation, conversationMessages, scrollBottom } = this.props;\n\n    if (!conversation) {\n      return null;\n    }\n\n    const { kind } = conversation.integration;\n    const messages = (conversationMessages || []).slice();\n    const firstMessage = messages[0];\n\n    if (kind.includes('nylas') || kind === 'gmail') {\n      return (\n        <MailConversation\n          conversation={conversation}\n          conversationMessages={conversationMessages}\n        />\n      );\n    }\n\n    if (kind === 'facebook-post') {\n      return (\n        <FacebookPost\n          scrollBottom={scrollBottom}\n          conversation={conversation}\n          isResolved={this.state.isResolved}\n          onToggleClick={this.onPostToggleClick}\n        />\n      );\n    }\n\n    if (kind === 'callpro') {\n      return (\n        <>\n          <CallPro conversation={conversation} />\n          {this.renderMessages(messages, firstMessage)}\n        </>\n      );\n    }\n\n    return this.renderMessages(messages, firstMessage);\n  }\n\n  render() {\n    const { attachmentPreview, scrollBottom } = this.props;\n\n    return (\n      <Wrapper>\n        {this.renderConversation()}\n        <AttachmentPreview\n          onLoad={scrollBottom}\n          attachmentPreview={attachmentPreview}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default Conversation;\n"]},"metadata":{},"sourceType":"module"}