{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/webhook/components/WebhookList.tsx\";\nimport { AppConsumer } from 'appContext';\nimport Button from 'erxes-common-ui/lib/components/button';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport HeaderDescription from 'modules/common/components/HeaderDescription';\nimport Table from 'modules/common/components/table';\nimport Tip from 'modules/common/components/Tip';\nimport { router } from 'modules/common/utils';\nimport { __ } from 'modules/common/utils';\nimport { Alert } from 'modules/common/utils';\nimport { FlexItem, FlexRow } from 'modules/insights/styles';\nimport SelectBrands from 'modules/settings/brands/containers/SelectBrands';\nimport React from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport List from '../../common/components/List';\nimport RowActions from '../../common/components/RowActions';\nimport { FilterContainer } from '../styles';\nimport WebhookAddForm from './WebhookForm';\n\nvar WebhookList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WebhookList, _React$Component);\n\n  function WebhookList(_props) {\n    var _this;\n\n    _classCallCheck(this, WebhookList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WebhookList).call(this, _props));\n    _this.timer = void 0;\n\n    _this.renderForm = function (props) {\n      return React.createElement(WebhookAddForm, Object.assign({}, props, {\n        renderButton: _this.props.renderButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    };\n\n    _this.renderResetPassword = function (object) {\n      var onCopy = function onCopy() {\n        Alert.success('Copied');\n      };\n\n      return React.createElement(CopyToClipboard, {\n        text: object.token,\n        onCopy: onCopy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Tip, {\n        text: __('Copy token'),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"copy\",\n        size: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }))));\n    };\n\n    _this.search = function (e) {\n      if (_this.timer) {\n        clearTimeout(_this.timer);\n      }\n\n      var searchValue = e.target.value;\n\n      _this.setState({\n        searchValue: searchValue\n      });\n\n      _this.timer = setTimeout(function () {\n        router.setParams(_this.props.history, {\n          searchValue: searchValue\n        });\n      }, 500);\n    };\n\n    _this.renderFilter = function () {\n      return React.createElement(FilterContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, _this.renderBrandChooser()));\n    };\n\n    _this.renderContent = function (props) {\n      return React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, __('Enpoint')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, __('Status')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, __('Actions')))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, _this.renderRows(_this.props)));\n    };\n\n    var _searchValue = _props.queryParams.searchValue;\n    _this.state = {\n      searchValue: _searchValue || ''\n    };\n    return _this;\n  }\n\n  _createClass(WebhookList, [{\n    key: \"renderRows\",\n    value: function renderRows(_ref) {\n      var _this2 = this;\n\n      var objects = _ref.objects;\n      return objects.map(function (object) {\n        return React.createElement(\"tr\", {\n          key: object._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, object.url), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, object.status), React.createElement(RowActions, Object.assign({}, _this2.props, {\n          object: object,\n          size: \"lg\",\n          renderForm: _this2.renderForm,\n          additionalActions: _this2.renderResetPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        })));\n      });\n    }\n  }, {\n    key: \"renderBrandChooser\",\n    value: function renderBrandChooser() {\n      var _this$props = this.props,\n          _this$props$configsEn = _this$props.configsEnvQuery,\n          configsEnvQuery = _this$props$configsEn === void 0 ? {} : _this$props$configsEn,\n          history = _this$props.history,\n          queryParams = _this$props.queryParams;\n      var env = configsEnvQuery.configsGetEnv || {};\n\n      if (env.USE_BRAND_RESTRICTIONS !== 'true') {\n        return null;\n      }\n\n      var onSelect = function onSelect(brandIds) {\n        router.setParams(history, {\n          brandIds: brandIds\n        });\n      };\n\n      return React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, __('Brand')), React.createElement(SelectBrands, {\n        label: __('Choose brands'),\n        onSelect: onSelect,\n        value: queryParams.brandIds,\n        name: \"selectedBrands\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"breadcrumb\",\n    value: function breadcrumb() {\n      return [{\n        title: __('Settings'),\n        link: '/settings'\n      }, {\n        title: __('Webhooks')\n      }];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(List, Object.assign({\n        formTitle: __('Add Webhook'),\n        size: \"lg\",\n        breadcrumb: [{\n          title: __('Settings'),\n          link: '/settings'\n        }, {\n          title: __('Webhooks')\n        }],\n        title: __('Webhooks'),\n        leftActionBar: React.createElement(HeaderDescription, {\n          icon: \"/images/actions/21.svg\",\n          title: \"Outgoing webhooks\",\n          description: \"Webhooks allow you to listen for triggers in your app, which will send relevant data to external URLs in real-time.\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }),\n        renderFilter: this.renderFilter,\n        renderForm: this.renderForm,\n        renderContent: this.renderContent,\n        center: true\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return WebhookList;\n}(React.Component);\n\nvar WithConsumer = function WithConsumer(props) {\n  return React.createElement(AppConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, function (_ref2) {\n    var currentUser = _ref2.currentUser;\n    return React.createElement(WebhookList, Object.assign({}, props, {\n      currentUser: currentUser || {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default WithConsumer;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/webhook/components/WebhookList.tsx"],"names":["AppConsumer","Button","Icon","ControlLabel","HeaderDescription","Table","Tip","router","__","Alert","FlexItem","FlexRow","SelectBrands","React","CopyToClipboard","List","RowActions","FilterContainer","WebhookAddForm","WebhookList","props","timer","renderForm","renderButton","renderResetPassword","object","onCopy","success","token","search","e","clearTimeout","searchValue","target","value","setState","setTimeout","setParams","history","renderFilter","renderBrandChooser","renderContent","renderRows","queryParams","state","objects","map","_id","url","status","configsEnvQuery","env","configsGetEnv","USE_BRAND_RESTRICTIONS","onSelect","brandIds","title","link","Component","WithConsumer","currentUser"],"mappings":"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","sourcesContent":["import { AppConsumer } from 'appContext';\nimport Button from 'erxes-common-ui/lib/components/button';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { IUser } from 'modules/auth/types';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport HeaderDescription from 'modules/common/components/HeaderDescription';\nimport Table from 'modules/common/components/table';\nimport Tip from 'modules/common/components/Tip';\nimport { IButtonMutateProps } from 'modules/common/types';\nimport { router } from 'modules/common/utils';\nimport { __ } from 'modules/common/utils';\nimport { Alert } from 'modules/common/utils';\nimport { FlexItem, FlexRow } from 'modules/insights/styles';\nimport SelectBrands from 'modules/settings/brands/containers/SelectBrands';\nimport React from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport List from '../../common/components/List';\nimport RowActions from '../../common/components/RowActions';\nimport { ICommonFormProps, ICommonListProps } from '../../common/types';\nimport { FilterContainer } from '../styles';\nimport { IWebhook } from '../types';\nimport WebhookAddForm from './WebhookForm';\n\ntype IProps = {\n  refetchQueries: any;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  queryParams?: any;\n  configsEnvQuery?: any;\n} & ICommonListProps;\n\ntype FinalProps = IProps & { currentUser: IUser };\n\ntype States = {\n  searchValue: string;\n};\n\nclass WebhookList extends React.Component<FinalProps, States> {\n  private timer?: NodeJS.Timer;\n\n  constructor(props: FinalProps) {\n    super(props);\n\n    const {\n      queryParams: { searchValue }\n    } = props;\n\n    this.state = {\n      searchValue: searchValue || ''\n    };\n  }\n\n  renderForm = props => {\n    return <WebhookAddForm {...props} renderButton={this.props.renderButton} />;\n  };\n\n  renderRows({ objects }: { objects: IWebhook[] }) {\n    return objects.map(object => {\n      return (\n        <tr key={object._id}>\n          <td>{object.url}</td>\n          <td>{object.status}</td>\n          <RowActions\n            {...this.props}\n            object={object}\n            size=\"lg\"\n            renderForm={this.renderForm}\n            additionalActions={this.renderResetPassword}\n          />\n        </tr>\n      );\n    });\n  }\n\n  renderResetPassword = object => {\n    const onCopy = () => {\n      Alert.success('Copied');\n    };\n\n    return (\n      <CopyToClipboard text={object.token} onCopy={onCopy}>\n        <Button btnStyle=\"link\">\n          <Tip text={__('Copy token')} placement=\"top\">\n            <Icon icon=\"copy\" size={15} />\n          </Tip>\n        </Button>\n      </CopyToClipboard>\n    );\n  };\n\n  search = e => {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n\n    const searchValue = e.target.value;\n\n    this.setState({ searchValue });\n\n    this.timer = setTimeout(() => {\n      router.setParams(this.props.history, { searchValue });\n    }, 500);\n  };\n\n  renderBrandChooser() {\n    const { configsEnvQuery = {}, history, queryParams } = this.props;\n\n    const env = configsEnvQuery.configsGetEnv || {};\n\n    if (env.USE_BRAND_RESTRICTIONS !== 'true') {\n      return null;\n    }\n\n    const onSelect = brandIds => {\n      router.setParams(history, { brandIds });\n    };\n\n    return (\n      <FlexItem>\n        <ControlLabel>{__('Brand')}</ControlLabel>\n        <SelectBrands\n          label={__('Choose brands')}\n          onSelect={onSelect}\n          value={queryParams.brandIds}\n          name=\"selectedBrands\"\n        />\n      </FlexItem>\n    );\n  }\n\n  renderFilter = () => {\n    return (\n      <FilterContainer>\n        <FlexRow>{this.renderBrandChooser()}</FlexRow>\n      </FilterContainer>\n    );\n  };\n\n  renderContent = props => {\n    return (\n      <Table>\n        <thead>\n          <tr>\n            <th>{__('Enpoint')}</th>\n            <th>{__('Status')}</th>\n            <th>{__('Actions')}</th>\n          </tr>\n        </thead>\n        <tbody>{this.renderRows(this.props)}</tbody>\n      </Table>\n    );\n  };\n\n  breadcrumb() {\n    return [\n      { title: __('Settings'), link: '/settings' },\n      { title: __('Webhooks') }\n    ];\n  }\n\n  render() {\n    return (\n      <List\n        formTitle={__('Add Webhook')}\n        size=\"lg\"\n        breadcrumb={[\n          { title: __('Settings'), link: '/settings' },\n          { title: __('Webhooks') }\n        ]}\n        title={__('Webhooks')}\n        leftActionBar={\n          <HeaderDescription\n            icon=\"/images/actions/21.svg\"\n            title=\"Outgoing webhooks\"\n            description=\"Webhooks allow you to listen for triggers in your app, which will send relevant data to external URLs in real-time.\"\n          />\n        }\n        renderFilter={this.renderFilter}\n        renderForm={this.renderForm}\n        renderContent={this.renderContent}\n        center={true}\n        {...this.props}\n      />\n    );\n  }\n}\n\nconst WithConsumer = (props: IProps & ICommonListProps & ICommonFormProps) => {\n  return (\n    <AppConsumer>\n      {({ currentUser }) => (\n        <WebhookList {...props} currentUser={currentUser || ({} as IUser)} />\n      )}\n    </AppConsumer>\n  );\n};\n\nexport default WithConsumer;\n"]},"metadata":{},"sourceType":"module"}