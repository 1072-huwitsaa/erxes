{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/channels/components/ChannelForm.tsx\";\nimport Button from 'erxes-common-ui/lib/components/button';\nimport FormControl from 'modules/common/components/form/Control';\nimport Form from 'modules/common/components/form/Form';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport SelectTeamMembers from 'modules/settings/team/containers/SelectTeamMembers';\nimport React from 'react';\n\nvar ChannelForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChannelForm, _React$Component);\n\n  function ChannelForm(props) {\n    var _this;\n\n    _classCallCheck(this, ChannelForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChannelForm).call(this, props));\n\n    _this.generateDoc = function (values) {\n      var channel = _this.props.channel;\n      var finalValues = values;\n\n      if (channel) {\n        finalValues._id = channel._id;\n      }\n\n      return _objectSpread({}, finalValues, {\n        memberIds: _this.state.selectedMembers\n      });\n    };\n\n    _this.renderContent = function (formProps) {\n      var _this$props = _this.props,\n          closeModal = _this$props.closeModal,\n          channel = _this$props.channel,\n          renderButton = _this$props.renderButton;\n      var values = formProps.values,\n          isSubmitted = formProps.isSubmitted;\n      var object = channel || {};\n\n      var self = _assertThisInitialized(_this);\n\n      var onChange = function onChange(items) {\n        self.setState({\n          selectedMembers: items\n        });\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Name\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"name\",\n        autoFocus: true,\n        defaultValue: object.name,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Description\"), React.createElement(FormControl, Object.assign({}, formProps, {\n        name: \"description\",\n        componentClass: \"textarea\",\n        rows: 5,\n        defaultValue: object.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Members\"), React.createElement(SelectTeamMembers, {\n        label: \"Choose members\",\n        name: \"selectedMembers\",\n        value: self.state.selectedMembers,\n        onSelect: onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        type: \"button\",\n        icon: \"cancel-1\",\n        onClick: closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Cancel\"), renderButton({\n        name: 'channel',\n        values: _this.generateDoc(values),\n        isSubmitted: isSubmitted,\n        callback: closeModal,\n        object: channel\n      })));\n    };\n\n    _this.state = {\n      selectedMembers: props.selectedMembers || []\n    };\n    return _this;\n  }\n\n  _createClass(ChannelForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        renderContent: this.renderContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ChannelForm;\n}(React.Component);\n\nexport default ChannelForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/channels/components/ChannelForm.tsx"],"names":["Button","FormControl","Form","FormGroup","ControlLabel","ModalFooter","SelectTeamMembers","React","ChannelForm","props","generateDoc","values","channel","finalValues","_id","memberIds","state","selectedMembers","renderContent","formProps","closeModal","renderButton","isSubmitted","object","self","onChange","items","setState","name","description","callback","Component"],"mappings":"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","sourcesContent":["import Button from 'erxes-common-ui/lib/components/button';\nimport FormControl from 'modules/common/components/form/Control';\nimport Form from 'modules/common/components/form/Form';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { ModalFooter } from 'modules/common/styles/main';\nimport { IButtonMutateProps, IFormProps } from 'modules/common/types';\nimport SelectTeamMembers from 'modules/settings/team/containers/SelectTeamMembers';\nimport React from 'react';\nimport { IChannel } from '../types';\n\ntype Props = {\n  channel?: IChannel;\n  selectedMembers: string[];\n  closeModal: () => void;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n};\n\ntype State = {\n  selectedMembers: string[];\n};\n\nclass ChannelForm extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      selectedMembers: props.selectedMembers || []\n    };\n  }\n\n  generateDoc = (values: {\n    _id?: string;\n    name: string;\n    description: string;\n  }) => {\n    const { channel } = this.props;\n    const finalValues = values;\n\n    if (channel) {\n      finalValues._id = channel._id;\n    }\n\n    return {\n      ...finalValues,\n      memberIds: this.state.selectedMembers\n    };\n  };\n\n  renderContent = (formProps: IFormProps) => {\n    const { closeModal, channel, renderButton } = this.props;\n    const { values, isSubmitted } = formProps;\n\n    const object = channel || ({} as IChannel);\n    const self = this;\n\n    const onChange = items => {\n      self.setState({ selectedMembers: items });\n    };\n\n    return (\n      <>\n        <FormGroup>\n          <ControlLabel required={true}>Name</ControlLabel>\n\n          <FormControl\n            {...formProps}\n            name=\"name\"\n            autoFocus={true}\n            defaultValue={object.name}\n            required={true}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Description</ControlLabel>\n\n          <FormControl\n            {...formProps}\n            name=\"description\"\n            componentClass=\"textarea\"\n            rows={5}\n            defaultValue={object.description}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <ControlLabel>Members</ControlLabel>\n\n          <SelectTeamMembers\n            label=\"Choose members\"\n            name=\"selectedMembers\"\n            value={self.state.selectedMembers}\n            onSelect={onChange}\n          />\n        </FormGroup>\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            type=\"button\"\n            icon=\"cancel-1\"\n            onClick={closeModal}\n          >\n            Cancel\n          </Button>\n\n          {renderButton({\n            name: 'channel',\n            values: this.generateDoc(values),\n            isSubmitted,\n            callback: closeModal,\n            object: channel\n          })}\n        </ModalFooter>\n      </>\n    );\n  };\n\n  render() {\n    return <Form renderContent={this.renderContent} />;\n  }\n}\n\nexport default ChannelForm;\n"]},"metadata":{},"sourceType":"module"}