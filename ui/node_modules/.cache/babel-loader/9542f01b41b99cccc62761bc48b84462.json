{"ast":null,"code":"import _slicedToArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/mail/MailForm.tsx\";\nimport dayjs from 'dayjs';\nimport Button from 'erxes-common-ui/lib/components/button';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { SmallLoader } from 'modules/common/components/ButtonMutate';\nimport FormControl from 'modules/common/components/form/Control';\nimport { Label } from 'modules/common/components/form/styles';\nimport Tip from 'modules/common/components/Tip';\nimport EditorCK from 'modules/common/containers/EditorCK';\nimport { __, Alert, uploadHandler } from 'modules/common/utils';\nimport { Meta } from 'modules/inbox/components/conversationDetail/workarea/mail/style';\nimport { FileName } from 'modules/inbox/styles';\nimport React from 'react';\nimport { MAIL_TOOLBARS_CONFIG } from '../../constants';\nimport { formatObj, formatStr, generateForwardMailContent } from '../../containers/utils';\nimport { generateEmailTemplateParams } from 'modules/engage/utils';\nimport EmailTemplate from './emailTemplate/EmailTemplate';\nimport MailChooser from './MailChooser';\nimport { AttachmentContainer, Attachments, Column, ControlWrapper, EditorFooter, FileSize, MailEditorWrapper, Resipients, SpaceBetweenRow, ToolBar, Uploading } from './styles';\nimport { FlexRow, Subject } from './styles';\n\nvar MailForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MailForm, _React$Component);\n\n  function MailForm(props) {\n    var _this;\n\n    _classCallCheck(this, MailForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MailForm).call(this, props));\n\n    _this.clearContent = function () {\n      _this.setState({\n        to: '',\n        cc: '',\n        bcc: '',\n        subject: '',\n        content: '',\n        attachments: []\n      });\n    };\n\n    _this.onSubmit = function (e) {\n      var shouldResolve = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _this$props = _this.props,\n          isReply = _this$props.isReply,\n          closeModal = _this$props.closeModal,\n          toggleReply = _this$props.toggleReply,\n          integrationId = _this$props.integrationId,\n          sendMail = _this$props.sendMail,\n          isForward = _this$props.isForward,\n          clearOnSubmit = _this$props.clearOnSubmit;\n      var mailData = _this.props.mailData || {};\n      var _this$state = _this.state,\n          content = _this$state.content,\n          from = _this$state.from,\n          attachments = _this$state.attachments,\n          to = _this$state.to,\n          cc = _this$state.cc,\n          bcc = _this$state.bcc,\n          subject = _this$state.subject,\n          kind = _this$state.kind;\n\n      if (!to) {\n        return Alert.error('This message must have at least one recipient.');\n      }\n\n      var references = mailData.references,\n          headerId = mailData.headerId,\n          inReplyTo = mailData.inReplyTo,\n          replyTo = mailData.replyTo,\n          threadId = mailData.threadId,\n          messageId = mailData.messageId;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      var subjectValue = subject || mailData.subject || '';\n\n      var variables = _objectSpread({\n        headerId: headerId,\n        replyTo: replyTo,\n        inReplyTo: inReplyTo,\n        references: references,\n        threadId: threadId,\n        attachments: attachments,\n        kind: kind,\n        body: content,\n        erxesApiId: from,\n        shouldResolve: shouldResolve\n      }, !isForward ? {\n        replyToMessageId: messageId\n      } : {}, {\n        to: formatStr(to),\n        cc: formatStr(cc),\n        bcc: formatStr(bcc),\n        from: integrationId ? integrationId : from,\n        subject: isForward && !subjectValue.includes('Fw:') ? \"Fw: \".concat(subjectValue) : subjectValue\n      });\n\n      return sendMail({\n        variables: variables,\n        callback: function callback() {\n          _this.setState({\n            isLoading: false\n          });\n\n          if (clearOnSubmit) {\n            _this.clearContent();\n          }\n\n          if (isReply) {\n            return toggleReply && toggleReply();\n          } else {\n            return closeModal && closeModal();\n          }\n        }\n      });\n    };\n\n    _this.getSelectedIntegration = function (selectedId) {\n      var integration = _this.props.integrations.find(function (obj) {\n        return obj._id === selectedId;\n      });\n\n      return integration || {};\n    };\n\n    _this.changeEditorContent = function (content, emailSignature) {\n      _this.setState({\n        content: content\n      }, function () {\n        _this.setState({\n          emailSignature: emailSignature\n        });\n      });\n    };\n\n    _this.changeEmailSignature = function (selectedIntegrationId) {\n      // find selected brand\n      var brand = _this.getSelectedIntegration(selectedIntegrationId).brand;\n\n      var brandId = brand._id; // email signature of selected brand\n\n      var emailSignatureToChange = _this.getEmailSignature(brandId); // email signature, content before change\n\n\n      var _this$state2 = _this.state,\n          emailSignature = _this$state2.emailSignature,\n          content = _this$state2.content;\n\n      if (emailSignature === emailSignatureToChange) {\n        return;\n      }\n\n      if (content.includes(emailSignature)) {\n        return _this.changeEditorContent(content.replace(emailSignature, emailSignatureToChange), emailSignatureToChange);\n      }\n\n      return _this.changeEditorContent(content.concat(emailSignatureToChange), emailSignatureToChange);\n    };\n\n    _this.getEmailSignature = function (brandId) {\n      if (!brandId) {\n        var integrations = _this.props.integrations;\n        var brand = integrations.length > 0 ? integrations[0].brand : {};\n        return _this.findEmailSignature(brand && brand._id);\n      }\n\n      return _this.findEmailSignature(brandId);\n    };\n\n    _this.findEmailSignature = function (brandId) {\n      var found = _this.props.emailSignatures.find(function (obj) {\n        return obj.brandId === brandId;\n      });\n\n      var signatureContent = found && found.signature || '';\n      return signatureContent;\n    };\n\n    _this.getIntegrationId = function (integrations, integrationId) {\n      if (integrationId) {\n        return integrationId;\n      }\n\n      return integrations.length > 0 ? integrations[0]._id : '';\n    };\n\n    _this.onEditorChange = function (e) {\n      _this.setState({\n        content: e.editor.getData()\n      });\n    };\n\n    _this.onClick = function (name) {\n      _this.setState(_defineProperty({}, name, true));\n    };\n\n    _this.handleInputChange = function (e) {\n      _this.setState({\n        subject: e.currentTarget.value\n      });\n    };\n\n    _this.onSelectChange = function (name, e) {\n      _this.setState(_defineProperty({}, name, e.currentTarget.value));\n    };\n\n    _this.onRemoveAttach = function (attachment) {\n      var attachments = _this.state.attachments;\n\n      _this.setState({\n        attachments: attachments.filter(function (item) {\n          return item.filename !== attachment.filename;\n        })\n      });\n    };\n\n    _this.getEmailSender = function (fromEmail) {\n      var mailData = _this.props.mailData || {};\n      var integrationEmail = mailData.integrationEmail;\n      var to = formatObj(mailData.to) || ''; // new email\n\n      if ((!to || to.length === 0) && !integrationEmail) {\n        return fromEmail;\n      } // reply\n\n\n      if (!integrationEmail && !fromEmail) {\n        return '';\n      }\n\n      if (!integrationEmail && to !== fromEmail) {\n        return fromEmail;\n      }\n\n      var receiver; // Prevent send email to itself\n\n      if (integrationEmail === fromEmail) {\n        receiver = to;\n      } else {\n        var toEmails; // Exclude integration email from [to]\n\n        if (to.includes(integrationEmail)) {\n          toEmails = to.split(' ').filter(function (email) {\n            return email !== integrationEmail;\n          });\n        } else {\n          toEmails = to;\n        }\n\n        receiver = toEmails + ' ' + fromEmail;\n      }\n\n      return receiver;\n    };\n\n    _this.findTemplate = function (id) {\n      var template = _this.props.emailTemplates.find(function (t) {\n        return t._id === id;\n      });\n\n      if (template) {\n        return template.content;\n      }\n\n      return '';\n    };\n\n    _this.templateChange = function (value) {\n      _this.setState({\n        content: _this.findTemplate(value),\n        templateId: value\n      });\n    };\n\n    _this.onAttachment = function (e) {\n      var files = e.currentTarget.files;\n      var _this$state3 = _this.state,\n          attachments = _this$state3.attachments,\n          from = _this$state3.from;\n      uploadHandler({\n        kind: 'nylas',\n        files: files,\n        userId: _this.props.currentUser._id,\n        extraFormData: [{\n          key: 'erxesApiId',\n          value: _this.props.integrationId || from || ''\n        }],\n        beforeUpload: function beforeUpload() {\n          _this.setState({\n            isUploading: true\n          });\n        },\n        afterUpload: function afterUpload(_ref) {\n          var response = _ref.response;\n          var resObj = JSON.parse(response);\n\n          _this.setState({\n            isUploading: false,\n            attachments: [].concat(_toConsumableArray(attachments), [_objectSpread({}, resObj)])\n          });\n        }\n      });\n    };\n\n    _this.handleFileInput = function (e) {\n      var files = e.currentTarget.files;\n\n      if (!files) {\n        return;\n      }\n\n      if (files.length === 0) {\n        return;\n      }\n\n      _this.setState({\n        isUploading: true\n      });\n\n      var j = 0; // tslint:disable-next-line\n\n      var _loop = function _loop(i) {\n        var file = files[i];\n        var uploadReader = new FileReader();\n        var fileInfo = {\n          filename: file.name,\n          size: file.size,\n          mimeType: file.type\n        }; // eslint-disable-next-line\n\n        uploadReader.onloadend = function () {\n          var totalFileSize = _this.state.totalFileSize + fileInfo.size;\n\n          if (totalFileSize > 5184000) {\n            _this.setState({\n              isUploading: false\n            });\n\n            return Alert.error('It`s size exceeds the limit 5mb');\n          }\n\n          var result = uploadReader.result;\n\n          if (result) {\n            var dataStr = result.toString();\n            var data = dataStr.substr(dataStr.indexOf(',') + 1);\n            var fileData = Object.assign({\n              data: data\n            }, fileInfo);\n\n            _this.setState({\n              attachments: [].concat(_toConsumableArray(_this.state.attachments), [fileData]),\n              totalFileSize: totalFileSize\n            });\n\n            j++;\n\n            if (j === files.length) {\n              _this.setState({\n                isUploading: false\n              });\n            }\n          }\n        };\n\n        uploadReader.readAsDataURL(file);\n      };\n\n      for (var i = 0; i < files.length; i++) {\n        _loop(i);\n      }\n    };\n\n    _this.renderFromValue = function () {\n      var _this$props2 = _this.props,\n          _this$props2$integrat = _this$props2.integrations,\n          integrations = _this$props2$integrat === void 0 ? [] : _this$props2$integrat,\n          integrationId = _this$props2.integrationId;\n\n      if (integrationId && integrationId.length > 0) {\n        var integration = integrations.find(function (obj) {\n          return obj._id === integrationId;\n        });\n        return integration && integration.name;\n      }\n\n      var onChangeMail = function onChangeMail(from) {\n        _this.setState({\n          from: from,\n          kind: _this.getSelectedIntegration(from).kind\n        });\n\n        _this.changeEmailSignature(from);\n      };\n\n      return React.createElement(MailChooser, {\n        onChange: onChangeMail,\n        integrations: integrations,\n        selectedItem: _this.state.from,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      });\n    };\n\n    _this.renderIcon = function (_ref2) {\n      var text = _ref2.text,\n          icon = _ref2.icon,\n          element = _ref2.element,\n          onClick = _ref2.onClick;\n\n      if (!onClick && !element) {\n        return null;\n      }\n\n      return React.createElement(Tip, {\n        text: __(text),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: icon,\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667\n        },\n        __self: this\n      }), element));\n    };\n\n    _this.renderMeta = function () {\n      return React.createElement(Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806\n        },\n        __self: this\n      }, React.createElement(SpaceBetweenRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807\n        },\n        __self: this\n      }, _this.renderLeftSide(), _this.renderRightSide()));\n    };\n\n    var replyAll = props.replyAll,\n        _props$mailData = props.mailData,\n        _mailData = _props$mailData === void 0 ? {} : _props$mailData;\n\n    var _cc = replyAll ? formatObj(_mailData.cc || []) : '';\n\n    var _bcc = replyAll ? formatObj(_mailData.bcc || []) : '';\n\n    var _ref3 = _mailData.from || [{}],\n        _ref4 = _slicedToArray(_ref3, 1),\n        _from = _ref4[0];\n\n    var sender = _this.getEmailSender(_from.email || props.fromEmail);\n\n    var fromId = _this.getIntegrationId(props.integrations, props.integrationId);\n\n    var _emailSignature = _this.getEmailSignature(props.brandId);\n\n    _this.state = {\n      cc: _cc,\n      bcc: _bcc,\n      to: props.isForward ? '' : sender,\n      templateId: '',\n      hasCc: _cc ? _cc.length > 0 : false,\n      hasBcc: _bcc ? _bcc.length > 0 : false,\n      hasSubject: !props.isReply,\n      isLoading: false,\n      fromEmail: sender,\n      from: fromId,\n      subject: _mailData.subject || '',\n      emailSignature: _emailSignature,\n      content: _this.getContent(_mailData, _emailSignature),\n      status: 'draft',\n      isUploading: false,\n      kind: _this.getSelectedIntegration(fromId).kind || '',\n      attachments: [],\n      fileIds: [],\n      totalFileSize: 0,\n      integrations: props.integrations\n    };\n    return _this;\n  }\n\n  _createClass(MailForm, [{\n    key: \"getContent\",\n    value: function getContent(mailData, emailSignature) {\n      var _this$props3 = this.props,\n          createdAt = _this$props3.createdAt,\n          isForward = _this$props3.isForward;\n\n      if (!isForward) {\n        return \"<p>&nbsp;</p><p>&nbsp;</p> \".concat(emailSignature);\n      }\n\n      var _mailData$from = mailData.from,\n          from = _mailData$from === void 0 ? [] : _mailData$from,\n          _mailData$to = mailData.to,\n          to = _mailData$to === void 0 ? [] : _mailData$to,\n          _mailData$cc = mailData.cc,\n          cc = _mailData$cc === void 0 ? [] : _mailData$cc,\n          _mailData$bcc = mailData.bcc,\n          bcc = _mailData$bcc === void 0 ? [] : _mailData$bcc,\n          _mailData$subject = mailData.subject,\n          subject = _mailData$subject === void 0 ? '' : _mailData$subject,\n          _mailData$body = mailData.body,\n          body = _mailData$body === void 0 ? '' : _mailData$body;\n\n      var _from2 = _slicedToArray(from, 1),\n          fromEmail = _from2[0].email;\n\n      return generateForwardMailContent({\n        fromEmail: fromEmail,\n        date: dayjs(createdAt).format('lll'),\n        to: to,\n        cc: cc,\n        bcc: bcc,\n        subject: subject,\n        body: body,\n        emailSignature: emailSignature\n      });\n    }\n  }, {\n    key: \"renderFrom\",\n    value: function renderFrom() {\n      return React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, \"From:\"), this.renderFromValue());\n    }\n  }, {\n    key: \"renderTo\",\n    value: function renderTo() {\n      return React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, \"To:\"), React.createElement(FormControl, {\n        autoFocus: this.props.isForward,\n        value: this.state.to,\n        onChange: this.onSelectChange.bind(this, 'to'),\n        name: \"to\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderCC\",\n    value: function renderCC() {\n      var _this$state4 = this.state,\n          cc = _this$state4.cc,\n          hasCc = _this$state4.hasCc;\n\n      if (!hasCc) {\n        return null;\n      }\n\n      return React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, \"Cc:\"), React.createElement(FormControl, {\n        autoFocus: true,\n        componentClass: \"textarea\",\n        onChange: this.onSelectChange.bind(this, 'cc'),\n        name: \"cc\",\n        value: cc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderBCC\",\n    value: function renderBCC() {\n      var _this$state5 = this.state,\n          bcc = _this$state5.bcc,\n          hasBcc = _this$state5.hasBcc;\n\n      if (!hasBcc) {\n        return null;\n      }\n\n      return React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, \"Bcc:\"), React.createElement(FormControl, {\n        autoFocus: true,\n        onChange: this.onSelectChange.bind(this, 'bcc'),\n        componentClass: \"textarea\",\n        name: \"bcc\",\n        value: bcc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderSubject\",\n    value: function renderSubject() {\n      var _this$state6 = this.state,\n          subject = _this$state6.subject,\n          hasSubject = _this$state6.hasSubject;\n\n      if (!hasSubject) {\n        return null;\n      }\n\n      return React.createElement(Subject, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      }, React.createElement(FlexRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, \"Subject:\"), React.createElement(FormControl, {\n        name: \"subject\",\n        onChange: this.handleInputChange,\n        required: true,\n        value: subject,\n        disabled: this.props.isReply,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderAttachments\",\n    value: function renderAttachments() {\n      var _this2 = this;\n\n      var attachments = this.state.attachments;\n\n      if (attachments.length === 0) {\n        return;\n      }\n\n      return React.createElement(Attachments, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628\n        },\n        __self: this\n      }, attachments.map(function (attachment, index) {\n        return React.createElement(AttachmentContainer, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 630\n          },\n          __self: this\n        }, React.createElement(FileName, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 631\n          },\n          __self: this\n        }, attachment.filename || attachment.name), attachment.size ? React.createElement(FileSize, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 633\n          },\n          __self: this\n        }, \"(\", Math.round(attachment.size / 1000), \"kB)\") : null, React.createElement(Icon, {\n          icon: \"times-circle\",\n          size: 14,\n          onClick: _this2.onRemoveAttach.bind(_this2, attachment),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 638\n          },\n          __self: this\n        }));\n      }));\n    }\n  }, {\n    key: \"renderSubmit\",\n    value: function renderSubmit(label, onClick, type) {\n      var icon = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'message';\n      var isLoading = this.state.isLoading;\n      return React.createElement(Button, {\n        onClick: onClick,\n        btnStyle: type,\n        size: \"small\",\n        icon: isLoading ? undefined : icon,\n        disabled: isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      }, isLoading && React.createElement(SmallLoader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685\n        },\n        __self: this\n      }), label);\n    }\n  }, {\n    key: \"renderButtons\",\n    value: function renderButtons() {\n      var _this3 = this;\n\n      var kind = this.state.kind;\n      var _this$props4 = this.props,\n          isReply = _this$props4.isReply,\n          emailTemplates = _this$props4.emailTemplates,\n          toggleReply = _this$props4.toggleReply,\n          fetchMoreEmailTemplates = _this$props4.fetchMoreEmailTemplates;\n      var inputProps = {\n        type: 'file',\n        multiple: true,\n        onChange: kind.includes('nylas') ? this.onAttachment : this.handleFileInput\n      };\n\n      var onSubmitResolve = function onSubmitResolve(e) {\n        return _this3.onSubmit(e, true);\n      };\n\n      return React.createElement(EditorFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711\n        },\n        __self: this\n      }, React.createElement(SpaceBetweenRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712\n        },\n        __self: this\n      }, React.createElement(ToolBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713\n        },\n        __self: this\n      }, this.renderIcon({\n        text: 'Attach file',\n        icon: 'paperclip',\n        element: React.createElement(\"input\", Object.assign({}, inputProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 717\n          },\n          __self: this\n        }))\n      }), this.renderIcon({\n        text: 'Delete',\n        icon: 'trash-alt',\n        onClick: toggleReply\n      }), React.createElement(EmailTemplate, {\n        onSelect: this.templateChange,\n        fetchMoreEmailTemplates: fetchMoreEmailTemplates,\n        targets: generateEmailTemplateParams(emailTemplates || []),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725\n        },\n        __self: this\n      })), this.state.isUploading ? React.createElement(Uploading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732\n        },\n        __self: this\n      }, React.createElement(SmallLoader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734\n        },\n        __self: this\n      }, \"Uploading...\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        },\n        __self: this\n      }, this.renderSubmit('Send', this.onSubmit, 'primary'), isReply && this.renderSubmit('Send and Resolve', onSubmitResolve, 'success', 'check-circle'))));\n    }\n  }, {\n    key: \"renderBody\",\n    value: function renderBody() {\n      return React.createElement(MailEditorWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        },\n        __self: this\n      }, React.createElement(EditorCK, {\n        toolbar: MAIL_TOOLBARS_CONFIG,\n        removePlugins: \"elementspath\",\n        content: this.state.content,\n        onChange: this.onEditorChange,\n        toolbarLocation: \"bottom\",\n        autoFocus: !this.props.isForward,\n        autoGrow: true,\n        autoGrowMinHeight: 120,\n        name: \"mail_\".concat(this.state.to || this.props.currentUser._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderLeftSide\",\n    value: function renderLeftSide() {\n      return React.createElement(Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773\n        },\n        __self: this\n      }, this.renderFrom(), this.renderTo(), this.renderCC(), this.renderBCC());\n    }\n  }, {\n    key: \"renderRightSide\",\n    value: function renderRightSide() {\n      var _this4 = this;\n\n      var _this$state7 = this.state,\n          hasCc = _this$state7.hasCc,\n          hasBcc = _this$state7.hasBcc,\n          hasSubject = _this$state7.hasSubject;\n\n      var onClickHasCc = function onClickHasCc() {\n        return _this4.onClick('hasCc');\n      };\n\n      var onClickHasBCC = function onClickHasBCC() {\n        return _this4.onClick('hasBcc');\n      };\n\n      var onClickSubject = function onClickSubject() {\n        return _this4.onClick('hasSubject');\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(Resipients, {\n        onClick: onClickHasCc,\n        isActive: hasCc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791\n        },\n        __self: this\n      }, \"Cc\"), React.createElement(Resipients, {\n        onClick: onClickHasBCC,\n        isActive: hasBcc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794\n        },\n        __self: this\n      }, \"Bcc\"), React.createElement(Resipients, {\n        onClick: onClickSubject,\n        isActive: hasSubject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 797\n        },\n        __self: this\n      }, \"Subject\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ControlWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 817\n        },\n        __self: this\n      }, this.renderMeta(), this.renderSubject(), this.renderBody(), this.renderAttachments(), this.renderButtons());\n    }\n  }]);\n\n  return MailForm;\n}(React.Component);\n\nexport default MailForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/integrations/components/mail/MailForm.tsx"],"names":["dayjs","Button","Icon","SmallLoader","FormControl","Label","Tip","EditorCK","__","Alert","uploadHandler","Meta","FileName","React","MAIL_TOOLBARS_CONFIG","formatObj","formatStr","generateForwardMailContent","generateEmailTemplateParams","EmailTemplate","MailChooser","AttachmentContainer","Attachments","Column","ControlWrapper","EditorFooter","FileSize","MailEditorWrapper","Resipients","SpaceBetweenRow","ToolBar","Uploading","FlexRow","Subject","MailForm","props","clearContent","setState","to","cc","bcc","subject","content","attachments","onSubmit","e","shouldResolve","isReply","closeModal","toggleReply","integrationId","sendMail","isForward","clearOnSubmit","mailData","state","from","kind","error","references","headerId","inReplyTo","replyTo","threadId","messageId","isLoading","subjectValue","variables","body","erxesApiId","replyToMessageId","includes","callback","getSelectedIntegration","selectedId","integration","integrations","find","obj","_id","changeEditorContent","emailSignature","changeEmailSignature","selectedIntegrationId","brand","brandId","emailSignatureToChange","getEmailSignature","replace","concat","length","findEmailSignature","found","emailSignatures","signatureContent","signature","getIntegrationId","onEditorChange","editor","getData","onClick","name","handleInputChange","currentTarget","value","onSelectChange","onRemoveAttach","attachment","filter","item","filename","getEmailSender","fromEmail","integrationEmail","receiver","toEmails","split","email","findTemplate","id","template","emailTemplates","t","templateChange","templateId","onAttachment","files","userId","currentUser","extraFormData","key","beforeUpload","isUploading","afterUpload","response","resObj","JSON","parse","handleFileInput","j","i","file","uploadReader","FileReader","fileInfo","size","mimeType","type","onloadend","totalFileSize","result","dataStr","toString","data","substr","indexOf","fileData","Object","assign","readAsDataURL","renderFromValue","onChangeMail","renderIcon","text","icon","element","renderMeta","renderLeftSide","renderRightSide","replyAll","sender","fromId","hasCc","hasBcc","hasSubject","getContent","status","fileIds","createdAt","date","format","bind","map","index","Math","round","label","undefined","fetchMoreEmailTemplates","inputProps","multiple","onChange","onSubmitResolve","renderSubmit","renderFrom","renderTo","renderCC","renderBCC","onClickHasCc","onClickHasBCC","onClickSubject","renderSubject","renderBody","renderAttachments","renderButtons","Component"],"mappings":"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","sourcesContent":["import dayjs from 'dayjs';\nimport Button from 'erxes-common-ui/lib/components/button';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { SmallLoader } from 'modules/common/components/ButtonMutate';\nimport FormControl from 'modules/common/components/form/Control';\nimport { Label } from 'modules/common/components/form/styles';\nimport Tip from 'modules/common/components/Tip';\nimport EditorCK from 'modules/common/containers/EditorCK';\nimport { __, Alert, uploadHandler } from 'modules/common/utils';\nimport { Meta } from 'modules/inbox/components/conversationDetail/workarea/mail/style';\nimport { FileName } from 'modules/inbox/styles';\nimport { IMail } from 'modules/inbox/types';\nimport { IBrand } from 'modules/settings/brands/types';\nimport { IEmailSignature } from 'modules/settings/email/types';\nimport { IIntegration } from 'modules/settings/integrations/types';\nimport React, { ReactNode } from 'react';\nimport { MAIL_TOOLBARS_CONFIG } from '../../constants';\nimport {\n  formatObj,\n  formatStr,\n  generateForwardMailContent\n} from '../../containers/utils';\n\nimport { IUser } from 'modules/auth/types';\nimport { generateEmailTemplateParams } from 'modules/engage/utils';\nimport { IEmailTemplate } from 'modules/settings/emailTemplates/types';\nimport EmailTemplate from './emailTemplate/EmailTemplate';\nimport MailChooser from './MailChooser';\nimport {\n  AttachmentContainer,\n  Attachments,\n  Column,\n  ControlWrapper,\n  EditorFooter,\n  FileSize,\n  MailEditorWrapper,\n  Resipients,\n  SpaceBetweenRow,\n  ToolBar,\n  Uploading\n} from './styles';\nimport { FlexRow, Subject } from './styles';\n\ntype Props = {\n  emailTemplates: IEmailTemplate[];\n  currentUser: IUser;\n  integrationId?: string;\n  integrations: IIntegration[];\n  fromEmail?: string;\n  mailData?: IMail;\n  clearOnSubmit?: boolean;\n  isReply?: boolean;\n  isForward?: boolean;\n  replyAll?: boolean;\n  brandId?: string;\n  closeModal?: () => void;\n  toggleReply?: () => void;\n  emailSignatures: IEmailSignature[];\n  fetchMoreEmailTemplates: () => void;\n  createdAt?: Date;\n  sendMail: ({\n    variables,\n    callback\n  }: {\n    variables: any;\n    callback: () => void;\n  }) => void;\n};\n\ntype State = {\n  status?: string;\n  templateId: string;\n  cc?: string;\n  bcc?: string;\n  to?: string;\n  fromEmail?: string;\n  from?: string;\n  subject?: string;\n  hasCc?: boolean;\n  hasBcc?: boolean;\n  hasSubject?: boolean;\n  kind: string;\n  content: string;\n  isLoading: boolean;\n  integrations: IIntegration[];\n  attachments: any[];\n  fileIds: string[];\n  totalFileSize: number;\n  isUploading: boolean;\n  emailSignature: string;\n};\n\nclass MailForm extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const { replyAll, mailData = {} as IMail } = props;\n\n    const cc = replyAll ? formatObj(mailData.cc || []) : '';\n    const bcc = replyAll ? formatObj(mailData.bcc || []) : '';\n\n    const [from] = mailData.from || [{}];\n    const sender = this.getEmailSender(from.email || props.fromEmail);\n\n    const fromId = this.getIntegrationId(\n      props.integrations,\n      props.integrationId\n    );\n\n    const emailSignature = this.getEmailSignature(props.brandId);\n\n    this.state = {\n      cc,\n      bcc,\n      to: props.isForward ? '' : sender,\n\n      templateId: '',\n\n      hasCc: cc ? cc.length > 0 : false,\n      hasBcc: bcc ? bcc.length > 0 : false,\n      hasSubject: !props.isReply,\n\n      isLoading: false,\n\n      fromEmail: sender,\n      from: fromId,\n      subject: mailData.subject || '',\n      emailSignature,\n      content: this.getContent(mailData, emailSignature),\n\n      status: 'draft',\n      isUploading: false,\n      kind: this.getSelectedIntegration(fromId).kind || '',\n\n      attachments: [],\n      fileIds: [],\n      totalFileSize: 0,\n\n      integrations: props.integrations\n    };\n  }\n\n  getContent(mailData: IMail, emailSignature) {\n    const { createdAt, isForward } = this.props;\n\n    if (!isForward) {\n      return `<p>&nbsp;</p><p>&nbsp;</p> ${emailSignature}`;\n    }\n\n    const {\n      from = [],\n      to = [],\n      cc = [],\n      bcc = [],\n      subject = '',\n      body = ''\n    } = mailData;\n\n    const [{ email: fromEmail }] = from;\n\n    return generateForwardMailContent({\n      fromEmail,\n      date: dayjs(createdAt).format('lll'),\n      to,\n      cc,\n      bcc,\n      subject,\n      body,\n      emailSignature\n    });\n  }\n\n  clearContent = () => {\n    this.setState({\n      to: '',\n      cc: '',\n      bcc: '',\n      subject: '',\n      content: '',\n      attachments: []\n    });\n  };\n\n  onSubmit = (e, shouldResolve = false) => {\n    const {\n      isReply,\n      closeModal,\n      toggleReply,\n      integrationId,\n      sendMail,\n      isForward,\n      clearOnSubmit\n    } = this.props;\n\n    const mailData = this.props.mailData || ({} as IMail);\n    const {\n      content,\n      from,\n      attachments,\n      to,\n      cc,\n      bcc,\n      subject,\n      kind\n    } = this.state;\n\n    if (!to) {\n      return Alert.error('This message must have at least one recipient.');\n    }\n\n    const {\n      references,\n      headerId,\n      inReplyTo,\n      replyTo,\n      threadId,\n      messageId\n    } = mailData;\n\n    this.setState({ isLoading: true });\n\n    const subjectValue = subject || mailData.subject || '';\n\n    const variables = {\n      headerId,\n      replyTo,\n      inReplyTo,\n      references,\n      threadId,\n      attachments,\n      kind,\n      body: content,\n      erxesApiId: from,\n      shouldResolve,\n      ...(!isForward ? { replyToMessageId: messageId } : {}),\n      to: formatStr(to),\n      cc: formatStr(cc),\n      bcc: formatStr(bcc),\n      from: integrationId ? integrationId : from,\n      subject:\n        isForward && !subjectValue.includes('Fw:')\n          ? `Fw: ${subjectValue}`\n          : subjectValue\n    };\n\n    return sendMail({\n      variables,\n      callback: () => {\n        this.setState({ isLoading: false });\n\n        if (clearOnSubmit) {\n          this.clearContent();\n        }\n\n        if (isReply) {\n          return toggleReply && toggleReply();\n        } else {\n          return closeModal && closeModal();\n        }\n      }\n    });\n  };\n\n  getSelectedIntegration = (selectedId: string) => {\n    const integration = this.props.integrations.find(\n      obj => obj._id === selectedId\n    );\n\n    return integration || ({} as IIntegration);\n  };\n\n  changeEditorContent = (content: string, emailSignature: string) => {\n    this.setState({ content }, () => {\n      this.setState({ emailSignature });\n    });\n  };\n\n  changeEmailSignature = (selectedIntegrationId: string) => {\n    // find selected brand\n    const brand = this.getSelectedIntegration(selectedIntegrationId).brand;\n    const brandId = brand._id;\n\n    // email signature of selected brand\n    const emailSignatureToChange = this.getEmailSignature(brandId);\n\n    // email signature, content before change\n    const { emailSignature, content } = this.state;\n\n    if (emailSignature === emailSignatureToChange) {\n      return;\n    }\n\n    if (content.includes(emailSignature)) {\n      return this.changeEditorContent(\n        content.replace(emailSignature, emailSignatureToChange),\n        emailSignatureToChange\n      );\n    }\n\n    return this.changeEditorContent(\n      content.concat(emailSignatureToChange),\n      emailSignatureToChange\n    );\n  };\n\n  getEmailSignature = (brandId?: string) => {\n    if (!brandId) {\n      const integrations = this.props.integrations;\n      const brand =\n        integrations.length > 0 ? integrations[0].brand : ({} as IBrand);\n\n      return this.findEmailSignature(brand && brand._id);\n    }\n\n    return this.findEmailSignature(brandId);\n  };\n\n  findEmailSignature = (brandId: string) => {\n    const found = this.props.emailSignatures.find(\n      obj => obj.brandId === brandId\n    );\n\n    const signatureContent = (found && found.signature) || '';\n\n    return signatureContent;\n  };\n\n  getIntegrationId = (integrations, integrationId?: string) => {\n    if (integrationId) {\n      return integrationId;\n    }\n\n    return integrations.length > 0 ? integrations[0]._id : '';\n  };\n\n  onEditorChange = e => {\n    this.setState({ content: e.editor.getData() });\n  };\n\n  onClick = <T extends keyof State>(name: T) => {\n    this.setState(({ [name]: true } as unknown) as Pick<State, keyof State>);\n  };\n\n  handleInputChange = e => {\n    this.setState({ subject: e.currentTarget.value });\n  };\n\n  onSelectChange = <T extends keyof State>(name: T, e: any) => {\n    this.setState(({ [name]: e.currentTarget.value } as unknown) as Pick<\n      State,\n      keyof State\n    >);\n  };\n\n  onRemoveAttach = (attachment: any) => {\n    const { attachments } = this.state;\n\n    this.setState({\n      attachments: attachments.filter(\n        item => item.filename !== attachment.filename\n      )\n    });\n  };\n\n  getEmailSender = (fromEmail?: string) => {\n    const mailData = this.props.mailData || ({} as IMail);\n    const { integrationEmail } = mailData;\n\n    const to = formatObj(mailData.to) || '';\n\n    // new email\n    if ((!to || to.length === 0) && !integrationEmail) {\n      return fromEmail;\n    }\n\n    // reply\n    if (!integrationEmail && !fromEmail) {\n      return '';\n    }\n\n    if (!integrationEmail && to !== fromEmail) {\n      return fromEmail;\n    }\n\n    let receiver;\n\n    // Prevent send email to itself\n    if (integrationEmail === fromEmail) {\n      receiver = to;\n    } else {\n      let toEmails;\n\n      // Exclude integration email from [to]\n      if (to.includes(integrationEmail)) {\n        toEmails = to.split(' ').filter(email => email !== integrationEmail);\n      } else {\n        toEmails = to;\n      }\n\n      receiver = toEmails + ' ' + fromEmail;\n    }\n\n    return receiver;\n  };\n\n  findTemplate = id => {\n    const template = this.props.emailTemplates.find(t => t._id === id);\n\n    if (template) {\n      return template.content;\n    }\n\n    return '';\n  };\n\n  templateChange = value => {\n    this.setState({ content: this.findTemplate(value), templateId: value });\n  };\n\n  onAttachment = (e: React.FormEvent<HTMLInputElement>) => {\n    const files = e.currentTarget.files;\n    const { attachments, from } = this.state;\n\n    uploadHandler({\n      kind: 'nylas',\n      files,\n      userId: this.props.currentUser._id,\n      extraFormData: [\n        { key: 'erxesApiId', value: this.props.integrationId || from || '' }\n      ],\n      beforeUpload: () => {\n        this.setState({ isUploading: true });\n      },\n      afterUpload: ({ response }) => {\n        const resObj = JSON.parse(response);\n\n        this.setState({\n          isUploading: false,\n          attachments: [...attachments, { ...resObj }]\n        });\n      }\n    });\n  };\n\n  handleFileInput = (e: React.FormEvent<HTMLInputElement>) => {\n    const files = e.currentTarget.files;\n\n    if (!files) {\n      return;\n    }\n\n    if (files.length === 0) {\n      return;\n    }\n\n    this.setState({ isUploading: true });\n\n    let j = 0;\n\n    // tslint:disable-next-line\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n\n      const uploadReader = new FileReader();\n      const fileInfo = {\n        filename: file.name,\n        size: file.size,\n        mimeType: file.type\n      };\n\n      // eslint-disable-next-line\n      uploadReader.onloadend = () => {\n        const totalFileSize = this.state.totalFileSize + fileInfo.size;\n\n        if (totalFileSize > 5184000) {\n          this.setState({ isUploading: false });\n\n          return Alert.error('It`s size exceeds the limit 5mb');\n        }\n\n        const result = uploadReader.result;\n\n        if (result) {\n          const dataStr = result.toString();\n          const data = dataStr.substr(dataStr.indexOf(',') + 1);\n\n          const fileData = Object.assign({ data }, fileInfo);\n\n          this.setState({\n            attachments: [...this.state.attachments, fileData],\n            totalFileSize\n          });\n\n          j++;\n\n          if (j === files.length) {\n            this.setState({ isUploading: false });\n          }\n        }\n      };\n\n      uploadReader.readAsDataURL(file);\n    }\n  };\n\n  renderFromValue = () => {\n    const { integrations = [], integrationId } = this.props;\n\n    if (integrationId && integrationId.length > 0) {\n      const integration = integrations.find(obj => obj._id === integrationId);\n\n      return integration && integration.name;\n    }\n\n    const onChangeMail = (from: string) => {\n      this.setState({ from, kind: this.getSelectedIntegration(from).kind });\n\n      this.changeEmailSignature(from);\n    };\n\n    return (\n      <MailChooser\n        onChange={onChangeMail}\n        integrations={integrations}\n        selectedItem={this.state.from}\n      />\n    );\n  };\n\n  renderFrom() {\n    return (\n      <FlexRow>\n        <label>From:</label>\n        {this.renderFromValue()}\n      </FlexRow>\n    );\n  }\n\n  renderTo() {\n    return (\n      <FlexRow>\n        <label>To:</label>\n        <FormControl\n          autoFocus={this.props.isForward}\n          value={this.state.to}\n          onChange={this.onSelectChange.bind(this, 'to')}\n          name=\"to\"\n          required={true}\n        />\n      </FlexRow>\n    );\n  }\n\n  renderCC() {\n    const { cc, hasCc } = this.state;\n\n    if (!hasCc) {\n      return null;\n    }\n\n    return (\n      <FlexRow>\n        <label>Cc:</label>\n        <FormControl\n          autoFocus={true}\n          componentClass=\"textarea\"\n          onChange={this.onSelectChange.bind(this, 'cc')}\n          name=\"cc\"\n          value={cc}\n        />\n      </FlexRow>\n    );\n  }\n\n  renderBCC() {\n    const { bcc, hasBcc } = this.state;\n\n    if (!hasBcc) {\n      return null;\n    }\n\n    return (\n      <FlexRow>\n        <label>Bcc:</label>\n        <FormControl\n          autoFocus={true}\n          onChange={this.onSelectChange.bind(this, 'bcc')}\n          componentClass=\"textarea\"\n          name=\"bcc\"\n          value={bcc}\n        />\n      </FlexRow>\n    );\n  }\n\n  renderSubject() {\n    const { subject, hasSubject } = this.state;\n\n    if (!hasSubject) {\n      return null;\n    }\n\n    return (\n      <Subject>\n        <FlexRow>\n          <label>Subject:</label>\n          <FormControl\n            name=\"subject\"\n            onChange={this.handleInputChange}\n            required={true}\n            value={subject}\n            disabled={this.props.isReply}\n            autoFocus={true}\n          />\n        </FlexRow>\n      </Subject>\n    );\n  }\n\n  renderAttachments() {\n    const { attachments } = this.state;\n\n    if (attachments.length === 0) {\n      return;\n    }\n\n    return (\n      <Attachments>\n        {attachments.map((attachment, index) => (\n          <AttachmentContainer key={index}>\n            <FileName>{attachment.filename || attachment.name}</FileName>\n            {attachment.size ? (\n              <FileSize>\n                ({Math.round(attachment.size / 1000)}\n                kB)\n              </FileSize>\n            ) : null}\n            <Icon\n              icon=\"times-circle\"\n              size={14}\n              onClick={this.onRemoveAttach.bind(this, attachment)}\n            />\n          </AttachmentContainer>\n        ))}\n      </Attachments>\n    );\n  }\n\n  renderIcon = ({\n    text,\n    icon,\n    element,\n    onClick\n  }: {\n    text: string;\n    icon: string;\n    element?: ReactNode;\n    onClick?: () => void;\n  }) => {\n    if (!onClick && !element) {\n      return null;\n    }\n\n    return (\n      <Tip text={__(text)} placement=\"top\">\n        <Label>\n          <Icon icon={icon} onClick={onClick} />\n          {element}\n        </Label>\n      </Tip>\n    );\n  };\n\n  renderSubmit(label, onClick, type: string, icon = 'message') {\n    const { isLoading } = this.state;\n\n    return (\n      <Button\n        onClick={onClick}\n        btnStyle={type}\n        size=\"small\"\n        icon={isLoading ? undefined : icon}\n        disabled={isLoading}\n      >\n        {isLoading && <SmallLoader />}\n        {label}\n      </Button>\n    );\n  }\n\n  renderButtons() {\n    const { kind } = this.state;\n    const {\n      isReply,\n      emailTemplates,\n      toggleReply,\n      fetchMoreEmailTemplates\n    } = this.props;\n\n    const inputProps = {\n      type: 'file',\n      multiple: true,\n      onChange: kind.includes('nylas')\n        ? this.onAttachment\n        : this.handleFileInput\n    };\n\n    const onSubmitResolve = e => this.onSubmit(e, true);\n\n    return (\n      <EditorFooter>\n        <SpaceBetweenRow>\n          <ToolBar>\n            {this.renderIcon({\n              text: 'Attach file',\n              icon: 'paperclip',\n              element: <input {...inputProps} />\n            })}\n            {this.renderIcon({\n              text: 'Delete',\n              icon: 'trash-alt',\n              onClick: toggleReply\n            })}\n\n            <EmailTemplate\n              onSelect={this.templateChange}\n              fetchMoreEmailTemplates={fetchMoreEmailTemplates}\n              targets={generateEmailTemplateParams(emailTemplates || [])}\n            />\n          </ToolBar>\n          {this.state.isUploading ? (\n            <Uploading>\n              <SmallLoader />\n              <span>Uploading...</span>\n            </Uploading>\n          ) : (\n            <div>\n              {this.renderSubmit('Send', this.onSubmit, 'primary')}\n              {isReply &&\n                this.renderSubmit(\n                  'Send and Resolve',\n                  onSubmitResolve,\n                  'success',\n                  'check-circle'\n                )}\n            </div>\n          )}\n        </SpaceBetweenRow>\n      </EditorFooter>\n    );\n  }\n\n  renderBody() {\n    return (\n      <MailEditorWrapper>\n        <EditorCK\n          toolbar={MAIL_TOOLBARS_CONFIG}\n          removePlugins=\"elementspath\"\n          content={this.state.content}\n          onChange={this.onEditorChange}\n          toolbarLocation=\"bottom\"\n          autoFocus={!this.props.isForward}\n          autoGrow={true}\n          autoGrowMinHeight={120}\n          name={`mail_${this.state.to || this.props.currentUser._id}`}\n        />\n      </MailEditorWrapper>\n    );\n  }\n\n  renderLeftSide() {\n    return (\n      <Column>\n        {this.renderFrom()}\n        {this.renderTo()}\n        {this.renderCC()}\n        {this.renderBCC()}\n      </Column>\n    );\n  }\n\n  renderRightSide() {\n    const { hasCc, hasBcc, hasSubject } = this.state;\n\n    const onClickHasCc = () => this.onClick('hasCc');\n    const onClickHasBCC = () => this.onClick('hasBcc');\n    const onClickSubject = () => this.onClick('hasSubject');\n\n    return (\n      <>\n        <Resipients onClick={onClickHasCc} isActive={hasCc}>\n          Cc\n        </Resipients>\n        <Resipients onClick={onClickHasBCC} isActive={hasBcc}>\n          Bcc\n        </Resipients>\n        <Resipients onClick={onClickSubject} isActive={hasSubject}>\n          Subject\n        </Resipients>\n      </>\n    );\n  }\n\n  renderMeta = () => {\n    return (\n      <Meta>\n        <SpaceBetweenRow>\n          {this.renderLeftSide()}\n          {this.renderRightSide()}\n        </SpaceBetweenRow>\n      </Meta>\n    );\n  };\n\n  render() {\n    return (\n      <ControlWrapper>\n        {this.renderMeta()}\n        {this.renderSubject()}\n        {this.renderBody()}\n        {this.renderAttachments()}\n        {this.renderButtons()}\n      </ControlWrapper>\n    );\n  }\n}\n\nexport default MailForm;\n"]},"metadata":{},"sourceType":"module"}