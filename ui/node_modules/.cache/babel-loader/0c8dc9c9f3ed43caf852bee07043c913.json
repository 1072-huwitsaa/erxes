{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/ConfirmDialog.tsx\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  color: \", \";\\n\\n  strong {\\n    color: \", \";\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 40px;\\n  color: \", \";\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 10px \", \"px;\\n  background: \", \";\\n  border-top: 1px solid \", \";\\n  border-bottom-left-radius: 4px;\\n  border-bottom-right-radius: 4px;\\n  display: flex;\\n  justify-content: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  text-align: center;\\n  padding: \", \"px;\\n  font-size: 15px;\\n  font-weight: 500;\\n\\n  label {\\n    margin-top: \", \"px;\\n    font-size: 12px;\\n    color: #777;\\n\\n    strong {\\n      color: \", \";\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { __ } from 'modules/common/utils';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport styled from 'styled-components';\nimport { colors, dimensions } from '../styles';\nimport { rgba } from '../styles/color';\nimport Button from './Button';\nimport { ControlLabel, FormControl } from './form';\nvar ModalBody = styled.div(_templateObject(), dimensions.coreSpacing, dimensions.coreSpacing, colors.textPrimary);\nvar ModalFooter = styled.div(_templateObject2(), dimensions.coreSpacing, colors.colorWhite, colors.borderPrimary);\nvar IconWrapper = styled.div(_templateObject3(), colors.colorSecondary);\nvar Error = styled.span(_templateObject4(), rgba(colors.colorCoreRed, 0.8), colors.colorCoreRed);\n\nvar ConfirmDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConfirmDialog, _React$Component);\n\n  function ConfirmDialog(props) {\n    var _this;\n\n    _classCallCheck(this, ConfirmDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConfirmDialog).call(this, props));\n\n    _this.dismiss = function () {\n      _this.setState({\n        show: false\n      }, function () {\n        _this.props.dismiss();\n      });\n    };\n\n    _this.proceed = function () {\n      var _this$props$options = _this.props.options,\n          options = _this$props$options === void 0 ? {} : _this$props$options;\n      var hasDeleteConfirm = options.hasDeleteConfirm,\n          hasUpdateConfirm = options.hasUpdateConfirm;\n\n      if (hasDeleteConfirm) {\n        if (_this.state.confirm === 'delete') {\n          return _this.invokeProceed();\n        }\n\n        return _this.setState({\n          errors: {\n            confirm: React.createElement(Error, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106\n              },\n              __self: this\n            }, \"Enter \", React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107\n              },\n              __self: this\n            }, \"delete\"), \" to confirm\")\n          }\n        });\n      }\n\n      if (hasUpdateConfirm) {\n        if (_this.state.confirm === 'update') {\n          return _this.invokeProceed();\n        }\n\n        return _this.setState({\n          errors: {\n            confirm: React.createElement(Error, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 122\n              },\n              __self: this\n            }, \"Enter \", React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 123\n              },\n              __self: this\n            }, \"update\"), \" to confirm\")\n          }\n        });\n      }\n\n      return _this.invokeProceed();\n    };\n\n    _this.handleKeydown = function (e) {\n      if (e.key === 'Enter') {\n        _this.proceed();\n      }\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        confirm: e.target.value\n      });\n    };\n\n    _this.state = {\n      show: true,\n      confirm: '',\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(ConfirmDialog, [{\n    key: \"invokeProceed\",\n    value: function invokeProceed() {\n      var _this2 = this;\n\n      this.setState({\n        show: false\n      }, function () {\n        _this2.props.proceed();\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('keydown', this.handleKeydown);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('keydown', this.handleKeydown);\n    }\n  }, {\n    key: \"renderConfirmDelete\",\n    value: function renderConfirmDelete() {\n      var _this$state = this.state,\n          errors = _this$state.errors,\n          confirm = _this$state.confirm;\n\n      var _ref = this.props.options || {},\n          _ref$hasDeleteConfirm = _ref.hasDeleteConfirm,\n          hasDeleteConfirm = _ref$hasDeleteConfirm === void 0 ? false : _ref$hasDeleteConfirm,\n          _ref$hasUpdateConfirm = _ref.hasUpdateConfirm,\n          hasUpdateConfirm = _ref$hasUpdateConfirm === void 0 ? false : _ref$hasUpdateConfirm;\n\n      if (!hasDeleteConfirm && !hasUpdateConfirm) {\n        return null;\n      }\n\n      var label = hasDeleteConfirm ? React.createElement(React.Fragment, null, \"Type \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"delete\"), \" in the filed below to confirm.\") : React.createElement(React.Fragment, null, \"Type \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"update\"), \" in the filed below to confirm.\");\n      return React.createElement(React.Fragment, null, React.createElement(ControlLabel, {\n        required: true,\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, label), React.createElement(FormControl, {\n        name: \"confirm\",\n        required: true,\n        value: confirm,\n        errors: errors,\n        autoFocus: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$confirmat = _this$props.confirmation,\n          confirmation = _this$props$confirmat === void 0 ? 'Are you sure?' : _this$props$confirmat,\n          _this$props$options2 = _this$props.options,\n          options = _this$props$options2 === void 0 ? {} : _this$props$options2;\n      var hasDeleteConfirm = options.hasDeleteConfirm,\n          hasUpdateConfirm = options.hasUpdateConfirm;\n      var _options$okLabel = options.okLabel,\n          okLabel = _options$okLabel === void 0 ? 'Yes, I am' : _options$okLabel,\n          _options$cancelLabel = options.cancelLabel,\n          cancelLabel = _options$cancelLabel === void 0 ? 'No, Cancel' : _options$cancelLabel,\n          _options$enableEscape = options.enableEscape,\n          enableEscape = _options$enableEscape === void 0 ? true : _options$enableEscape;\n      return React.createElement(Modal, {\n        show: this.state.show,\n        onHide: this.dismiss,\n        backdrop: enableEscape ? true : 'static',\n        keyboard: enableEscape,\n        size: \"sm\",\n        centered: true,\n        animation: hasDeleteConfirm || hasUpdateConfirm ? false : true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(IconWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"exclamation-triangle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })), __(confirmation), this.renderConfirmDelete()), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"simple\",\n        onClick: this.dismiss,\n        icon: \"times-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, cancelLabel), React.createElement(Button, {\n        btnStyle: \"success\",\n        onClick: this.proceed,\n        icon: \"check-circle\",\n        uppercase: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, okLabel)));\n    }\n  }]);\n\n  return ConfirmDialog;\n}(React.Component);\n\nexport default ConfirmDialog;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/ConfirmDialog.tsx"],"names":["__","Icon","React","Modal","styled","colors","dimensions","rgba","Button","ControlLabel","FormControl","ModalBody","div","coreSpacing","textPrimary","ModalFooter","colorWhite","borderPrimary","IconWrapper","colorSecondary","Error","span","colorCoreRed","ConfirmDialog","props","dismiss","setState","show","proceed","options","hasDeleteConfirm","hasUpdateConfirm","state","confirm","invokeProceed","errors","handleKeydown","e","key","handleChange","target","value","document","addEventListener","removeEventListener","label","confirmation","okLabel","cancelLabel","enableEscape","renderConfirmDelete","Component"],"mappings":"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","sourcesContent":["import { __ } from 'modules/common/utils';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport styled from 'styled-components';\nimport { colors, dimensions } from '../styles';\nimport { rgba } from '../styles/color';\nimport Button from './Button';\nimport { ControlLabel, FormControl } from './form';\n\nconst ModalBody = styled.div`\n  text-align: center;\n  padding: ${dimensions.coreSpacing}px;\n  font-size: 15px;\n  font-weight: 500;\n\n  label {\n    margin-top: ${dimensions.coreSpacing}px;\n    font-size: 12px;\n    color: #777;\n\n    strong {\n      color: ${colors.textPrimary};\n    }\n  }\n`;\n\nconst ModalFooter = styled.div`\n  padding: 10px ${dimensions.coreSpacing}px;\n  background: ${colors.colorWhite};\n  border-top: 1px solid ${colors.borderPrimary};\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  display: flex;\n  justify-content: center;\n`;\n\nconst IconWrapper = styled.div`\n  font-size: 40px;\n  color: ${colors.colorSecondary};\n`;\n\nconst Error = styled.span`\n  font-size: 12px;\n  color: ${rgba(colors.colorCoreRed, 0.8)};\n\n  strong {\n    color: ${colors.colorCoreRed};\n  }\n`;\n\ntype Props = {\n  options?: {\n    okLabel?: string;\n    cancelLabel?: string;\n    enableEscape?: boolean;\n    hasDeleteConfirm?: boolean;\n    hasUpdateConfirm?: boolean;\n  };\n  confirmation?: string;\n  proceed: () => void;\n  dismiss: () => void;\n};\n\ntype State = {\n  show: boolean;\n  confirm: string;\n  errors: { [key: string]: React.ReactNode };\n};\n\nclass ConfirmDialog extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: true,\n      confirm: '',\n      errors: {}\n    };\n  }\n\n  dismiss = () => {\n    this.setState({ show: false }, () => {\n      this.props.dismiss();\n    });\n  };\n\n  invokeProceed() {\n    this.setState({ show: false }, () => {\n      this.props.proceed();\n    });\n  }\n\n  proceed = () => {\n    const { options = {} } = this.props;\n    const { hasDeleteConfirm, hasUpdateConfirm } = options;\n\n    if (hasDeleteConfirm) {\n      if (this.state.confirm === 'delete') {\n        return this.invokeProceed();\n      }\n\n      return this.setState({\n        errors: {\n          confirm: (\n            <Error>\n              Enter <strong>delete</strong> to confirm\n            </Error>\n          )\n        }\n      });\n    }\n\n    if (hasUpdateConfirm) {\n      if (this.state.confirm === 'update') {\n        return this.invokeProceed();\n      }\n\n      return this.setState({\n        errors: {\n          confirm: (\n            <Error>\n              Enter <strong>update</strong> to confirm\n            </Error>\n          )\n        }\n      });\n    }\n\n    return this.invokeProceed();\n  };\n\n  handleKeydown = e => {\n    if (e.key === 'Enter') {\n      this.proceed();\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeydown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeydown);\n  }\n\n  handleChange = e => {\n    this.setState({ confirm: e.target.value });\n  };\n\n  renderConfirmDelete() {\n    const { errors, confirm } = this.state;\n    const { hasDeleteConfirm = false, hasUpdateConfirm = false } =\n      this.props.options || {};\n\n    if (!hasDeleteConfirm && !hasUpdateConfirm) {\n      return null;\n    }\n\n    const label = hasDeleteConfirm ? (\n      <>\n        Type <strong>delete</strong> in the filed below to confirm.\n      </>\n    ) : (\n      <>\n        Type <strong>update</strong> in the filed below to confirm.\n      </>\n    );\n\n    return (\n      <>\n        <ControlLabel required={true} uppercase={false}>\n          {label}\n        </ControlLabel>\n        <FormControl\n          name=\"confirm\"\n          required={true}\n          value={confirm}\n          errors={errors}\n          autoFocus={true}\n          onChange={this.handleChange}\n        />\n      </>\n    );\n  }\n\n  render() {\n    const { confirmation = 'Are you sure?', options = {} } = this.props;\n    const { hasDeleteConfirm, hasUpdateConfirm } = options;\n\n    const {\n      okLabel = 'Yes, I am',\n      cancelLabel = 'No, Cancel',\n      enableEscape = true\n    } = options;\n\n    return (\n      <Modal\n        show={this.state.show}\n        onHide={this.dismiss}\n        backdrop={enableEscape ? true : 'static'}\n        keyboard={enableEscape}\n        size=\"sm\"\n        centered={true}\n        animation={hasDeleteConfirm || hasUpdateConfirm ? false : true}\n      >\n        <ModalBody>\n          <IconWrapper>\n            <Icon icon=\"exclamation-triangle\" />\n          </IconWrapper>\n          {__(confirmation)}\n          {this.renderConfirmDelete()}\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            btnStyle=\"simple\"\n            onClick={this.dismiss}\n            icon=\"times-circle\"\n            uppercase={false}\n          >\n            {cancelLabel}\n          </Button>\n          <Button\n            btnStyle=\"success\"\n            onClick={this.proceed}\n            icon=\"check-circle\"\n            uppercase={false}\n          >\n            {okLabel}\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nexport default ConfirmDialog;\n"]},"metadata":{},"sourceType":"module"}