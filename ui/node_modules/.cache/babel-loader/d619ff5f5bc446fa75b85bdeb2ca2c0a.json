{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/properties/components/GenerateField.tsx\";\nimport Datetime from '@nateradebaugh/react-datetime';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport Uploader from 'modules/common/components/Uploader';\nimport React from 'react';\nimport { SelectInput } from '../styles';\n\nvar GenerateField =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GenerateField, _React$Component);\n\n  function GenerateField(_props) {\n    var _this;\n\n    _classCallCheck(this, GenerateField);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GenerateField).call(this, _props));\n\n    _this.generateState = function (props) {\n      var field = props.field,\n          defaultValue = props.defaultValue;\n      var state = {\n        value: defaultValue,\n        checkBoxValues: []\n      };\n\n      if (defaultValue && field.type === 'check') {\n        state.checkBoxValues = defaultValue;\n      }\n\n      return state;\n    };\n\n    _this.onChange = function (e, optionValue) {\n      var _this$props = _this.props,\n          field = _this$props.field,\n          onValueChange = _this$props.onValueChange;\n      var validation = field.validation,\n          type = field.type;\n      var value = optionValue || e.target.value;\n\n      if (validation === 'number') {\n        value = Number(value);\n      }\n\n      if (type === 'check') {\n        var checkBoxValues = _this.state.checkBoxValues;\n        var isChecked = e.target.checked; // if selected value is not already in list then add it\n\n        if (isChecked && !checkBoxValues.includes(optionValue)) {\n          checkBoxValues.push(optionValue);\n        } // remove option from checked list\n\n\n        if (!isChecked) {\n          checkBoxValues = checkBoxValues.filter(function (v) {\n            return v !== optionValue;\n          });\n        }\n\n        _this.setState({\n          checkBoxValues: checkBoxValues\n        });\n\n        value = checkBoxValues;\n      }\n\n      if (onValueChange) {\n        _this.setState({\n          value: value\n        });\n\n        onValueChange({\n          _id: field._id,\n          value: value\n        });\n      }\n    };\n\n    _this.state = _this.generateState(_props);\n    return _this;\n  }\n\n  _createClass(GenerateField, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.defaultValue !== this.props.defaultValue) {\n        this.setState(this.generateState(nextProps));\n      }\n    }\n  }, {\n    key: \"renderSelect\",\n    value: function renderSelect() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return React.createElement(FormControl, Object.assign({\n        componentClass: \"select\"\n      }, attrs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), options.map(function (option, index) {\n        return React.createElement(\"option\", {\n          key: index,\n          value: option,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, option);\n      }));\n    }\n  }, {\n    key: \"renderInput\",\n    value: function renderInput(attrs) {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          value = _this$state.value,\n          checkBoxValues = _this$state.checkBoxValues;\n      var _this$props$field = this.props.field,\n          validation = _this$props$field.validation,\n          type = _this$props$field.type;\n      attrs.type = 'text';\n\n      attrs.onChange = function (e) {\n        _this2.setState({\n          value: e.target.value\n        });\n\n        _this2.onChange(e, attrs.option);\n      };\n\n      if (type === 'radio') {\n        attrs.type = 'radio';\n        attrs.componentClass = 'radio';\n        attrs.checked = value === attrs.option;\n      }\n\n      if (type === 'check') {\n        attrs.type = 'checkbox';\n        attrs.componentClass = 'checkbox';\n        attrs.checked = checkBoxValues.includes(attrs.option);\n      }\n\n      if (validation === 'datetime') {\n        attrs.max = '9999-12-31'; // redefine onChange since date chooser returns the value, not event\n\n        attrs.onChange = function (val) {\n          _this2.setState({\n            value: val\n          });\n\n          _this2.onChange(val, val);\n        };\n\n        return React.createElement(Datetime, Object.assign({}, attrs, {\n          value: value,\n          dateFormat: \"YYYY/MM/DD\",\n          timeFormat: \"HH:mm\",\n          closeOnSelect: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }));\n      }\n\n      if (validation === 'date') {\n        attrs.max = '9999-12-31'; // redefine onChange since date chooser returns the value, not event\n\n        attrs.onChange = function (val) {\n          _this2.setState({\n            value: val\n          });\n\n          _this2.onChange(val, val);\n        };\n\n        return React.createElement(Datetime, Object.assign({}, attrs, {\n          value: value,\n          dateFormat: \"YYYY/MM/DD\",\n          timeFormat: false,\n          closeOnSelect: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }));\n      }\n\n      if (validation === 'number') {\n        attrs.type = 'number';\n      }\n\n      return React.createElement(FormControl, Object.assign({}, attrs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderTextarea\",\n    value: function renderTextarea(attrs) {\n      return React.createElement(FormControl, Object.assign({\n        componentClass: \"textarea\"\n      }, attrs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderRadioOrCheckInputs\",\n    value: function renderRadioOrCheckInputs(options, attrs) {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, options.map(function (option, index) {\n        return React.createElement(SelectInput, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, _this3.renderInput(_objectSpread({}, attrs, {\n          option: option\n        })), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, option));\n      }));\n    }\n  }, {\n    key: \"renderFile\",\n    value: function renderFile(_ref) {\n      var _this4 = this;\n\n      var id = _ref.id,\n          value = _ref.value;\n\n      var onChangeFile = function onChangeFile(attachments) {\n        var onValueChange = _this4.props.onValueChange;\n\n        if (onValueChange) {\n          _this4.setState({\n            value: attachments\n          });\n\n          onValueChange({\n            _id: id,\n            value: attachments\n          });\n        }\n      };\n\n      return React.createElement(Uploader, {\n        defaultFileList: value || [],\n        onChange: onChangeFile,\n        multiple: false,\n        single: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      });\n    }\n    /**\n     * Handle all types of fields changes\n     * @param {Object} e - Event object\n     * @param {String} optionValue - per radio button or checkbox value\n     */\n\n  }, {\n    key: \"renderControl\",\n    value: function renderControl() {\n      var field = this.props.field;\n      var type = field.type;\n      var options = field.options || [];\n      var attrs = {\n        id: field._id,\n        value: this.state.value,\n        onChange: this.onChange,\n        name: ''\n      };\n\n      switch (type) {\n        case 'select':\n          return this.renderSelect(options, attrs);\n\n        case 'check':\n          return this.renderRadioOrCheckInputs(options, attrs);\n\n        case 'radio':\n          attrs.name = Math.random().toString();\n          return this.renderRadioOrCheckInputs(options, attrs);\n\n        case 'textarea':\n          return this.renderTextarea(attrs);\n\n        case 'file':\n          {\n            return this.renderFile(attrs);\n          }\n\n        default:\n          return this.renderInput(attrs);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var field = this.props.field;\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        ignoreTrans: true,\n        required: field.isRequired,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, field.text), field.description ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, field.description) : null, this.renderControl());\n    }\n  }]);\n\n  return GenerateField;\n}(React.Component);\n\nexport { GenerateField as default };","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/properties/components/GenerateField.tsx"],"names":["Datetime","FormControl","FormGroup","ControlLabel","Uploader","React","SelectInput","GenerateField","props","generateState","field","defaultValue","state","value","checkBoxValues","type","onChange","e","optionValue","onValueChange","validation","target","Number","isChecked","checked","includes","push","filter","v","setState","_id","nextProps","options","attrs","map","option","index","componentClass","max","val","renderInput","id","onChangeFile","attachments","name","renderSelect","renderRadioOrCheckInputs","Math","random","toString","renderTextarea","renderFile","isRequired","text","description","renderControl","Component"],"mappings":"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","sourcesContent":["import Datetime from '@nateradebaugh/react-datetime';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport Uploader from 'modules/common/components/Uploader';\nimport { IAttachment } from 'modules/common/types';\nimport React from 'react';\nimport { SelectInput } from '../styles';\nimport { IField } from '../types';\n\ntype Props = {\n  field: IField;\n  onValueChange?: (data: { _id: string; value: any }) => void;\n  defaultValue?: any;\n};\n\ntype State = {\n  value?: any;\n  checkBoxValues: any[];\n};\n\nexport default class GenerateField extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = this.generateState(props);\n  }\n\n  generateState = props => {\n    const { field, defaultValue } = props;\n\n    const state = { value: defaultValue, checkBoxValues: [] };\n\n    if (defaultValue && field.type === 'check') {\n      state.checkBoxValues = defaultValue;\n    }\n\n    return state;\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.defaultValue !== this.props.defaultValue) {\n      this.setState(this.generateState(nextProps));\n    }\n  }\n\n  renderSelect(options: string[] = [], attrs = {}) {\n    return (\n      <FormControl componentClass=\"select\" {...attrs}>\n        {options.map((option, index) => (\n          <option key={index} value={option}>\n            {option}\n          </option>\n        ))}\n      </FormControl>\n    );\n  }\n\n  renderInput(attrs) {\n    const { value, checkBoxValues } = this.state;\n    const { validation, type } = this.props.field;\n\n    attrs.type = 'text';\n\n    attrs.onChange = e => {\n      this.setState({ value: e.target.value });\n      this.onChange(e, attrs.option);\n    };\n\n    if (type === 'radio') {\n      attrs.type = 'radio';\n      attrs.componentClass = 'radio';\n      attrs.checked = value === attrs.option;\n    }\n\n    if (type === 'check') {\n      attrs.type = 'checkbox';\n      attrs.componentClass = 'checkbox';\n      attrs.checked = checkBoxValues.includes(attrs.option);\n    }\n\n    if (validation === 'datetime') {\n      attrs.max = '9999-12-31';\n\n      // redefine onChange since date chooser returns the value, not event\n      attrs.onChange = val => {\n        this.setState({ value: val });\n        this.onChange(val, val);\n      };\n\n      return (\n        <Datetime\n          {...attrs}\n          value={value}\n          dateFormat=\"YYYY/MM/DD\"\n          timeFormat=\"HH:mm\"\n          closeOnSelect={true}\n        />\n      );\n    }\n\n    if (validation === 'date') {\n      attrs.max = '9999-12-31';\n\n      // redefine onChange since date chooser returns the value, not event\n      attrs.onChange = val => {\n        this.setState({ value: val });\n        this.onChange(val, val);\n      };\n\n      return (\n        <Datetime\n          {...attrs}\n          value={value}\n          dateFormat=\"YYYY/MM/DD\"\n          timeFormat={false}\n          closeOnSelect={true}\n        />\n      );\n    }\n\n    if (validation === 'number') {\n      attrs.type = 'number';\n    }\n\n    return <FormControl {...attrs} />;\n  }\n\n  renderTextarea(attrs) {\n    return <FormControl componentClass=\"textarea\" {...attrs} />;\n  }\n\n  renderRadioOrCheckInputs(options, attrs) {\n    return (\n      <div>\n        {options.map((option, index) => (\n          <SelectInput key={index}>\n            {this.renderInput({ ...attrs, option })}\n            <span>{option}</span>\n          </SelectInput>\n        ))}\n      </div>\n    );\n  }\n\n  renderFile({ id, value }) {\n    const onChangeFile = (attachments: IAttachment[]) => {\n      const { onValueChange } = this.props;\n\n      if (onValueChange) {\n        this.setState({ value: attachments });\n\n        onValueChange({ _id: id, value: attachments });\n      }\n    };\n\n    return (\n      <Uploader\n        defaultFileList={value || []}\n        onChange={onChangeFile}\n        multiple={false}\n        single={true}\n      />\n    );\n  }\n\n  /**\n   * Handle all types of fields changes\n   * @param {Object} e - Event object\n   * @param {String} optionValue - per radio button or checkbox value\n   */\n  onChange = (e, optionValue) => {\n    const { field, onValueChange } = this.props;\n    const { validation, type } = field;\n\n    let value = optionValue || e.target.value;\n\n    if (validation === 'number') {\n      value = Number(value);\n    }\n\n    if (type === 'check') {\n      let checkBoxValues = this.state.checkBoxValues;\n      const isChecked = e.target.checked;\n\n      // if selected value is not already in list then add it\n      if (isChecked && !checkBoxValues.includes(optionValue)) {\n        checkBoxValues.push(optionValue);\n      }\n\n      // remove option from checked list\n      if (!isChecked) {\n        checkBoxValues = checkBoxValues.filter(v => v !== optionValue);\n      }\n\n      this.setState({ checkBoxValues });\n\n      value = checkBoxValues;\n    }\n\n    if (onValueChange) {\n      this.setState({ value });\n\n      onValueChange({ _id: field._id, value });\n    }\n  };\n\n  renderControl() {\n    const { field } = this.props;\n    const { type } = field;\n    const options = field.options || [];\n\n    const attrs = {\n      id: field._id,\n      value: this.state.value,\n      onChange: this.onChange,\n      name: ''\n    };\n\n    switch (type) {\n      case 'select':\n        return this.renderSelect(options, attrs);\n\n      case 'check':\n        return this.renderRadioOrCheckInputs(options, attrs);\n\n      case 'radio':\n        attrs.name = Math.random().toString();\n        return this.renderRadioOrCheckInputs(options, attrs);\n\n      case 'textarea':\n        return this.renderTextarea(attrs);\n\n      case 'file': {\n        return this.renderFile(attrs);\n      }\n\n      default:\n        return this.renderInput(attrs);\n    }\n  }\n\n  render() {\n    const { field } = this.props;\n\n    return (\n      <FormGroup>\n        <ControlLabel ignoreTrans={true} required={field.isRequired}>\n          {field.text}\n        </ControlLabel>\n\n        {field.description ? <p>{field.description}</p> : null}\n\n        {this.renderControl()}\n      </FormGroup>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}