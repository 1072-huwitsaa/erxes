{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/brands/components/Sidebar.tsx\";\nimport Button from 'erxes-common-ui/lib/components/button';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport LoadMore from 'modules/common/components/LoadMore';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport Spinner from 'modules/common/components/Spinner';\nimport { TopHeader } from 'modules/common/styles/main';\nimport { __ } from 'modules/common/utils';\nimport LeftSidebar from 'modules/layout/components/Sidebar';\nimport { SidebarList as List } from 'modules/layout/styles';\nimport React from 'react';\nimport BrandForm from './BrandForm';\nimport BrandRow from './BrandRow';\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Sidebar, _React$Component);\n\n  function Sidebar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Sidebar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderItems = function () {\n      var _this$props = _this.props,\n          brands = _this$props.brands,\n          remove = _this$props.remove,\n          currentBrandId = _this$props.currentBrandId,\n          renderButton = _this$props.renderButton;\n      return brands.map(function (brand) {\n        return React.createElement(BrandRow, {\n          key: brand._id,\n          isActive: currentBrandId === brand._id,\n          brand: brand,\n          remove: remove,\n          renderButton: renderButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Sidebar, [{\n    key: \"renderSidebarHeader\",\n    value: function renderSidebarHeader() {\n      var _this2 = this;\n\n      var addBrand = React.createElement(Button, {\n        id: 'NewBrandButton',\n        btnStyle: \"success\",\n        block: true,\n        uppercase: false,\n        icon: \"plus-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __('Add New Brand'));\n\n      var content = function content(props) {\n        return React.createElement(BrandForm, Object.assign({}, props, {\n          renderButton: _this2.props.renderButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }));\n      };\n\n      return React.createElement(TopHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(ModalTrigger, {\n        title: \"New Brand\",\n        autoOpenKey: \"showBrandAddModal\",\n        trigger: addBrand,\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          loading = _this$props2.loading,\n          brandsTotalCount = _this$props2.brandsTotalCount;\n      return React.createElement(LeftSidebar, {\n        wide: true,\n        full: true,\n        header: this.renderSidebarHeader(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(List, {\n        id: 'BrandSidebar',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.renderItems(), React.createElement(LoadMore, {\n        all: brandsTotalCount,\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), loading && React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), !loading && brandsTotalCount === 0 && React.createElement(EmptyState, {\n        image: \"/images/actions/18.svg\",\n        text: \"There is no brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Sidebar;\n}(React.Component);\n\nexport default Sidebar;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/brands/components/Sidebar.tsx"],"names":["Button","EmptyState","LoadMore","ModalTrigger","Spinner","TopHeader","__","LeftSidebar","SidebarList","List","React","BrandForm","BrandRow","Sidebar","renderItems","props","brands","remove","currentBrandId","renderButton","map","brand","_id","addBrand","content","loading","brandsTotalCount","renderSidebarHeader","Component"],"mappings":"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","sourcesContent":["import Button from 'erxes-common-ui/lib/components/button';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport LoadMore from 'modules/common/components/LoadMore';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport Spinner from 'modules/common/components/Spinner';\nimport { TopHeader } from 'modules/common/styles/main';\nimport { IButtonMutateProps } from 'modules/common/types';\nimport { __ } from 'modules/common/utils';\nimport LeftSidebar from 'modules/layout/components/Sidebar';\nimport { SidebarList as List } from 'modules/layout/styles';\nimport React from 'react';\nimport { IBrand } from '../types';\nimport BrandForm from './BrandForm';\nimport BrandRow from './BrandRow';\n\ntype Props = {\n  brands: IBrand[];\n  remove: (brandId: string) => void;\n  loading: boolean;\n  currentBrandId?: string;\n  brandsTotalCount: number;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n};\n\nclass Sidebar extends React.Component<Props, {}> {\n  renderItems = () => {\n    const { brands, remove, currentBrandId, renderButton } = this.props;\n\n    return brands.map(brand => (\n      <BrandRow\n        key={brand._id}\n        isActive={currentBrandId === brand._id}\n        brand={brand}\n        remove={remove}\n        renderButton={renderButton}\n      />\n    ));\n  };\n\n  renderSidebarHeader() {\n    const addBrand = (\n      <Button\n        id={'NewBrandButton'}\n        btnStyle=\"success\"\n        block={true}\n        uppercase={false}\n        icon=\"plus-circle\"\n      >\n        {__('Add New Brand')}\n      </Button>\n    );\n\n    const content = props => (\n      <BrandForm {...props} renderButton={this.props.renderButton} />\n    );\n\n    return (\n      <TopHeader>\n        <ModalTrigger\n          title=\"New Brand\"\n          autoOpenKey=\"showBrandAddModal\"\n          trigger={addBrand}\n          content={content}\n        />\n      </TopHeader>\n    );\n  }\n\n  render() {\n    const { loading, brandsTotalCount } = this.props;\n\n    return (\n      <LeftSidebar wide={true} full={true} header={this.renderSidebarHeader()}>\n        <List id={'BrandSidebar'}>\n          {this.renderItems()}\n          <LoadMore all={brandsTotalCount} loading={loading} />\n        </List>\n        {loading && <Spinner />}\n        {!loading && brandsTotalCount === 0 && (\n          <EmptyState image=\"/images/actions/18.svg\" text=\"There is no brand\" />\n        )}\n      </LeftSidebar>\n    );\n  }\n}\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}