{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/form/Form.tsx\";\nimport React from 'react';\nimport validator from 'validator';\nimport { __, generateRandomString, isValidUsername } from '../../utils';\nimport { Error } from './styles';\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form(_props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, _props));\n    _this.formId = generateRandomString();\n    _this.children = [];\n\n    _this.registerChild = function (child) {\n      _this.children.push(child);\n    };\n\n    _this.resetSubmit = function () {\n      _this.setState({\n        isSubmitted: false\n      });\n    };\n\n    _this.runValidations = function () {\n      var errors = {};\n      var values = {};\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var child = _step.value;\n          errors[child.props.name] = _this.validate(child);\n          values[child.props.name] = _this.getValue(child);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      _this.setState({\n        errors: errors,\n        values: values\n      }, function () {\n        var hasErrors = Object.values(errors).some(function (error) {\n          return error !== null;\n        });\n\n        if (hasErrors) {\n          return;\n        }\n\n        if (_this.props.onSubmit) {\n          return _this.props.onSubmit(_this.state.values);\n        }\n\n        _this.setState({\n          isSubmitted: !_this.state.isSubmitted\n        });\n      });\n    };\n\n    _this.getSelector = function (name) {\n      return document.querySelector(\"#\".concat(_this.formId, \" [name='\").concat(name, \"']\"));\n    };\n\n    _this.getValue = function (child) {\n      var element = _this.getSelector(child.props.name);\n\n      if (element) {\n        return element.value;\n      }\n\n      return '';\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _this.runValidations();\n    };\n\n    _this.validate = function (child) {\n      var props = child.props;\n\n      var element = _this.getSelector(props.name);\n\n      var value = element ? element.value : '';\n\n      if (props.required && !value) {\n        return React.createElement(Error, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, __('Required field'));\n      }\n\n      if (props.type === 'email' && !validator.isEmail(value)) {\n        return React.createElement(Error, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, __('Invalid email format! Please enter a valid email address'));\n      }\n\n      if (props.max && !validator.isLength('description', {\n        min: 0,\n        max: props.max\n      })) {\n        return React.createElement(Error, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, __('Maximum length is'), \" \", props.max, \" \", __('characters'));\n      }\n\n      if (value && props.type === 'url' && !validator.isURL(value)) {\n        return React.createElement(Error, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, __('Invalid link'));\n      }\n\n      if (value && props.type === 'number' && !validator.isFloat(value)) {\n        return React.createElement(Error, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, __('Invalid number format! Please enter a valid number'));\n      }\n\n      if (value && props.name === 'username' && !isValidUsername(value)) {\n        return React.createElement(Error, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, __('Invalid Username'));\n      }\n\n      return null;\n    };\n\n    _this.state = {\n      errors: {},\n      values: {},\n      isSubmitted: false\n    };\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        id: this.formId,\n        onSubmit: this.onSubmit,\n        noValidate: true,\n        autoComplete: this.props.autoComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, this.props.renderContent({\n        errors: this.state.errors,\n        values: this.state.values,\n        registerChild: this.registerChild,\n        runValidations: this.runValidations,\n        isSubmitted: this.state.isSubmitted,\n        resetSubmit: this.resetSubmit\n      }));\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nexport default Form;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/form/Form.tsx"],"names":["React","validator","__","generateRandomString","isValidUsername","Error","Form","props","formId","children","registerChild","child","push","resetSubmit","setState","isSubmitted","runValidations","errors","values","name","validate","getValue","hasErrors","Object","some","error","onSubmit","state","getSelector","document","querySelector","element","value","e","preventDefault","stopPropagation","required","type","isEmail","max","isLength","min","isURL","isFloat","autoComplete","renderContent","Component"],"mappings":"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","sourcesContent":["import { IFormProps } from 'modules/common/types';\nimport React from 'react';\nimport validator from 'validator';\nimport { __, generateRandomString, isValidUsername } from '../../utils';\nimport { Error } from './styles';\n\ntype Props = {\n  renderContent: (props: IFormProps) => React.ReactNode;\n  onSubmit?: (values: any) => any;\n  autoComplete?: string;\n};\n\ntype State = {\n  errors: any;\n  values: any;\n  isSubmitted: boolean;\n};\n\nclass Form extends React.Component<Props, State> {\n  private formId: string = generateRandomString();\n  private children: any[] = [];\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      errors: {},\n      values: {},\n      isSubmitted: false\n    };\n  }\n\n  registerChild = child => {\n    this.children.push(child);\n  };\n\n  resetSubmit = () => {\n    this.setState({ isSubmitted: false });\n  };\n\n  runValidations = () => {\n    const errors = {};\n    const values = {};\n\n    for (const child of this.children) {\n      errors[child.props.name] = this.validate(child);\n      values[child.props.name] = this.getValue(child);\n    }\n\n    this.setState({ errors, values }, () => {\n      const hasErrors = Object.values(errors).some(error => error !== null);\n\n      if (hasErrors) {\n        return;\n      }\n\n      if (this.props.onSubmit) {\n        return this.props.onSubmit(this.state.values);\n      }\n\n      this.setState({ isSubmitted: !this.state.isSubmitted });\n    });\n  };\n\n  getSelector = (name: string) => {\n    return document.querySelector(`#${this.formId} [name='${name}']`) as any;\n  };\n\n  getValue = child => {\n    const element = this.getSelector(child.props.name);\n\n    if (element) {\n      return element.value;\n    }\n\n    return '';\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.runValidations();\n  };\n\n  validate = child => {\n    const { props } = child;\n    const element = this.getSelector(props.name);\n    const value = element ? element.value : '';\n\n    if (props.required && !value) {\n      return <Error>{__('Required field')}</Error>;\n    }\n\n    if (props.type === 'email' && !validator.isEmail(value)) {\n      return (\n        <Error>\n          {__('Invalid email format! Please enter a valid email address')}\n        </Error>\n      );\n    }\n\n    if (\n      props.max &&\n      !validator.isLength('description', { min: 0, max: props.max })\n    ) {\n      return (\n        <Error>\n          {__('Maximum length is')} {props.max} {__('characters')}\n        </Error>\n      );\n    }\n\n    if (value && props.type === 'url' && !validator.isURL(value)) {\n      return <Error>{__('Invalid link')}</Error>;\n    }\n\n    if (value && props.type === 'number' && !validator.isFloat(value)) {\n      return (\n        <Error>\n          {__('Invalid number format! Please enter a valid number')}\n        </Error>\n      );\n    }\n\n    if (value && props.name === 'username' && !isValidUsername(value)) {\n      return <Error>{__('Invalid Username')}</Error>;\n    }\n\n    return null;\n  };\n\n  render() {\n    return (\n      <form\n        id={this.formId}\n        onSubmit={this.onSubmit}\n        noValidate={true}\n        autoComplete={this.props.autoComplete}\n      >\n        {this.props.renderContent({\n          errors: this.state.errors,\n          values: this.state.values,\n          registerChild: this.registerChild,\n          runValidations: this.runValidations,\n          isSubmitted: this.state.isSubmitted,\n          resetSubmit: this.resetSubmit\n        })}\n      </form>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}