{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/importHistory/components/ImportIndicator.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  text-transform: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ProgressBar from 'modules/common/components/ProgressBar';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport styledTS from 'styled-components-ts';\nvar Capitalize = styledTS(styled.span)(_templateObject(), function (props) {\n  return props.isCapital ? 'capitalize' : 'none';\n});\n\nvar ImportIndicator =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImportIndicator, _React$Component);\n\n  function ImportIndicator() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ImportIndicator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ImportIndicator)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.isDone = function () {\n      var _this$props = _this.props,\n          importHistory = _this$props.importHistory,\n          isRemovingImport = _this$props.isRemovingImport;\n      var status = importHistory.status;\n\n      if (!isRemovingImport && status === 'Done' || status === 'Removed') {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.renderType = function (contentType, isCapital) {\n      return React.createElement(Capitalize, {\n        isCapital: isCapital,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __(contentType));\n    };\n\n    _this.getPercentage = function () {\n      var _this$props2 = _this.props,\n          percentage = _this$props2.percentage,\n          isRemovingImport = _this$props2.isRemovingImport;\n      var percent = percentage;\n\n      if (_this.isDone() || percent > 100 || isRemovingImport) {\n        percent = 100;\n      }\n\n      return percent;\n    };\n\n    _this.cancelCurrentImport = function () {\n      var _this$props3 = _this.props,\n          cancel = _this$props3.cancel,\n          id = _this$props3.id;\n      cancel(id);\n    };\n\n    _this.showErrors = function (errorMsgs) {\n      if (errorMsgs.length) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, __('There are'), \" \", React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, errorMsgs.length), \" \", __('errors acquired'), \".\");\n      }\n\n      return null;\n    };\n\n    _this.renderProgress = function () {\n      if (_this.isDone()) {\n        return _this.getSuccessText();\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, _this.getIndicatorText());\n    };\n\n    _this.renderCloseButton = function () {\n      if (_this.isDone()) {\n        return React.createElement(\"a\", {\n          href: \"#cancel\",\n          onClick: _this.props.close,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"cancel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }));\n      }\n\n      return null;\n    };\n\n    return _this;\n  }\n\n  _createClass(ImportIndicator, [{\n    key: \"getSuccessText\",\n    value: function getSuccessText() {\n      var _this$props4 = this.props,\n          isRemovingImport = _this$props4.isRemovingImport,\n          importHistory = _this$props4.importHistory;\n      var id = importHistory._id;\n      var _importHistory$errorM = importHistory.errorMsgs,\n          errorMsgs = _importHistory$errorM === void 0 ? [] : _importHistory$errorM,\n          contentType = importHistory.contentType;\n\n      if (isRemovingImport) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, this.renderType(contentType, true), \" \", __('data successfully removed'), \".\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.renderType(contentType, true), \" \", __('data successfully imported'), \".\", ' ', this.showErrors(errorMsgs || []), ' ', id && React.createElement(Link, {\n        to: \"/settings/importHistory/\".concat(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, __('Show result'), \".\"));\n    }\n  }, {\n    key: \"getIndicatorText\",\n    value: function getIndicatorText() {\n      var _this$props5 = this.props,\n          isRemovingImport = _this$props5.isRemovingImport,\n          importHistory = _this$props5.importHistory,\n          errors = _this$props5.errors;\n      var contentType = importHistory.contentType;\n\n      if (errors) {\n        return errors.join(',');\n      }\n\n      if (isRemovingImport) {\n        return React.createElement(React.Fragment, null, __('Removing'), \" \", this.renderType(contentType), \" \", __('data'), \".\");\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"[\", this.props.percentage, \"%]\"), \" \", __('Importing'), ' ', this.renderType(contentType), \" \", __('data'), \". \", __('You can'), ' ', React.createElement(\"a\", {\n        href: \"#cancel\",\n        onClick: this.cancelCurrentImport,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, __('cancel')), ' ', \"anytime.\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ProgressBar, {\n        percentage: this.getPercentage(),\n        close: this.renderCloseButton(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, this.renderProgress());\n    }\n  }]);\n\n  return ImportIndicator;\n}(React.Component);\n\nexport default ImportIndicator;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/settings/importHistory/components/ImportIndicator.tsx"],"names":["Icon","ProgressBar","__","React","Link","styled","styledTS","Capitalize","span","props","isCapital","ImportIndicator","isDone","importHistory","isRemovingImport","status","renderType","contentType","getPercentage","percentage","percent","cancelCurrentImport","cancel","id","showErrors","errorMsgs","length","renderProgress","getSuccessText","getIndicatorText","renderCloseButton","close","_id","errors","join","Component"],"mappings":"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","sourcesContent":["import Icon from 'erxes-common-ui/lib/components/icon';\nimport ProgressBar from 'modules/common/components/ProgressBar';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport styledTS from 'styled-components-ts';\nimport { IImportHistory } from '../types';\n\nconst Capitalize = styledTS<{ isCapital?: boolean }>(styled.span)`\n  text-transform: ${props => (props.isCapital ? 'capitalize' : 'none')};\n`;\n\ntype Props = {\n  percentage: number;\n  id: string;\n  importHistory: IImportHistory;\n  close: () => void;\n  cancel: (id: string) => void;\n  isRemovingImport: boolean;\n  errors?: string[];\n};\n\nclass ImportIndicator extends React.Component<Props> {\n  isDone = () => {\n    const { importHistory, isRemovingImport } = this.props;\n    const { status } = importHistory;\n\n    if ((!isRemovingImport && status === 'Done') || status === 'Removed') {\n      return true;\n    }\n\n    return false;\n  };\n\n  renderType = (contentType: string, isCapital?: boolean) => {\n    return <Capitalize isCapital={isCapital}>{__(contentType)}</Capitalize>;\n  };\n\n  getPercentage = () => {\n    const { percentage, isRemovingImport } = this.props;\n    let percent = percentage;\n\n    if (this.isDone() || percent > 100 || isRemovingImport) {\n      percent = 100;\n    }\n\n    return percent;\n  };\n\n  cancelCurrentImport = () => {\n    const { cancel, id } = this.props;\n    cancel(id);\n  };\n\n  showErrors = (errorMsgs: string[]) => {\n    if (errorMsgs.length) {\n      return (\n        <span>\n          {__('There are')} <b>{errorMsgs.length}</b> {__('errors acquired')}.\n        </span>\n      );\n    }\n\n    return null;\n  };\n\n  getSuccessText() {\n    const { isRemovingImport, importHistory } = this.props;\n    const id = importHistory._id;\n    const { errorMsgs = [], contentType } = importHistory;\n\n    if (isRemovingImport) {\n      return (\n        <div>\n          {this.renderType(contentType, true)} {__('data successfully removed')}\n          .\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {this.renderType(contentType, true)} {__('data successfully imported')}.{' '}\n        {this.showErrors(errorMsgs || [])}{' '}\n        {id && (\n          <Link to={`/settings/importHistory/${id}`}>{__('Show result')}.</Link>\n        )}\n      </div>\n    );\n  }\n\n  getIndicatorText() {\n    const { isRemovingImport, importHistory, errors } = this.props;\n    const { contentType } = importHistory;\n\n    if (errors) {\n      return errors.join(',');\n    }\n\n    if (isRemovingImport) {\n      return (\n        <>\n          {__('Removing')} {this.renderType(contentType)} {__('data')}.\n        </>\n      );\n    }\n\n    return (\n      <>\n        <b>[{this.props.percentage}%]</b> {__('Importing')}{' '}\n        {this.renderType(contentType)} {__('data')}. {__('You can')}{' '}\n        <a href=\"#cancel\" onClick={this.cancelCurrentImport}>\n          {__('cancel')}\n        </a>{' '}\n        anytime.\n      </>\n    );\n  }\n\n  renderProgress = () => {\n    if (this.isDone()) {\n      return this.getSuccessText();\n    }\n\n    return <div>{this.getIndicatorText()}</div>;\n  };\n\n  renderCloseButton = () => {\n    if (this.isDone()) {\n      return (\n        <a href=\"#cancel\" onClick={this.props.close}>\n          <Icon icon=\"cancel\" />\n        </a>\n      );\n    }\n\n    return null;\n  };\n\n  render() {\n    return (\n      <ProgressBar\n        percentage={this.getPercentage()}\n        close={this.renderCloseButton()}\n      >\n        {this.renderProgress()}\n      </ProgressBar>\n    );\n  }\n}\n\nexport default ImportIndicator;\n"]},"metadata":{},"sourceType":"module"}