{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/mail/Attachments.tsx\";\nimport { getEnv } from 'apolloClient';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Tip from 'modules/common/components/Tip';\nimport { __ } from 'modules/common/utils';\nimport * as React from 'react';\nimport { AttachmentItem, AttachmentsContainer, Download, FileInfo, FileName } from './style';\nvar units = ['B', 'KB', 'MB', 'GB'];\n\nvar Attachments =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Attachments, _React$PureComponent);\n\n  function Attachments() {\n    _classCallCheck(this, Attachments);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Attachments).apply(this, arguments));\n  }\n\n  _createClass(Attachments, [{\n    key: \"formatSize\",\n    value: function formatSize(size) {\n      var l = 0;\n      var n = parseInt(size, 10) || 0;\n\n      while (n >= 1024 && ++l) {\n        n = n / 1024;\n      }\n\n      return \"\".concat(n.toFixed(n >= 10 || l < 1 ? 0 : 1), \"  \").concat(units[l]);\n    }\n  }, {\n    key: \"getIcon\",\n    value: function getIcon(type) {\n      if (type.startsWith('image')) {\n        return React.createElement(Icon, {\n          icon: \"image-v\",\n          size: 14,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Icon, {\n        icon: \"file-alt\",\n        size: 14,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"createLink\",\n    value: function createLink(attachmentId, filename, type) {\n      var _getEnv = getEnv(),\n          REACT_APP_API_URL = _getEnv.REACT_APP_API_URL;\n\n      var _this$props = this.props,\n          messageId = _this$props.messageId,\n          integrationId = _this$props.integrationId,\n          kind = _this$props.kind;\n      return \"\".concat(REACT_APP_API_URL, \"/read-mail-attachment?messageId=\").concat(messageId, \"&attachmentId=\").concat(attachmentId, \"&integrationId=\").concat(integrationId, \"&filename=\").concat(filename, \"&kind=\").concat(kind, \"&contentType=\").concat(type);\n    }\n  }, {\n    key: \"renderAttach\",\n    value: function renderAttach(attachment) {\n      var id = attachment.id,\n          size = attachment.size,\n          attachmentId = attachment.attachmentId,\n          content_type = attachment.content_type,\n          _attachment$mimeType = attachment.mimeType,\n          mimeType = _attachment$mimeType === void 0 ? '' : _attachment$mimeType,\n          _attachment$filename = attachment.filename,\n          filename = _attachment$filename === void 0 ? '' : _attachment$filename;\n      var type = mimeType ? mimeType : content_type;\n      return React.createElement(AttachmentItem, {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.getIcon(type || ''), React.createElement(FileName, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, filename), React.createElement(FileInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.formatSize(size)), React.createElement(Tip, {\n        text: __('Download'),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Download, {\n        href: this.createLink(id || attachmentId, filename, type),\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"arrow-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var attachments = this.props.attachments;\n\n      if (!attachments || attachments.length === 0) {\n        return;\n      }\n\n      return React.createElement(AttachmentsContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, attachments.map(function (attach) {\n        return _this.renderAttach(attach);\n      }));\n    }\n  }]);\n\n  return Attachments;\n}(React.PureComponent);\n\nexport default Attachments;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/mail/Attachments.tsx"],"names":["getEnv","Icon","Tip","__","React","AttachmentItem","AttachmentsContainer","Download","FileInfo","FileName","units","Attachments","size","l","n","parseInt","toFixed","type","startsWith","attachmentId","filename","REACT_APP_API_URL","props","messageId","integrationId","kind","attachment","id","content_type","mimeType","getIcon","formatSize","createLink","attachments","length","map","attach","renderAttach","PureComponent"],"mappings":"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","sourcesContent":["import { getEnv } from 'apolloClient';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Tip from 'modules/common/components/Tip';\nimport { __ } from 'modules/common/utils';\nimport { IMailAttachment } from 'modules/inbox/types';\nimport * as React from 'react';\nimport {\n  AttachmentItem,\n  AttachmentsContainer,\n  Download,\n  FileInfo,\n  FileName\n} from './style';\n\ntype Props = {\n  attachments: IMailAttachment[];\n  integrationId: string;\n  kind: string;\n  messageId: string;\n};\n\nconst units = ['B', 'KB', 'MB', 'GB'];\n\nclass Attachments extends React.PureComponent<Props, {}> {\n  formatSize(size) {\n    let l = 0;\n    let n = parseInt(size, 10) || 0;\n\n    while (n >= 1024 && ++l) {\n      n = n / 1024;\n    }\n\n    return `${n.toFixed(n >= 10 || l < 1 ? 0 : 1)}  ${units[l]}`;\n  }\n\n  getIcon(type: string) {\n    if (type.startsWith('image')) {\n      return <Icon icon=\"image-v\" size={14} />;\n    }\n\n    return <Icon icon=\"file-alt\" size={14} />;\n  }\n\n  createLink(attachmentId: string, filename: string, type?: string) {\n    const { REACT_APP_API_URL } = getEnv();\n    const { messageId, integrationId, kind } = this.props;\n\n    return `${REACT_APP_API_URL}/read-mail-attachment?messageId=${messageId}&attachmentId=${attachmentId}&integrationId=${integrationId}&filename=${filename}&kind=${kind}&contentType=${type}`;\n  }\n\n  renderAttach(attachment: IMailAttachment) {\n    const {\n      id,\n      size,\n      attachmentId,\n      content_type,\n      mimeType = '',\n      filename = ''\n    } = attachment;\n    const type = mimeType ? mimeType : content_type;\n\n    return (\n      <AttachmentItem key={id}>\n        {this.getIcon(type || '')}\n        <FileName>{filename}</FileName>\n\n        <FileInfo>\n          <span>{this.formatSize(size)}</span>\n          <Tip text={__('Download')} placement=\"top\">\n            <Download\n              href={this.createLink(id || attachmentId, filename, type)}\n              target=\"_blank\"\n            >\n              <Icon icon=\"arrow-down\" />\n            </Download>\n          </Tip>\n        </FileInfo>\n      </AttachmentItem>\n    );\n  }\n\n  render() {\n    const { attachments } = this.props;\n\n    if (!attachments || attachments.length === 0) {\n      return;\n    }\n\n    return (\n      <AttachmentsContainer>\n        {attachments.map(attach => this.renderAttach(attach))}\n      </AttachmentsContainer>\n    );\n  }\n}\n\nexport default Attachments;\n"]},"metadata":{},"sourceType":"module"}