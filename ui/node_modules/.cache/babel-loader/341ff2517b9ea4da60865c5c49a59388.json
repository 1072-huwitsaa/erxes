{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/containers/MessengerPreview.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withProps } from '../../common/utils';\nimport MessengerPreview from '../components/MessengerPreview';\nimport { queries } from '../graphql';\n\nvar MessengerPreviewContainer = function MessengerPreviewContainer(props) {\n  var userDetailQuery = props.userDetailQuery;\n\n  if (userDetailQuery.loading) {\n    return null;\n  }\n\n  var user = userDetailQuery.userDetail;\n\n  var updatedProps = _objectSpread({}, props, {\n    user: user\n  });\n\n  return React.createElement(MessengerPreview, Object.assign({}, updatedProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nexport default withProps(compose(graphql(gql(queries.userDetail), {\n  name: 'userDetailQuery',\n  options: function options(_ref) {\n    var fromUserId = _ref.fromUserId;\n    return {\n      variables: {\n        _id: fromUserId\n      }\n    };\n  }\n}))(MessengerPreviewContainer));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/containers/MessengerPreview.tsx"],"names":["gql","compose","React","graphql","withProps","MessengerPreview","queries","MessengerPreviewContainer","props","userDetailQuery","loading","user","userDetail","updatedProps","name","options","fromUserId","variables","_id"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAUA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,KAAD,EAAuB;AAAA,MAC/CC,eAD+C,GAC3BD,KAD2B,CAC/CC,eAD+C;;AAGvD,MAAIA,eAAe,CAACC,OAApB,EAA6B;AAC3B,WAAO,IAAP;AACD;;AAED,MAAMC,IAAI,GAAGF,eAAe,CAACG,UAA7B;;AACA,MAAMC,YAAY,qBACbL,KADa;AAEhBG,IAAAA,IAAI,EAAJA;AAFgB,IAAlB;;AAKA,SAAO,oBAAC,gBAAD,oBAAsBE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAdD;;AAgBA,eAAeT,SAAS,CACtBH,OAAO,CACLE,OAAO,CACLH,GAAG,CAACM,OAAO,CAACM,UAAT,CADE,EAEL;AACEE,EAAAA,IAAI,EAAE,iBADR;AAEEC,EAAAA,OAAO,EAAE;AAAA,QAAGC,UAAH,QAAGA,UAAH;AAAA,WAA6C;AACpDC,MAAAA,SAAS,EAAE;AACTC,QAAAA,GAAG,EAAEF;AADI;AADyC,KAA7C;AAAA;AAFX,CAFK,CADF,CAAP,CAYET,yBAZF,CADsB,CAAxB","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport { withProps } from '../../common/utils';\nimport { UserDetailQueryResponse } from '../../settings/team/types';\nimport MessengerPreview from '../components/MessengerPreview';\nimport { queries } from '../graphql';\n\ntype Props = {\n  fromUserId: string;\n  sentAs: string;\n  content: string;\n};\n\ntype FinalProps = { userDetailQuery: UserDetailQueryResponse } & Props;\n\nconst MessengerPreviewContainer = (props: FinalProps) => {\n  const { userDetailQuery } = props;\n\n  if (userDetailQuery.loading) {\n    return null;\n  }\n\n  const user = userDetailQuery.userDetail;\n  const updatedProps = {\n    ...props,\n    user\n  };\n\n  return <MessengerPreview {...updatedProps} />;\n};\n\nexport default withProps<Props>(\n  compose(\n    graphql<Props, UserDetailQueryResponse, { _id: string }>(\n      gql(queries.userDetail),\n      {\n        name: 'userDetailQuery',\n        options: ({ fromUserId }: { fromUserId: string }) => ({\n          variables: {\n            _id: fromUserId\n          }\n        })\n      }\n    )\n  )(MessengerPreviewContainer)\n);\n"]},"metadata":{},"sourceType":"module"}