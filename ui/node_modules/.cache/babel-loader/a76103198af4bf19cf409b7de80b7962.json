{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/knowledgeBase/components/knowledge/KnowledgeList.tsx\";\nimport Button from 'erxes-common-ui/lib/components/button';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport { TopHeader } from 'modules/common/styles/main';\nimport Sidebar from 'modules/layout/components/Sidebar';\nimport React from 'react';\nimport KnowledgeForm from '../../containers/knowledge/KnowledgeForm';\nimport KnowledgeRow from './KnowledgeRow';\n\nvar KnowledgeList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(KnowledgeList, _React$Component);\n\n  function KnowledgeList() {\n    _classCallCheck(this, KnowledgeList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(KnowledgeList).apply(this, arguments));\n  }\n\n  _createClass(KnowledgeList, [{\n    key: \"renderTopics\",\n    value: function renderTopics() {\n      var _this$props = this.props,\n          topics = _this$props.topics,\n          remove = _this$props.remove,\n          renderButton = _this$props.renderButton,\n          currentCategoryId = _this$props.currentCategoryId,\n          queryParams = _this$props.queryParams,\n          articlesCount = _this$props.articlesCount,\n          refetch = _this$props.refetch;\n      return React.createElement(React.Fragment, null, topics.map(function (topic) {\n        return React.createElement(KnowledgeRow, {\n          currentCategoryId: currentCategoryId,\n          key: topic._id,\n          topic: topic,\n          queryParams: queryParams,\n          articlesCount: articlesCount,\n          remove: remove,\n          renderButton: renderButton,\n          refetchTopics: refetch,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      }));\n    }\n  }, {\n    key: \"renderSidebarHeader\",\n    value: function renderSidebarHeader() {\n      var _this = this;\n\n      var trigger = React.createElement(Button, {\n        btnStyle: \"success\",\n        block: true,\n        uppercase: false,\n        icon: \"plus-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Add Knowledge Base\");\n\n      var content = function content(props) {\n        return React.createElement(KnowledgeForm, Object.assign({}, props, {\n          renderButton: _this.props.renderButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }));\n      };\n\n      return React.createElement(TopHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(ModalTrigger, {\n        title: \"Add Knowledge Base\",\n        autoOpenKey: \"showKBAddModal\",\n        trigger: trigger,\n        content: content,\n        enforceFocus: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          topics = _this$props2.topics,\n          loading = _this$props2.loading;\n      return React.createElement(Sidebar, {\n        full: true,\n        wide: true,\n        header: this.renderSidebarHeader(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(DataWithLoader, {\n        data: this.renderTopics(),\n        loading: loading,\n        count: topics.length,\n        emptyText: \"There is no knowledge base\",\n        emptyImage: \"/images/actions/18.svg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return KnowledgeList;\n}(React.Component);\n\nexport default KnowledgeList;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/knowledgeBase/components/knowledge/KnowledgeList.tsx"],"names":["Button","DataWithLoader","ModalTrigger","TopHeader","Sidebar","React","KnowledgeForm","KnowledgeRow","KnowledgeList","props","topics","remove","renderButton","currentCategoryId","queryParams","articlesCount","refetch","map","topic","_id","trigger","content","loading","renderSidebarHeader","renderTopics","length","Component"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,uCAAnB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,SAASC,SAAT,QAA0B,4BAA1B;AAEA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;IAcMC,a;;;;;;;;;;;;;mCACW;AAAA,wBAST,KAAKC,KATI;AAAA,UAEXC,MAFW,eAEXA,MAFW;AAAA,UAGXC,MAHW,eAGXA,MAHW;AAAA,UAIXC,YAJW,eAIXA,YAJW;AAAA,UAKXC,iBALW,eAKXA,iBALW;AAAA,UAMXC,WANW,eAMXA,WANW;AAAA,UAOXC,aAPW,eAOXA,aAPW;AAAA,UAQXC,OARW,eAQXA,OARW;AAWb,aACE,0CACGN,MAAM,CAACO,GAAP,CAAW,UAAAC,KAAK;AAAA,eACf,oBAAC,YAAD;AACE,UAAA,iBAAiB,EAAEL,iBADrB;AAEE,UAAA,GAAG,EAAEK,KAAK,CAACC,GAFb;AAGE,UAAA,KAAK,EAAED,KAHT;AAIE,UAAA,WAAW,EAAEJ,WAJf;AAKE,UAAA,aAAa,EAAEC,aALjB;AAME,UAAA,MAAM,EAAEJ,MANV;AAOE,UAAA,YAAY,EAAEC,YAPhB;AAQE,UAAA,aAAa,EAAEI,OARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADe;AAAA,OAAhB,CADH,CADF;AAgBD;;;0CAEqB;AAAA;;AACpB,UAAMI,OAAO,GACX,oBAAC,MAAD;AACE,QAAA,QAAQ,EAAC,SADX;AAEE,QAAA,KAAK,EAAE,IAFT;AAGE,QAAA,SAAS,EAAE,KAHb;AAIE,QAAA,IAAI,EAAC,aAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF;;AAWA,UAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAZ,KAAK;AAAA,eACnB,oBAAC,aAAD,oBAAmBA,KAAnB;AAA0B,UAAA,YAAY,EAAE,KAAI,CAACA,KAAL,CAAWG,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADmB;AAAA,OAArB;;AAIA,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,KAAK,EAAC,oBADR;AAEE,QAAA,WAAW,EAAC,gBAFd;AAGE,QAAA,OAAO,EAAEQ,OAHX;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,YAAY,EAAE,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAWD;;;6BAEQ;AAAA,yBACqB,KAAKZ,KAD1B;AAAA,UACCC,MADD,gBACCA,MADD;AAAA,UACSY,OADT,gBACSA,OADT;AAGP,aACE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAE,IAAf;AAAqB,QAAA,IAAI,EAAE,IAA3B;AAAiC,QAAA,MAAM,EAAE,KAAKC,mBAAL,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AACE,QAAA,IAAI,EAAE,KAAKC,YAAL,EADR;AAEE,QAAA,OAAO,EAAEF,OAFX;AAGE,QAAA,KAAK,EAAEZ,MAAM,CAACe,MAHhB;AAIE,QAAA,SAAS,EAAC,4BAJZ;AAKE,QAAA,UAAU,EAAC,wBALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAWD;;;;EAzEyBpB,KAAK,CAACqB,S;;AA4ElC,eAAelB,aAAf","sourcesContent":["import Button from 'erxes-common-ui/lib/components/button';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport { TopHeader } from 'modules/common/styles/main';\nimport { IButtonMutateProps } from 'modules/common/types';\nimport Sidebar from 'modules/layout/components/Sidebar';\nimport React from 'react';\nimport KnowledgeForm from '../../containers/knowledge/KnowledgeForm';\nimport { ITopic } from '../../types';\nimport KnowledgeRow from './KnowledgeRow';\n\ntype Props = {\n  queryParams: any;\n  currentCategoryId: string;\n  count?: number;\n  loading: boolean;\n  topics: ITopic[];\n  articlesCount: number;\n  refetch: () => void;\n  renderButton: (props: IButtonMutateProps) => JSX.Element;\n  remove: (knowledgeBaseId: string) => void;\n};\n\nclass KnowledgeList extends React.Component<Props> {\n  renderTopics() {\n    const {\n      topics,\n      remove,\n      renderButton,\n      currentCategoryId,\n      queryParams,\n      articlesCount,\n      refetch\n    } = this.props;\n\n    return (\n      <>\n        {topics.map(topic => (\n          <KnowledgeRow\n            currentCategoryId={currentCategoryId}\n            key={topic._id}\n            topic={topic}\n            queryParams={queryParams}\n            articlesCount={articlesCount}\n            remove={remove}\n            renderButton={renderButton}\n            refetchTopics={refetch}\n          />\n        ))}\n      </>\n    );\n  }\n\n  renderSidebarHeader() {\n    const trigger = (\n      <Button\n        btnStyle=\"success\"\n        block={true}\n        uppercase={false}\n        icon=\"plus-circle\"\n      >\n        Add Knowledge Base\n      </Button>\n    );\n\n    const content = props => (\n      <KnowledgeForm {...props} renderButton={this.props.renderButton} />\n    );\n\n    return (\n      <TopHeader>\n        <ModalTrigger\n          title=\"Add Knowledge Base\"\n          autoOpenKey=\"showKBAddModal\"\n          trigger={trigger}\n          content={content}\n          enforceFocus={false}\n        />\n      </TopHeader>\n    );\n  }\n\n  render() {\n    const { topics, loading } = this.props;\n\n    return (\n      <Sidebar full={true} wide={true} header={this.renderSidebarHeader()}>\n        <DataWithLoader\n          data={this.renderTopics()}\n          loading={loading}\n          count={topics.length}\n          emptyText=\"There is no knowledge base\"\n          emptyImage=\"/images/actions/18.svg\"\n        />\n      </Sidebar>\n    );\n  }\n}\n\nexport default KnowledgeList;\n"]},"metadata":{},"sourceType":"module"}