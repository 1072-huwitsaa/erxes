{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/EditorCK.tsx\";\nimport { getEnv } from 'apolloClient';\nimport CKEditor from 'ckeditor4-react';\nimport { colors } from 'modules/common/styles';\nimport React from 'react';\n\nvar _getEnv = getEnv(),\n    REACT_APP_API_URL = _getEnv.REACT_APP_API_URL;\n\nexport var getMentionedUserIds = function getMentionedUserIds(content) {\n  var re = new RegExp('<a[^>]* mentioned-user-id=\"([^\"]*)\"', 'g');\n  var mentionedUserIds = (content.match(re) || []).map(function (m) {\n    return m.replace(re, '$1');\n  });\n  return mentionedUserIds.filter(function (value, index, self) {\n    return self.indexOf(value) === index;\n  });\n};\n\nvar EditorCK =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditorCK, _React$Component);\n\n  function EditorCK(props) {\n    var _this;\n\n    _classCallCheck(this, EditorCK);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditorCK).call(this, props));\n\n    _this.componentDidUpdate = function (prevProps) {\n      var _this$props = _this.props,\n          name = _this$props.name,\n          content = _this$props.content;\n\n      if (name && prevProps.content !== _this.props.content) {\n        localStorage.setItem(name, content);\n      }\n    };\n\n    CKEditor.editorUrl = '/ckeditor/ckeditor.js';\n    _this.onEnter = _this.onEnter.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EditorCK, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var name = this.props.name;\n\n      if (name) {\n        var content = localStorage.getItem(name);\n\n        if (content && content !== this.props.content) {\n          this.setState({\n            content: content\n          });\n          this.props.onChange({\n            editor: {\n              getData: function getData() {\n                return content;\n              }\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var name = this.props.name;\n\n      if (name) {\n        localStorage.removeItem(name);\n      }\n    }\n  }, {\n    key: \"onEnter\",\n    value: function onEnter(event) {\n      var _this$props2 = this.props,\n          name = _this$props2.name,\n          onCtrlEnter = _this$props2.onCtrlEnter;\n\n      if (name) {\n        localStorage.removeItem(name);\n        this.setState({\n          content: ''\n        });\n      }\n\n      if (onCtrlEnter) {\n        onCtrlEnter(event);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          content = _this$props3.content,\n          height = _this$props3.height,\n          insertItems = _this$props3.insertItems,\n          removeButtons = _this$props3.removeButtons,\n          removePlugins = _this$props3.removePlugins,\n          toolbar = _this$props3.toolbar,\n          toolbarCanCollapse = _this$props3.toolbarCanCollapse,\n          _this$props3$mentionU = _this$props3.mentionUsers,\n          mentionUsers = _this$props3$mentionU === void 0 ? [] : _this$props3$mentionU,\n          autoFocus = _this$props3.autoFocus,\n          autoGrow = _this$props3.autoGrow,\n          _this$props3$autoGrow = _this$props3.autoGrowMinHeight,\n          autoGrowMinHeight = _this$props3$autoGrow === void 0 ? 180 : _this$props3$autoGrow,\n          autoGrowMaxHeight = _this$props3.autoGrowMaxHeight,\n          _this$props3$toolbarL = _this$props3.toolbarLocation,\n          toolbarLocation = _this$props3$toolbarL === void 0 ? 'top' : _this$props3$toolbarL,\n          onChange = _this$props3.onChange;\n\n      var mentionDataFeed = function mentionDataFeed(opts, callback) {\n        if (mentionUsers.length <= 1) {\n          return;\n        }\n\n        var matchProperty = 'fullName';\n        var query = opts.query.toLowerCase();\n        var data = mentionUsers.filter(function (item) {\n          return item[matchProperty].toLowerCase().indexOf(query) >= 0;\n        });\n        callback(data);\n      };\n\n      return React.createElement(CKEditor, {\n        data: content,\n        onChange: onChange,\n        config: {\n          height: height,\n          startupFocus: autoFocus,\n          uiColor: colors.bgLight,\n          dialog_backgroundCoverColor: '#30435C',\n          allowedContent: true,\n          toolbarLocation: toolbarLocation,\n          extraPlugins: \"codemirror,strinsert,onCtrlEnter\".concat(autoGrow ? ',autogrow' : ''),\n          autoGrow_minHeight: autoGrowMinHeight,\n          autoGrow_maxHeight: autoGrowMaxHeight,\n          autoGrow_onStartup: true,\n          strinsert: insertItems,\n          autoGrowOnStartup: true,\n          toolbar: toolbar || [{\n            name: 'document',\n            groups: ['mode', 'document', 'doctools'],\n            items: ['Source', 'NewPage']\n          }, {\n            name: 'colors',\n            items: ['TextColor', 'BGColor']\n          }, {\n            name: 'basicstyles',\n            items: ['Bold', 'Italic', 'Underline', 'Strike', '-', 'Image', 'Table', 'EmojiPanel']\n          }, {\n            name: 'paragraph',\n            groups: ['list', 'indent', 'blocks', 'align', 'bidi'],\n            items: ['NumberedList', 'BulletedList', 'Blockquote', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock']\n          }, {\n            name: 'links',\n            items: ['Link', 'Unlink']\n          }, {\n            name: 'styles',\n            items: ['Styles', 'Format', 'Font', 'FontSize']\n          }, {\n            name: 'others',\n            items: [insertItems && 'strinsert']\n          }, {\n            name: 'clear',\n            items: ['RemoveFormat']\n          }, {\n            name: 'tools',\n            items: ['Maximize']\n          }],\n          mentions: [{\n            feed: mentionDataFeed,\n            itemTemplate: '<li data-id=\"{id}\">' + '<img class=\"editor-avatar\" src=\"{avatar}\"' + '<strong>{fullName}</strong>' + '</li>',\n            outputTemplate: '<a mentioned-user-id=\"{id}\">@{fullName}</a><span>&nbsp;</span>',\n            minChars: 0\n          }],\n          removeButtons: removeButtons,\n          removePlugins: removePlugins,\n          codemirror: {\n            enableCodeFormatting: false,\n            enableCodeFolding: false,\n            showSearchButton: false,\n            showCommentButton: false,\n            showUncommentButton: false,\n            showFormatButton: false\n          },\n          onCtrlEnter: this.onEnter,\n          toolbarCanCollapse: toolbarCanCollapse,\n          filebrowserImageUploadUrl: \"\".concat(REACT_APP_API_URL, \"/upload-file\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return EditorCK;\n}(React.Component);\n\nexport default EditorCK;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/common/components/EditorCK.tsx"],"names":["getEnv","CKEditor","colors","React","REACT_APP_API_URL","getMentionedUserIds","content","re","RegExp","mentionedUserIds","match","map","m","replace","filter","value","index","self","indexOf","EditorCK","props","componentDidUpdate","prevProps","name","localStorage","setItem","editorUrl","onEnter","bind","getItem","setState","onChange","editor","getData","removeItem","event","onCtrlEnter","height","insertItems","removeButtons","removePlugins","toolbar","toolbarCanCollapse","mentionUsers","autoFocus","autoGrow","autoGrowMinHeight","autoGrowMaxHeight","toolbarLocation","mentionDataFeed","opts","callback","length","matchProperty","query","toLowerCase","data","item","startupFocus","uiColor","bgLight","dialog_backgroundCoverColor","allowedContent","extraPlugins","autoGrow_minHeight","autoGrow_maxHeight","autoGrow_onStartup","strinsert","autoGrowOnStartup","groups","items","mentions","feed","itemTemplate","outputTemplate","minChars","codemirror","enableCodeFormatting","enableCodeFolding","showSearchButton","showCommentButton","showUncommentButton","showFormatButton","filebrowserImageUploadUrl","Component"],"mappings":";;;;;;;AAAA,SAASA,MAAT,QAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;cAG8BH,MAAM,E;IAA5BI,iB,WAAAA,iB;;AAER,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,OAAD,EAAqB;AACtD,MAAMC,EAAE,GAAG,IAAIC,MAAJ,CAAW,qCAAX,EAAkD,GAAlD,CAAX;AAEA,MAAMC,gBAA0B,GAAG,CAACH,OAAO,CAACI,KAAR,CAAcH,EAAd,KAAqB,EAAtB,EAA0BI,GAA1B,CAA8B,UAAAC,CAAC;AAAA,WAChEA,CAAC,CAACC,OAAF,CAAUN,EAAV,EAAc,IAAd,CADgE;AAAA,GAA/B,CAAnC;AAIA,SAAOE,gBAAgB,CAACK,MAAjB,CAAwB,UAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,EAAwB;AACrD,WAAOA,IAAI,CAACC,OAAL,CAAaH,KAAb,MAAwBC,KAA/B;AACD,GAFM,CAAP;AAGD,CAVM;;IAYDG,Q;;;;;AACJ,oBAAYC,KAAZ,EAAiC;AAAA;;AAAA;;AAC/B,kFAAMA,KAAN;;AAD+B,UAOjCC,kBAPiC,GAOZ,UAACC,SAAD,EAA6B;AAAA,wBACtB,MAAKF,KADiB;AAAA,UACxCG,IADwC,eACxCA,IADwC;AAAA,UAClCjB,OADkC,eAClCA,OADkC;;AAGhD,UAAIiB,IAAI,IAAID,SAAS,CAAChB,OAAV,KAAsB,MAAKc,KAAL,CAAWd,OAA7C,EAAsD;AACpDkB,QAAAA,YAAY,CAACC,OAAb,CAAqBF,IAArB,EAA2BjB,OAA3B;AACD;AACF,KAbgC;;AAG/BL,IAAAA,QAAQ,CAACyB,SAAT,GAAqB,uBAArB;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf;AAJ+B;AAKhC;;;;wCAUmB;AAClB,UAAML,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAxB;;AAEA,UAAIA,IAAJ,EAAU;AACR,YAAMjB,OAAO,GAAGkB,YAAY,CAACK,OAAb,CAAqBN,IAArB,CAAhB;;AAEA,YAAIjB,OAAO,IAAIA,OAAO,KAAK,KAAKc,KAAL,CAAWd,OAAtC,EAA+C;AAC7C,eAAKwB,QAAL,CAAc;AAAExB,YAAAA,OAAO,EAAPA;AAAF,WAAd;AAEA,eAAKc,KAAL,CAAWW,QAAX,CAAoB;AAClBC,YAAAA,MAAM,EAAE;AACNC,cAAAA,OAAO,EAAE;AAAA,uBAAM3B,OAAN;AAAA;AADH;AADU,WAApB;AAKD;AACF;AACF;;;2CAEsB;AACrB,UAAMiB,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAxB;;AAEA,UAAIA,IAAJ,EAAU;AACRC,QAAAA,YAAY,CAACU,UAAb,CAAwBX,IAAxB;AACD;AACF;;;4BAEOY,K,EAAY;AAAA,yBACY,KAAKf,KADjB;AAAA,UACVG,IADU,gBACVA,IADU;AAAA,UACJa,WADI,gBACJA,WADI;;AAGlB,UAAIb,IAAJ,EAAU;AACRC,QAAAA,YAAY,CAACU,UAAb,CAAwBX,IAAxB;AACA,aAAKO,QAAL,CAAc;AAAExB,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD;;AAED,UAAI8B,WAAJ,EAAiB;AACfA,QAAAA,WAAW,CAACD,KAAD,CAAX;AACD;AACF;;;6BAEQ;AAAA,yBAgBH,KAAKf,KAhBF;AAAA,UAELd,OAFK,gBAELA,OAFK;AAAA,UAGL+B,MAHK,gBAGLA,MAHK;AAAA,UAILC,WAJK,gBAILA,WAJK;AAAA,UAKLC,aALK,gBAKLA,aALK;AAAA,UAMLC,aANK,gBAMLA,aANK;AAAA,UAOLC,OAPK,gBAOLA,OAPK;AAAA,UAQLC,kBARK,gBAQLA,kBARK;AAAA,+CASLC,YATK;AAAA,UASLA,YATK,sCASU,EATV;AAAA,UAULC,SAVK,gBAULA,SAVK;AAAA,UAWLC,QAXK,gBAWLA,QAXK;AAAA,+CAYLC,iBAZK;AAAA,UAYLA,iBAZK,sCAYe,GAZf;AAAA,UAaLC,iBAbK,gBAaLA,iBAbK;AAAA,+CAcLC,eAdK;AAAA,UAcLA,eAdK,sCAca,KAdb;AAAA,UAeLjB,QAfK,gBAeLA,QAfK;;AAkBP,UAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAOC,QAAP,EAAoB;AAC1C,YAAIR,YAAY,CAACS,MAAb,IAAuB,CAA3B,EAA8B;AAC5B;AACD;;AAED,YAAMC,aAAa,GAAG,UAAtB;AACA,YAAMC,KAAK,GAAGJ,IAAI,CAACI,KAAL,CAAWC,WAAX,EAAd;AAEA,YAAMC,IAAI,GAAGb,YAAY,CAAC7B,MAAb,CACX,UAAA2C,IAAI;AAAA,iBAAIA,IAAI,CAACJ,aAAD,CAAJ,CAAoBE,WAApB,GAAkCrC,OAAlC,CAA0CoC,KAA1C,KAAoD,CAAxD;AAAA,SADO,CAAb;AAIAH,QAAAA,QAAQ,CAACK,IAAD,CAAR;AACD,OAbD;;AAeA,aACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAElD,OADR;AAEE,QAAA,QAAQ,EAAEyB,QAFZ;AAGE,QAAA,MAAM,EAAE;AACNM,UAAAA,MAAM,EAANA,MADM;AAENqB,UAAAA,YAAY,EAAEd,SAFR;AAGNe,UAAAA,OAAO,EAAEzD,MAAM,CAAC0D,OAHV;AAINC,UAAAA,2BAA2B,EAAE,SAJvB;AAKNC,UAAAA,cAAc,EAAE,IALV;AAMNd,UAAAA,eAAe,EAAfA,eANM;AAONe,UAAAA,YAAY,4CACVlB,QAAQ,GAAG,WAAH,GAAiB,EADf,CAPN;AAUNmB,UAAAA,kBAAkB,EAAElB,iBAVd;AAWNmB,UAAAA,kBAAkB,EAAElB,iBAXd;AAYNmB,UAAAA,kBAAkB,EAAE,IAZd;AAaNC,UAAAA,SAAS,EAAE7B,WAbL;AAcN8B,UAAAA,iBAAiB,EAAE,IAdb;AAeN3B,UAAAA,OAAO,EAAEA,OAAO,IAAI,CAClB;AACElB,YAAAA,IAAI,EAAE,UADR;AAEE8C,YAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,UAAT,EAAqB,UAArB,CAFV;AAGEC,YAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,SAAX;AAHT,WADkB,EAMlB;AAAE/C,YAAAA,IAAI,EAAE,QAAR;AAAkB+C,YAAAA,KAAK,EAAE,CAAC,WAAD,EAAc,SAAd;AAAzB,WANkB,EAOlB;AACE/C,YAAAA,IAAI,EAAE,aADR;AAEE+C,YAAAA,KAAK,EAAE,CACL,MADK,EAEL,QAFK,EAGL,WAHK,EAIL,QAJK,EAKL,GALK,EAML,OANK,EAOL,OAPK,EAQL,YARK;AAFT,WAPkB,EAoBlB;AACE/C,YAAAA,IAAI,EAAE,WADR;AAEE8C,YAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,OAA7B,EAAsC,MAAtC,CAFV;AAGEC,YAAAA,KAAK,EAAE,CACL,cADK,EAEL,cAFK,EAGL,YAHK,EAIL,aAJK,EAKL,eALK,EAML,cANK,EAOL,cAPK;AAHT,WApBkB,EAiClB;AAAE/C,YAAAA,IAAI,EAAE,OAAR;AAAiB+C,YAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,QAAT;AAAxB,WAjCkB,EAkClB;AAAE/C,YAAAA,IAAI,EAAE,QAAR;AAAkB+C,YAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,EAA6B,UAA7B;AAAzB,WAlCkB,EAmClB;AAAE/C,YAAAA,IAAI,EAAE,QAAR;AAAkB+C,YAAAA,KAAK,EAAE,CAAChC,WAAW,IAAI,WAAhB;AAAzB,WAnCkB,EAoClB;AAAEf,YAAAA,IAAI,EAAE,OAAR;AAAiB+C,YAAAA,KAAK,EAAE,CAAC,cAAD;AAAxB,WApCkB,EAqClB;AAAE/C,YAAAA,IAAI,EAAE,OAAR;AAAiB+C,YAAAA,KAAK,EAAE,CAAC,UAAD;AAAxB,WArCkB,CAfd;AAsDNC,UAAAA,QAAQ,EAAE,CACR;AACEC,YAAAA,IAAI,EAAEvB,eADR;AAEEwB,YAAAA,YAAY,EACV,wBACA,2CADA,GAEA,6BAFA,GAGA,OANJ;AAOEC,YAAAA,cAAc,EACZ,gEARJ;AASEC,YAAAA,QAAQ,EAAE;AATZ,WADQ,CAtDJ;AAmENpC,UAAAA,aAAa,EAAbA,aAnEM;AAoENC,UAAAA,aAAa,EAAbA,aApEM;AAqENoC,UAAAA,UAAU,EAAE;AACVC,YAAAA,oBAAoB,EAAE,KADZ;AAEVC,YAAAA,iBAAiB,EAAE,KAFT;AAGVC,YAAAA,gBAAgB,EAAE,KAHR;AAIVC,YAAAA,iBAAiB,EAAE,KAJT;AAKVC,YAAAA,mBAAmB,EAAE,KALX;AAMVC,YAAAA,gBAAgB,EAAE;AANR,WArEN;AA6EN9C,UAAAA,WAAW,EAAE,KAAKT,OA7EZ;AA8ENe,UAAAA,kBAAkB,EAAlBA,kBA9EM;AA+ENyC,UAAAA,yBAAyB,YAAK/E,iBAAL;AA/EnB,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAuFD;;;;EA/KoBD,KAAK,CAACiF,S;;AAkL7B,eAAejE,QAAf","sourcesContent":["import { getEnv } from 'apolloClient';\nimport CKEditor from 'ckeditor4-react';\nimport { colors } from 'modules/common/styles';\nimport React from 'react';\nimport { IEditorProps } from '../types';\n\nconst { REACT_APP_API_URL } = getEnv();\n\nexport const getMentionedUserIds = (content: string) => {\n  const re = new RegExp('<a[^>]* mentioned-user-id=\"([^\"]*)\"', 'g');\n\n  const mentionedUserIds: string[] = (content.match(re) || []).map(m =>\n    m.replace(re, '$1')\n  );\n\n  return mentionedUserIds.filter((value, index, self) => {\n    return self.indexOf(value) === index;\n  });\n};\n\nclass EditorCK extends React.Component<IEditorProps, { content: string }> {\n  constructor(props: IEditorProps) {\n    super(props);\n\n    CKEditor.editorUrl = '/ckeditor/ckeditor.js';\n    this.onEnter = this.onEnter.bind(this);\n  }\n\n  componentDidUpdate = (prevProps: IEditorProps) => {\n    const { name, content } = this.props;\n\n    if (name && prevProps.content !== this.props.content) {\n      localStorage.setItem(name, content);\n    }\n  };\n\n  componentDidMount() {\n    const name = this.props.name;\n\n    if (name) {\n      const content = localStorage.getItem(name);\n\n      if (content && content !== this.props.content) {\n        this.setState({ content });\n\n        this.props.onChange({\n          editor: {\n            getData: () => content\n          }\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const name = this.props.name;\n\n    if (name) {\n      localStorage.removeItem(name);\n    }\n  }\n\n  onEnter(event: any) {\n    const { name, onCtrlEnter } = this.props;\n\n    if (name) {\n      localStorage.removeItem(name);\n      this.setState({ content: '' });\n    }\n\n    if (onCtrlEnter) {\n      onCtrlEnter(event);\n    }\n  }\n\n  render() {\n    const {\n      content,\n      height,\n      insertItems,\n      removeButtons,\n      removePlugins,\n      toolbar,\n      toolbarCanCollapse,\n      mentionUsers = [],\n      autoFocus,\n      autoGrow,\n      autoGrowMinHeight = 180,\n      autoGrowMaxHeight,\n      toolbarLocation = 'top',\n      onChange\n    } = this.props;\n\n    const mentionDataFeed = (opts, callback) => {\n      if (mentionUsers.length <= 1) {\n        return;\n      }\n\n      const matchProperty = 'fullName';\n      const query = opts.query.toLowerCase();\n\n      const data = mentionUsers.filter(\n        item => item[matchProperty].toLowerCase().indexOf(query) >= 0\n      );\n\n      callback(data);\n    };\n\n    return (\n      <CKEditor\n        data={content}\n        onChange={onChange}\n        config={{\n          height,\n          startupFocus: autoFocus,\n          uiColor: colors.bgLight,\n          dialog_backgroundCoverColor: '#30435C',\n          allowedContent: true,\n          toolbarLocation,\n          extraPlugins: `codemirror,strinsert,onCtrlEnter${\n            autoGrow ? ',autogrow' : ''\n          }`,\n          autoGrow_minHeight: autoGrowMinHeight,\n          autoGrow_maxHeight: autoGrowMaxHeight,\n          autoGrow_onStartup: true,\n          strinsert: insertItems,\n          autoGrowOnStartup: true,\n          toolbar: toolbar || [\n            {\n              name: 'document',\n              groups: ['mode', 'document', 'doctools'],\n              items: ['Source', 'NewPage']\n            },\n            { name: 'colors', items: ['TextColor', 'BGColor'] },\n            {\n              name: 'basicstyles',\n              items: [\n                'Bold',\n                'Italic',\n                'Underline',\n                'Strike',\n                '-',\n                'Image',\n                'Table',\n                'EmojiPanel'\n              ]\n            },\n            {\n              name: 'paragraph',\n              groups: ['list', 'indent', 'blocks', 'align', 'bidi'],\n              items: [\n                'NumberedList',\n                'BulletedList',\n                'Blockquote',\n                'JustifyLeft',\n                'JustifyCenter',\n                'JustifyRight',\n                'JustifyBlock'\n              ]\n            },\n            { name: 'links', items: ['Link', 'Unlink'] },\n            { name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },\n            { name: 'others', items: [insertItems && 'strinsert'] },\n            { name: 'clear', items: ['RemoveFormat'] },\n            { name: 'tools', items: ['Maximize'] }\n          ],\n          mentions: [\n            {\n              feed: mentionDataFeed,\n              itemTemplate:\n                '<li data-id=\"{id}\">' +\n                '<img class=\"editor-avatar\" src=\"{avatar}\"' +\n                '<strong>{fullName}</strong>' +\n                '</li>',\n              outputTemplate:\n                '<a mentioned-user-id=\"{id}\">@{fullName}</a><span>&nbsp;</span>',\n              minChars: 0\n            }\n          ],\n          removeButtons,\n          removePlugins,\n          codemirror: {\n            enableCodeFormatting: false,\n            enableCodeFolding: false,\n            showSearchButton: false,\n            showCommentButton: false,\n            showUncommentButton: false,\n            showFormatButton: false\n          },\n          onCtrlEnter: this.onEnter,\n          toolbarCanCollapse,\n          filebrowserImageUploadUrl: `${REACT_APP_API_URL}/upload-file`\n        }}\n      />\n    );\n  }\n}\n\nexport default EditorCK;\n"]},"metadata":{},"sourceType":"module"}