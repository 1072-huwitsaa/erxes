{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/tasks/components/TaskEditForm.tsx\";\nimport EditForm from 'modules/boards/components/editForm/EditForm';\nimport Left from 'modules/boards/components/editForm/Left';\nimport Sidebar from 'modules/boards/components/editForm/Sidebar';\nimport Top from 'modules/boards/components/editForm/Top';\nimport { FlexContent } from 'modules/boards/styles/item';\nimport TaskTimer, { STATUS_TYPES } from 'modules/common/components/Timer';\nimport PortableDeals from 'modules/deals/components/PortableDeals';\nimport PortableTickets from 'modules/tickets/components/PortableTickets';\nimport React from 'react';\n\nvar TaskEditForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TaskEditForm, _React$Component);\n\n  function TaskEditForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TaskEditForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TaskEditForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderItems = function () {\n      var _this$props = _this.props,\n          item = _this$props.item,\n          updateTimeTrack = _this$props.updateTimeTrack;\n      var timeTrack = item.timeTrack || {\n        timeSpent: 0,\n        status: STATUS_TYPES.STOPPED\n      };\n      return React.createElement(React.Fragment, null, React.createElement(TaskTimer, {\n        taskId: item._id,\n        status: timeTrack.status,\n        timeSpent: timeTrack.timeSpent,\n        startDate: timeTrack.startDate,\n        update: updateTimeTrack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(PortableDeals, {\n        mainType: \"task\",\n        mainTypeId: _this.props.item._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(PortableTickets, {\n        mainType: \"task\",\n        mainTypeId: _this.props.item._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    };\n\n    _this.renderFormContent = function (_ref) {\n      var state = _ref.state,\n          copy = _ref.copy,\n          remove = _ref.remove,\n          saveItem = _ref.saveItem,\n          onChangeStage = _ref.onChangeStage;\n      var _this$props2 = _this.props,\n          item = _this$props2.item,\n          options = _this$props2.options,\n          onUpdate = _this$props2.onUpdate,\n          addItem = _this$props2.addItem,\n          sendToBoard = _this$props2.sendToBoard;\n      return React.createElement(React.Fragment, null, React.createElement(Top, {\n        options: options,\n        stageId: state.stageId,\n        item: item,\n        saveItem: saveItem,\n        onChangeStage: onChangeStage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(FlexContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Left, {\n        options: options,\n        saveItem: saveItem,\n        copyItem: copy,\n        removeItem: remove,\n        onUpdate: onUpdate,\n        sendToBoard: sendToBoard,\n        item: item,\n        addItem: addItem,\n        onChangeStage: onChangeStage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Sidebar, {\n        options: options,\n        item: item,\n        saveItem: saveItem,\n        renderItems: _this.renderItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })));\n    };\n\n    return _this;\n  }\n\n  _createClass(TaskEditForm, [{\n    key: \"render\",\n    value: function render() {\n      var extendedProps = _objectSpread({}, this.props, {\n        formContent: this.renderFormContent,\n        extraFields: this.state\n      });\n\n      return React.createElement(EditForm, Object.assign({}, extendedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TaskEditForm;\n}(React.Component);\n\nexport { TaskEditForm as default };","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/tasks/components/TaskEditForm.tsx"],"names":["EditForm","Left","Sidebar","Top","FlexContent","TaskTimer","STATUS_TYPES","PortableDeals","PortableTickets","React","TaskEditForm","renderItems","props","item","updateTimeTrack","timeTrack","timeSpent","status","STOPPED","_id","startDate","renderFormContent","state","copy","remove","saveItem","onChangeStage","options","onUpdate","addItem","sendToBoard","stageId","extendedProps","formContent","extraFields","Component"],"mappings":"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","sourcesContent":["import EditForm from 'modules/boards/components/editForm/EditForm';\nimport Left from 'modules/boards/components/editForm/Left';\nimport Sidebar from 'modules/boards/components/editForm/Sidebar';\nimport Top from 'modules/boards/components/editForm/Top';\nimport { FlexContent } from 'modules/boards/styles/item';\nimport {\n  IEditFormContent,\n  IItem,\n  IItemParams,\n  IOptions\n} from 'modules/boards/types';\nimport TaskTimer, { STATUS_TYPES } from 'modules/common/components/Timer';\nimport PortableDeals from 'modules/deals/components/PortableDeals';\nimport PortableTickets from 'modules/tickets/components/PortableTickets';\nimport React from 'react';\n\ntype Props = {\n  options: IOptions;\n  item: IItem;\n  addItem: (doc: IItemParams, callback: () => void, msg?: string) => void;\n  saveItem: (doc: IItemParams, callback?: (item) => void) => void;\n  copyItem: (itemId: string, callback: () => void) => void;\n  removeItem: (itemId: string, callback: () => void) => void;\n  onUpdate: (item: IItem, prevStageId?: string) => void;\n  updateTimeTrack: (\n    {\n      _id,\n      status,\n      timeSpent\n    }: { _id: string; status: string; timeSpent: number; startDate?: string },\n    callback?: () => void\n  ) => void;\n  beforePopupClose: () => void;\n  sendToBoard?: (item: any) => void;\n};\n\nexport default class TaskEditForm extends React.Component<Props> {\n  renderItems = () => {\n    const { item, updateTimeTrack } = this.props;\n\n    const timeTrack = item.timeTrack || {\n      timeSpent: 0,\n      status: STATUS_TYPES.STOPPED\n    };\n\n    return (\n      <>\n        <TaskTimer\n          taskId={item._id}\n          status={timeTrack.status}\n          timeSpent={timeTrack.timeSpent}\n          startDate={timeTrack.startDate}\n          update={updateTimeTrack}\n        />\n        <PortableDeals mainType=\"task\" mainTypeId={this.props.item._id} />\n        <PortableTickets mainType=\"task\" mainTypeId={this.props.item._id} />\n      </>\n    );\n  };\n\n  renderFormContent = ({\n    state,\n    copy,\n    remove,\n    saveItem,\n    onChangeStage\n  }: IEditFormContent) => {\n    const { item, options, onUpdate, addItem, sendToBoard } = this.props;\n\n    return (\n      <>\n        <Top\n          options={options}\n          stageId={state.stageId}\n          item={item}\n          saveItem={saveItem}\n          onChangeStage={onChangeStage}\n        />\n\n        <FlexContent>\n          <Left\n            options={options}\n            saveItem={saveItem}\n            copyItem={copy}\n            removeItem={remove}\n            onUpdate={onUpdate}\n            sendToBoard={sendToBoard}\n            item={item}\n            addItem={addItem}\n            onChangeStage={onChangeStage}\n          />\n\n          <Sidebar\n            options={options}\n            item={item}\n            saveItem={saveItem}\n            renderItems={this.renderItems}\n          />\n        </FlexContent>\n      </>\n    );\n  };\n\n  render() {\n    const extendedProps = {\n      ...this.props,\n      formContent: this.renderFormContent,\n      extraFields: this.state\n    };\n\n    return <EditForm {...extendedProps} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}