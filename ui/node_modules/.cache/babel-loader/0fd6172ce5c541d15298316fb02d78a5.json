{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/leads/components/step/OptionStep.tsx\";\nimport { COLORS } from 'modules/boards/constants';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { LeftItem, Preview } from 'modules/common/components/step/styles';\nimport Toggle from 'modules/common/components/Toggle';\nimport { __ } from 'modules/common/utils';\nimport FieldsPreview from 'modules/forms/components/FieldsPreview';\nimport SelectBrand from 'modules/settings/integrations/containers/SelectBrand';\nimport { ColorPick, ColorPicker, Description } from 'modules/settings/styles';\nimport React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport TwitterPicker from 'react-color/lib/Twitter';\nimport { FormPreview } from './preview';\nimport { BackgroundSelector, ColorList, FlexItem } from './style';\n\nvar OptionStep =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OptionStep, _React$Component);\n\n  function OptionStep() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OptionStep);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OptionStep)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChangeFunction = function (name, value) {\n      _this.props.onChange(name, value);\n    };\n\n    _this.onColorChange = function (e) {\n      _this.setState({\n        color: e.hex,\n        theme: '#000'\n      }, function () {\n        _this.props.onChange('color', e.hex);\n\n        _this.props.onChange('theme', e.hex);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(OptionStep, [{\n    key: \"renderThemeColor\",\n    value: function renderThemeColor(value) {\n      var _this2 = this;\n\n      var onClick = function onClick() {\n        return _this2.onChangeFunction('theme', value);\n      };\n\n      return React.createElement(BackgroundSelector, {\n        key: value,\n        selected: this.props.theme === value,\n        onClick: onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          backgroundColor: value\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          language = _this$props.language,\n          brand = _this$props.brand,\n          formData = _this$props.formData,\n          color = _this$props.color,\n          theme = _this$props.theme,\n          isRequireOnce = _this$props.isRequireOnce;\n      var fields = formData.fields,\n          desc = formData.desc;\n      var popoverTop = React.createElement(Popover, {\n        id: \"color-picker\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(TwitterPicker, {\n        width: \"266px\",\n        triangle: \"hide\",\n        colors: COLORS,\n        color: color,\n        onChange: this.onColorChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n\n      var onChange = function onChange(e) {\n        return _this3.onChangeFunction('brand', e.currentTarget.value);\n      };\n\n      var onChangeLanguage = function onChangeLanguage(e) {\n        return _this3.onChangeFunction('language', e.currentTarget.value);\n      };\n\n      var previewRenderer = function previewRenderer() {\n        return React.createElement(FieldsPreview, {\n          fields: fields || [],\n          formDesc: desc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        });\n      };\n\n      var onSwitchHandler = function onSwitchHandler(e) {\n        _this3.onChangeFunction('isRequireOnce', e.target.checked);\n      };\n\n      return React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(LeftItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(SelectBrand, {\n        isRequired: true,\n        onChange: onChange,\n        defaultValue: brand ? brand._id : ' ',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Language\"), React.createElement(FormControl, {\n        componentClass: \"select\",\n        defaultValue: language,\n        id: \"languageCode\",\n        onChange: onChangeLanguage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: \"mn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"\\u041C\\u043E\\u043D\\u0433\\u043E\\u043B\"), React.createElement(\"option\", {\n        value: \"en\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"English\"))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Submit once\"), React.createElement(Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Turn on to receive a submission from the visitor only once. Once a submission is received, the popup will not show.\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Toggle, {\n        checked: isRequireOnce || false,\n        onChange: onSwitchHandler,\n        icons: {\n          checked: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }, \"Yes\"),\n          unchecked: React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, \"No\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Theme color\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(OverlayTrigger, {\n        trigger: \"click\",\n        rootClose: true,\n        placement: \"bottom-start\",\n        overlay: popoverTop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(ColorPick, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(ColorPicker, {\n        style: {\n          backgroundColor: theme\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, __('Try some of these colors:')), React.createElement(ColorList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, COLORS.map(function (value) {\n        return _this3.renderThemeColor(value);\n      })))), React.createElement(Preview, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(FormPreview, Object.assign({}, this.props, {\n        title: formData.title,\n        btnText: formData.btnText,\n        previewRenderer: previewRenderer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return OptionStep;\n}(React.Component);\n\nexport default OptionStep;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/leads/components/step/OptionStep.tsx"],"names":["COLORS","FormControl","FormGroup","ControlLabel","LeftItem","Preview","Toggle","__","FieldsPreview","SelectBrand","ColorPick","ColorPicker","Description","React","OverlayTrigger","Popover","TwitterPicker","FormPreview","BackgroundSelector","ColorList","FlexItem","OptionStep","onChangeFunction","name","value","props","onChange","onColorChange","e","setState","color","hex","theme","onClick","backgroundColor","language","brand","formData","isRequireOnce","fields","desc","popoverTop","currentTarget","onChangeLanguage","previewRenderer","onSwitchHandler","target","checked","_id","unchecked","map","renderThemeColor","title","btnText","Component"],"mappings":"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","sourcesContent":["import { COLORS } from 'modules/boards/constants';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { LeftItem, Preview } from 'modules/common/components/step/styles';\nimport Toggle from 'modules/common/components/Toggle';\nimport { __ } from 'modules/common/utils';\nimport FieldsPreview from 'modules/forms/components/FieldsPreview';\nimport { IFormData } from 'modules/forms/types';\nimport SelectBrand from 'modules/settings/integrations/containers/SelectBrand';\nimport { IField } from 'modules/settings/properties/types';\nimport { ColorPick, ColorPicker, Description } from 'modules/settings/styles';\nimport React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport TwitterPicker from 'react-color/lib/Twitter';\nimport { IBrand } from '../../../settings/brands/types';\nimport { FormPreview } from './preview';\nimport { BackgroundSelector, ColorList, FlexItem } from './style';\n\ntype Props = {\n  type: string;\n  formData: IFormData;\n  color: string;\n  theme: string;\n  language?: string;\n  isRequireOnce?: boolean;\n  onChange: (\n    name: 'brand' | 'color' | 'theme' | 'language' | 'isRequireOnce',\n    value: string\n  ) => void;\n  fields?: IField[];\n  brand?: IBrand;\n  onFieldEdit?: () => void;\n};\n\nclass OptionStep extends React.Component<Props, {}> {\n  onChangeFunction = (name: any, value: string) => {\n    this.props.onChange(name, value);\n  };\n\n  onColorChange = e => {\n    this.setState({ color: e.hex, theme: '#000' }, () => {\n      this.props.onChange('color', e.hex);\n      this.props.onChange('theme', e.hex);\n    });\n  };\n\n  renderThemeColor(value: string) {\n    const onClick = () => this.onChangeFunction('theme', value);\n\n    return (\n      <BackgroundSelector\n        key={value}\n        selected={this.props.theme === value}\n        onClick={onClick}\n      >\n        <div style={{ backgroundColor: value }} />\n      </BackgroundSelector>\n    );\n  }\n\n  render() {\n    const {\n      language,\n      brand,\n      formData,\n      color,\n      theme,\n      isRequireOnce\n    } = this.props;\n    const { fields, desc } = formData;\n\n    const popoverTop = (\n      <Popover id=\"color-picker\">\n        <TwitterPicker\n          width=\"266px\"\n          triangle=\"hide\"\n          colors={COLORS}\n          color={color}\n          onChange={this.onColorChange}\n        />\n      </Popover>\n    );\n\n    const onChange = e =>\n      this.onChangeFunction(\n        'brand',\n        (e.currentTarget as HTMLInputElement).value\n      );\n\n    const onChangeLanguage = e =>\n      this.onChangeFunction(\n        'language',\n        (e.currentTarget as HTMLInputElement).value\n      );\n\n    const previewRenderer = () => (\n      <FieldsPreview fields={fields || []} formDesc={desc} />\n    );\n\n    const onSwitchHandler = e => {\n      this.onChangeFunction('isRequireOnce', e.target.checked);\n    };\n\n    return (\n      <FlexItem>\n        <LeftItem>\n          <FormGroup>\n            <SelectBrand\n              isRequired={true}\n              onChange={onChange}\n              defaultValue={brand ? brand._id : ' '}\n            />\n          </FormGroup>\n          <FormGroup>\n            <ControlLabel>Language</ControlLabel>\n            <FormControl\n              componentClass=\"select\"\n              defaultValue={language}\n              id=\"languageCode\"\n              onChange={onChangeLanguage}\n            >\n              <option />\n              <option value=\"mn\">Монгол</option>\n              <option value=\"en\">English</option>\n            </FormControl>\n          </FormGroup>\n\n          <FormGroup>\n            <ControlLabel>Submit once</ControlLabel>\n            <Description>\n              Turn on to receive a submission from the visitor only once. Once a\n              submission is received, the popup will not show.\n            </Description>\n            <div>\n              <Toggle\n                checked={isRequireOnce || false}\n                onChange={onSwitchHandler}\n                icons={{\n                  checked: <span>Yes</span>,\n                  unchecked: <span>No</span>\n                }}\n              />\n            </div>\n          </FormGroup>\n\n          <FormGroup>\n            <ControlLabel>Theme color</ControlLabel>\n            <div>\n              <OverlayTrigger\n                trigger=\"click\"\n                rootClose={true}\n                placement=\"bottom-start\"\n                overlay={popoverTop}\n              >\n                <ColorPick>\n                  <ColorPicker style={{ backgroundColor: theme }} />\n                </ColorPick>\n              </OverlayTrigger>\n            </div>\n            <br />\n            <p>{__('Try some of these colors:')}</p>\n            <ColorList>\n              {COLORS.map(value => this.renderThemeColor(value))}\n            </ColorList>\n          </FormGroup>\n        </LeftItem>\n\n        <Preview>\n          <FormPreview\n            {...this.props}\n            title={formData.title}\n            btnText={formData.btnText}\n            previewRenderer={previewRenderer}\n          />\n        </Preview>\n      </FlexItem>\n    );\n  }\n}\n\nexport default OptionStep;\n"]},"metadata":{},"sourceType":"module"}