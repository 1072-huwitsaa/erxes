{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/ConversationReport.tsx\";\nimport { __ } from 'modules/common/utils';\nimport { menuInbox } from 'modules/common/utils/menus';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport React from 'react';\nimport { InsightContent, InsightRow, InsightTitle, InsightWrapper } from '../styles';\nimport Chart from './Chart';\nimport InboxFilter from './filter/InboxFilter';\nimport Sidebar from './Sidebar';\nimport Summary from './Summary';\nimport TeamMembers from './TeamMembers';\n\nvar ConversationReport =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConversationReport, _React$Component);\n\n  function ConversationReport(props) {\n    var _this;\n\n    _classCallCheck(this, ConversationReport);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConversationReport).call(this, props));\n    _this.state = {\n      userId: ''\n    };\n    return _this;\n  }\n\n  _createClass(ConversationReport, [{\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _Array$prototype;\n\n      var _this$props = this.props,\n          brands = _this$props.brands,\n          history = _this$props.history,\n          queryParams = _this$props.queryParams,\n          conversationCustomerAvg = _this$props.conversationCustomerAvg,\n          conversationInternalAvg = _this$props.conversationInternalAvg,\n          conversationOverallAvg = _this$props.conversationOverallAvg,\n          conversationReport = _this$props.conversationReport,\n          loading = _this$props.loading;\n\n      var combinedData = (_Array$prototype = Array.prototype).concat.apply(_Array$prototype, [conversationReport.avg, conversationCustomerAvg, conversationInternalAvg, conversationOverallAvg]);\n\n      return React.createElement(InsightWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(InboxFilter, {\n        history: history,\n        brands: brands,\n        queryParams: queryParams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(InsightContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(InsightRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(InsightTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, __('response frequency averages')), React.createElement(Summary, {\n        type: \"conversation-report\",\n        data: combinedData,\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(InsightRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(InsightTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, __('Trend')), React.createElement(Chart, {\n        type: \"conversation-report\",\n        loading: loading,\n        height: 300,\n        data: conversationReport.trend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(InsightRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(InsightTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, __('Team Member')), React.createElement(TeamMembers, {\n        type: \"conversation-report\",\n        loading: loading,\n        datas: conversationReport.teamMembers || [],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          title: __('First Response Report'),\n          submenu: menuInbox,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }),\n        leftSidebar: React.createElement(Sidebar, {\n          queryParams: this.props.queryParams,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }),\n        content: this.renderContent(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ConversationReport;\n}(React.Component);\n\nexport default ConversationReport;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/ConversationReport.tsx"],"names":["__","menuInbox","Wrapper","React","InsightContent","InsightRow","InsightTitle","InsightWrapper","Chart","InboxFilter","Sidebar","Summary","TeamMembers","ConversationReport","props","state","userId","brands","history","queryParams","conversationCustomerAvg","conversationInternalAvg","conversationOverallAvg","conversationReport","loading","combinedData","Array","prototype","concat","avg","trend","teamMembers","renderContent","Component"],"mappings":"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","sourcesContent":["import { __ } from 'modules/common/utils';\nimport { menuInbox } from 'modules/common/utils/menus';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport React from 'react';\nimport { IBrand } from '../../settings/brands/types';\nimport {\n  InsightContent,\n  InsightRow,\n  InsightTitle,\n  InsightWrapper\n} from '../styles';\nimport { IChartParams, IQueryParams, SummaryData } from '../types';\nimport Chart from './Chart';\nimport InboxFilter from './filter/InboxFilter';\nimport Sidebar from './Sidebar';\nimport Summary from './Summary';\nimport TeamMembers from './TeamMembers';\n\ntype Props = {\n  brands: IBrand[];\n  queryParams: IQueryParams;\n  history: any;\n  conversationCustomerAvg: SummaryData[];\n  conversationInternalAvg: SummaryData[];\n  conversationOverallAvg: SummaryData[];\n  conversationReport: {\n    avg: SummaryData[];\n    trend: IChartParams[];\n    teamMembers: IChartParams[];\n  };\n  loading: boolean;\n};\n\nclass ConversationReport extends React.Component<Props, { userId: string }> {\n  constructor(props) {\n    super(props);\n\n    this.state = { userId: '' };\n  }\n\n  renderContent() {\n    const {\n      brands,\n      history,\n      queryParams,\n      conversationCustomerAvg,\n      conversationInternalAvg,\n      conversationOverallAvg,\n      conversationReport,\n      loading\n    } = this.props;\n\n    const combinedData = Array.prototype.concat(\n      ...[\n        conversationReport.avg,\n        conversationCustomerAvg,\n        conversationInternalAvg,\n        conversationOverallAvg\n      ]\n    );\n\n    return (\n      <InsightWrapper>\n        <InboxFilter\n          history={history}\n          brands={brands}\n          queryParams={queryParams}\n        />\n        <InsightContent>\n          <InsightRow>\n            <InsightTitle>{__('response frequency averages')}</InsightTitle>\n            <Summary\n              type=\"conversation-report\"\n              data={combinedData}\n              loading={loading}\n            />\n          </InsightRow>\n\n          <InsightRow>\n            <InsightTitle>{__('Trend')}</InsightTitle>\n            <Chart\n              type=\"conversation-report\"\n              loading={loading}\n              height={300}\n              data={conversationReport.trend}\n            />\n          </InsightRow>\n\n          <InsightRow>\n            <InsightTitle>{__('Team Member')}</InsightTitle>\n            <TeamMembers\n              type=\"conversation-report\"\n              loading={loading}\n              datas={conversationReport.teamMembers || []}\n            />\n          </InsightRow>\n        </InsightContent>\n      </InsightWrapper>\n    );\n  }\n\n  render() {\n    return (\n      <Wrapper\n        header={\n          <Wrapper.Header\n            title={__('First Response Report')}\n            submenu={menuInbox}\n          />\n        }\n        leftSidebar={<Sidebar queryParams={this.props.queryParams} />}\n        content={this.renderContent()}\n      />\n    );\n  }\n}\n\nexport default ConversationReport;\n"]},"metadata":{},"sourceType":"module"}