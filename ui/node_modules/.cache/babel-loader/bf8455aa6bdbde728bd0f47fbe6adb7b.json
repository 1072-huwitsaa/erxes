{"ast":null,"code":"import _toConsumableArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/RespondBox.tsx\";\nimport asyncComponent from 'modules/common/components/AsyncComponent';\nimport Button from 'modules/common/components/Button';\nimport { SmallLoader } from 'modules/common/components/ButtonMutate';\nimport FormControl from 'modules/common/components/form/Control';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport NameCard from 'modules/common/components/nameCard/NameCard';\nimport Tip from 'modules/common/components/Tip';\nimport { __, Alert, readFile, uploadHandler } from 'modules/common/utils';\nimport { deleteHandler } from 'modules/common/utils/uploadHandler';\nimport ResponseTemplate from 'modules/inbox/containers/conversationDetail/responseTemplate/ResponseTemplate';\nimport ProductBoard from 'modules/inbox/containers/ProductBoard';\nimport { Attachment, AttachmentIndicator, AttachmentThumb, EditorActions, FileName, MailRespondBox, Mask, MaskWrapper, PreviewImg, RespondBoxStyled, SmallEditor } from 'modules/inbox/styles';\nimport ManageVideoRoom from 'modules/videoCall/containers/ManageRoom';\nimport React from 'react';\nvar Editor = asyncComponent(function () {\n  return import(\n  /* webpackChunkName: \"Editor-in-Inbox\" */\n  './Editor');\n}, {\n  height: '137px',\n  width: '100%',\n  color: '#fff'\n});\n\nvar RespondBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RespondBox, _React$Component);\n\n  function RespondBox(props) {\n    var _this;\n\n    _classCallCheck(this, RespondBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RespondBox).call(this, props));\n\n    _this.getUnsendMessage = function (id) {\n      return localStorage.getItem(id) || '';\n    };\n\n    _this.onEditorContentChange = function (content) {\n      _this.setState({\n        content: content\n      });\n\n      if (_this.isContentWritten()) {\n        localStorage.setItem(_this.props.conversation._id, content);\n      }\n    };\n\n    _this.onAddMention = function (mentionedUserIds) {\n      _this.setState({\n        mentionedUserIds: mentionedUserIds\n      });\n    };\n\n    _this.onSearchChange = function (value) {\n      _this.props.onSearchChange(value);\n    };\n\n    _this.hideMask = function () {\n      _this.setState({\n        isInactive: false\n      });\n\n      var element = document.querySelector('.DraftEditor-root');\n\n      if (!element) {\n        return;\n      }\n\n      element.click();\n    };\n\n    _this.onSend = function (e) {\n      e.preventDefault();\n\n      _this.addMessage(); // redrawing editor after send button, so editor content will be reseted\n\n\n      _this.setState({\n        editorKey: \"\".concat(_this.state.editorKey, \"Key\")\n      });\n    };\n\n    _this.onSelectTemplate = function (responseTemplate) {\n      if (!responseTemplate) {\n        return null;\n      }\n\n      return _this.setState({\n        responseTemplate: responseTemplate.content,\n        // set attachment from response template files\n        attachments: responseTemplate.files || []\n      });\n    };\n\n    _this.handleDeleteFile = function (url) {\n      var urlArray = url.split('/'); // checking whether url is full path or just file name\n\n      var fileName = urlArray.length === 1 ? url : urlArray[urlArray.length - 1];\n      var loading = _this.state.loading;\n      loading[url] = true;\n\n      _this.setState({\n        loading: loading\n      });\n\n      deleteHandler({\n        fileName: fileName,\n        afterUpload: function afterUpload(_ref) {\n          var status = _ref.status;\n\n          if (status === 'ok') {\n            var remainedAttachments = _this.state.attachments.filter(function (a) {\n              return a.url !== url;\n            });\n\n            _this.setState({\n              attachments: remainedAttachments\n            });\n\n            Alert.success('You successfully deleted a file');\n          } else {\n            Alert.error(status);\n          }\n\n          loading = _this.state.loading;\n          delete loading[url];\n\n          _this.setState({\n            loading: loading\n          });\n        }\n      });\n    };\n\n    _this.handleFileInput = function (e) {\n      var files = e.currentTarget.files;\n      var setAttachmentPreview = _this.props.setAttachmentPreview;\n      uploadHandler({\n        files: files,\n        beforeUpload: function beforeUpload() {\n          return;\n        },\n        afterUpload: function afterUpload(_ref2) {\n          var response = _ref2.response,\n              fileInfo = _ref2.fileInfo;\n\n          // set attachments\n          _this.setState({\n            attachments: [].concat(_toConsumableArray(_this.state.attachments), [Object.assign({\n              url: response\n            }, fileInfo)])\n          }); // remove preview\n\n\n          if (setAttachmentPreview) {\n            setAttachmentPreview(null);\n          }\n        },\n        afterRead: function afterRead(_ref3) {\n          var result = _ref3.result,\n              fileInfo = _ref3.fileInfo;\n\n          if (setAttachmentPreview) {\n            setAttachmentPreview(Object.assign({\n              data: result\n            }, fileInfo));\n          }\n        }\n      });\n    };\n\n    _this.addMessage = function () {\n      var _this$props = _this.props,\n          conversation = _this$props.conversation,\n          sendMessage = _this$props.sendMessage;\n      var _this$state = _this.state,\n          isInternal = _this$state.isInternal,\n          attachments = _this$state.attachments,\n          content = _this$state.content,\n          mentionedUserIds = _this$state.mentionedUserIds;\n      var message = {\n        conversationId: conversation._id,\n        content: _this.cleanText(content) || ' ',\n        contentType: 'text',\n        internal: isInternal,\n        attachments: attachments,\n        mentionedUserIds: mentionedUserIds\n      };\n\n      if (_this.state.content && !_this.state.sending) {\n        _this.setState({\n          sending: true\n        });\n\n        sendMessage(message, function (error) {\n          if (error) {\n            return Alert.error(error.message);\n          }\n\n          localStorage.removeItem(_this.props.conversation._id); // clear attachments, content, mentioned user ids\n\n          return _this.setState({\n            attachments: [],\n            content: '',\n            sending: false,\n            mentionedUserIds: []\n          });\n        });\n      }\n    };\n\n    _this.toggleForm = function () {\n      _this.setState({\n        isInternal: !_this.state.isInternal\n      });\n    };\n\n    _this.state = {\n      isInactive: !_this.checkIsActive(props.conversation),\n      editorKey: 'editor',\n      isInternal: props.showInternal || false,\n      sending: false,\n      attachments: [],\n      responseTemplate: '',\n      content: '',\n      mentionedUserIds: [],\n      loading: {}\n    };\n    return _this;\n  }\n\n  _createClass(RespondBox, [{\n    key: \"isContentWritten\",\n    value: function isContentWritten() {\n      var content = this.state.content; // draftjs empty content\n\n      if (content === '<p><br></p>' || content === '') {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$state2 = this.state,\n          sending = _this$state2.sending,\n          content = _this$state2.content,\n          responseTemplate = _this$state2.responseTemplate;\n\n      if (responseTemplate && responseTemplate === prevState.responseTemplate) {\n        this.setState({\n          responseTemplate: ''\n        });\n      }\n\n      if (sending && content !== prevState.content) {\n        this.setState({\n          sending: false\n        });\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.conversation.customer !== nextProps.conversation.customer) {\n        this.setState({\n          isInactive: !this.checkIsActive(nextProps.conversation)\n        });\n      }\n\n      if (this.props.showInternal !== nextProps.showInternal) {\n        this.setState({\n          isInternal: nextProps.showInternal\n        });\n      }\n    }\n  }, {\n    key: \"checkIsActive\",\n    value: function checkIsActive(conversation) {\n      return conversation.integration.kind !== 'messenger' || conversation.customer && conversation.customer.isOnline;\n    }\n  }, {\n    key: \"cleanText\",\n    value: function cleanText(text) {\n      return text.replace(/&nbsp;/g, ' ');\n    }\n  }, {\n    key: \"renderIndicator\",\n    value: function renderIndicator() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          attachments = _this$state3.attachments,\n          loading = _this$state3.loading;\n\n      if (attachments.length > 0) {\n        return React.createElement(AttachmentIndicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, attachments.map(function (attachment) {\n          return React.createElement(Attachment, {\n            key: attachment.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 305\n            },\n            __self: this\n          }, React.createElement(AttachmentThumb, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 306\n            },\n            __self: this\n          }, attachment.type.startsWith('image') && React.createElement(PreviewImg, {\n            style: {\n              backgroundImage: \"url(\".concat(readFile(attachment.url), \")\")\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 308\n            },\n            __self: this\n          })), React.createElement(FileName, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 315\n            },\n            __self: this\n          }, attachment.name), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 316\n            },\n            __self: this\n          }, \"(\", Math.round(attachment.size / 1000), \"kB)\"), loading[attachment.url] ? React.createElement(SmallLoader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 321\n            },\n            __self: this\n          }) : React.createElement(Icon, {\n            icon: \"times\",\n            onClick: _this2.handleDeleteFile.bind(_this2, attachment.url),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 323\n            },\n            __self: this\n          }));\n        }));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderMask\",\n    value: function renderMask() {\n      if (this.state.isInactive) {\n        return React.createElement(Mask, {\n          id: \"mask\",\n          onClick: this.hideMask,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }, __('Customer is offline Click to hide and send messages and they will receive them the next time they are online'));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderEditor\",\n    value: function renderEditor() {\n      var _this$state4 = this.state,\n          isInternal = _this$state4.isInternal,\n          responseTemplate = _this$state4.responseTemplate;\n      var _this$props2 = this.props,\n          responseTemplates = _this$props2.responseTemplates,\n          conversation = _this$props2.conversation;\n      var type = 'message';\n\n      if (isInternal) {\n        type = 'note';\n      }\n\n      var placeholder = __(\"To send your \".concat(type, \" press Enter and Shift + Enter to add a new line\"));\n\n      return React.createElement(Editor, {\n        currentConversation: conversation._id,\n        defaultContent: this.getUnsendMessage(conversation._id),\n        key: this.state.editorKey,\n        onChange: this.onEditorContentChange,\n        onAddMention: this.onAddMention,\n        onAddMessage: this.addMessage,\n        onSearchChange: this.onSearchChange,\n        placeholder: placeholder,\n        mentions: this.props.teamMembers,\n        showMentions: isInternal,\n        responseTemplate: responseTemplate,\n        responseTemplates: responseTemplates,\n        handleFileInput: this.handleFileInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderCheckbox\",\n    value: function renderCheckbox(kind) {\n      var isInternal = this.state.isInternal;\n\n      if (kind.includes('nylas') || kind === 'gmail') {\n        return null;\n      }\n\n      return React.createElement(FormControl, {\n        id: \"conversationInternalNote\",\n        className: \"toggle-message\",\n        componentClass: \"checkbox\",\n        checked: isInternal,\n        onChange: this.toggleForm,\n        disabled: this.props.showInternal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, __('Internal note'));\n    }\n  }, {\n    key: \"renderVideoRoom\",\n    value: function renderVideoRoom() {\n      var _this$props3 = this.props,\n          conversation = _this$props3.conversation,\n          refetchMessages = _this$props3.refetchMessages,\n          refetchDetail = _this$props3.refetchDetail;\n      var integration = conversation.integration || {};\n\n      if (this.state.isInternal || integration.kind !== 'messenger') {\n        return null;\n      }\n\n      return React.createElement(ManageVideoRoom, {\n        refetchMessages: refetchMessages,\n        refetchDetail: refetchDetail,\n        conversationId: conversation._id,\n        activeVideo: conversation.videoCallData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderButtons\",\n    value: function renderButtons() {\n      var conversation = this.props.conversation;\n      var integration = conversation.integration || {};\n      var disabled = integration.kind.includes('nylas') || integration.kind === 'gmail';\n      return React.createElement(EditorActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, this.renderCheckbox(integration.kind), React.createElement(ProductBoard, {\n        conversation: conversation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }), this.renderVideoRoom(), React.createElement(Tip, {\n        text: __('Attach file'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"paperclip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleFileInput,\n        multiple: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }))), React.createElement(ResponseTemplate, {\n        brandId: integration.brandId,\n        attachments: this.state.attachments,\n        content: this.state.content,\n        onSelect: this.onSelectTemplate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.onSend,\n        btnStyle: \"success\",\n        size: \"small\",\n        icon: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, !disabled && 'Send'));\n    }\n  }, {\n    key: \"renderBody\",\n    value: function renderBody() {\n      return React.createElement(React.Fragment, null, this.renderEditor(), this.renderIndicator(), this.renderButtons());\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var isInternal = this.state.isInternal;\n      return React.createElement(MaskWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, this.renderMask(), React.createElement(RespondBoxStyled, {\n        isInternal: isInternal,\n        isInactive: this.state.isInactive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, this.renderBody()));\n    }\n  }, {\n    key: \"renderMailRespondBox\",\n    value: function renderMailRespondBox() {\n      var currentUser = this.props.currentUser;\n      return React.createElement(MailRespondBox, {\n        isInternal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, React.createElement(NameCard.Avatar, {\n        user: currentUser,\n        size: 34,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }), React.createElement(SmallEditor, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, this.renderBody()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var conversation = this.props.conversation;\n      var integration = conversation.integration || {};\n      var kind = integration.kind;\n      var isMail = kind.includes('nylas') || kind === 'gmail';\n\n      if (isMail) {\n        return this.renderMailRespondBox();\n      }\n\n      return this.renderContent();\n    }\n  }]);\n\n  return RespondBox;\n}(React.Component);\n\nexport default RespondBox;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/inbox/components/conversationDetail/workarea/RespondBox.tsx"],"names":["asyncComponent","Button","SmallLoader","FormControl","Icon","NameCard","Tip","__","Alert","readFile","uploadHandler","deleteHandler","ResponseTemplate","ProductBoard","Attachment","AttachmentIndicator","AttachmentThumb","EditorActions","FileName","MailRespondBox","Mask","MaskWrapper","PreviewImg","RespondBoxStyled","SmallEditor","ManageVideoRoom","React","Editor","height","width","color","RespondBox","props","getUnsendMessage","id","localStorage","getItem","onEditorContentChange","content","setState","isContentWritten","setItem","conversation","_id","onAddMention","mentionedUserIds","onSearchChange","value","hideMask","isInactive","element","document","querySelector","click","onSend","e","preventDefault","addMessage","editorKey","state","onSelectTemplate","responseTemplate","attachments","files","handleDeleteFile","url","urlArray","split","fileName","length","loading","afterUpload","status","remainedAttachments","filter","a","success","error","handleFileInput","currentTarget","setAttachmentPreview","beforeUpload","response","fileInfo","Object","assign","afterRead","result","data","sendMessage","isInternal","message","conversationId","cleanText","contentType","internal","sending","removeItem","toggleForm","checkIsActive","showInternal","prevProps","prevState","nextProps","customer","integration","kind","isOnline","text","replace","map","attachment","name","type","startsWith","backgroundImage","Math","round","size","bind","responseTemplates","placeholder","teamMembers","includes","refetchMessages","refetchDetail","videoCallData","disabled","renderCheckbox","renderVideoRoom","brandId","renderEditor","renderIndicator","renderButtons","renderMask","renderBody","currentUser","isMail","renderMailRespondBox","renderContent","Component"],"mappings":"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","sourcesContent":["import asyncComponent from 'modules/common/components/AsyncComponent';\nimport Button from 'modules/common/components/Button';\nimport { SmallLoader } from 'modules/common/components/ButtonMutate';\nimport FormControl from 'modules/common/components/form/Control';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport NameCard from 'modules/common/components/nameCard/NameCard';\nimport Tip from 'modules/common/components/Tip';\nimport { IAttachmentPreview } from 'modules/common/types';\nimport { __, Alert, readFile, uploadHandler } from 'modules/common/utils';\nimport { deleteHandler } from 'modules/common/utils/uploadHandler';\nimport ResponseTemplate from 'modules/inbox/containers/conversationDetail/responseTemplate/ResponseTemplate';\nimport ProductBoard from 'modules/inbox/containers/ProductBoard';\nimport {\n  Attachment,\n  AttachmentIndicator,\n  AttachmentThumb,\n  EditorActions,\n  FileName,\n  MailRespondBox,\n  Mask,\n  MaskWrapper,\n  PreviewImg,\n  RespondBoxStyled,\n  SmallEditor\n} from 'modules/inbox/styles';\nimport ManageVideoRoom from 'modules/videoCall/containers/ManageRoom';\nimport React from 'react';\nimport { IUser } from '../../../../auth/types';\nimport { IIntegration } from '../../../../settings/integrations/types';\nimport { IResponseTemplate } from '../../../../settings/responseTemplates/types';\nimport { AddMessageMutationVariables, IConversation } from '../../../types';\n\nconst Editor = asyncComponent(\n  () => import(/* webpackChunkName: \"Editor-in-Inbox\" */ './Editor'),\n  {\n    height: '137px',\n    width: '100%',\n    color: '#fff'\n  }\n);\n\ntype Props = {\n  conversation: IConversation;\n  currentUser: IUser;\n  sendMessage: (\n    message: AddMessageMutationVariables,\n    callback: (error: Error) => void\n  ) => void;\n  onSearchChange: (value: string) => void;\n  showInternal: boolean;\n  setAttachmentPreview?: (data: IAttachmentPreview) => void;\n  responseTemplates: IResponseTemplate[];\n  teamMembers: IUser[];\n  refetchMessages: () => void;\n  refetchDetail: () => void;\n};\n\ntype State = {\n  isInactive: boolean;\n  isInternal: boolean;\n  sending: boolean;\n  attachments: any[];\n  responseTemplate: string;\n  content: string;\n  mentionedUserIds: string[];\n  editorKey: string;\n  loading: object;\n};\n\nclass RespondBox extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isInactive: !this.checkIsActive(props.conversation),\n      editorKey: 'editor',\n      isInternal: props.showInternal || false,\n      sending: false,\n      attachments: [],\n      responseTemplate: '',\n      content: '',\n      mentionedUserIds: [],\n      loading: {}\n    };\n  }\n\n  isContentWritten() {\n    const { content } = this.state;\n\n    // draftjs empty content\n    if (content === '<p><br></p>' || content === '') {\n      return false;\n    }\n\n    return true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { sending, content, responseTemplate } = this.state;\n\n    if (responseTemplate && responseTemplate === prevState.responseTemplate) {\n      this.setState({ responseTemplate: '' });\n    }\n\n    if (sending && content !== prevState.content) {\n      this.setState({ sending: false });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.conversation.customer !== nextProps.conversation.customer) {\n      this.setState({\n        isInactive: !this.checkIsActive(nextProps.conversation)\n      });\n    }\n\n    if (this.props.showInternal !== nextProps.showInternal) {\n      this.setState({\n        isInternal: nextProps.showInternal\n      });\n    }\n  }\n\n  getUnsendMessage = (id: string) => {\n    return localStorage.getItem(id) || '';\n  };\n\n  // save editor current content to state\n  onEditorContentChange = (content: string) => {\n    this.setState({ content });\n\n    if (this.isContentWritten()) {\n      localStorage.setItem(this.props.conversation._id, content);\n    }\n  };\n\n  // save mentioned user to state\n  onAddMention = (mentionedUserIds: string[]) => {\n    this.setState({ mentionedUserIds });\n  };\n\n  onSearchChange = (value: string) => {\n    this.props.onSearchChange(value);\n  };\n\n  checkIsActive(conversation: IConversation) {\n    return (\n      conversation.integration.kind !== 'messenger' ||\n      (conversation.customer && conversation.customer.isOnline)\n    );\n  }\n\n  hideMask = () => {\n    this.setState({ isInactive: false });\n\n    const element = document.querySelector('.DraftEditor-root') as HTMLElement;\n\n    if (!element) {\n      return;\n    }\n\n    element.click();\n  };\n\n  onSend = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    this.addMessage();\n\n    // redrawing editor after send button, so editor content will be reseted\n    this.setState({ editorKey: `${this.state.editorKey}Key` });\n  };\n\n  onSelectTemplate = (responseTemplate?: IResponseTemplate) => {\n    if (!responseTemplate) {\n      return null;\n    }\n\n    return this.setState({\n      responseTemplate: responseTemplate.content,\n\n      // set attachment from response template files\n      attachments: responseTemplate.files || []\n    });\n  };\n\n  handleDeleteFile = (url: string) => {\n    const urlArray = url.split('/');\n\n    // checking whether url is full path or just file name\n    const fileName =\n      urlArray.length === 1 ? url : urlArray[urlArray.length - 1];\n\n    let loading = this.state.loading;\n    loading[url] = true;\n\n    this.setState({ loading });\n\n    deleteHandler({\n      fileName,\n      afterUpload: ({ status }) => {\n        if (status === 'ok') {\n          const remainedAttachments = this.state.attachments.filter(\n            a => a.url !== url\n          );\n\n          this.setState({ attachments: remainedAttachments });\n\n          Alert.success('You successfully deleted a file');\n        } else {\n          Alert.error(status);\n        }\n\n        loading = this.state.loading;\n        delete loading[url];\n\n        this.setState({ loading });\n      }\n    });\n  };\n\n  handleFileInput = (e: React.FormEvent<HTMLInputElement>) => {\n    const files = e.currentTarget.files;\n    const { setAttachmentPreview } = this.props;\n\n    uploadHandler({\n      files,\n      beforeUpload: () => {\n        return;\n      },\n\n      afterUpload: ({ response, fileInfo }) => {\n        // set attachments\n        this.setState({\n          attachments: [\n            ...this.state.attachments,\n            Object.assign({ url: response }, fileInfo)\n          ]\n        });\n        // remove preview\n        if (setAttachmentPreview) {\n          setAttachmentPreview(null);\n        }\n      },\n\n      afterRead: ({ result, fileInfo }) => {\n        if (setAttachmentPreview) {\n          setAttachmentPreview(Object.assign({ data: result }, fileInfo));\n        }\n      }\n    });\n  };\n\n  cleanText(text: string) {\n    return text.replace(/&nbsp;/g, ' ');\n  }\n\n  addMessage = () => {\n    const { conversation, sendMessage } = this.props;\n    const { isInternal, attachments, content, mentionedUserIds } = this.state;\n\n    const message = {\n      conversationId: conversation._id,\n      content: this.cleanText(content) || ' ',\n      contentType: 'text',\n      internal: isInternal,\n      attachments,\n      mentionedUserIds\n    };\n\n    if (this.state.content && !this.state.sending) {\n      this.setState({ sending: true });\n\n      sendMessage(message, error => {\n        if (error) {\n          return Alert.error(error.message);\n        }\n\n        localStorage.removeItem(this.props.conversation._id);\n\n        // clear attachments, content, mentioned user ids\n        return this.setState({\n          attachments: [],\n          content: '',\n          sending: false,\n          mentionedUserIds: []\n        });\n      });\n    }\n  };\n\n  toggleForm = () => {\n    this.setState({\n      isInternal: !this.state.isInternal\n    });\n  };\n\n  renderIndicator() {\n    const { attachments, loading } = this.state;\n\n    if (attachments.length > 0) {\n      return (\n        <AttachmentIndicator>\n          {attachments.map(attachment => (\n            <Attachment key={attachment.name}>\n              <AttachmentThumb>\n                {attachment.type.startsWith('image') && (\n                  <PreviewImg\n                    style={{\n                      backgroundImage: `url(${readFile(attachment.url)})`\n                    }}\n                  />\n                )}\n              </AttachmentThumb>\n              <FileName>{attachment.name}</FileName>\n              <div>\n                ({Math.round(attachment.size / 1000)}\n                kB)\n              </div>\n              {loading[attachment.url] ? (\n                <SmallLoader />\n              ) : (\n                <Icon\n                  icon=\"times\"\n                  onClick={this.handleDeleteFile.bind(this, attachment.url)}\n                />\n              )}\n            </Attachment>\n          ))}\n        </AttachmentIndicator>\n      );\n    }\n\n    return null;\n  }\n\n  renderMask() {\n    if (this.state.isInactive) {\n      return (\n        <Mask id=\"mask\" onClick={this.hideMask}>\n          {__(\n            'Customer is offline Click to hide and send messages and they will receive them the next time they are online'\n          )}\n        </Mask>\n      );\n    }\n\n    return null;\n  }\n\n  renderEditor() {\n    const { isInternal, responseTemplate } = this.state;\n    const { responseTemplates, conversation } = this.props;\n\n    let type = 'message';\n\n    if (isInternal) {\n      type = 'note';\n    }\n\n    const placeholder = __(\n      `To send your ${type} press Enter and Shift + Enter to add a new line`\n    );\n\n    return (\n      <Editor\n        currentConversation={conversation._id}\n        defaultContent={this.getUnsendMessage(conversation._id)}\n        key={this.state.editorKey}\n        onChange={this.onEditorContentChange}\n        onAddMention={this.onAddMention}\n        onAddMessage={this.addMessage}\n        onSearchChange={this.onSearchChange}\n        placeholder={placeholder}\n        mentions={this.props.teamMembers}\n        showMentions={isInternal}\n        responseTemplate={responseTemplate}\n        responseTemplates={responseTemplates}\n        handleFileInput={this.handleFileInput}\n      />\n    );\n  }\n\n  renderCheckbox(kind: string) {\n    const { isInternal } = this.state;\n\n    if (kind.includes('nylas') || kind === 'gmail') {\n      return null;\n    }\n\n    return (\n      <FormControl\n        id=\"conversationInternalNote\"\n        className=\"toggle-message\"\n        componentClass=\"checkbox\"\n        checked={isInternal}\n        onChange={this.toggleForm}\n        disabled={this.props.showInternal}\n      >\n        {__('Internal note')}\n      </FormControl>\n    );\n  }\n\n  renderVideoRoom() {\n    const { conversation, refetchMessages, refetchDetail } = this.props;\n    const integration = conversation.integration || ({} as IIntegration);\n\n    if (this.state.isInternal || integration.kind !== 'messenger') {\n      return null;\n    }\n\n    return (\n      <ManageVideoRoom\n        refetchMessages={refetchMessages}\n        refetchDetail={refetchDetail}\n        conversationId={conversation._id}\n        activeVideo={conversation.videoCallData}\n      />\n    );\n  }\n\n  renderButtons() {\n    const { conversation } = this.props;\n    const integration = conversation.integration || ({} as IIntegration);\n    const disabled =\n      integration.kind.includes('nylas') || integration.kind === 'gmail';\n\n    return (\n      <EditorActions>\n        {this.renderCheckbox(integration.kind)}\n\n        <ProductBoard conversation={conversation} />\n\n        {this.renderVideoRoom()}\n\n        <Tip text={__('Attach file')}>\n          <label>\n            <Icon icon=\"paperclip\" />\n            <input\n              type=\"file\"\n              onChange={this.handleFileInput}\n              multiple={true}\n            />\n          </label>\n        </Tip>\n\n        <ResponseTemplate\n          brandId={integration.brandId}\n          attachments={this.state.attachments}\n          content={this.state.content}\n          onSelect={this.onSelectTemplate}\n        />\n\n        <Button\n          onClick={this.onSend}\n          btnStyle=\"success\"\n          size=\"small\"\n          icon=\"message\"\n        >\n          {!disabled && 'Send'}\n        </Button>\n      </EditorActions>\n    );\n  }\n\n  renderBody() {\n    return (\n      <>\n        {this.renderEditor()}\n        {this.renderIndicator()}\n        {this.renderButtons()}\n      </>\n    );\n  }\n\n  renderContent() {\n    const { isInternal } = this.state;\n\n    return (\n      <MaskWrapper>\n        {this.renderMask()}\n        <RespondBoxStyled\n          isInternal={isInternal}\n          isInactive={this.state.isInactive}\n        >\n          {this.renderBody()}\n        </RespondBoxStyled>\n      </MaskWrapper>\n    );\n  }\n\n  renderMailRespondBox() {\n    const { currentUser } = this.props;\n\n    return (\n      <MailRespondBox isInternal={true}>\n        <NameCard.Avatar user={currentUser} size={34} />\n        <SmallEditor>{this.renderBody()}</SmallEditor>\n      </MailRespondBox>\n    );\n  }\n\n  render() {\n    const { conversation } = this.props;\n\n    const integration = conversation.integration || ({} as IIntegration);\n    const { kind } = integration;\n\n    const isMail = kind.includes('nylas') || kind === 'gmail';\n\n    if (isMail) {\n      return this.renderMailRespondBox();\n    }\n\n    return this.renderContent();\n  }\n}\n\nexport default RespondBox;\n"]},"metadata":{},"sourceType":"module"}