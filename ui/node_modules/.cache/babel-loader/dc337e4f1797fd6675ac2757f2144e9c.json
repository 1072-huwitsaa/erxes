{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/components/SmsForm.tsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  font-weight: bold;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport EmptyState from 'modules/common/components/EmptyState';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { FlexItem, FlexPad } from 'modules/common/components/step/styles';\nimport colors from 'modules/common/styles/colors';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport Select from 'react-select-plus';\nimport styled from 'styled-components';\nimport styledTS from 'styled-components-ts';\nimport Scheduler from './Scheduler';\nimport SmsPreview from './SmsPreview';\nvar SMSInfo = styled.div(_templateObject());\nvar Char = styledTS(styled.div)(_templateObject2(), function (props) {\n  return props.count > 10 ? props.count < 30 && colors.colorCoreOrange : colors.colorCoreRed;\n});\n\nvar MessengerForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MessengerForm, _React$Component);\n\n  function MessengerForm(props) {\n    var _this;\n\n    _classCallCheck(this, MessengerForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessengerForm).call(this, props));\n\n    _this.onChangeSms = function (key, value) {\n      var shortMessage = _objectSpread({}, _this.props.shortMessage);\n\n      shortMessage[key] = value;\n\n      _this.props.onChange('shortMessage', shortMessage);\n    };\n\n    _this.fromSelectOptions = function () {\n      var integrations = _this.props.integrations;\n      var options = [];\n      integrations.map(function (i) {\n        return options.push({\n          value: i._id,\n          label: i.name,\n          phoneNumber: i.phoneNumber,\n          disabled: !i.isActive\n        });\n      });\n      return options;\n    };\n\n    _this.fromOptionRenderer = function (option) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, option.label), \" (\", React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, option.phoneNumber), \")\");\n    };\n\n    _this.state = {\n      scheduleDate: props.scheduleDate,\n      characterCount: _this.calcCharacterCount(160, _this.getContent('content')),\n      titleCount: _this.calcCharacterCount(15, _this.getContent('from')),\n      message: _this.getContent('content'),\n      title: _this.getContent('from'),\n      fromIntegrationId: _this.getContent('fromIntegrationId')\n    };\n    return _this;\n  }\n\n  _createClass(MessengerForm, [{\n    key: \"getContent\",\n    value: function getContent(key) {\n      var shortMessage = this.props.shortMessage;\n\n      if (!shortMessage) {\n        return '';\n      }\n\n      return shortMessage[key];\n    }\n  }, {\n    key: \"calcCharacterCount\",\n    value: function calcCharacterCount(maxChar, character) {\n      if (!character) {\n        return maxChar;\n      }\n\n      return maxChar - character.length;\n    }\n  }, {\n    key: \"renderScheduler\",\n    value: function renderScheduler() {\n      var _this$props = this.props,\n          messageKind = _this$props.messageKind,\n          onChange = _this$props.onChange;\n\n      if (messageKind === 'manual') {\n        return null;\n      }\n\n      return React.createElement(Scheduler, {\n        scheduleDate: this.state.scheduleDate || {},\n        onChange: onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          shortMessage = _this$props2.shortMessage,\n          smsConfig = _this$props2.smsConfig;\n      var _this$state = this.state,\n          message = _this$state.message,\n          title = _this$state.title,\n          titleCount = _this$state.titleCount,\n          characterCount = _this$state.characterCount,\n          fromIntegrationId = _this$state.fromIntegrationId;\n\n      var onChangeTitle = function onChangeTitle(e) {\n        return _this2.onChangeSms('from', e.target.value);\n      };\n\n      var onChangeContent = function onChangeContent(e) {\n        return _this2.onChangeSms('content', e.target.value);\n      };\n\n      var onChangeFrom = function onChangeFrom(value) {\n        var integrationId = value ? value.value : '';\n\n        _this2.setState({\n          fromIntegrationId: integrationId\n        });\n\n        _this2.onChangeSms('fromIntegrationId', integrationId);\n      };\n\n      var onChangeFromContent = function onChangeFromContent(e) {\n        var from = e.target.value;\n\n        _this2.setState({\n          title: from,\n          titleCount: _this2.calcCharacterCount(15, from)\n        });\n      };\n\n      var onChangeSmsContent = function onChangeSmsContent(e) {\n        var content = e.target.value;\n\n        _this2.setState({\n          message: content,\n          characterCount: _this2.calcCharacterCount(160, content)\n        });\n      };\n\n      if (!smsConfig) {\n        return React.createElement(EmptyState, {\n          text: \"SMS integration is not configured. Go to Settings > System config > Integrations config and set Telnyx SMS API key.\",\n          image: \"/images/actions/21.svg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(FlexPad, {\n        overflow: \"auto\",\n        direction: \"column\",\n        count: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"From:\"), React.createElement(Select, {\n        placeholder: __('Choose phone number'),\n        value: fromIntegrationId,\n        onChange: onChangeFrom,\n        options: this.fromSelectOptions(),\n        optionRenderer: this.fromOptionRenderer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(SMSInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, __('SMS marketing from the title'), \":\"), React.createElement(Char, {\n        count: titleCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, titleCount)), React.createElement(FormControl, {\n        onBlur: onChangeTitle,\n        defaultValue: shortMessage && shortMessage.from,\n        onChange: onChangeFromContent,\n        maxLength: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(SMSInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, __('SMS marketing content'), \":\"), React.createElement(Char, {\n        count: characterCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, characterCount)), React.createElement(FormControl, {\n        componentClass: \"textarea\",\n        defaultValue: shortMessage && shortMessage.content,\n        onBlur: onChangeContent,\n        onChange: onChangeSmsContent // sms part max size\n        ,\n        maxLength: 160,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })), this.renderScheduler()), React.createElement(FlexItem, {\n        overflow: \"auto\",\n        count: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(SmsPreview, {\n        title: title,\n        message: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MessengerForm;\n}(React.Component);\n\nexport default MessengerForm;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/components/SmsForm.tsx"],"names":["EmptyState","FormControl","FormGroup","ControlLabel","FlexItem","FlexPad","colors","__","React","Select","styled","styledTS","Scheduler","SmsPreview","SMSInfo","div","Char","props","count","colorCoreOrange","colorCoreRed","MessengerForm","onChangeSms","key","value","shortMessage","onChange","fromSelectOptions","integrations","options","map","i","push","_id","label","name","phoneNumber","disabled","isActive","fromOptionRenderer","option","state","scheduleDate","characterCount","calcCharacterCount","getContent","titleCount","message","title","fromIntegrationId","maxChar","character","length","messageKind","smsConfig","onChangeTitle","e","target","onChangeContent","onChangeFrom","integrationId","setState","onChangeFromContent","from","onChangeSmsContent","content","renderScheduler","Component"],"mappings":"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","sourcesContent":["import EmptyState from 'modules/common/components/EmptyState';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport { FlexItem, FlexPad } from 'modules/common/components/step/styles';\nimport colors from 'modules/common/styles/colors';\nimport { ISelectedOption } from 'modules/common/types';\nimport { __ } from 'modules/common/utils';\nimport { IConfig } from 'modules/settings/general/types';\nimport React from 'react';\nimport Select from 'react-select-plus';\nimport styled from 'styled-components';\nimport styledTS from 'styled-components-ts';\nimport {\n  IEngageScheduleDate,\n  IEngageSms,\n  IIntegrationWithPhone\n} from '../types';\nimport Scheduler from './Scheduler';\nimport SmsPreview from './SmsPreview';\n\nconst SMSInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Char = styledTS<{ count: number }>(styled.div)`\n  color: ${props =>\n    props.count > 10\n      ? props.count < 30 && colors.colorCoreOrange\n      : colors.colorCoreRed};\n  font-weight: bold;\n`;\n\ntype Props = {\n  onChange: (\n    name: 'shortMessage' | 'scheduleDate' | 'fromUserId',\n    value?: IEngageScheduleDate | IEngageSms | string\n  ) => void;\n  messageKind: string;\n  scheduleDate: IEngageScheduleDate;\n  shortMessage?: IEngageSms;\n  fromUserId: string;\n  smsConfig: IConfig;\n  integrations: IIntegrationWithPhone[];\n};\n\ntype State = {\n  scheduleDate: IEngageScheduleDate;\n  characterCount: number;\n  titleCount: number;\n  message: string;\n  title: string;\n  fromIntegrationId: string;\n};\n\ntype IOption = {\n  value: string;\n  label: string;\n  phoneNumber: string;\n  disabled: boolean;\n};\n\nclass MessengerForm extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      scheduleDate: props.scheduleDate,\n      characterCount: this.calcCharacterCount(160, this.getContent('content')),\n      titleCount: this.calcCharacterCount(15, this.getContent('from')),\n      message: this.getContent('content'),\n      title: this.getContent('from'),\n      fromIntegrationId: this.getContent('fromIntegrationId')\n    };\n  }\n\n  onChangeSms = (key: string, value: string) => {\n    const shortMessage = { ...this.props.shortMessage } as IEngageSms;\n\n    shortMessage[key] = value;\n\n    this.props.onChange('shortMessage', shortMessage);\n  };\n\n  getContent(key: string) {\n    const { shortMessage } = this.props;\n\n    if (!shortMessage) {\n      return '';\n    }\n\n    return shortMessage[key];\n  }\n\n  calcCharacterCount(maxChar: number, character?: string) {\n    if (!character) {\n      return maxChar;\n    }\n\n    return maxChar - character.length;\n  }\n\n  renderScheduler() {\n    const { messageKind, onChange } = this.props;\n\n    if (messageKind === 'manual') {\n      return null;\n    }\n\n    return (\n      <Scheduler\n        scheduleDate={this.state.scheduleDate || ({} as IEngageScheduleDate)}\n        onChange={onChange}\n      />\n    );\n  }\n\n  fromSelectOptions = () => {\n    const { integrations } = this.props;\n    const options: IOption[] = [];\n\n    integrations.map(i =>\n      options.push({\n        value: i._id,\n        label: i.name,\n        phoneNumber: i.phoneNumber,\n        disabled: !i.isActive\n      })\n    );\n\n    return options;\n  };\n\n  fromOptionRenderer = option => (\n    <div>\n      <strong>{option.label}</strong> (<i>{option.phoneNumber}</i>)\n    </div>\n  );\n\n  render() {\n    const { shortMessage, smsConfig } = this.props;\n    const {\n      message,\n      title,\n      titleCount,\n      characterCount,\n      fromIntegrationId\n    } = this.state;\n\n    const onChangeTitle = e =>\n      this.onChangeSms('from', (e.target as HTMLInputElement).value);\n\n    const onChangeContent = e =>\n      this.onChangeSms('content', (e.target as HTMLInputElement).value);\n\n    const onChangeFrom = (value: ISelectedOption) => {\n      const integrationId = value ? value.value : '';\n\n      this.setState({ fromIntegrationId: integrationId });\n      this.onChangeSms('fromIntegrationId', integrationId);\n    };\n\n    const onChangeFromContent = e => {\n      const from = (e.target as HTMLInputElement).value;\n\n      this.setState({\n        title: from,\n        titleCount: this.calcCharacterCount(15, from)\n      });\n    };\n\n    const onChangeSmsContent = e => {\n      const content = (e.target as HTMLInputElement).value;\n      this.setState({\n        message: content,\n        characterCount: this.calcCharacterCount(160, content)\n      });\n    };\n\n    if (!smsConfig) {\n      return (\n        <EmptyState\n          text=\"SMS integration is not configured. Go to Settings > System config > Integrations config and set Telnyx SMS API key.\"\n          image=\"/images/actions/21.svg\"\n        />\n      );\n    }\n\n    return (\n      <FlexItem>\n        <FlexPad overflow=\"auto\" direction=\"column\" count=\"3\">\n          <FormGroup>\n            <ControlLabel>From:</ControlLabel>\n            <Select\n              placeholder={__('Choose phone number')}\n              value={fromIntegrationId}\n              onChange={onChangeFrom}\n              options={this.fromSelectOptions()}\n              optionRenderer={this.fromOptionRenderer}\n            />\n          </FormGroup>\n          <FormGroup>\n            <SMSInfo>\n              <ControlLabel>{__('SMS marketing from the title')}:</ControlLabel>\n              <Char count={titleCount}>{titleCount}</Char>\n            </SMSInfo>\n            <FormControl\n              onBlur={onChangeTitle}\n              defaultValue={shortMessage && shortMessage.from}\n              onChange={onChangeFromContent}\n              maxLength={15}\n            />\n          </FormGroup>\n          <FormGroup>\n            <SMSInfo>\n              <ControlLabel>{__('SMS marketing content')}:</ControlLabel>\n              <Char count={characterCount}>{characterCount}</Char>\n            </SMSInfo>\n            <FormControl\n              componentClass=\"textarea\"\n              defaultValue={shortMessage && shortMessage.content}\n              onBlur={onChangeContent}\n              onChange={onChangeSmsContent}\n              // sms part max size\n              maxLength={160}\n            />\n          </FormGroup>\n          {this.renderScheduler()}\n        </FlexPad>\n\n        <FlexItem overflow=\"auto\" count=\"2\">\n          <SmsPreview title={title} message={message} />\n        </FlexItem>\n      </FlexItem>\n    );\n  }\n}\n\nexport default MessengerForm;\n"]},"metadata":{},"sourceType":"module"}