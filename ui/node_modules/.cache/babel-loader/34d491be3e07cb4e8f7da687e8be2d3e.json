{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/growthHacks/components/priorityMatrix/Chart.tsx\";\nimport { __ } from 'modules/common/utils';\nimport { RightContent } from 'modules/growthHacks/styles';\nimport React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport { AxisX, AxisY, ChartAxis, ChartLegends, ExperimentList, Point } from './styles';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Chart, _React$PureComponent);\n\n  function Chart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Chart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderPopover = function (data) {\n      return React.createElement(Popover, {\n        id: \"chart-popover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Popover.Title, {\n        as: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, __('Experiment names')), React.createElement(Popover.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(ExperimentList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, data.names.map(function (name, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, name);\n      }))));\n    };\n\n    _this.renderPoint = function (data) {\n      if (data.count === 1) {\n        return React.createElement(Point, {\n          key: Math.random(),\n          x: data.x,\n          y: data.y,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, data.names[0]));\n      }\n\n      return React.createElement(OverlayTrigger, {\n        trigger: ['hover', 'focus'],\n        placement: \"auto\",\n        rootClose: true,\n        overlay: _this.renderPopover(data),\n        key: Math.random(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Point, {\n        x: data.x,\n        y: data.y,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"(\".concat(data.count, \") Experiments\"))));\n    };\n\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(RightContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(ChartAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.props.datas.map(function (data) {\n        return _this2.renderPoint(data);\n      }), React.createElement(ChartLegends, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"top-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __('Big Bets')), React.createElement(\"span\", {\n        className: \"top-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __('Quick Wins')), React.createElement(\"span\", {\n        className: \"bottom-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, __('Time Sinks')), React.createElement(\"span\", {\n        className: \"bottom-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, __('Maybes'))), React.createElement(AxisY, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, __('Impact')), React.createElement(AxisX, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, __('Effort'))));\n    }\n  }]);\n\n  return Chart;\n}(React.PureComponent);\n\nexport default Chart;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/growthHacks/components/priorityMatrix/Chart.tsx"],"names":["__","RightContent","React","OverlayTrigger","Popover","AxisX","AxisY","ChartAxis","ChartLegends","ExperimentList","Point","Chart","renderPopover","data","names","map","name","index","renderPoint","count","Math","random","x","y","props","datas","PureComponent"],"mappings":"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","sourcesContent":["import { __ } from 'modules/common/utils';\nimport { RightContent } from 'modules/growthHacks/styles';\nimport React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport {\n  AxisX,\n  AxisY,\n  ChartAxis,\n  ChartLegends,\n  ExperimentList,\n  Point\n} from './styles';\n\ntype Props = {\n  datas: any[];\n};\n\nclass Chart extends React.PureComponent<Props> {\n  renderPopover = data => {\n    return (\n      <Popover id=\"chart-popover\">\n        <Popover.Title as=\"h3\">{__('Experiment names')}</Popover.Title>\n        <Popover.Content>\n          <ExperimentList>\n            {data.names.map((name, index) => (\n              <li key={index}>{name}</li>\n            ))}\n          </ExperimentList>\n        </Popover.Content>\n      </Popover>\n    );\n  };\n\n  renderPoint = data => {\n    if (data.count === 1) {\n      return (\n        <Point key={Math.random()} x={data.x} y={data.y}>\n          <span>{data.names[0]}</span>\n        </Point>\n      );\n    }\n\n    return (\n      <OverlayTrigger\n        trigger={['hover', 'focus']}\n        placement=\"auto\"\n        rootClose={true}\n        overlay={this.renderPopover(data)}\n        key={Math.random()}\n      >\n        <Point x={data.x} y={data.y}>\n          <span>{`(${data.count}) Experiments`}</span>\n        </Point>\n      </OverlayTrigger>\n    );\n  };\n\n  render() {\n    return (\n      <RightContent>\n        <ChartAxis>\n          {this.props.datas.map(data => this.renderPoint(data))}\n\n          <ChartLegends>\n            <span className=\"top-left\">{__('Big Bets')}</span>\n            <span className=\"top-right\">{__('Quick Wins')}</span>\n            <span className=\"bottom-left\">{__('Time Sinks')}</span>\n            <span className=\"bottom-right\">{__('Maybes')}</span>\n          </ChartLegends>\n\n          <AxisY>{__('Impact')}</AxisY>\n          <AxisX>{__('Effort')}</AxisX>\n        </ChartAxis>\n      </RightContent>\n    );\n  }\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}