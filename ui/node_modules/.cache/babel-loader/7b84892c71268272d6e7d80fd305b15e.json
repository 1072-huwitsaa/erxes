{"ast":null,"code":"var segmentFields = \"\\n  _id\\n  contentType\\n  name\\n  description\\n  subOf\\n  color\\n  conditions\\n\";\nvar segments = \"\\n  query segments($contentTypes: [String]!) {\\n    segments(contentTypes: $contentTypes) {\\n      \".concat(segmentFields, \"\\n\\n      getSubSegments {\\n        \").concat(segmentFields, \"\\n      }\\n    }\\n  }\\n\");\nvar segmentDetail = \"\\n  query segmentDetail($_id: String) {\\n    segmentDetail(_id: $_id) {\\n      \".concat(segmentFields, \"\\n      getSubSegments {\\n        \").concat(segmentFields, \"\\n      }\\n    }\\n  }\\n\");\nvar segmentsPreviewCount = \"\\n  query segmentsPreviewCount($contentType: String!, $conditions: JSON, $subOf: String) {\\n    segmentsPreviewCount(contentType: $contentType, conditions: $conditions, subOf: $subOf)\\n  }\\n\";\nvar headSegments = \"\\n  query headSegments {\\n    segmentsGetHeads {\\n      \".concat(segmentFields, \"\\n      getSubSegments {\\n        \").concat(segmentFields, \"\\n      }\\n    }\\n  }\\n\");\nvar combinedFields = \"\\n  query fieldsCombinedByContentType($contentType: String!) {\\n    fieldsCombinedByContentType(contentType: $contentType)\\n  }\\n\";\nvar events = \"\\n  query events($contentType: String!) {\\n    segmentsEvents(contentType: $contentType)\\n  }\\n\";\nexport default {\n  segments: segments,\n  segmentDetail: segmentDetail,\n  headSegments: headSegments,\n  events: events,\n  combinedFields: combinedFields,\n  segmentsPreviewCount: segmentsPreviewCount\n};","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/segments/graphql/queries.ts"],"names":["segmentFields","segments","segmentDetail","segmentsPreviewCount","headSegments","combinedFields","events"],"mappings":"AAAA,IAAMA,aAAa,oFAAnB;AAUA,IAAMC,QAAQ,gHAGND,aAHM,iDAMJA,aANI,4BAAd;AAYA,IAAME,aAAa,4FAGXF,aAHW,+CAKTA,aALS,4BAAnB;AAUA,IAAMG,oBAAoB,mMAA1B;AAMA,IAAMC,YAAY,qEAGVJ,aAHU,+CAKRA,aALQ,4BAAlB;AAWA,IAAMK,cAAc,sIAApB;AAMA,IAAMC,MAAM,oGAAZ;AAMA,eAAe;AACbL,EAAAA,QAAQ,EAARA,QADa;AAEbC,EAAAA,aAAa,EAAbA,aAFa;AAGbE,EAAAA,YAAY,EAAZA,YAHa;AAIbE,EAAAA,MAAM,EAANA,MAJa;AAKbD,EAAAA,cAAc,EAAdA,cALa;AAMbF,EAAAA,oBAAoB,EAApBA;AANa,CAAf","sourcesContent":["const segmentFields = `\n  _id\n  contentType\n  name\n  description\n  subOf\n  color\n  conditions\n`;\n\nconst segments = `\n  query segments($contentTypes: [String]!) {\n    segments(contentTypes: $contentTypes) {\n      ${segmentFields}\n\n      getSubSegments {\n        ${segmentFields}\n      }\n    }\n  }\n`;\n\nconst segmentDetail = `\n  query segmentDetail($_id: String) {\n    segmentDetail(_id: $_id) {\n      ${segmentFields}\n      getSubSegments {\n        ${segmentFields}\n      }\n    }\n  }\n`;\nconst segmentsPreviewCount = `\n  query segmentsPreviewCount($contentType: String!, $conditions: JSON, $subOf: String) {\n    segmentsPreviewCount(contentType: $contentType, conditions: $conditions, subOf: $subOf)\n  }\n`;\n\nconst headSegments = `\n  query headSegments {\n    segmentsGetHeads {\n      ${segmentFields}\n      getSubSegments {\n        ${segmentFields}\n      }\n    }\n  }\n`;\n\nconst combinedFields = `\n  query fieldsCombinedByContentType($contentType: String!) {\n    fieldsCombinedByContentType(contentType: $contentType)\n  }\n`;\n\nconst events = `\n  query events($contentType: String!) {\n    segmentsEvents(contentType: $contentType)\n  }\n`;\n\nexport default {\n  segments,\n  segmentDetail,\n  headSegments,\n  events,\n  combinedFields,\n  segmentsPreviewCount\n};\n"]},"metadata":{},"sourceType":"module"}