{"ast":null,"code":"var _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/index.tsx\";\nimport '@nateradebaugh/react-datetime/css/react-datetime.css';\nimport 'abortcontroller-polyfill/dist/polyfill-patch-fetch';\nimport dayjs from 'dayjs';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport utc from 'dayjs/plugin/utc';\nimport 'erxes-icon/css/erxes.min.css';\nimport { OwnerDescription } from 'modules/auth/components/OwnerSetup';\nimport OwnerSetup from 'modules/auth/containers/OwnerSetup'; // global style\n\nimport 'modules/common/styles/global-styles.ts';\nimport AuthLayout from 'modules/layout/components/AuthLayout';\nimport React from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport { render } from 'react-dom';\nimport apolloClient, { getEnv } from './apolloClient';\nimport Routes from './routes';\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\ndayjs.extend(utc, {\n  parseLocal: true\n});\nvar target = document.querySelector('#root');\nvar envs = getEnv();\nfetch(\"\".concat(envs.REACT_APP_API_URL, \"/initial-setup?envs=\").concat(JSON.stringify(envs)), {\n  credentials: 'include'\n}).then(function (response) {\n  return response.text();\n}).then(function (res) {\n  var body = React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n\n  if (res === 'no owner') {\n    body = React.createElement(AuthLayout, {\n      col: {\n        first: 5,\n        second: 6\n      },\n      content: React.createElement(OwnerSetup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }),\n      description: React.createElement(OwnerDescription, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n  return render(React.createElement(ApolloProvider, {\n    client: apolloClient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, body), target);\n});","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/index.tsx"],"names":["dayjs","localizedFormat","relativeTime","utc","OwnerDescription","OwnerSetup","AuthLayout","React","ApolloProvider","render","apolloClient","getEnv","Routes","extend","parseLocal","target","document","querySelector","envs","fetch","REACT_APP_API_URL","JSON","stringify","credentials","then","response","text","res","body","first","second"],"mappings":";AAAA,OAAO,sDAAP;AACA,OAAO,oDAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAO,8BAAP;AACA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,OAAOC,UAAP,MAAuB,oCAAvB,C,CACA;;AACA,OAAO,wCAAP;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,YAAP,IAAuBC,MAAvB,QAAqC,gBAArC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEAZ,KAAK,CAACa,MAAN,CAAaZ,eAAb;AACAD,KAAK,CAACa,MAAN,CAAaX,YAAb;AACAF,KAAK,CAACa,MAAN,CAAaV,GAAb,EAAkB;AAAEW,EAAAA,UAAU,EAAE;AAAd,CAAlB;AAEA,IAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAf;AAEA,IAAMC,IAAI,GAAGP,MAAM,EAAnB;AAEAQ,KAAK,WAAID,IAAI,CAACE,iBAAT,iCAAiDC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAjD,GAAyE;AAC5EK,EAAAA,WAAW,EAAE;AAD+D,CAAzE,CAAL,CAGGC,IAHH,CAGQ,UAAAC,QAAQ;AAAA,SAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,CAHhB,EAIGF,IAJH,CAIQ,UAAAG,GAAG,EAAI;AACX,MAAIC,IAAI,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAX;;AAEA,MAAID,GAAG,KAAK,UAAZ,EAAwB;AACtBC,IAAAA,IAAI,GACF,oBAAC,UAAD;AACE,MAAA,GAAG,EAAE;AAAEC,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,MAAM,EAAE;AAApB,OADP;AAEE,MAAA,OAAO,EAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFX;AAGE,MAAA,WAAW,EAAE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAED,SAAOrB,MAAM,CACX,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCkB,IAAvC,CADW,EAEXb,MAFW,CAAb;AAID,CArBH","sourcesContent":["import '@nateradebaugh/react-datetime/css/react-datetime.css';\nimport 'abortcontroller-polyfill/dist/polyfill-patch-fetch';\nimport dayjs from 'dayjs';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport utc from 'dayjs/plugin/utc';\nimport 'erxes-icon/css/erxes.min.css';\nimport { OwnerDescription } from 'modules/auth/components/OwnerSetup';\nimport OwnerSetup from 'modules/auth/containers/OwnerSetup';\n// global style\nimport 'modules/common/styles/global-styles.ts';\nimport AuthLayout from 'modules/layout/components/AuthLayout';\nimport React from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport { render } from 'react-dom';\nimport apolloClient, { getEnv } from './apolloClient';\nimport Routes from './routes';\n\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\ndayjs.extend(utc, { parseLocal: true });\n\nconst target = document.querySelector('#root');\n\nconst envs = getEnv();\n\nfetch(`${envs.REACT_APP_API_URL}/initial-setup?envs=${JSON.stringify(envs)}`, {\n  credentials: 'include'\n})\n  .then(response => response.text())\n  .then(res => {\n    let body = <Routes />;\n\n    if (res === 'no owner') {\n      body = (\n        <AuthLayout\n          col={{ first: 5, second: 6 }}\n          content={<OwnerSetup />}\n          description={<OwnerDescription />}\n        />\n      );\n    }\n\n    return render(\n      <ApolloProvider client={apolloClient}>{body}</ApolloProvider>,\n      target\n    );\n  });\n"]},"metadata":{},"sourceType":"module"}