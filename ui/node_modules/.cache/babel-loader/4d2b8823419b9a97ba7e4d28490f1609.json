{"ast":null,"code":"import _defineProperty from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/activityLogs/components/items/boardItems/Task.tsx\";\nimport Datetime from '@nateradebaugh/react-datetime';\nimport dayjs from 'dayjs';\nimport { ActivityDate, Date, DeleteAction, Description, Detail, FlexBody, FlexCenterContent, FlexContent, IconWrapper, JumpTo, LogWrapper, Row, Title } from 'modules/activityLogs/styles';\nimport { REMINDER_MINUTES } from 'modules/boards/constants';\nimport { selectOptions } from 'modules/boards/utils';\nimport Button from 'modules/common/components/Button';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Tip from 'modules/common/components/Tip';\nimport { __ } from 'modules/common/utils';\nimport SelectTeamMembers from 'modules/settings/team/containers/SelectTeamMembers';\nimport React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport { Link } from 'react-router-dom';\nimport Select from 'react-select-plus';\n\nvar Task =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Task, _React$Component);\n\n  function Task(props) {\n    var _this;\n\n    _classCallCheck(this, Task);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Task).call(this, props));\n    _this.overlayTrigger = void 0;\n\n    _this.onOverlayClose = function () {\n      _this.overlayTrigger.hide();\n    };\n\n    _this.onRemove = function () {\n      var _this$props = _this.props,\n          remove = _this$props.remove,\n          task = _this$props.task;\n      remove(task._id);\n    };\n\n    _this.onChange = function (key) {\n      _this.setState(_defineProperty({}, key, !_this.state[key]));\n    };\n\n    _this.handleInputChange = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        name: e.target.value\n      });\n    };\n\n    _this.saveItem = function (key, value) {\n      var task = _this.props.task;\n\n      _this.props.save(_defineProperty({\n        _id: task._id\n      }, key, value), function () {\n        _this.setState({\n          editing: false\n        });\n      });\n    };\n\n    var _task = props.task || {};\n\n    _this.state = {\n      editing: false,\n      name: _task.name || '',\n      closeDate: _task.closeDate || dayjs(),\n      showDetail: false,\n      isComplete: _task.isComplete || false\n    };\n    return _this;\n  }\n\n  _createClass(Task, [{\n    key: \"renderName\",\n    value: function renderName() {\n      var task = this.props.task;\n\n      if (this.state.editing) {\n        return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(FormControl, {\n          value: this.state.name,\n          onChange: this.handleInputChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        })), React.createElement(Button, {\n          icon: \"cancel-1\",\n          btnStyle: \"simple\",\n          size: \"small\",\n          onClick: this.onChange.bind(this, 'editing'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Cancel\"), React.createElement(Button, {\n          btnStyle: \"success\",\n          size: \"small\",\n          icon: \"checked-1\",\n          onClick: this.saveItem.bind(this, 'name', this.state.name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"Save\"));\n      }\n\n      return React.createElement(\"h4\", {\n        onClick: this.onChange.bind(this, 'editing'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, task.name);\n    }\n  }, {\n    key: \"renderDetails\",\n    value: function renderDetails() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          showDetail = _this$state.showDetail,\n          isComplete = _this$state.isComplete;\n\n      var minuteOnChange = function minuteOnChange(_ref) {\n        var value = _ref.value;\n\n        _this2.saveItem('reminderMinute', parseInt(value, 10));\n      };\n\n      if (!showDetail) {\n        return null;\n      }\n\n      return React.createElement(React.Fragment, null, isComplete && this.renderContent(), React.createElement(Detail, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(FlexBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Set reminder\"), React.createElement(Select, {\n        isRequired: true,\n        value: this.props.task.reminderMinute,\n        onChange: minuteOnChange,\n        options: selectOptions(REMINDER_MINUTES),\n        clearable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"renderCloseDate\",\n    value: function renderCloseDate() {\n      var _this3 = this;\n\n      var closeDate = this.state.closeDate;\n\n      var onDateChange = function onDateChange(date) {\n        _this3.setState({\n          closeDate: date\n        }, function () {\n          _this3.saveItem('closeDate', closeDate);\n        });\n      };\n\n      var content = React.createElement(Popover, {\n        id: \"pipeline-popover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Datetime, {\n        inputProps: {\n          placeholder: __('Click to select a date')\n        },\n        dateFormat: \"YYYY/MM/DD\",\n        timeFormat: \"HH:mm\",\n        value: closeDate,\n        closeOnSelect: true,\n        utc: true,\n        input: false,\n        onChange: onDateChange,\n        defaultValue: dayjs().startOf('day').add(12, 'hour').format('YYYY-MM-DD HH:mm:ss'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }));\n      return React.createElement(OverlayTrigger, {\n        ref: function ref(overlayTrigger) {\n          _this3.overlayTrigger = overlayTrigger;\n        },\n        trigger: \"click\",\n        placement: \"auto\",\n        overlay: content,\n        rootClose: true,\n        container: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Date, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"calendar-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, dayjs(closeDate).format('MM/DD/YYYY')), React.createElement(Icon, {\n        icon: \"angle-down\",\n        size: 14,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this4 = this;\n\n      var task = this.props.task;\n      var assignedUserIds = (task.assignedUsers || []).map(function (user) {\n        return user._id;\n      });\n\n      var onAssignedUserSelect = function onAssignedUserSelect(usrs) {\n        _this4.saveItem('assignedUserIds', usrs);\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(FlexContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(FlexBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Assigned to\"), React.createElement(SelectTeamMembers, {\n        label: __('Choose team member'),\n        name: \"assignedUserIds\",\n        value: assignedUserIds,\n        onSelect: onAssignedUserSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }))), React.createElement(FlexBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Due date\"), React.createElement(FlexContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, this.renderCloseDate()))), task.description && React.createElement(Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, task.description));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$state2 = this.state,\n          isComplete = _this$state2.isComplete,\n          showDetail = _this$state2.showDetail,\n          editing = _this$state2.editing;\n      var _this$props$task = this.props.task,\n          createdUser = _this$props$task.createdUser,\n          createdAt = _this$props$task.createdAt,\n          boardId = _this$props$task.boardId,\n          _id = _this$props$task._id;\n\n      var onComplete = function onComplete() {\n        _this5.setState({\n          isComplete: !_this5.state.isComplete\n        }, function () {\n          _this5.saveItem('isComplete', _this5.state.isComplete);\n        });\n      };\n\n      return React.createElement(LogWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(FlexCenterContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(FlexBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, createdUser && createdUser.details ? createdUser.details.fullName || createdUser.email : 'Undefined'), ' ', \"created a task\"), React.createElement(Link, {\n        to: \"/task/board?_id=\".concat(boardId, \"&itemId=\").concat(_id),\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(JumpTo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Jump to task\", React.createElement(Icon, {\n        icon: \"corner-down-right-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }))), React.createElement(DeleteAction, {\n        onClick: this.onRemove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(Tip, {\n        text: dayjs(createdAt).format('llll'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(ActivityDate, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, dayjs(createdAt).format('MMM D, h:mm A')))), React.createElement(FlexContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(Tip, {\n        text: isComplete ? __('Mark as incomplete') : __('Mark as complete'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(IconWrapper, {\n        onClick: onComplete,\n        isComplete: isComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"check-1\",\n        size: 25,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }))), React.createElement(Title, {\n        isComplete: isComplete,\n        isEditing: editing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, this.renderName(), React.createElement(Icon, {\n        icon: \"edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }))), !isComplete && this.renderContent(), React.createElement(Detail, {\n        full: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Date, {\n        onClick: this.onChange.bind(this, 'showDetail'),\n        showDetail: showDetail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"angle-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }), \" \", __('Details')), this.renderDetails()));\n    }\n  }]);\n\n  return Task;\n}(React.Component);\n\nexport default Task;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/activityLogs/components/items/boardItems/Task.tsx"],"names":["Datetime","dayjs","ActivityDate","Date","DeleteAction","Description","Detail","FlexBody","FlexCenterContent","FlexContent","IconWrapper","JumpTo","LogWrapper","Row","Title","REMINDER_MINUTES","selectOptions","Button","FormControl","FormGroup","ControlLabel","Icon","Tip","__","SelectTeamMembers","React","OverlayTrigger","Popover","Link","Select","Task","props","overlayTrigger","onOverlayClose","hide","onRemove","remove","task","_id","onChange","key","setState","state","handleInputChange","e","preventDefault","name","target","value","saveItem","save","editing","closeDate","showDetail","isComplete","bind","minuteOnChange","parseInt","renderContent","reminderMinute","onDateChange","date","content","placeholder","startOf","add","format","assignedUserIds","assignedUsers","map","user","onAssignedUserSelect","usrs","renderCloseDate","description","createdUser","createdAt","boardId","onComplete","details","fullName","email","renderName","renderDetails","Component"],"mappings":";;;;;;;AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,IAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,MALF,EAMEC,QANF,EAOEC,iBAPF,EAQEC,WARF,EASEC,WATF,EAUEC,MAVF,EAWEC,UAXF,EAYEC,GAZF,EAaEC,KAbF,QAcO,6BAdP;AAeA,SAASC,gBAAT,QAAiC,0BAAjC;AAEA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,OAAOC,GAAP,MAAgB,+BAAhB;AACA,SAASC,EAAT,QAAmB,sBAAnB;AACA,OAAOC,iBAAP,MAA8B,oDAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;IAgBMC,I;;;;;AAGJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AADiB,UAFXC,cAEW;;AAAA,UAanBC,cAbmB,GAaF,YAAM;AACrB,YAAKD,cAAL,CAAoBE,IAApB;AACD,KAfkB;;AAAA,UAiBnBC,QAjBmB,GAiBR,YAAM;AAAA,wBACU,MAAKJ,KADf;AAAA,UACPK,MADO,eACPA,MADO;AAAA,UACCC,IADD,eACCA,IADD;AAEfD,MAAAA,MAAM,CAACC,IAAI,CAACC,GAAN,CAAN;AACD,KApBkB;;AAAA,UAsBnBC,QAtBmB,GAsBR,UAACC,GAAD,EAAiB;AAC1B,YAAKC,QAAL,qBAAiBD,GAAjB,EAAuB,CAAC,MAAKE,KAAL,CAAWF,GAAX,CAAxB;AACD,KAxBkB;;AAAA,UA0BnBG,iBA1BmB,GA0BC,UAAAC,CAAC,EAAI;AACvBA,MAAAA,CAAC,CAACC,cAAF;;AAEA,YAAKJ,QAAL,CAAc;AAAEK,QAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAjB,OAAd;AACD,KA9BkB;;AAAA,UAgCnBC,QAhCmB,GAgCR,UAACT,GAAD,EAAcQ,KAAd,EAA6B;AAAA,UAC9BX,IAD8B,GACrB,MAAKN,KADgB,CAC9BM,IAD8B;;AAGtC,YAAKN,KAAL,CAAWmB,IAAX;AAEIZ,QAAAA,GAAG,EAAED,IAAI,CAACC;AAFd,SAGKE,GAHL,EAGWQ,KAHX,GAKE,YAAM;AACJ,cAAKP,QAAL,CAAc;AAAEU,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD,OAPH;AASD,KA5CkB;;AAGjB,QAAMd,KAAI,GAAGN,KAAK,CAACM,IAAN,IAAc,EAA3B;;AACA,UAAKK,KAAL,GAAa;AACXS,MAAAA,OAAO,EAAE,KADE;AAEXL,MAAAA,IAAI,EAAET,KAAI,CAACS,IAAL,IAAa,EAFR;AAGXM,MAAAA,SAAS,EAAEf,KAAI,CAACe,SAAL,IAAkBnD,KAAK,EAHvB;AAIXoD,MAAAA,UAAU,EAAE,KAJD;AAKXC,MAAAA,UAAU,EAAEjB,KAAI,CAACiB,UAAL,IAAmB;AALpB,KAAb;AAJiB;AAWlB;;;;iCAmCY;AAAA,UACHjB,IADG,GACM,KAAKN,KADX,CACHM,IADG;;AAGX,UAAI,KAAKK,KAAL,CAAWS,OAAf,EAAwB;AACtB,eACE,0CACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,WAAD;AACE,UAAA,KAAK,EAAE,KAAKT,KAAL,CAAWI,IADpB;AAEE,UAAA,QAAQ,EAAE,KAAKH,iBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,EAOE,oBAAC,MAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,QAAQ,EAAC,QAFX;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,OAAO,EAAE,KAAKJ,QAAL,CAAcgB,IAAd,CAAmB,IAAnB,EAAyB,SAAzB,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,EAeE,oBAAC,MAAD;AACE,UAAA,QAAQ,EAAC,SADX;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,IAAI,EAAC,WAHP;AAIE,UAAA,OAAO,EAAE,KAAKN,QAAL,CAAcM,IAAd,CAAmB,IAAnB,EAAyB,MAAzB,EAAiC,KAAKb,KAAL,CAAWI,IAA5C,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,CADF;AA0BD;;AAED,aAAO;AAAI,QAAA,OAAO,EAAE,KAAKP,QAAL,CAAcgB,IAAd,CAAmB,IAAnB,EAAyB,SAAzB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmDlB,IAAI,CAACS,IAAxD,CAAP;AACD;;;oCAEe;AAAA;;AAAA,wBACqB,KAAKJ,KAD1B;AAAA,UACNW,UADM,eACNA,UADM;AAAA,UACMC,UADN,eACMA,UADN;;AAGd,UAAME,cAAc,GAAG,SAAjBA,cAAiB,OAAkC;AAAA,YAA/BR,KAA+B,QAA/BA,KAA+B;;AACvD,QAAA,MAAI,CAACC,QAAL,CAAc,gBAAd,EAAgCQ,QAAQ,CAACT,KAAD,EAAQ,EAAR,CAAxC;AACD,OAFD;;AAIA,UAAI,CAACK,UAAL,EAAiB;AACf,eAAO,IAAP;AACD;;AAED,aACE,0CACGC,UAAU,IAAI,KAAKI,aAAL,EADjB,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,MAAD;AACE,QAAA,UAAU,EAAE,IADd;AAEE,QAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWM,IAAX,CAAgBsB,cAFzB;AAGE,QAAA,QAAQ,EAAEH,cAHZ;AAIE,QAAA,OAAO,EAAExC,aAAa,CAACD,gBAAD,CAJxB;AAKE,QAAA,SAAS,EAAE,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,CAFF,CADF;AAmBD;;;sCAEiB;AAAA;;AAAA,UACRqC,SADQ,GACM,KAAKV,KADX,CACRU,SADQ;;AAGhB,UAAMQ,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI,EAAI;AAC3B,QAAA,MAAI,CAACpB,QAAL,CAAc;AAAEW,UAAAA,SAAS,EAAES;AAAb,SAAd,EAAmC,YAAM;AACvC,UAAA,MAAI,CAACZ,QAAL,CAAc,WAAd,EAA2BG,SAA3B;AACD,SAFD;AAGD,OAJD;;AAMA,UAAMU,OAAO,GACX,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAC,kBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,UAAU,EAAE;AAAEC,UAAAA,WAAW,EAAExC,EAAE,CAAC,wBAAD;AAAjB,SADd;AAEE,QAAA,UAAU,EAAC,YAFb;AAGE,QAAA,UAAU,EAAC,OAHb;AAIE,QAAA,KAAK,EAAE6B,SAJT;AAKE,QAAA,aAAa,EAAE,IALjB;AAME,QAAA,GAAG,EAAE,IANP;AAOE,QAAA,KAAK,EAAE,KAPT;AAQE,QAAA,QAAQ,EAAEQ,YARZ;AASE,QAAA,YAAY,EAAE3D,KAAK,GAChB+D,OADW,CACH,KADG,EAEXC,GAFW,CAEP,EAFO,EAEH,MAFG,EAGXC,MAHW,CAGJ,qBAHI,CAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAmBA,aACE,oBAAC,cAAD;AACE,QAAA,GAAG,EAAE,aAAAlC,cAAc,EAAI;AACrB,UAAA,MAAI,CAACA,cAAL,GAAsBA,cAAtB;AACD,SAHH;AAIE,QAAA,OAAO,EAAC,OAJV;AAKE,QAAA,SAAS,EAAC,MALZ;AAME,QAAA,OAAO,EAAE8B,OANX;AAOE,QAAA,SAAS,EAAE,IAPb;AAQE,QAAA,SAAS,EAAE,IARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO7D,KAAK,CAACmD,SAAD,CAAL,CAAiBc,MAAjB,CAAwB,YAAxB,CAAP,CAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,YAAX;AAAwB,QAAA,IAAI,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CAVF,CADF;AAkBD;;;oCAEe;AAAA;;AAAA,UACN7B,IADM,GACG,KAAKN,KADR,CACNM,IADM;AAGd,UAAM8B,eAAe,GAAG,CAAC9B,IAAI,CAAC+B,aAAL,IAAsB,EAAvB,EAA2BC,GAA3B,CAA+B,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAAChC,GAAT;AAAA,OAAnC,CAAxB;;AAEA,UAAMiC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,IAAI,EAAI;AACnC,QAAA,MAAI,CAACvB,QAAL,CAAc,iBAAd,EAAiCuB,IAAjC;AACD,OAFD;;AAIA,aACE,0CACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,iBAAD;AACE,QAAA,KAAK,EAAEjD,EAAE,CAAC,oBAAD,CADX;AAEE,QAAA,IAAI,EAAC,iBAFP;AAGE,QAAA,KAAK,EAAE4C,eAHT;AAIE,QAAA,QAAQ,EAAEI,oBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,EAaE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,KAAKE,eAAL,EAAd,CAFF,CAbF,CADF,EAoBGpC,IAAI,CAACqC,WAAL,IAAoB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAcrC,IAAI,CAACqC,WAAnB,CApBvB,CADF;AAwBD;;;6BAEQ;AAAA;;AAAA,yBACqC,KAAKhC,KAD1C;AAAA,UACCY,UADD,gBACCA,UADD;AAAA,UACaD,UADb,gBACaA,UADb;AAAA,UACyBF,OADzB,gBACyBA,OADzB;AAAA,6BAE0C,KAAKpB,KAAL,CAAWM,IAFrD;AAAA,UAECsC,WAFD,oBAECA,WAFD;AAAA,UAEcC,SAFd,oBAEcA,SAFd;AAAA,UAEyBC,OAFzB,oBAEyBA,OAFzB;AAAA,UAEkCvC,GAFlC,oBAEkCA,GAFlC;;AAIP,UAAMwC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAA,MAAI,CAACrC,QAAL,CAAc;AAAEa,UAAAA,UAAU,EAAE,CAAC,MAAI,CAACZ,KAAL,CAAWY;AAA1B,SAAd,EAAsD,YAAM;AAC1D,UAAA,MAAI,CAACL,QAAL,CAAc,YAAd,EAA4B,MAAI,CAACP,KAAL,CAAWY,UAAvC;AACD,SAFD;AAGD,OAJD;;AAMA,aACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGqB,WAAW,IAAIA,WAAW,CAACI,OAA3B,GACGJ,WAAW,CAACI,OAAZ,CAAoBC,QAApB,IAAgCL,WAAW,CAACM,KAD/C,GAEG,WAHN,CADF,EAKY,GALZ,mBADF,EASE,oBAAC,IAAD;AAAM,QAAA,EAAE,4BAAqBJ,OAArB,qBAAuCvC,GAAvC,CAAR;AAAsD,QAAA,MAAM,EAAC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,uBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CATF,EAeE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,KAAKH,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,EAgBE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAElC,KAAK,CAAC2E,SAAD,CAAL,CAAiBV,MAAjB,CAAwB,MAAxB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGjE,KAAK,CAAC2E,SAAD,CAAL,CAAiBV,MAAjB,CAAwB,eAAxB,CADH,CADF,CAhBF,CADF,EAuBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AACE,QAAA,IAAI,EACFZ,UAAU,GAAG/B,EAAE,CAAC,oBAAD,CAAL,GAA8BA,EAAE,CAAC,kBAAD,CAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEuD,UAAtB;AAAkC,QAAA,UAAU,EAAExB,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAqB,QAAA,IAAI,EAAE,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,CADF,EAUE,oBAAC,KAAD;AAAO,QAAA,UAAU,EAAEA,UAAnB;AAA+B,QAAA,SAAS,EAAEH,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAK+B,UAAL,EADH,EAEE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAVF,CAvBF,EAsCG,CAAC5B,UAAD,IAAe,KAAKI,aAAL,EAtClB,EAuCE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,OAAO,EAAE,KAAKnB,QAAL,CAAcgB,IAAd,CAAmB,IAAnB,EAAyB,YAAzB,CADX;AAEE,QAAA,UAAU,EAAEF,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,OAI+B9B,EAAE,CAAC,SAAD,CAJjC,CADF,EAOG,KAAK4D,aAAL,EAPH,CAvCF,CADF;AAmDD;;;;EApQgB1D,KAAK,CAAC2D,S;;AAuQzB,eAAetD,IAAf","sourcesContent":["import Datetime from '@nateradebaugh/react-datetime';\nimport dayjs from 'dayjs';\nimport {\n  ActivityDate,\n  Date,\n  DeleteAction,\n  Description,\n  Detail,\n  FlexBody,\n  FlexCenterContent,\n  FlexContent,\n  IconWrapper,\n  JumpTo,\n  LogWrapper,\n  Row,\n  Title\n} from 'modules/activityLogs/styles';\nimport { REMINDER_MINUTES } from 'modules/boards/constants';\nimport { IItem } from 'modules/boards/types';\nimport { selectOptions } from 'modules/boards/utils';\nimport Button from 'modules/common/components/Button';\nimport FormControl from 'modules/common/components/form/Control';\nimport FormGroup from 'modules/common/components/form/Group';\nimport ControlLabel from 'modules/common/components/form/Label';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport Tip from 'modules/common/components/Tip';\nimport { __ } from 'modules/common/utils';\nimport SelectTeamMembers from 'modules/settings/team/containers/SelectTeamMembers';\nimport React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport { Link } from 'react-router-dom';\nimport Select from 'react-select-plus';\n\ntype Props = {\n  task: IItem;\n  save: (variables, callback) => void;\n  remove: (id: string) => void;\n};\n\ntype State = {\n  editing: boolean;\n  name: string;\n  closeDate: Date;\n  showDetail: boolean;\n  isComplete: boolean;\n};\n\nclass Task extends React.Component<Props, State> {\n  private overlayTrigger;\n\n  constructor(props) {\n    super(props);\n\n    const task = props.task || {};\n    this.state = {\n      editing: false,\n      name: task.name || '',\n      closeDate: task.closeDate || dayjs(),\n      showDetail: false,\n      isComplete: task.isComplete || false\n    };\n  }\n\n  onOverlayClose = () => {\n    this.overlayTrigger.hide();\n  };\n\n  onRemove = () => {\n    const { remove, task } = this.props;\n    remove(task._id);\n  };\n\n  onChange = (key: string) => {\n    this.setState({ [key]: !this.state[key] } as any);\n  };\n\n  handleInputChange = e => {\n    e.preventDefault();\n\n    this.setState({ name: e.target.value });\n  };\n\n  saveItem = (key: string, value: any) => {\n    const { task } = this.props;\n\n    this.props.save(\n      {\n        _id: task._id,\n        [key]: value\n      },\n      () => {\n        this.setState({ editing: false });\n      }\n    );\n  };\n\n  renderName() {\n    const { task } = this.props;\n\n    if (this.state.editing) {\n      return (\n        <>\n          <FormGroup>\n            <FormControl\n              value={this.state.name}\n              onChange={this.handleInputChange}\n            />\n          </FormGroup>\n          <Button\n            icon=\"cancel-1\"\n            btnStyle=\"simple\"\n            size=\"small\"\n            onClick={this.onChange.bind(this, 'editing')}\n          >\n            Cancel\n          </Button>\n          <Button\n            btnStyle=\"success\"\n            size=\"small\"\n            icon=\"checked-1\"\n            onClick={this.saveItem.bind(this, 'name', this.state.name)}\n          >\n            Save\n          </Button>\n        </>\n      );\n    }\n\n    return <h4 onClick={this.onChange.bind(this, 'editing')}>{task.name}</h4>;\n  }\n\n  renderDetails() {\n    const { showDetail, isComplete } = this.state;\n\n    const minuteOnChange = ({ value }: { value: string }) => {\n      this.saveItem('reminderMinute', parseInt(value, 10));\n    };\n\n    if (!showDetail) {\n      return null;\n    }\n\n    return (\n      <>\n        {isComplete && this.renderContent()}\n        <Detail>\n          <FlexBody>\n            <Row>\n              <ControlLabel>Set reminder</ControlLabel>\n              <Select\n                isRequired={true}\n                value={this.props.task.reminderMinute}\n                onChange={minuteOnChange}\n                options={selectOptions(REMINDER_MINUTES)}\n                clearable={false}\n              />\n            </Row>\n          </FlexBody>\n        </Detail>\n      </>\n    );\n  }\n\n  renderCloseDate() {\n    const { closeDate } = this.state;\n\n    const onDateChange = date => {\n      this.setState({ closeDate: date }, () => {\n        this.saveItem('closeDate', closeDate);\n      });\n    };\n\n    const content = (\n      <Popover id=\"pipeline-popover\">\n        <Datetime\n          inputProps={{ placeholder: __('Click to select a date') }}\n          dateFormat=\"YYYY/MM/DD\"\n          timeFormat=\"HH:mm\"\n          value={closeDate}\n          closeOnSelect={true}\n          utc={true}\n          input={false}\n          onChange={onDateChange}\n          defaultValue={dayjs()\n            .startOf('day')\n            .add(12, 'hour')\n            .format('YYYY-MM-DD HH:mm:ss')}\n        />\n      </Popover>\n    );\n\n    return (\n      <OverlayTrigger\n        ref={overlayTrigger => {\n          this.overlayTrigger = overlayTrigger;\n        }}\n        trigger=\"click\"\n        placement=\"auto\"\n        overlay={content}\n        rootClose={true}\n        container={this}\n      >\n        <Date>\n          <Icon icon=\"calendar-alt\" />\n          <span>{dayjs(closeDate).format('MM/DD/YYYY')}</span>\n          <Icon icon=\"angle-down\" size={14} />\n        </Date>\n      </OverlayTrigger>\n    );\n  }\n\n  renderContent() {\n    const { task } = this.props;\n\n    const assignedUserIds = (task.assignedUsers || []).map(user => user._id);\n\n    const onAssignedUserSelect = usrs => {\n      this.saveItem('assignedUserIds', usrs);\n    };\n\n    return (\n      <>\n        <FlexContent>\n          <FlexBody>\n            <Row>\n              <ControlLabel>Assigned to</ControlLabel>\n              <SelectTeamMembers\n                label={__('Choose team member')}\n                name=\"assignedUserIds\"\n                value={assignedUserIds}\n                onSelect={onAssignedUserSelect}\n              />\n            </Row>\n          </FlexBody>\n\n          <FlexBody>\n            <ControlLabel>Due date</ControlLabel>\n            <FlexContent>{this.renderCloseDate()}</FlexContent>\n          </FlexBody>\n        </FlexContent>\n\n        {task.description && <Description>{task.description}</Description>}\n      </>\n    );\n  }\n\n  render() {\n    const { isComplete, showDetail, editing } = this.state;\n    const { createdUser, createdAt, boardId, _id } = this.props.task;\n\n    const onComplete = () => {\n      this.setState({ isComplete: !this.state.isComplete }, () => {\n        this.saveItem('isComplete', this.state.isComplete);\n      });\n    };\n\n    return (\n      <LogWrapper>\n        <FlexCenterContent>\n          <FlexBody>\n            <strong>\n              {createdUser && createdUser.details\n                ? createdUser.details.fullName || createdUser.email\n                : 'Undefined'}\n            </strong>{' '}\n            created a task\n          </FlexBody>\n          <Link to={`/task/board?_id=${boardId}&itemId=${_id}`} target=\"_blank\">\n            <JumpTo>\n              Jump to task\n              <Icon icon=\"corner-down-right-alt\" />\n            </JumpTo>\n          </Link>\n          <DeleteAction onClick={this.onRemove}>Delete</DeleteAction>\n          <Tip text={dayjs(createdAt).format('llll')}>\n            <ActivityDate>\n              {dayjs(createdAt).format('MMM D, h:mm A')}\n            </ActivityDate>\n          </Tip>\n        </FlexCenterContent>\n        <FlexContent>\n          <Tip\n            text={\n              isComplete ? __('Mark as incomplete') : __('Mark as complete')\n            }\n          >\n            <IconWrapper onClick={onComplete} isComplete={isComplete}>\n              <Icon icon=\"check-1\" size={25} />\n            </IconWrapper>\n          </Tip>\n          <Title isComplete={isComplete} isEditing={editing}>\n            {this.renderName()}\n            <Icon icon=\"edit\" />\n          </Title>\n        </FlexContent>\n        {!isComplete && this.renderContent()}\n        <Detail full={true}>\n          <Date\n            onClick={this.onChange.bind(this, 'showDetail')}\n            showDetail={showDetail}\n          >\n            <Icon icon=\"angle-right\" /> {__('Details')}\n          </Date>\n          {this.renderDetails()}\n        </Detail>\n      </LogWrapper>\n    );\n  }\n}\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}