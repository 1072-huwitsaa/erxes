{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/Insights.tsx\";\nimport { ResponsivePie } from '@nivo/pie';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Spinner from 'modules/common/components/Spinner';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { ChartWrapper, FlexItem, InsightTitle, LoaderWrapper } from '../styles';\n\nvar Insights =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Insights, _React$Component);\n\n  function Insights() {\n    _classCallCheck(this, Insights);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Insights).apply(this, arguments));\n  }\n\n  _createClass(Insights, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          loading = _this$props.loading,\n          title = _this$props.title;\n\n      if (loading) {\n        return React.createElement(LoaderWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          objective: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }));\n      }\n\n      var content;\n\n      if (data.length === 0) {\n        content = React.createElement(EmptyState, {\n          text: \"There is no data\",\n          size: \"full\",\n          icon: \"ban\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      } else {\n        content = React.createElement(ResponsivePie, {\n          data: data,\n          margin: {\n            top: 40,\n            right: 80,\n            bottom: 40,\n            left: 80\n          },\n          innerRadius: 0.5,\n          padAngle: 0.7,\n          cornerRadius: 3,\n          colors: \"nivo\",\n          colorBy: \"id\",\n          borderColor: \"inherit:darker(0.6)\",\n          radialLabelsSkipAngle: 10,\n          radialLabelsTextXOffset: 6,\n          radialLabelsTextColor: \"#333333\",\n          radialLabelsLinkOffset: 0,\n          radialLabelsLinkDiagonalLength: 16,\n          radialLabelsLinkHorizontalLength: 24,\n          radialLabelsLinkStrokeWidth: 1,\n          radialLabelsLinkColor: \"inherit\",\n          slicesLabelsSkipAngle: 10,\n          slicesLabelsTextColor: \"#333333\",\n          animate: true,\n          motionStiffness: 90,\n          motionDamping: 15,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(FlexItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(InsightTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __(title)), React.createElement(ChartWrapper, {\n        height: 320,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, content));\n    }\n  }]);\n\n  return Insights;\n}(React.Component);\n\nexport default Insights;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/insights/components/Insights.tsx"],"names":["ResponsivePie","EmptyState","Spinner","__","React","ChartWrapper","FlexItem","InsightTitle","LoaderWrapper","Insights","props","data","loading","title","content","length","top","right","bottom","left","Component"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,WAA9B;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,EAAT,QAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,YAAjC,EAA+CC,aAA/C,QAAoE,WAApE;;IASMC,Q;;;;;;;;;;;;;6BACK;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,OADP,eACOA,OADP;AAAA,UACgBC,KADhB,eACgBA,KADhB;;AAGP,UAAID,OAAJ,EAAa;AACX,eACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,SAAS,EAAE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD;;AAED,UAAIE,OAAJ;;AAEA,UAAIH,IAAI,CAACI,MAAL,KAAgB,CAApB,EAAuB;AACrBD,QAAAA,OAAO,GAAG,oBAAC,UAAD;AAAY,UAAA,IAAI,EAAC,kBAAjB;AAAoC,UAAA,IAAI,EAAC,MAAzC;AAAgD,UAAA,IAAI,EAAC,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACD,OAFD,MAEO;AACLA,QAAAA,OAAO,GACL,oBAAC,aAAD;AACE,UAAA,IAAI,EAAEH,IADR;AAEE,UAAA,MAAM,EAAE;AACNK,YAAAA,GAAG,EAAE,EADC;AAENC,YAAAA,KAAK,EAAE,EAFD;AAGNC,YAAAA,MAAM,EAAE,EAHF;AAINC,YAAAA,IAAI,EAAE;AAJA,WAFV;AAQE,UAAA,WAAW,EAAE,GARf;AASE,UAAA,QAAQ,EAAE,GATZ;AAUE,UAAA,YAAY,EAAE,CAVhB;AAWE,UAAA,MAAM,EAAC,MAXT;AAYE,UAAA,OAAO,EAAC,IAZV;AAaE,UAAA,WAAW,EAAC,qBAbd;AAcE,UAAA,qBAAqB,EAAE,EAdzB;AAeE,UAAA,uBAAuB,EAAE,CAf3B;AAgBE,UAAA,qBAAqB,EAAC,SAhBxB;AAiBE,UAAA,sBAAsB,EAAE,CAjB1B;AAkBE,UAAA,8BAA8B,EAAE,EAlBlC;AAmBE,UAAA,gCAAgC,EAAE,EAnBpC;AAoBE,UAAA,2BAA2B,EAAE,CApB/B;AAqBE,UAAA,qBAAqB,EAAC,SArBxB;AAsBE,UAAA,qBAAqB,EAAE,EAtBzB;AAuBE,UAAA,qBAAqB,EAAC,SAvBxB;AAwBE,UAAA,OAAO,EAAE,IAxBX;AAyBE,UAAA,eAAe,EAAE,EAzBnB;AA0BE,UAAA,aAAa,EAAE,EA1BjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;AAED,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAehB,EAAE,CAACU,KAAD,CAAjB,CADF,EAEE,oBAAC,YAAD;AAAc,QAAA,MAAM,EAAE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BC,OAA5B,CAFF,CADF;AAMD;;;;EAvDoBV,KAAK,CAACgB,S;;AA0D7B,eAAeX,QAAf","sourcesContent":["import { ResponsivePie } from '@nivo/pie';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Spinner from 'modules/common/components/Spinner';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { ChartWrapper, FlexItem, InsightTitle, LoaderWrapper } from '../styles';\nimport { IPieChartData } from '../types';\n\ntype Props = {\n  data: IPieChartData[];\n  loading: boolean;\n  title: string;\n};\n\nclass Insights extends React.Component<Props> {\n  render() {\n    const { data, loading, title } = this.props;\n\n    if (loading) {\n      return (\n        <LoaderWrapper>\n          <Spinner objective={true} />\n        </LoaderWrapper>\n      );\n    }\n\n    let content;\n\n    if (data.length === 0) {\n      content = <EmptyState text=\"There is no data\" size=\"full\" icon=\"ban\" />;\n    } else {\n      content = (\n        <ResponsivePie\n          data={data}\n          margin={{\n            top: 40,\n            right: 80,\n            bottom: 40,\n            left: 80\n          }}\n          innerRadius={0.5}\n          padAngle={0.7}\n          cornerRadius={3}\n          colors=\"nivo\"\n          colorBy=\"id\"\n          borderColor=\"inherit:darker(0.6)\"\n          radialLabelsSkipAngle={10}\n          radialLabelsTextXOffset={6}\n          radialLabelsTextColor=\"#333333\"\n          radialLabelsLinkOffset={0}\n          radialLabelsLinkDiagonalLength={16}\n          radialLabelsLinkHorizontalLength={24}\n          radialLabelsLinkStrokeWidth={1}\n          radialLabelsLinkColor=\"inherit\"\n          slicesLabelsSkipAngle={10}\n          slicesLabelsTextColor=\"#333333\"\n          animate={true}\n          motionStiffness={90}\n          motionDamping={15}\n        />\n      );\n    }\n\n    return (\n      <FlexItem>\n        <InsightTitle>{__(title)}</InsightTitle>\n        <ChartWrapper height={320}>{content}</ChartWrapper>\n      </FlexItem>\n    );\n  }\n}\n\nexport default Insights;\n"]},"metadata":{},"sourceType":"module"}