{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/components/MessageListRow.tsx\";\nimport dayjs from \"dayjs\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport ActionButtons from \"erxes-common-ui/lib/components/actionButtons\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport Label from \"modules/common/components/Label\";\nimport NameCard from \"modules/common/components/nameCard/NameCard\";\nimport Tags from \"modules/common/components/Tags\";\nimport Tip from \"modules/common/components/Tip\";\nimport { __ } from \"modules/common/utils\";\nimport { MESSAGE_KINDS, METHODS } from \"modules/engage/constants\";\nimport React from \"react\";\nimport { HelperText, RowTitle } from \"../styles\";\n\nvar Row =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Row, _React$Component);\n\n  function Row() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Row);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Row)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderRemoveButton = function (message, onClick) {\n      if (!message.kind.toLowerCase().includes(\"auto\")) {\n        return null;\n      }\n\n      return React.createElement(Tip, {\n        text: __(\"Delete\"),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"link\",\n        onClick: onClick,\n        icon: \"times-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }));\n    };\n\n    _this.toggleBulk = function (e) {\n      _this.props.toggleBulk(_this.props.message, e.target.checked);\n    };\n\n    _this.onClick = function () {\n      var message = _this.props.message;\n\n      if ([METHODS.EMAIL, METHODS.SMS].includes(message.method)) {\n        return _this.props.show();\n      }\n\n      if (message.kind !== MESSAGE_KINDS.MANUAL) {\n        return _this.props.edit();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Row, [{\n    key: \"renderLink\",\n    value: function renderLink(text, className, onClick) {\n      return React.createElement(Tip, {\n        text: __(text),\n        key: \"\".concat(text, \"-\").concat(this.props.message._id),\n        placement: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Button, {\n        btnStyle: \"link\",\n        onClick: onClick,\n        icon: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderLinks\",\n    value: function renderLinks() {\n      var msg = this.props.message;\n      var edit = this.renderLink(\"Edit\", \"edit-3\", this.props.edit);\n      var pause = this.renderLink(\"Pause\", \"pause-circle\", this.props.setPause);\n      var live = this.renderLink(\"Set live\", \"play-circle\", this.props.setLive);\n      var liveM = this.renderLink(\"Set live\", \"play-circle\", this.props.setLiveManual);\n      var show = this.renderLink(\"Show statistics\", \"eye\", this.props.show);\n      var links = [];\n\n      if ([METHODS.EMAIL, METHODS.SMS].includes(msg.method)) {\n        links.push(show);\n      }\n\n      if (msg.kind === MESSAGE_KINDS.MANUAL) {\n        if (msg.isDraft) {\n          return [].concat(links, [liveM]);\n        }\n\n        return links;\n      }\n\n      if (msg.isDraft) {\n        return [].concat(links, [edit, live]);\n      }\n\n      if (msg.isLive) {\n        return [].concat(links, [edit, pause]);\n      }\n\n      return [].concat(links, [edit, live]);\n    }\n  }, {\n    key: \"renderRules\",\n    value: function renderRules() {\n      var message = this.props.message;\n\n      if (message.segment) {\n        return React.createElement(HelperText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"chart-pie-alt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }), \" \", message.segment.name);\n      }\n\n      var messenger = message.messenger || {};\n      var rules = messenger.rules || [];\n      return rules.map(function (rule) {\n        return React.createElement(HelperText, {\n          key: rule._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"chart-pie-alt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }), \" \", rule.text, \" \", rule.condition, \" \", rule.value);\n      });\n    }\n  }, {\n    key: \"renderStatus\",\n    value: function renderStatus() {\n      var message = this.props.message;\n      var _message$stats = message.stats,\n          stats = _message$stats === void 0 ? {\n        send: \"\"\n      } : _message$stats,\n          kind = message.kind,\n          validCustomersCount = message.validCustomersCount,\n          _message$smsStats = message.smsStats,\n          smsStats = _message$smsStats === void 0 ? {\n        total: 0\n      } : _message$smsStats;\n      var totalCount = stats.total || 0;\n\n      if (!message.isLive) {\n        return React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"draft\");\n      }\n\n      if (kind === MESSAGE_KINDS.MANUAL) {\n        if (message.method === METHODS.MESSENGER || validCustomersCount === totalCount || validCustomersCount === smsStats.total) {\n          return React.createElement(Label, {\n            lblStyle: \"success\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          }, \"Sent\");\n        }\n\n        if (message.method === METHODS.SMS && smsStats.total === 0) {\n          return React.createElement(Label, {\n            lblStyle: \"warning\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }, \"Not sent\");\n        }\n      }\n\n      return React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Sending\");\n    }\n  }, {\n    key: \"renderType\",\n    value: function renderType(msg) {\n      var icon = \"multiply\";\n      var label = \"Other type\";\n\n      switch (msg.method) {\n        case METHODS.EMAIL:\n          icon = \"envelope\";\n          label = __(\"Email\");\n          break;\n\n        case METHODS.SMS:\n          icon = \"comment-alt-message\";\n          label = __(\"Sms\");\n          break;\n\n        case METHODS.MESSENGER:\n          icon = \"comment-1\";\n          label = __(\"Messenger\");\n          break;\n\n        default:\n          break;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), \" \", label);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isChecked = _this$props.isChecked,\n          message = _this$props.message,\n          remove = _this$props.remove;\n      var _message$stats2 = message.stats,\n          stats = _message$stats2 === void 0 ? {\n        send: \"\"\n      } : _message$stats2,\n          _message$brand = message.brand,\n          brand = _message$brand === void 0 ? {\n        name: \"\"\n      } : _message$brand;\n      var totalCount = stats.total || 0;\n      return React.createElement(\"tr\", {\n        key: message._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        checked: isChecked,\n        componentClass: \"checkbox\",\n        onChange: this.toggleBulk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(RowTitle, {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, message.title), message.isDraft ? React.createElement(Label, {\n        lblStyle: \"simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Draft\") : null, this.renderRules()), React.createElement(\"td\", {\n        className: \"text-normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(NameCard, {\n        user: message.fromUser,\n        avatarSize: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, this.renderStatus()), React.createElement(\"td\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"cube-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \" \", totalCount)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, this.renderType(message)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, brand ? brand.name : \"-\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"calender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), \" \", dayjs(message.createdAt).format(\"DD MMM YYYY\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Tags, {\n        tags: message.getTags,\n        limit: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(ActionButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, this.renderLinks(), this.renderRemoveButton(message, remove))));\n    }\n  }]);\n\n  return Row;\n}(React.Component);\n\nexport default Row;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/components/MessageListRow.tsx"],"names":["dayjs","Button","FormControl","ActionButtons","Icon","Label","NameCard","Tags","Tip","__","MESSAGE_KINDS","METHODS","React","HelperText","RowTitle","Row","renderRemoveButton","message","onClick","kind","toLowerCase","includes","toggleBulk","e","props","target","checked","EMAIL","SMS","method","show","MANUAL","edit","text","className","_id","msg","renderLink","pause","setPause","live","setLive","liveM","setLiveManual","links","push","isDraft","isLive","segment","name","messenger","rules","map","rule","condition","value","stats","send","validCustomersCount","smsStats","total","totalCount","MESSENGER","icon","label","isChecked","remove","brand","title","renderRules","fromUser","renderStatus","renderType","createdAt","format","getTags","renderLinks","Component"],"mappings":"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","sourcesContent":["import dayjs from \"dayjs\";\nimport Button from \"erxes-common-ui/lib/components/button\";\nimport FormControl from \"modules/common/components/form/Control\";\nimport ActionButtons from \"erxes-common-ui/lib/components/actionButtons\";\nimport Icon from \"erxes-common-ui/lib/components/icon\";\nimport Label from \"modules/common/components/Label\";\nimport NameCard from \"modules/common/components/nameCard/NameCard\";\nimport Tags from \"modules/common/components/Tags\";\nimport Tip from \"modules/common/components/Tip\";\nimport { __ } from \"modules/common/utils\";\nimport { MESSAGE_KINDS, METHODS } from \"modules/engage/constants\";\nimport React from \"react\";\nimport { HelperText, RowTitle } from \"../styles\";\nimport { IEngageMessage, IEngageMessenger } from \"../types\";\n\ntype Props = {\n  message: any;\n\n  // TODO: add types\n  edit: () => void;\n  show: () => void;\n  remove: () => void;\n  setLive: () => void;\n  setLiveManual: () => void;\n  setPause: () => void;\n\n  isChecked: boolean;\n  toggleBulk: (value: IEngageMessage, isChecked: boolean) => void;\n};\n\nclass Row extends React.Component<Props> {\n  renderLink(text, className, onClick) {\n    return (\n      <Tip\n        text={__(text)}\n        key={`${text}-${this.props.message._id}`}\n        placement=\"top\"\n      >\n        <Button btnStyle=\"link\" onClick={onClick} icon={className} />\n      </Tip>\n    );\n  }\n\n  renderLinks() {\n    const msg = this.props.message;\n\n    const edit = this.renderLink(\"Edit\", \"edit-3\", this.props.edit);\n    const pause = this.renderLink(\"Pause\", \"pause-circle\", this.props.setPause);\n    const live = this.renderLink(\"Set live\", \"play-circle\", this.props.setLive);\n    const liveM = this.renderLink(\n      \"Set live\",\n      \"play-circle\",\n      this.props.setLiveManual\n    );\n    const show = this.renderLink(\"Show statistics\", \"eye\", this.props.show);\n\n    const links: React.ReactNode[] = [];\n\n    if ([METHODS.EMAIL, METHODS.SMS].includes(msg.method)) {\n      links.push(show);\n    }\n\n    if (msg.kind === MESSAGE_KINDS.MANUAL) {\n      if (msg.isDraft) {\n        return [...links, liveM];\n      }\n\n      return links;\n    }\n\n    if (msg.isDraft) {\n      return [...links, edit, live];\n    }\n\n    if (msg.isLive) {\n      return [...links, edit, pause];\n    }\n\n    return [...links, edit, live];\n  }\n\n  renderRemoveButton = (message, onClick) => {\n    if (!message.kind.toLowerCase().includes(\"auto\")) {\n      return null;\n    }\n\n    return (\n      <Tip text={__(\"Delete\")} placement=\"top\">\n        <Button btnStyle=\"link\" onClick={onClick} icon=\"times-circle\" />\n      </Tip>\n    );\n  };\n\n  toggleBulk = (e) => {\n    this.props.toggleBulk(this.props.message, e.target.checked);\n  };\n\n  renderRules() {\n    const { message } = this.props;\n\n    if (message.segment) {\n      return (\n        <HelperText>\n          <Icon icon=\"chart-pie-alt\" /> {message.segment.name}\n        </HelperText>\n      );\n    }\n\n    const messenger = message.messenger || ({} as IEngageMessenger);\n    const rules = messenger.rules || [];\n\n    return rules.map((rule) => (\n      <HelperText key={rule._id}>\n        <Icon icon=\"chart-pie-alt\" /> {rule.text} {rule.condition} {rule.value}\n      </HelperText>\n    ));\n  }\n\n  onClick = () => {\n    const { message } = this.props;\n\n    if ([METHODS.EMAIL, METHODS.SMS].includes(message.method)) {\n      return this.props.show();\n    }\n\n    if (message.kind !== MESSAGE_KINDS.MANUAL) {\n      return this.props.edit();\n    }\n  };\n\n  renderStatus() {\n    const { message } = this.props;\n    const {\n      stats = { send: \"\" },\n      kind,\n      validCustomersCount,\n      smsStats = { total: 0 },\n    } = message;\n    const totalCount = stats.total || 0;\n\n    if (!message.isLive) {\n      return <Label>draft</Label>;\n    }\n\n    if (kind === MESSAGE_KINDS.MANUAL) {\n      if (\n        message.method === METHODS.MESSENGER ||\n        validCustomersCount === totalCount ||\n        validCustomersCount === smsStats.total\n      ) {\n        return <Label lblStyle=\"success\">Sent</Label>;\n      }\n\n      if (message.method === METHODS.SMS && smsStats.total === 0) {\n        return <Label lblStyle=\"warning\">Not sent</Label>;\n      }\n    }\n\n    return <Label>Sending</Label>;\n  }\n\n  renderType(msg) {\n    let icon: string = \"multiply\";\n    let label: string = \"Other type\";\n\n    switch (msg.method) {\n      case METHODS.EMAIL:\n        icon = \"envelope\";\n        label = __(\"Email\");\n\n        break;\n      case METHODS.SMS:\n        icon = \"comment-alt-message\";\n        label = __(\"Sms\");\n\n        break;\n      case METHODS.MESSENGER:\n        icon = \"comment-1\";\n        label = __(\"Messenger\");\n\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <div>\n        <Icon icon={icon} /> {label}\n      </div>\n    );\n  }\n\n  render() {\n    const { isChecked, message, remove } = this.props;\n    const { stats = { send: \"\" }, brand = { name: \"\" } } = message;\n    const totalCount = stats.total || 0;\n\n    return (\n      <tr key={message._id}>\n        <td>\n          <FormControl\n            checked={isChecked}\n            componentClass=\"checkbox\"\n            onChange={this.toggleBulk}\n          />\n        </td>\n        <td>\n          <RowTitle onClick={this.onClick}>{message.title}</RowTitle>\n          {message.isDraft ? <Label lblStyle=\"simple\">Draft</Label> : null}\n          {this.renderRules()}\n        </td>\n        <td className=\"text-normal\">\n          <NameCard user={message.fromUser} avatarSize={30} />\n        </td>\n        <td>{this.renderStatus()}</td>\n        <td className=\"text-primary\">\n          <Icon icon=\"cube-2\" />\n          <b> {totalCount}</b>\n        </td>\n        <td>{this.renderType(message)}</td>\n\n        <td>\n          <b>{brand ? brand.name : \"-\"}</b>\n        </td>\n\n        <td>\n          <Icon icon=\"calender\" />{\" \"}\n          {dayjs(message.createdAt).format(\"DD MMM YYYY\")}\n        </td>\n\n        <td>\n          <Tags tags={message.getTags} limit={1} />\n        </td>\n\n        <td>\n          <ActionButtons>\n            {this.renderLinks()}\n            {this.renderRemoveButton(message, remove)}\n          </ActionButtons>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}