{"ast":null,"code":"import GrowthHackEditForm from 'modules/growthHacks/containers/GrowthHackEditForm';\nimport GrowthHackItem from './components/GrowthHackItem';\nimport { mutations, queries } from './graphql';\nvar options = {\n  EditForm: GrowthHackEditForm,\n  Item: GrowthHackItem,\n  type: 'growthHack',\n  title: 'Growth hacking',\n  queriesName: {\n    itemsQuery: 'growthHacks',\n    detailQuery: 'growthHackDetail',\n    archivedItemsQuery: 'archivedGrowthHacks',\n    archivedItemsCountQuery: 'archivedGrowthHacksCount'\n  },\n  mutationsName: {\n    addMutation: 'growthHacksAdd',\n    editMutation: 'growthHacksEdit',\n    removeMutation: 'growthHacksRemove',\n    changeMutation: 'growthHacksChange',\n    watchMutation: 'growthHacksWatch',\n    archiveMutation: 'growthHacksArchive',\n    copyMutation: 'growthHacksCopy'\n  },\n  queries: {\n    itemsQuery: queries.growthHacks,\n    detailQuery: queries.growthHackDetail,\n    archivedItemsQuery: queries.archivedGrowthHacks,\n    archivedItemsCountQuery: queries.archivedGrowthHacksCount\n  },\n  mutations: {\n    addMutation: mutations.growthHacksAdd,\n    editMutation: mutations.growthHacksEdit,\n    removeMutation: mutations.growthHacksRemove,\n    changeMutation: mutations.growthHacksChange,\n    watchMutation: mutations.growthHacksWatch,\n    archiveMutation: mutations.growthHacksArchive,\n    copyMutation: mutations.growthHacksCopy\n  },\n  texts: {\n    addText: 'Add an experiment',\n    updateSuccessText: 'You successfully updated an experiment',\n    deleteSuccessText: 'You successfully deleted an experiment',\n    copySuccessText: 'You successfully copied an experiment',\n    changeSuccessText: 'You successfully changed an experiment'\n  },\n  isMove: false,\n  getExtraParams: function getExtraParams(queryParams) {\n    var priority = queryParams.priority,\n        hackStage = queryParams.hackStage;\n    var extraParams = {};\n\n    if (priority) {\n      extraParams.priority = priority;\n    }\n\n    if (hackStage) {\n      extraParams.hackStage = hackStage;\n    }\n\n    return extraParams;\n  }\n};\nexport default options;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/growthHacks/options.ts"],"names":["GrowthHackEditForm","GrowthHackItem","mutations","queries","options","EditForm","Item","type","title","queriesName","itemsQuery","detailQuery","archivedItemsQuery","archivedItemsCountQuery","mutationsName","addMutation","editMutation","removeMutation","changeMutation","watchMutation","archiveMutation","copyMutation","growthHacks","growthHackDetail","archivedGrowthHacks","archivedGrowthHacksCount","growthHacksAdd","growthHacksEdit","growthHacksRemove","growthHacksChange","growthHacksWatch","growthHacksArchive","growthHacksCopy","texts","addText","updateSuccessText","deleteSuccessText","copySuccessText","changeSuccessText","isMove","getExtraParams","queryParams","priority","hackStage","extraParams"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,mDAA/B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,WAAnC;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAEL,kBADI;AAEdM,EAAAA,IAAI,EAAEL,cAFQ;AAGdM,EAAAA,IAAI,EAAE,YAHQ;AAIdC,EAAAA,KAAK,EAAE,gBAJO;AAKdC,EAAAA,WAAW,EAAE;AACXC,IAAAA,UAAU,EAAE,aADD;AAEXC,IAAAA,WAAW,EAAE,kBAFF;AAGXC,IAAAA,kBAAkB,EAAE,qBAHT;AAIXC,IAAAA,uBAAuB,EAAE;AAJd,GALC;AAWdC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,gBADA;AAEbC,IAAAA,YAAY,EAAE,iBAFD;AAGbC,IAAAA,cAAc,EAAE,mBAHH;AAIbC,IAAAA,cAAc,EAAE,mBAJH;AAKbC,IAAAA,aAAa,EAAE,kBALF;AAMbC,IAAAA,eAAe,EAAE,oBANJ;AAObC,IAAAA,YAAY,EAAE;AAPD,GAXD;AAoBdlB,EAAAA,OAAO,EAAE;AACPO,IAAAA,UAAU,EAAEP,OAAO,CAACmB,WADb;AAEPX,IAAAA,WAAW,EAAER,OAAO,CAACoB,gBAFd;AAGPX,IAAAA,kBAAkB,EAAET,OAAO,CAACqB,mBAHrB;AAIPX,IAAAA,uBAAuB,EAAEV,OAAO,CAACsB;AAJ1B,GApBK;AA0BdvB,EAAAA,SAAS,EAAE;AACTa,IAAAA,WAAW,EAAEb,SAAS,CAACwB,cADd;AAETV,IAAAA,YAAY,EAAEd,SAAS,CAACyB,eAFf;AAGTV,IAAAA,cAAc,EAAEf,SAAS,CAAC0B,iBAHjB;AAITV,IAAAA,cAAc,EAAEhB,SAAS,CAAC2B,iBAJjB;AAKTV,IAAAA,aAAa,EAAEjB,SAAS,CAAC4B,gBALhB;AAMTV,IAAAA,eAAe,EAAElB,SAAS,CAAC6B,kBANlB;AAOTV,IAAAA,YAAY,EAAEnB,SAAS,CAAC8B;AAPf,GA1BG;AAmCdC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,mBADJ;AAELC,IAAAA,iBAAiB,EAAE,wCAFd;AAGLC,IAAAA,iBAAiB,EAAE,wCAHd;AAILC,IAAAA,eAAe,EAAE,uCAJZ;AAKLC,IAAAA,iBAAiB,EAAE;AALd,GAnCO;AA0CdC,EAAAA,MAAM,EAAE,KA1CM;AA2CdC,EAAAA,cAAc,EAAE,wBAACC,WAAD,EAAsB;AAAA,QAC5BC,QAD4B,GACJD,WADI,CAC5BC,QAD4B;AAAA,QAClBC,SADkB,GACJF,WADI,CAClBE,SADkB;AAEpC,QAAMC,WAAgB,GAAG,EAAzB;;AAEA,QAAIF,QAAJ,EAAc;AACZE,MAAAA,WAAW,CAACF,QAAZ,GAAuBA,QAAvB;AACD;;AAED,QAAIC,SAAJ,EAAe;AACbC,MAAAA,WAAW,CAACD,SAAZ,GAAwBA,SAAxB;AACD;;AAED,WAAOC,WAAP;AACD;AAxDa,CAAhB;AA2DA,eAAexC,OAAf","sourcesContent":["import GrowthHackEditForm from 'modules/growthHacks/containers/GrowthHackEditForm';\nimport GrowthHackItem from './components/GrowthHackItem';\nimport { mutations, queries } from './graphql';\n\nconst options = {\n  EditForm: GrowthHackEditForm,\n  Item: GrowthHackItem,\n  type: 'growthHack',\n  title: 'Growth hacking',\n  queriesName: {\n    itemsQuery: 'growthHacks',\n    detailQuery: 'growthHackDetail',\n    archivedItemsQuery: 'archivedGrowthHacks',\n    archivedItemsCountQuery: 'archivedGrowthHacksCount'\n  },\n  mutationsName: {\n    addMutation: 'growthHacksAdd',\n    editMutation: 'growthHacksEdit',\n    removeMutation: 'growthHacksRemove',\n    changeMutation: 'growthHacksChange',\n    watchMutation: 'growthHacksWatch',\n    archiveMutation: 'growthHacksArchive',\n    copyMutation: 'growthHacksCopy'\n  },\n  queries: {\n    itemsQuery: queries.growthHacks,\n    detailQuery: queries.growthHackDetail,\n    archivedItemsQuery: queries.archivedGrowthHacks,\n    archivedItemsCountQuery: queries.archivedGrowthHacksCount\n  },\n  mutations: {\n    addMutation: mutations.growthHacksAdd,\n    editMutation: mutations.growthHacksEdit,\n    removeMutation: mutations.growthHacksRemove,\n    changeMutation: mutations.growthHacksChange,\n    watchMutation: mutations.growthHacksWatch,\n    archiveMutation: mutations.growthHacksArchive,\n    copyMutation: mutations.growthHacksCopy\n  },\n  texts: {\n    addText: 'Add an experiment',\n    updateSuccessText: 'You successfully updated an experiment',\n    deleteSuccessText: 'You successfully deleted an experiment',\n    copySuccessText: 'You successfully copied an experiment',\n    changeSuccessText: 'You successfully changed an experiment'\n  },\n  isMove: false,\n  getExtraParams: (queryParams: any) => {\n    const { priority, hackStage } = queryParams;\n    const extraParams: any = {};\n\n    if (priority) {\n      extraParams.priority = priority;\n    }\n\n    if (hackStage) {\n      extraParams.hackStage = hackStage;\n    }\n\n    return extraParams;\n  }\n};\n\nexport default options;\n"]},"metadata":{},"sourceType":"module"}