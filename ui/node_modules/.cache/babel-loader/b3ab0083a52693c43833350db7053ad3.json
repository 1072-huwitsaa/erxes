{"ast":null,"code":"import _slicedToArray from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/auth/components/OwnerSetup.tsx\";\nimport Button from 'erxes-common-ui/lib/components/button';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { FormControl, FormGroup } from 'modules/common/components/form';\nimport { __, Alert } from 'modules/common/utils';\nimport { PasswordWithEye } from 'modules/layout/styles';\nimport React from 'react';\nimport { useState } from 'react';\nimport { AuthBox } from '../styles';\nexport var OwnerDescription = function OwnerDescription() {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __('Welcome to erxes')), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __('Erxes is the partner your website needs for success')), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __('You will configure several settings on this page. You will be able to change these settings in the erxes settings tab. You will be creating the top level administrator account profile. Please complete all the data in Initial Configuration Steps.')));\n};\n\nvar OwnerSetup = function OwnerSetup(props) {\n  var createOwner = props.createOwner;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      firstName = _useState6[0],\n      setFirstName = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lastName = _useState8[0],\n      setLastName = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      subscribeEmail = _useState10[0],\n      setSubscribeEmail = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      showPassword = _useState12[0],\n      setShowPassword = _useState12[1];\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!firstName) {\n      return Alert.error('We would love your real first name, but you are free to choose any name you want to be called.');\n    }\n\n    if (!email) {\n      return Alert.error('Your best email address is required. You will want to receive these notifications.');\n    }\n\n    if (!password) {\n      return Alert.error('Your password is required.');\n    }\n\n    createOwner({\n      email: email,\n      password: password,\n      firstName: firstName,\n      lastName: lastName,\n      subscribeEmail: subscribeEmail\n    });\n  };\n\n  var handleFirstName = function handleFirstName(e) {\n    e.preventDefault();\n    setFirstName(e.target.value);\n  };\n\n  var handleLastName = function handleLastName(e) {\n    e.preventDefault();\n    setLastName(e.target.value);\n  };\n\n  var handleEmail = function handleEmail(e) {\n    e.preventDefault();\n    setEmail(e.target.value);\n  };\n\n  var handlePassword = function handlePassword(e) {\n    e.preventDefault();\n    setPassword(e.target.value);\n  };\n\n  var toggleSubscribeEmail = function toggleSubscribeEmail(e) {\n    setSubscribeEmail(e.target.checked);\n  };\n\n  var toggleShowPassword = function toggleShowPassword() {\n    setShowPassword(!showPassword);\n  };\n\n  return React.createElement(AuthBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __('Initial Configuration Steps')), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __('Please fill out the following form to complete your installation'), \".\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    placeholder: \"First name\",\n    type: \"text\",\n    name: \"firstName\",\n    onChange: handleFirstName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    placeholder: \"Last name\",\n    type: \"text\",\n    name: \"lastName\",\n    onChange: handleLastName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, __('Please input the best email address to use as your login and to receive emails from your installation such as notifications, alerts and other messages'), \".\"), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    placeholder: \"Email\",\n    type: \"text\",\n    name: \"email\",\n    onChange: handleEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(PasswordWithEye, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    placeholder: \"Password\",\n    type: showPassword ? 'text' : 'password',\n    name: \"password\",\n    onChange: handlePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(Icon, {\n    onClick: toggleShowPassword,\n    size: 16,\n    icon: showPassword ? 'eye-slash' : 'eye',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, __('You must check below to receive information about upgrades and upgrading instructions, new tutorials, occasional requests for feedback and the monthly newsletter'), \".\"), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: \"toggle-message\",\n    componentClass: \"checkbox\",\n    checked: subscribeEmail,\n    onChange: toggleSubscribeEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, __('Yes, I want in. I know I can unsubscribe easily at any time'), \".\")), React.createElement(Button, {\n    btnStyle: \"success\",\n    type: \"submit\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Save and continue to login\")));\n};\n\nexport default OwnerSetup;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/auth/components/OwnerSetup.tsx"],"names":["Button","Icon","FormControl","FormGroup","__","Alert","PasswordWithEye","React","useState","AuthBox","OwnerDescription","OwnerSetup","props","createOwner","email","setEmail","password","setPassword","firstName","setFirstName","lastName","setLastName","subscribeEmail","setSubscribeEmail","showPassword","setShowPassword","handleSubmit","e","preventDefault","error","handleFirstName","target","value","handleLastName","handleEmail","handlePassword","toggleSubscribeEmail","checked","toggleShowPassword"],"mappings":"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","sourcesContent":["import Button from 'erxes-common-ui/lib/components/button';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport { FormControl, FormGroup } from 'modules/common/components/form';\nimport { __, Alert } from 'modules/common/utils';\nimport { PasswordWithEye } from 'modules/layout/styles';\nimport React from 'react';\nimport { useState } from 'react';\nimport { AuthBox } from '../styles';\nimport { IOwner } from '../types';\n\ntype Props = {\n  createOwner: (arg: IOwner) => void;\n};\n\nexport const OwnerDescription = () => {\n  return (\n    <>\n      <h1>{__('Welcome to erxes')}</h1>\n      <h2>{__('Erxes is the partner your website needs for success')}</h2>\n      <p>\n        {__(\n          'You will configure several settings on this page. You will be able to change these settings in the erxes settings tab. You will be creating the top level administrator account profile. Please complete all the data in Initial Configuration Steps.'\n        )}\n      </p>\n    </>\n  );\n};\n\nconst OwnerSetup = (props: Props) => {\n  const { createOwner } = props;\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [subscribeEmail, setSubscribeEmail] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!firstName) {\n      return Alert.error(\n        'We would love your real first name, but you are free to choose any name you want to be called.'\n      );\n    }\n\n    if (!email) {\n      return Alert.error(\n        'Your best email address is required. You will want to receive these notifications.'\n      );\n    }\n\n    if (!password) {\n      return Alert.error('Your password is required.');\n    }\n\n    createOwner({\n      email,\n      password,\n      firstName,\n      lastName,\n      subscribeEmail\n    });\n  };\n\n  const handleFirstName = e => {\n    e.preventDefault();\n\n    setFirstName(e.target.value);\n  };\n\n  const handleLastName = e => {\n    e.preventDefault();\n\n    setLastName(e.target.value);\n  };\n\n  const handleEmail = e => {\n    e.preventDefault();\n\n    setEmail(e.target.value);\n  };\n\n  const handlePassword = e => {\n    e.preventDefault();\n\n    setPassword(e.target.value);\n  };\n\n  const toggleSubscribeEmail = e => {\n    setSubscribeEmail(e.target.checked);\n  };\n\n  const toggleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <AuthBox>\n      <h2>{__('Initial Configuration Steps')}</h2>\n      <p>\n        {__('Please fill out the following form to complete your installation')}\n        .\n      </p>\n      <form onSubmit={handleSubmit}>\n        <FormGroup>\n          <FormControl\n            placeholder=\"First name\"\n            type=\"text\"\n            name=\"firstName\"\n            onChange={handleFirstName}\n          />\n        </FormGroup>\n        <FormGroup>\n          <FormControl\n            placeholder=\"Last name\"\n            type=\"text\"\n            name=\"lastName\"\n            onChange={handleLastName}\n          />\n        </FormGroup>\n        <br />\n        <p>\n          {__(\n            'Please input the best email address to use as your login and to receive emails from your installation such as notifications, alerts and other messages'\n          )}\n          .\n        </p>\n        <FormGroup>\n          <FormControl\n            placeholder=\"Email\"\n            type=\"text\"\n            name=\"email\"\n            onChange={handleEmail}\n          />\n        </FormGroup>\n        <FormGroup>\n          <PasswordWithEye>\n            <FormControl\n              placeholder=\"Password\"\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              onChange={handlePassword}\n            />\n\n            <Icon\n              onClick={toggleShowPassword}\n              size={16}\n              icon={showPassword ? 'eye-slash' : 'eye'}\n            />\n          </PasswordWithEye>\n        </FormGroup>\n        <br />\n        <p>\n          {__(\n            'You must check below to receive information about upgrades and upgrading instructions, new tutorials, occasional requests for feedback and the monthly newsletter'\n          )}\n          .\n        </p>\n\n        <FormGroup>\n          <FormControl\n            className=\"toggle-message\"\n            componentClass=\"checkbox\"\n            checked={subscribeEmail}\n            onChange={toggleSubscribeEmail}\n          >\n            {__('Yes, I want in. I know I can unsubscribe easily at any time')}.\n          </FormControl>\n        </FormGroup>\n        <Button btnStyle=\"success\" type=\"submit\" block={true}>\n          Save and continue to login\n        </Button>\n      </form>\n    </AuthBox>\n  );\n};\n\nexport default OwnerSetup;\n"]},"metadata":{},"sourceType":"module"}