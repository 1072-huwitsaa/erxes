{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/stage/Stage.tsx\";\nimport { ActionButton, ActionList, AddNew, Body, Container, Header, HeaderAmount, Indicator, IndicatorItem, LoadingContent, StageFooter, StageRoot, StageTitle } from 'modules/boards/styles/stage';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { OverlayTrigger, Popover } from 'react-bootstrap';\nimport { AddForm } from '../../containers/portable';\nimport { renderAmount } from '../../utils';\nimport ItemList from '../stage/ItemList';\n\nvar Stage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Stage, _React$Component);\n\n  function Stage(props) {\n    var _this;\n\n    _classCallCheck(this, Stage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Stage).call(this, props));\n    _this.bodyRef = void 0;\n    _this.overlayTrigger = void 0;\n\n    _this.onScroll = function (e) {\n      var target = e.currentTarget;\n      var bottom = Math.round(target.scrollHeight - target.scrollTop) <= target.clientHeight;\n\n      if (bottom) {\n        _this.props.loadMore();\n      }\n    };\n\n    _this.onClosePopover = function () {\n      _this.overlayTrigger.hide();\n    };\n\n    _this.bodyRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Stage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Load items until scroll created\n      var handle = setInterval(function () {\n        if (_this2.props.loadingItems()) {\n          return;\n        }\n\n        var current = _this2.bodyRef.current;\n\n        if (!current) {\n          return;\n        }\n\n        var isScrolled = current.scrollHeight > current.clientHeight;\n\n        if (isScrolled) {\n          return clearInterval(handle);\n        }\n\n        var _this2$props = _this2.props,\n            items = _this2$props.items,\n            stage = _this2$props.stage;\n\n        if (items.length < stage.itemsTotalCount) {\n          return _this2.props.loadMore();\n        } else {\n          return clearInterval(handle);\n        }\n      }, 1000);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _this$props = this.props,\n          stage = _this$props.stage,\n          index = _this$props.index,\n          length = _this$props.length,\n          items = _this$props.items,\n          loadingItems = _this$props.loadingItems;\n\n      if (index !== nextProps.index || loadingItems() !== nextProps.loadingItems() || length !== nextProps.length || JSON.stringify(stage) !== JSON.stringify(nextProps.stage) || JSON.stringify(items) !== JSON.stringify(nextProps.items)) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"renderAddItemTrigger\",\n    value: function renderAddItemTrigger() {\n      var _this$props2 = this.props,\n          options = _this$props2.options,\n          stage = _this$props2.stage,\n          onAddItem = _this$props2.onAddItem,\n          items = _this$props2.items;\n      var addText = options.texts.addText;\n      var trigger = React.createElement(StageFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(AddNew, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"plus-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), __(addText)));\n      var formProps = {\n        options: options,\n        showSelect: false,\n        callback: function callback(item) {\n          return onAddItem(stage._id, item);\n        },\n        stageId: stage._id,\n        aboveItemId: items.length > 0 ? items[items.length - 1]._id : ''\n      };\n\n      var content = function content(props) {\n        return React.createElement(AddForm, Object.assign({}, props, formProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }));\n      };\n\n      return React.createElement(ModalTrigger, {\n        title: addText,\n        trigger: trigger,\n        content: content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderIndicator\",\n    value: function renderIndicator() {\n      var index = this.props.index || 0;\n      var length = this.props.length || 0;\n      var data = [];\n\n      for (var i = 0; i < length; i++) {\n        data.push(React.createElement(IndicatorItem, {\n          isPass: index >= i,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }));\n      }\n\n      return data;\n    }\n  }, {\n    key: \"renderItemList\",\n    value: function renderItemList() {\n      var _this$props3 = this.props,\n          stage = _this$props3.stage,\n          items = _this$props3.items,\n          loadingItems = _this$props3.loadingItems,\n          options = _this$props3.options,\n          onRemoveItem = _this$props3.onRemoveItem;\n\n      if (loadingItems()) {\n        return React.createElement(LoadingContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          alt: \"Loading\",\n          src: \"/images/loading-content.gif\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(ItemList, {\n        listId: stage._id,\n        stageId: stage._id,\n        items: items,\n        options: options,\n        onRemoveItem: onRemoveItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderPopover\",\n    value: function renderPopover() {\n      var _this3 = this;\n\n      var stage = this.props.stage;\n\n      var archiveList = function archiveList() {\n        _this3.props.archiveList();\n\n        _this3.onClosePopover();\n      };\n\n      var archiveItems = function archiveItems() {\n        _this3.props.archiveItems();\n\n        _this3.onClosePopover();\n      };\n\n      var removeStage = function removeStage() {\n        _this3.props.removeStage(stage._id);\n\n        _this3.onClosePopover();\n      };\n\n      return React.createElement(Popover, {\n        id: \"stage-popover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(ActionList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: archiveItems,\n        key: \"archive-items\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, __('Archive All Cards in This List')), React.createElement(\"li\", {\n        onClick: archiveList,\n        key: \"archive-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, __('Archive This List')), React.createElement(\"li\", {\n        onClick: removeStage,\n        key: \"remove-stage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, __('Remove stage'))));\n    }\n  }, {\n    key: \"renderCtrl\",\n    value: function renderCtrl() {\n      var _this4 = this;\n\n      return React.createElement(OverlayTrigger, {\n        ref: function ref(overlayTrigger) {\n          _this4.overlayTrigger = overlayTrigger;\n        },\n        trigger: \"click\",\n        placement: \"bottom-start\",\n        rootClose: true,\n        container: this,\n        overlay: this.renderPopover(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(ActionButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        icon: \"ellipsis-h\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$props4 = this.props,\n          index = _this$props4.index,\n          stage = _this$props4.stage;\n\n      if (!stage) {\n        return React.createElement(EmptyState, {\n          icon: \"columns-1\",\n          text: \"No stage\",\n          size: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Draggable, {\n        draggableId: stage._id,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, function (provided, snapshot) {\n        return React.createElement(Container, Object.assign({\n          innerRef: provided.innerRef\n        }, provided.draggableProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }), React.createElement(StageRoot, {\n          isDragging: snapshot.isDragging,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, React.createElement(Header, Object.assign({}, provided.dragHandleProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }), React.createElement(StageTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, stage.name, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, stage.itemsTotalCount)), _this5.renderCtrl()), React.createElement(HeaderAmount, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, renderAmount(stage.amount)), React.createElement(Indicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, _this5.renderIndicator())), React.createElement(Body, {\n          innerRef: _this5.bodyRef,\n          onScroll: _this5.onScroll,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, _this5.renderItemList()), _this5.renderAddItemTrigger()));\n      });\n    }\n  }]);\n\n  return Stage;\n}(React.Component);\n\nexport { Stage as default };","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/boards/components/stage/Stage.tsx"],"names":["ActionButton","ActionList","AddNew","Body","Container","Header","HeaderAmount","Indicator","IndicatorItem","LoadingContent","StageFooter","StageRoot","StageTitle","EmptyState","Icon","ModalTrigger","__","React","Draggable","OverlayTrigger","Popover","AddForm","renderAmount","ItemList","Stage","props","bodyRef","overlayTrigger","onScroll","e","target","currentTarget","bottom","Math","round","scrollHeight","scrollTop","clientHeight","loadMore","onClosePopover","hide","createRef","handle","setInterval","loadingItems","current","isScrolled","clearInterval","items","stage","length","itemsTotalCount","nextProps","index","JSON","stringify","options","onAddItem","addText","texts","trigger","formProps","showSelect","callback","item","_id","stageId","aboveItemId","content","data","i","push","onRemoveItem","archiveList","archiveItems","removeStage","renderPopover","provided","snapshot","innerRef","draggableProps","isDragging","dragHandleProps","name","renderCtrl","amount","renderIndicator","renderItemList","renderAddItemTrigger","Component"],"mappings":"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","sourcesContent":["import {\n  ActionButton,\n  ActionList,\n  AddNew,\n  Body,\n  Container,\n  Header,\n  HeaderAmount,\n  Indicator,\n  IndicatorItem,\n  LoadingContent,\n  StageFooter,\n  StageRoot,\n  StageTitle\n} from 'modules/boards/styles/stage';\nimport EmptyState from 'modules/common/components/EmptyState';\nimport Icon from 'erxes-common-ui/lib/components/icon';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport { __ } from 'modules/common/utils';\nimport React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { OverlayTrigger, Popover } from 'react-bootstrap';\nimport { AddForm } from '../../containers/portable';\nimport { IItem, IOptions, IStage } from '../../types';\nimport { renderAmount } from '../../utils';\nimport ItemList from '../stage/ItemList';\n\ntype Props = {\n  loadingItems: () => boolean;\n  removeStage: (stageId: string) => void;\n  index: number;\n  stage: IStage;\n  length: number;\n  items: IItem[];\n  onAddItem: (stageId: string, item: IItem) => void;\n  onRemoveItem: (itemId: string, stageId: string) => void;\n  loadMore: () => void;\n  options: IOptions;\n  archiveItems: () => void;\n  archiveList: () => void;\n};\nexport default class Stage extends React.Component<Props, {}> {\n  private bodyRef;\n  private overlayTrigger;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.bodyRef = React.createRef();\n  }\n\n  componentDidMount() {\n    // Load items until scroll created\n    const handle = setInterval(() => {\n      if (this.props.loadingItems()) {\n        return;\n      }\n\n      const { current } = this.bodyRef;\n\n      if (!current) {\n        return;\n      }\n\n      const isScrolled = current.scrollHeight > current.clientHeight;\n\n      if (isScrolled) {\n        return clearInterval(handle);\n      }\n\n      const { items, stage } = this.props;\n\n      if (items.length < stage.itemsTotalCount) {\n        return this.props.loadMore();\n      } else {\n        return clearInterval(handle);\n      }\n    }, 1000);\n  }\n\n  shouldComponentUpdate(nextProps: Props) {\n    const { stage, index, length, items, loadingItems } = this.props;\n\n    if (\n      index !== nextProps.index ||\n      loadingItems() !== nextProps.loadingItems() ||\n      length !== nextProps.length ||\n      JSON.stringify(stage) !== JSON.stringify(nextProps.stage) ||\n      JSON.stringify(items) !== JSON.stringify(nextProps.items)\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  onScroll = (e: React.UIEvent<HTMLDivElement>) => {\n    const target = e.currentTarget;\n    const bottom =\n      Math.round(target.scrollHeight - target.scrollTop) <= target.clientHeight;\n\n    if (bottom) {\n      this.props.loadMore();\n    }\n  };\n\n  renderAddItemTrigger() {\n    const { options, stage, onAddItem, items } = this.props;\n    const addText = options.texts.addText;\n\n    const trigger = (\n      <StageFooter>\n        <AddNew>\n          <Icon icon=\"plus-1\" />\n          {__(addText)}\n        </AddNew>\n      </StageFooter>\n    );\n\n    const formProps = {\n      options,\n      showSelect: false,\n      callback: (item: IItem) => onAddItem(stage._id, item),\n      stageId: stage._id,\n      aboveItemId: items.length > 0 ? items[items.length - 1]._id : ''\n    };\n\n    const content = props => <AddForm {...props} {...formProps} />;\n\n    return <ModalTrigger title={addText} trigger={trigger} content={content} />;\n  }\n\n  renderIndicator() {\n    const index = this.props.index || 0;\n    const length = this.props.length || 0;\n\n    const data: any = [];\n\n    for (let i = 0; i < length; i++) {\n      data.push(<IndicatorItem isPass={index >= i} key={i} />);\n    }\n\n    return data;\n  }\n\n  onClosePopover = () => {\n    this.overlayTrigger.hide();\n  };\n\n  renderItemList() {\n    const { stage, items, loadingItems, options, onRemoveItem } = this.props;\n\n    if (loadingItems()) {\n      return (\n        <LoadingContent>\n          <img alt=\"Loading\" src=\"/images/loading-content.gif\" />\n        </LoadingContent>\n      );\n    }\n\n    return (\n      <ItemList\n        listId={stage._id}\n        stageId={stage._id}\n        items={items}\n        options={options}\n        onRemoveItem={onRemoveItem}\n      />\n    );\n  }\n\n  renderPopover() {\n    const { stage } = this.props;\n\n    const archiveList = () => {\n      this.props.archiveList();\n      this.onClosePopover();\n    };\n\n    const archiveItems = () => {\n      this.props.archiveItems();\n      this.onClosePopover();\n    };\n\n    const removeStage = () => {\n      this.props.removeStage(stage._id);\n      this.onClosePopover();\n    };\n\n    return (\n      <Popover id=\"stage-popover\">\n        <ActionList>\n          <li onClick={archiveItems} key=\"archive-items\">\n            {__('Archive All Cards in This List')}\n          </li>\n          <li onClick={archiveList} key=\"archive-list\">\n            {__('Archive This List')}\n          </li>\n          <li onClick={removeStage} key=\"remove-stage\">\n            {__('Remove stage')}\n          </li>\n        </ActionList>\n      </Popover>\n    );\n  }\n\n  renderCtrl() {\n    return (\n      <OverlayTrigger\n        ref={overlayTrigger => {\n          this.overlayTrigger = overlayTrigger;\n        }}\n        trigger=\"click\"\n        placement=\"bottom-start\"\n        rootClose={true}\n        container={this}\n        overlay={this.renderPopover()}\n      >\n        <ActionButton>\n          <Icon icon=\"ellipsis-h\" />\n        </ActionButton>\n      </OverlayTrigger>\n    );\n  }\n\n  render() {\n    const { index, stage } = this.props;\n\n    if (!stage) {\n      return <EmptyState icon=\"columns-1\" text=\"No stage\" size=\"small\" />;\n    }\n\n    return (\n      <Draggable draggableId={stage._id} index={index}>\n        {(provided, snapshot) => (\n          <Container innerRef={provided.innerRef} {...provided.draggableProps}>\n            <StageRoot isDragging={snapshot.isDragging}>\n              <Header {...provided.dragHandleProps}>\n                <StageTitle>\n                  <div>\n                    {stage.name}\n                    <span>{stage.itemsTotalCount}</span>\n                  </div>\n                  {this.renderCtrl()}\n                </StageTitle>\n                <HeaderAmount>{renderAmount(stage.amount)}</HeaderAmount>\n                <Indicator>{this.renderIndicator()}</Indicator>\n              </Header>\n              <Body innerRef={this.bodyRef} onScroll={this.onScroll}>\n                {this.renderItemList()}\n              </Body>\n              {this.renderAddItemTrigger()}\n            </StageRoot>\n          </Container>\n        )}\n      </Draggable>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}