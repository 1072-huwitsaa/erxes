{"ast":null,"code":"import _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/components/MessageList.tsx\";\nimport Button from 'modules/common/components/Button';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport EmptyContent from 'modules/common/components/empty/EmptyContent';\nimport FormControl from 'modules/common/components/form/Control';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport Pagination from 'modules/common/components/pagination/Pagination';\nimport Table from 'modules/common/components/table';\nimport { __ } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport { EMPTY_CONTENT_ENGAGE } from 'modules/settings/constants';\nimport TaggerPopover from 'modules/tags/components/TaggerPopover';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport MessageListRow from '../containers/MessageListRow';\nimport Sidebar from '../containers/Sidebar';\nimport { ChooseBox, FlexContainer } from '../styles';\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onChange = function () {\n      var _this$props = _this.props,\n          toggleAll = _this$props.toggleAll,\n          messages = _this$props.messages;\n      toggleAll(messages, 'engageMessages');\n    };\n\n    _this.renderRightActionBar = function () {\n      var trigger = React.createElement(Button, {\n        btnStyle: \"success\",\n        size: \"small\",\n        icon: \"plus-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __('New message'));\n\n      var content = function content(props) {\n        return React.createElement(FlexContainer, {\n          direction: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, _this.renderBox('Auto message', 'Auto message description', '/engage/messages/create?kind=auto'), _this.renderBox('Manual message', 'Manual message description', '/engage/messages/create?kind=manual'), _this.renderBox('Visitor auto message', 'Visitor auto message description', '/engage/messages/create?kind=visitorAuto'));\n      };\n\n      return React.createElement(ModalTrigger, {\n        title: \"New message\",\n        trigger: trigger,\n        content: content,\n        hideHeader: true,\n        enforceFocus: false,\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"renderTagger\",\n    value: function renderTagger() {\n      var _this$props2 = this.props,\n          bulk = _this$props2.bulk,\n          emptyBulk = _this$props2.emptyBulk;\n      var tagButton = React.createElement(Button, {\n        btnStyle: \"simple\",\n        size: \"small\",\n        icon: \"tag-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __('Tag'));\n\n      if (!bulk.length) {\n        return null;\n      }\n\n      return React.createElement(TaggerPopover, {\n        type: \"engageMessage\",\n        targets: bulk,\n        trigger: tagButton,\n        successCallback: emptyBulk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderBox\",\n    value: function renderBox(title, desc, url) {\n      return React.createElement(ChooseBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, __(title)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __(desc))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          messages = _this$props3.messages,\n          totalCount = _this$props3.totalCount,\n          bulk = _this$props3.bulk,\n          toggleBulk = _this$props3.toggleBulk,\n          loading = _this$props3.loading,\n          queryParams = _this$props3.queryParams,\n          isAllSelected = _this$props3.isAllSelected;\n      var actionBar = React.createElement(Wrapper.ActionBar, {\n        left: this.renderTagger(),\n        right: this.renderRightActionBar(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      });\n      var mainContent = React.createElement(Table, {\n        whiteSpace: \"nowrap\",\n        hover: true,\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        style: {\n          width: 60\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        checked: isAllSelected,\n        componentClass: \"checkbox\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, __('Title')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, __('From')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, __('Status')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, __('Total')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, __('Type')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, __('Brand')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, __('Created date')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, __('Tags')), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, __('Actions')))), React.createElement(\"tbody\", {\n        id: \"engageMessages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, messages.map(function (message) {\n        return React.createElement(MessageListRow, {\n          isChecked: bulk.includes(message),\n          toggleBulk: toggleBulk,\n          key: message._id,\n          message: message,\n          queryParams: queryParams,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        });\n      })));\n      return React.createElement(Wrapper, {\n        header: React.createElement(Wrapper.Header, {\n          title: __('Engage'),\n          breadcrumb: [{\n            title: __('Engage')\n          }],\n          queryParams: queryParams,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }),\n        leftSidebar: React.createElement(Sidebar, {\n          queryParams: queryParams,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }),\n        actionBar: actionBar,\n        footer: React.createElement(Pagination, {\n          count: totalCount,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }),\n        content: React.createElement(DataWithLoader, {\n          data: mainContent,\n          loading: loading,\n          count: messages.length,\n          emptyContent: React.createElement(EmptyContent, {\n            content: EMPTY_CONTENT_ENGAGE,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nexport default List;","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/engage/components/MessageList.tsx"],"names":["Button","DataWithLoader","EmptyContent","FormControl","ModalTrigger","Pagination","Table","__","Wrapper","EMPTY_CONTENT_ENGAGE","TaggerPopover","React","Link","MessageListRow","Sidebar","ChooseBox","FlexContainer","List","onChange","props","toggleAll","messages","renderRightActionBar","trigger","content","renderBox","bulk","emptyBulk","tagButton","length","title","desc","url","totalCount","toggleBulk","loading","queryParams","isAllSelected","actionBar","renderTagger","mainContent","width","map","message","includes","_id","Component"],"mappings":"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","sourcesContent":["import Button from 'modules/common/components/Button';\nimport DataWithLoader from 'modules/common/components/DataWithLoader';\nimport EmptyContent from 'modules/common/components/empty/EmptyContent';\nimport FormControl from 'modules/common/components/form/Control';\nimport ModalTrigger from 'modules/common/components/ModalTrigger';\nimport Pagination from 'modules/common/components/pagination/Pagination';\nimport Table from 'modules/common/components/table';\nimport { __ } from 'modules/common/utils';\nimport Wrapper from 'modules/layout/components/Wrapper';\nimport { EMPTY_CONTENT_ENGAGE } from 'modules/settings/constants';\nimport TaggerPopover from 'modules/tags/components/TaggerPopover';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport MessageListRow from '../containers/MessageListRow';\nimport Sidebar from '../containers/Sidebar';\nimport { ChooseBox, FlexContainer } from '../styles';\nimport { IEngageMessage } from '../types';\n\ntype Props = {\n  messages: IEngageMessage[];\n  totalCount: number;\n  bulk: any[];\n  isAllSelected: boolean;\n  emptyBulk: () => void;\n  toggleBulk: (target: IEngageMessage, toAdd: boolean) => void;\n  toggleAll: (targets: IEngageMessage[], name: string) => void;\n  loading: boolean;\n  queryParams: any;\n};\n\nclass List extends React.Component<Props> {\n  onChange = () => {\n    const { toggleAll, messages } = this.props;\n\n    toggleAll(messages, 'engageMessages');\n  };\n\n  renderTagger() {\n    const { bulk, emptyBulk } = this.props;\n\n    const tagButton = (\n      <Button btnStyle=\"simple\" size=\"small\" icon=\"tag-alt\">\n        {__('Tag')}\n      </Button>\n    );\n\n    if (!bulk.length) {\n      return null;\n    }\n\n    return (\n      <TaggerPopover\n        type=\"engageMessage\"\n        targets={bulk}\n        trigger={tagButton}\n        successCallback={emptyBulk}\n      />\n    );\n  }\n\n  renderBox(title, desc, url) {\n    return (\n      <ChooseBox>\n        <Link to={url}>\n          <b>{__(title)}</b>\n          <p>{__(desc)}</p>\n        </Link>\n      </ChooseBox>\n    );\n  }\n\n  renderRightActionBar = () => {\n    const trigger = (\n      <Button btnStyle=\"success\" size=\"small\" icon=\"plus-circle\">\n        {__('New message')}\n      </Button>\n    );\n\n    const content = props => (\n      <FlexContainer direction=\"column\">\n        {this.renderBox(\n          'Auto message',\n          'Auto message description',\n          '/engage/messages/create?kind=auto'\n        )}\n        {this.renderBox(\n          'Manual message',\n          'Manual message description',\n          '/engage/messages/create?kind=manual'\n        )}\n        {this.renderBox(\n          'Visitor auto message',\n          'Visitor auto message description',\n          '/engage/messages/create?kind=visitorAuto'\n        )}\n      </FlexContainer>\n    );\n\n    return (\n      <ModalTrigger\n        title=\"New message\"\n        trigger={trigger}\n        content={content}\n        hideHeader={true}\n        enforceFocus={false}\n        centered={true}\n      />\n    );\n  };\n\n  render() {\n    const {\n      messages,\n      totalCount,\n      bulk,\n      toggleBulk,\n      loading,\n      queryParams,\n      isAllSelected\n    } = this.props;\n\n    const actionBar = (\n      <Wrapper.ActionBar\n        left={this.renderTagger()}\n        right={this.renderRightActionBar()}\n      />\n    );\n\n    const mainContent = (\n      <Table whiteSpace=\"nowrap\" hover={true} bordered={true}>\n        <thead>\n          <tr>\n            <th style={{ width: 60 }}>\n              <FormControl\n                checked={isAllSelected}\n                componentClass=\"checkbox\"\n                onChange={this.onChange}\n              />\n            </th>\n            <th>{__('Title')}</th>\n            <th>{__('From')}</th>\n            <th>{__('Status')}</th>\n            <th>{__('Total')}</th>\n            <th>{__('Type')}</th>\n            <th>{__('Brand')}</th>\n            <th>{__('Created date')}</th>\n            <th>{__('Tags')}</th>\n            <th>{__('Actions')}</th>\n          </tr>\n        </thead>\n        <tbody id=\"engageMessages\">\n          {messages.map(message => (\n            <MessageListRow\n              isChecked={bulk.includes(message)}\n              toggleBulk={toggleBulk}\n              key={message._id}\n              message={message}\n              queryParams={queryParams}\n            />\n          ))}\n        </tbody>\n      </Table>\n    );\n\n    return (\n      <Wrapper\n        header={\n          <Wrapper.Header\n            title={__('Engage')}\n            breadcrumb={[{ title: __('Engage') }]}\n            queryParams={queryParams}\n          />\n        }\n        leftSidebar={<Sidebar queryParams={queryParams} />}\n        actionBar={actionBar}\n        footer={<Pagination count={totalCount} />}\n        content={\n          <DataWithLoader\n            data={mainContent}\n            loading={loading}\n            count={messages.length}\n            emptyContent={<EmptyContent content={EMPTY_CONTENT_ENGAGE} />}\n          />\n        }\n      />\n    );\n  }\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}