{"ast":null,"code":"import _objectSpread from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/anu-ujin/Works/open-source/erxes/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/anu-ujin/Works/open-source/erxes/ui/src/modules/checklists/containers/Item.tsx\";\nimport gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { withProps } from 'modules/common/utils';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport Item from '../components/Item';\nimport { mutations, queries } from '../graphql';\n\nvar ItemContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ItemContainer, _React$Component);\n\n  function ItemContainer() {\n    _classCallCheck(this, ItemContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ItemContainer).apply(this, arguments));\n  }\n\n  _createClass(ItemContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          editItemMutation = _this$props.editItemMutation,\n          item = _this$props.item,\n          removeItemMutation = _this$props.removeItemMutation;\n\n      var editItem = function editItem(doc, callback) {\n        editItemMutation({\n          variables: _objectSpread({}, doc, {\n            _id: item._id\n          })\n        }).then(function () {\n          if (callback) {\n            callback();\n          }\n        });\n      };\n\n      var removeItem = function removeItem(checklistItemId) {\n        removeItemMutation({\n          variables: {\n            _id: checklistItemId\n          }\n        });\n      };\n\n      var extendedProps = _objectSpread({}, this.props, {\n        item: item,\n        editItem: editItem,\n        removeItem: removeItem\n      });\n\n      return React.createElement(Item, Object.assign({}, extendedProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ItemContainer;\n}(React.Component);\n\nvar options = function options(props) {\n  return {\n    refetchQueries: [{\n      query: gql(queries.checklistDetail),\n      variables: {\n        _id: props.item.checklistId\n      }\n    }]\n  };\n};\n\nexport default withProps(compose(graphql(gql(mutations.checklistItemsEdit), {\n  name: 'editItemMutation',\n  options: options\n}), graphql(gql(mutations.checklistItemsRemove), {\n  name: 'removeItemMutation',\n  options: options\n}))(ItemContainer));","map":{"version":3,"sources":["/home/anu-ujin/Works/open-source/erxes/ui/src/modules/checklists/containers/Item.tsx"],"names":["gql","compose","withProps","React","graphql","Item","mutations","queries","ItemContainer","props","editItemMutation","item","removeItemMutation","editItem","doc","callback","variables","_id","then","removeItem","checklistItemId","extendedProps","Component","options","refetchQueries","query","checklistDetail","checklistId","checklistItemsEdit","name","checklistItemsRemove"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,YAAnC;;IAkBMC,a;;;;;;;;;;;;;6BACK;AAAA,wBACgD,KAAKC,KADrD;AAAA,UACCC,gBADD,eACCA,gBADD;AAAA,UACmBC,IADnB,eACmBA,IADnB;AAAA,UACyBC,kBADzB,eACyBA,kBADzB;;AAGP,UAAMC,QAAQ,GAAG,SAAXA,QAAW,CACfC,GADe,EAEfC,QAFe,EAGZ;AACHL,QAAAA,gBAAgB,CAAC;AACfM,UAAAA,SAAS,oBACJF,GADI;AAEPG,YAAAA,GAAG,EAAEN,IAAI,CAACM;AAFH;AADM,SAAD,CAAhB,CAKGC,IALH,CAKQ,YAAM;AACZ,cAAIH,QAAJ,EAAc;AACZA,YAAAA,QAAQ;AACT;AACF,SATD;AAUD,OAdD;;AAgBA,UAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,eAAD,EAA6B;AAC9CR,QAAAA,kBAAkB,CAAC;AAAEI,UAAAA,SAAS,EAAE;AAAEC,YAAAA,GAAG,EAAEG;AAAP;AAAb,SAAD,CAAlB;AACD,OAFD;;AAIA,UAAMC,aAAa,qBACd,KAAKZ,KADS;AAEjBE,QAAAA,IAAI,EAAJA,IAFiB;AAGjBE,QAAAA,QAAQ,EAARA,QAHiB;AAIjBM,QAAAA,UAAU,EAAVA;AAJiB,QAAnB;;AAOA,aAAO,oBAAC,IAAD,oBAAUE,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAhCyBlB,KAAK,CAACmB,S;;AAmClC,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACd,KAAD;AAAA,SAAmB;AACjCe,IAAAA,cAAc,EAAE,CACd;AACEC,MAAAA,KAAK,EAAEzB,GAAG,CAACO,OAAO,CAACmB,eAAT,CADZ;AAEEV,MAAAA,SAAS,EAAE;AACTC,QAAAA,GAAG,EAAER,KAAK,CAACE,IAAN,CAAWgB;AADP;AAFb,KADc;AADiB,GAAnB;AAAA,CAAhB;;AAWA,eAAezB,SAAS,CACtBD,OAAO,CACLG,OAAO,CACLJ,GAAG,CAACM,SAAS,CAACsB,kBAAX,CADE,EAEL;AACEC,EAAAA,IAAI,EAAE,kBADR;AAEEN,EAAAA,OAAO,EAAPA;AAFF,CAFK,CADF,EAQLnB,OAAO,CACLJ,GAAG,CAACM,SAAS,CAACwB,oBAAX,CADE,EAEL;AACED,EAAAA,IAAI,EAAE,oBADR;AAEEN,EAAAA,OAAO,EAAPA;AAFF,CAFK,CARF,CAAP,CAeEf,aAfF,CADsB,CAAxB","sourcesContent":["import gql from 'graphql-tag';\nimport * as compose from 'lodash.flowright';\nimport { withProps } from 'modules/common/utils';\nimport React from 'react';\nimport { graphql } from 'react-apollo';\nimport Item from '../components/Item';\nimport { mutations, queries } from '../graphql';\nimport {\n  EditItemMutationResponse,\n  EditItemMutationVariables,\n  IChecklistItem,\n  RemoveItemMutationResponse\n} from '../types';\n\ntype Props = {\n  item: IChecklistItem;\n  convertToCard: (name: string, callback: () => void) => void;\n};\n\ntype FinalProps = {\n  editItemMutation: EditItemMutationResponse;\n  removeItemMutation: RemoveItemMutationResponse;\n} & Props;\n\nclass ItemContainer extends React.Component<FinalProps> {\n  render() {\n    const { editItemMutation, item, removeItemMutation } = this.props;\n\n    const editItem = (\n      doc: { content: string; isChecked: boolean },\n      callback?: () => void\n    ) => {\n      editItemMutation({\n        variables: {\n          ...doc,\n          _id: item._id\n        }\n      }).then(() => {\n        if (callback) {\n          callback();\n        }\n      });\n    };\n\n    const removeItem = (checklistItemId: string) => {\n      removeItemMutation({ variables: { _id: checklistItemId } });\n    };\n\n    const extendedProps = {\n      ...this.props,\n      item,\n      editItem,\n      removeItem\n    };\n\n    return <Item {...extendedProps} />;\n  }\n}\n\nconst options = (props: Props) => ({\n  refetchQueries: [\n    {\n      query: gql(queries.checklistDetail),\n      variables: {\n        _id: props.item.checklistId\n      }\n    }\n  ]\n});\n\nexport default withProps<Props>(\n  compose(\n    graphql<Props, EditItemMutationResponse, EditItemMutationVariables>(\n      gql(mutations.checklistItemsEdit),\n      {\n        name: 'editItemMutation',\n        options\n      }\n    ),\n    graphql<Props, RemoveItemMutationResponse, { _id: string }>(\n      gql(mutations.checklistItemsRemove),\n      {\n        name: 'removeItemMutation',\n        options\n      }\n    )\n  )(ItemContainer)\n);\n"]},"metadata":{},"sourceType":"module"}