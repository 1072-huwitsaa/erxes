{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _emoji = require('emojione/emoji.json');\n\nvar _emoji2 = _interopRequireDefault(_emoji);\n\nvar _createEmojisFromStrategy = require('../../utils/createEmojisFromStrategy');\n\nvar _createEmojisFromStrategy2 = _interopRequireDefault(_createEmojisFromStrategy);\n\nvar _defaultEmojiGroups = require('../../constants/defaultEmojiGroups');\n\nvar _defaultEmojiGroups2 = _interopRequireDefault(_defaultEmojiGroups);\n\nvar _Popover = require('./Popover');\n\nvar _Popover2 = _interopRequireDefault(_Popover);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar emojis = (0, _createEmojisFromStrategy2.default)(_emoji2.default);\n\nvar EmojiSelect = function (_Component) {\n  _inherits(EmojiSelect, _Component);\n\n  function EmojiSelect() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, EmojiSelect);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = EmojiSelect.__proto__ || Object.getPrototypeOf(EmojiSelect)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      isOpen: false\n    }, _this.onClick = function (e) {\n      e.stopPropagation();\n      e.nativeEvent.stopImmediatePropagation();\n    }, _this.onButtonMouseUp = function () {\n      return _this.state.isOpen ? _this.closePopover() : _this.openPopover();\n    }, _this.openPopover = function () {\n      if (!_this.state.isOpen) {\n        _this.setState({\n          isOpen: true\n        });\n      }\n    }, _this.closePopover = function () {\n      if (_this.state.isOpen) {\n        _this.setState({\n          isOpen: false\n        });\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  } // Start the selector closed\n\n\n  _createClass(EmojiSelect, [{\n    key: 'componentDidMount',\n    // When the selector is open and users click anywhere on the page,\n    // the selector should close\n    value: function componentDidMount() {\n      document.addEventListener('click', this.closePopover);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      document.removeEventListener('click', this.closePopover);\n    } // Open the popover\n    // Close the popover\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          cacheBustParam = _props.cacheBustParam,\n          imagePath = _props.imagePath,\n          imageType = _props.imageType,\n          _props$theme = _props.theme,\n          theme = _props$theme === undefined ? {} : _props$theme,\n          store = _props.store,\n          selectGroups = _props.selectGroups,\n          selectButtonContent = _props.selectButtonContent,\n          toneSelectOpenDelay = _props.toneSelectOpenDelay,\n          useNativeArt = _props.useNativeArt;\n      var buttonClassName = this.state.isOpen ? theme.emojiSelectButtonPressed : theme.emojiSelectButton;\n      return _react2.default.createElement('div', {\n        className: theme.emojiSelect,\n        onClick: this.onClick\n      }, _react2.default.createElement('button', {\n        className: buttonClassName,\n        onMouseUp: this.onButtonMouseUp,\n        type: 'button'\n      }, selectButtonContent), _react2.default.createElement(_Popover2.default, {\n        cacheBustParam: cacheBustParam,\n        imagePath: imagePath,\n        imageType: imageType,\n        theme: theme,\n        store: store,\n        groups: selectGroups,\n        emojis: emojis,\n        toneSelectOpenDelay: toneSelectOpenDelay,\n        isOpen: this.state.isOpen,\n        useNativeArt: useNativeArt\n      }));\n    }\n  }]);\n\n  return EmojiSelect;\n}(_react.Component);\n\nEmojiSelect.propTypes = {\n  cacheBustParam: _propTypes2.default.string.isRequired,\n  imagePath: _propTypes2.default.string.isRequired,\n  imageType: _propTypes2.default.string.isRequired,\n  theme: _propTypes2.default.object.isRequired,\n  store: _propTypes2.default.object.isRequired,\n  selectGroups: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    title: _propTypes2.default.string.isRequired,\n    icon: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string]).isRequired,\n    categories: _propTypes2.default.arrayOf(_propTypes2.default.oneOf(Object.keys(emojis))).isRequired\n  })),\n  selectButtonContent: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string]),\n  toneSelectOpenDelay: _propTypes2.default.number,\n  useNativeArt: _propTypes2.default.bool\n};\nEmojiSelect.defaultProps = {\n  selectButtonContent: 'â˜º',\n  selectGroups: _defaultEmojiGroups2.default,\n  toneSelectOpenDelay: 500\n};\nexports.default = EmojiSelect;","map":null,"metadata":{},"sourceType":"script"}