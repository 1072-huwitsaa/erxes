{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createEmojisFromStrategy;\n/* Idea from https://github.com/tommoor/emojione-picker */\n\nfunction createEmojisFromStrategy(strategy) {\n  var emojis = {}; // categorise and nest emoji\n  // sort ensures that modifiers appear unmodified keys\n\n  var keys = Object.keys(strategy);\n  keys.forEach(function (key) {\n    var value = strategy[key]; // skip unknown categories\n\n    if (value.category !== 'modifier') {\n      if (!emojis[value.category]) emojis[value.category] = {};\n      var match = key.match(/(.*?)_tone(.*?)$/);\n\n      if (match) {\n        // this check is to stop the plugin from failing in the case that the\n        // emoji strategy miscategorizes tones - which was the case here:\n        // https://github.com/Ranks/emojione/pull/330\n        var unmodifiedEmojiExists = !!emojis[value.category][match[1]];\n\n        if (unmodifiedEmojiExists) {\n          emojis[value.category][match[1]][match[2]] = value.shortname;\n        }\n      } else {\n        emojis[value.category][key] = [value.shortname];\n      }\n    }\n  });\n  return emojis;\n}","map":null,"metadata":{},"sourceType":"script"}