{"version":3,"file":"react-datetime.umd.development.js","sources":["../src/TimeView.tsx","../src/DaysView.tsx","../src/MonthsView.tsx","../src/YearsView.tsx","../src/CalendarContainer.tsx","../src/index.tsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\nimport format from \"date-fns/format\";\r\nimport getHours from \"date-fns/getHours\";\r\nimport addHours from \"date-fns/addHours\";\r\nimport addMinutes from \"date-fns/addMinutes\";\r\nimport addSeconds from \"date-fns/addSeconds\";\r\nimport addMilliseconds from \"date-fns/addMilliseconds\";\r\nimport setHours from \"date-fns/setHours\";\r\n\r\nimport { TimeConstraint, TimeConstraints } from \"./index\";\r\n\r\nconst allCounters: Array<\"hours\" | \"minutes\" | \"seconds\" | \"milliseconds\"> = [\r\n  \"hours\",\r\n  \"minutes\",\r\n  \"seconds\",\r\n  \"milliseconds\"\r\n];\r\n\r\nconst defaultTimeConstraints: AlwaysTimeConstraints = {\r\n  hours: {\r\n    min: 0,\r\n    max: 23,\r\n    step: 1\r\n  },\r\n  minutes: {\r\n    min: 0,\r\n    max: 59,\r\n    step: 1\r\n  },\r\n  seconds: {\r\n    min: 0,\r\n    max: 59,\r\n    step: 1\r\n  },\r\n  milliseconds: {\r\n    min: 0,\r\n    max: 999,\r\n    step: 1\r\n  }\r\n};\r\n\r\ninterface TimePartInterface {\r\n  showPrefix?: boolean;\r\n  onUp: () => void;\r\n  onDown: () => void;\r\n  value: string | undefined;\r\n}\r\n\r\nconst TimePart = (props: TimePartInterface) => {\r\n  const { showPrefix, onUp, onDown, value } = props;\r\n\r\n  return value !== null && value !== undefined ? (\r\n    <React.Fragment>\r\n      {showPrefix && <div className=\"rdtCounterSeparator\">:</div>}\r\n      <div className=\"rdtCounter\">\r\n        <span className=\"rdtBtn\" onMouseDown={onUp}>\r\n          ▲\r\n        </span>\r\n        <div className=\"rdtCount\">{value}</div>\r\n        <span className=\"rdtBtn\" onMouseDown={onDown}>\r\n          ▼\r\n        </span>\r\n      </div>\r\n    </React.Fragment>\r\n  ) : null;\r\n};\r\n\r\ninterface AlwaysTimeConstraints {\r\n  hours: TimeConstraint;\r\n  minutes: TimeConstraint;\r\n  seconds: TimeConstraint;\r\n  milliseconds: TimeConstraint;\r\n}\r\n\r\nfunction getStepSize(\r\n  type: \"hours\" | \"minutes\" | \"seconds\" | \"milliseconds\",\r\n  timeConstraints?: TimeConstraints\r\n) {\r\n  let step = defaultTimeConstraints[type].step;\r\n  const config = timeConstraints ? timeConstraints[type] : undefined;\r\n  if (config && config.step) {\r\n    step = config.step;\r\n  }\r\n\r\n  return step;\r\n}\r\n\r\nfunction change(\r\n  op: \"add\" | \"sub\",\r\n  type: \"hours\" | \"minutes\" | \"seconds\" | \"milliseconds\",\r\n  timestamp: Date,\r\n  timeConstraints?: TimeConstraints\r\n) {\r\n  const mult = op === \"sub\" ? -1 : 1;\r\n\r\n  const step = getStepSize(type, timeConstraints) * mult;\r\n  if (type === \"hours\") {\r\n    return addHours(timestamp, step);\r\n  } else if (type === \"minutes\") {\r\n    return addMinutes(timestamp, step);\r\n  } else if (type === \"seconds\") {\r\n    return addSeconds(timestamp, step);\r\n  } else {\r\n    return addMilliseconds(timestamp, step);\r\n  }\r\n}\r\n\r\nfunction getFormatted(\r\n  type: \"hours\" | \"minutes\" | \"seconds\" | \"milliseconds\" | \"daypart\",\r\n  timestamp: Date,\r\n  timeFormat?: string | false,\r\n  formatOptions?: any\r\n) {\r\n  const fmt = typeof timeFormat === \"string\" ? timeFormat : \"\";\r\n\r\n  function has(f: string, val: string) {\r\n    return f.indexOf(val) !== -1;\r\n  }\r\n\r\n  const hasHours = has(fmt.toLowerCase(), \"h\");\r\n  const hasMinutes = has(fmt, \"m\");\r\n  const hasSeconds = has(fmt, \"s\");\r\n  const hasMilliseconds = has(fmt, \"S\");\r\n\r\n  const hasDayPart = has(fmt, \"a\");\r\n\r\n  const typeFormat =\r\n    type === \"hours\" && hasHours\r\n      ? hasDayPart\r\n        ? \"h\"\r\n        : \"H\"\r\n      : type === \"minutes\" && hasMinutes\r\n      ? \"mm\"\r\n      : type === \"seconds\" && hasSeconds\r\n      ? \"ss\"\r\n      : type === \"milliseconds\" && hasMilliseconds\r\n      ? \"SSS\"\r\n      : type === \"daypart\" && hasDayPart\r\n      ? \"a\"\r\n      : undefined;\r\n\r\n  if (typeFormat) {\r\n    return format(timestamp, typeFormat, formatOptions);\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction toggleDayPart(timestamp: Date, setSelectedDate) {\r\n  return () => {\r\n    const hours = getHours(timestamp);\r\n    const newHours = hours >= 12 ? hours - 12 : hours + 12;\r\n\r\n    setSelectedDate(setHours(timestamp, newHours));\r\n  };\r\n}\r\n\r\nlet timer;\r\nlet increaseTimer;\r\nlet mouseUpListener: () => void;\r\n\r\nfunction onStartClicking(\r\n  op: \"add\" | \"sub\",\r\n  type: \"hours\" | \"minutes\" | \"seconds\" | \"milliseconds\",\r\n  props\r\n) {\r\n  return () => {\r\n    const {\r\n      readonly,\r\n      viewTimestamp: origViewTimestamp = new Date(),\r\n      timeConstraints,\r\n      setViewTimestamp,\r\n      setSelectedDate\r\n    } = props;\r\n    if (!readonly) {\r\n      let viewTimestamp = change(op, type, origViewTimestamp, timeConstraints);\r\n      setViewTimestamp(viewTimestamp);\r\n\r\n      timer = setTimeout(() => {\r\n        increaseTimer = setInterval(() => {\r\n          viewTimestamp = change(op, type, viewTimestamp, timeConstraints);\r\n          setViewTimestamp(viewTimestamp);\r\n        }, 70);\r\n      }, 500);\r\n\r\n      mouseUpListener = () => {\r\n        clearTimeout(timer);\r\n        clearInterval(increaseTimer);\r\n        setSelectedDate(viewTimestamp);\r\n        document.body.removeEventListener(\"mouseup\", mouseUpListener);\r\n        document.body.removeEventListener(\"touchend\", mouseUpListener);\r\n      };\r\n\r\n      document.body.addEventListener(\"mouseup\", mouseUpListener);\r\n      document.body.addEventListener(\"touchend\", mouseUpListener);\r\n    }\r\n  };\r\n}\r\n\r\nexport interface TimeViewProps {\r\n  viewTimestamp: Date;\r\n  dateFormat: string | false;\r\n  setViewMode: any;\r\n  timeFormat: string | false;\r\n  formatOptions: any;\r\n  setSelectedDate: any;\r\n}\r\n\r\nfunction TimeView(props: TimeViewProps) {\r\n  const {\r\n    viewTimestamp = new Date(),\r\n    dateFormat = false,\r\n    setViewMode,\r\n    timeFormat,\r\n    formatOptions,\r\n    setSelectedDate\r\n  } = props;\r\n\r\n  let numCounters = 0;\r\n\r\n  return (\r\n    <div className=\"rdtTime\">\r\n      <table>\r\n        {dateFormat ? (\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                className=\"rdtSwitch\"\r\n                colSpan={4}\r\n                onClick={() => setViewMode(\"days\")}\r\n              >\r\n                {format(viewTimestamp, dateFormat)}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n        ) : null}\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <div className=\"rdtCounters\">\r\n                {allCounters.map(type => {\r\n                  const val = getFormatted(\r\n                    type,\r\n                    viewTimestamp,\r\n                    timeFormat,\r\n                    formatOptions\r\n                  );\r\n                  if (val) {\r\n                    numCounters++;\r\n                  }\r\n\r\n                  return (\r\n                    <TimePart\r\n                      key={type}\r\n                      showPrefix={numCounters > 1}\r\n                      onUp={onStartClicking(\"add\", type, props)}\r\n                      onDown={onStartClicking(\"sub\", type, props)}\r\n                      value={val}\r\n                    />\r\n                  );\r\n                })}\r\n                <TimePart\r\n                  onUp={toggleDayPart(viewTimestamp, setSelectedDate)}\r\n                  onDown={toggleDayPart(viewTimestamp, setSelectedDate)}\r\n                  value={getFormatted(\r\n                    \"daypart\",\r\n                    viewTimestamp,\r\n                    timeFormat,\r\n                    formatOptions\r\n                  )}\r\n                />\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimeView;\r\n","import * as React from \"react\";\r\nimport cc from \"classcat\";\r\n\r\nimport addDays from \"date-fns/addDays\";\r\nimport format from \"date-fns/format\";\r\nimport differenceInDays from \"date-fns/differenceInDays\";\r\nimport startOfWeek from \"date-fns/startOfWeek\";\r\nimport startOfMonth from \"date-fns/startOfMonth\";\r\nimport endOfMonth from \"date-fns/endOfMonth\";\r\nimport isSameDay from \"date-fns/isSameDay\";\r\nimport isBefore from \"date-fns/isBefore\";\r\nimport addMonths from \"date-fns/addMonths\";\r\nimport getDate from \"date-fns/getDate\";\r\n\r\nexport interface DaysViewProps {\r\n  timeFormat: string | false;\r\n  viewDate: Date;\r\n  setViewDate: any;\r\n  selectedDate: Date | undefined;\r\n  setSelectedDate: any;\r\n  formatOptions: any;\r\n  setViewMode: any;\r\n  isValidDate: any;\r\n}\r\n\r\nfunction DaysView(props: DaysViewProps) {\r\n  const {\r\n    timeFormat = false,\r\n    viewDate = new Date(),\r\n    setViewDate,\r\n    selectedDate,\r\n    setSelectedDate,\r\n    formatOptions,\r\n    setViewMode,\r\n    isValidDate\r\n  } = props;\r\n\r\n  const sunday = startOfWeek(viewDate);\r\n\r\n  const prevMonth = addMonths(viewDate, -1);\r\n  const daysSincePrevMonthLastWeekStart = differenceInDays(\r\n    startOfWeek(endOfMonth(prevMonth)),\r\n    viewDate\r\n  );\r\n  const prevMonthLastWeekStart = addDays(\r\n    viewDate,\r\n    daysSincePrevMonthLastWeekStart\r\n  );\r\n\r\n  return (\r\n    <div className=\"rdtDays\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th\r\n              className=\"rdtPrev\"\r\n              onClick={() => setViewDate(addMonths(viewDate, -1))}\r\n            >\r\n              <span>‹</span>\r\n            </th>\r\n            <th\r\n              className=\"rdtSwitch\"\r\n              onClick={() => setViewMode(\"months\")}\r\n              colSpan={5}\r\n            >\r\n              {format(viewDate, \"LLLL yyyy\", formatOptions)}\r\n            </th>\r\n            <th\r\n              className=\"rdtNext\"\r\n              onClick={() => setViewDate(addMonths(viewDate, 1))}\r\n            >\r\n              <span>›</span>\r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            {[0, 1, 2, 3, 4, 5, 6].map(colNum => (\r\n              <th key={colNum} className=\"dow\">\r\n                {format(addDays(sunday, colNum), \"iiiiii\", formatOptions)}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {[0, 1, 2, 3, 4, 5].map(rowNum => {\r\n            // Use 7 columns per row\r\n            const rowStartDay = rowNum * 7;\r\n\r\n            return (\r\n              <tr\r\n                key={format(\r\n                  addDays(prevMonthLastWeekStart, rowStartDay),\r\n                  \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\"\r\n                )}\r\n              >\r\n                {[0, 1, 2, 3, 4, 5, 6].map(d => {\r\n                  const i = d + rowStartDay;\r\n                  const workingDate = addDays(prevMonthLastWeekStart, i);\r\n                  const isDisabled =\r\n                    typeof isValidDate === \"function\" &&\r\n                    !isValidDate(workingDate);\r\n\r\n                  return (\r\n                    <td\r\n                      key={getDate(workingDate)}\r\n                      className={cc([\r\n                        \"rdtDay\",\r\n                        {\r\n                          rdtOld: isBefore(workingDate, startOfMonth(viewDate)),\r\n                          rdtNew: isBefore(endOfMonth(viewDate), workingDate),\r\n                          rdtActive:\r\n                            selectedDate &&\r\n                            isSameDay(workingDate, selectedDate),\r\n                          rdtToday: isSameDay(workingDate, new Date()),\r\n                          rdtDisabled: isDisabled\r\n                        }\r\n                      ])}\r\n                      onClick={() => {\r\n                        if (!isDisabled) {\r\n                          setSelectedDate(workingDate);\r\n                        }\r\n                      }}\r\n                    >\r\n                      {format(workingDate, \"d\", formatOptions)}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        {typeof timeFormat === \"string\" && timeFormat.trim() && (\r\n          <tfoot>\r\n            <tr>\r\n              <td\r\n                onClick={() => setViewMode(\"time\")}\r\n                colSpan={7}\r\n                className=\"rdtTimeToggle\"\r\n              >\r\n                {format(viewDate, timeFormat, formatOptions)}\r\n              </td>\r\n            </tr>\r\n          </tfoot>\r\n        )}\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DaysView;\r\n","import * as React from \"react\";\r\nimport cc from \"classcat\";\r\n\r\nimport format from \"date-fns/format\";\r\nimport addYears from \"date-fns/addYears\";\r\nimport isSameMonth from \"date-fns/isSameMonth\";\r\nimport setMonth from \"date-fns/setMonth\";\r\nimport getDaysInMonth from \"date-fns/getDaysInMonth\";\r\nimport setDate from \"date-fns/setDate\";\r\n\r\nexport interface MonthsViewProps {\r\n  viewDate: Date;\r\n  setViewDate: any;\r\n  selectedDate: Date | undefined;\r\n  setSelectedDate: any;\r\n  formatOptions: any;\r\n  setViewMode: any;\r\n  isValidDate: any;\r\n}\r\n\r\nfunction MonthsView(props: MonthsViewProps) {\r\n  const {\r\n    viewDate = new Date(),\r\n    setViewDate,\r\n    selectedDate,\r\n    setSelectedDate,\r\n    formatOptions,\r\n    setViewMode,\r\n    isValidDate\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"rdtMonths\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th\r\n              className=\"rdtPrev\"\r\n              onClick={() => setViewDate(addYears(viewDate, -1))}\r\n            >\r\n              <span>‹</span>\r\n            </th>\r\n            <th\r\n              className=\"rdtSwitch\"\r\n              onClick={() => setViewMode(\"years\")}\r\n              colSpan={2}\r\n            >\r\n              {format(viewDate, \"yyyy\", formatOptions)}\r\n            </th>\r\n            <th\r\n              className=\"rdtNext\"\r\n              onClick={() => setViewDate(addYears(viewDate, 1))}\r\n            >\r\n              <span>›</span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n      <table>\r\n        <tbody>\r\n          {[0, 1, 2].map(rowNum => {\r\n            // Use 4 columns per row\r\n            const rowStartMonth = rowNum * 4;\r\n\r\n            return (\r\n              <tr key={rowStartMonth}>\r\n                {[0, 1, 2, 3].map(m => {\r\n                  const month = m + rowStartMonth;\r\n                  const currentMonth = setMonth(viewDate, month);\r\n\r\n                  const daysInMonths = Array.from(\r\n                    { length: getDaysInMonth(currentMonth) },\r\n                    (e, i) => setDate(currentMonth, i + 1)\r\n                  );\r\n\r\n                  const isDisabled = daysInMonths.every(\r\n                    d => typeof isValidDate === \"function\" && !isValidDate(d)\r\n                  );\r\n                  const monthDate = setMonth(new Date(), month);\r\n\r\n                  return (\r\n                    <td\r\n                      key={month}\r\n                      className={cc([\r\n                        \"rdtMonth\",\r\n                        {\r\n                          rdtDisabled: isDisabled,\r\n                          rdtActive:\r\n                            selectedDate &&\r\n                            isSameMonth(selectedDate, currentMonth)\r\n                        }\r\n                      ])}\r\n                      onClick={() => {\r\n                        if (!isDisabled) {\r\n                          setSelectedDate(setMonth(viewDate, month));\r\n                        }\r\n                      }}\r\n                    >\r\n                      {format(monthDate, \"LLL\", formatOptions)}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MonthsView;\r\n","import * as React from \"react\";\r\nimport cc from \"classcat\";\r\n\r\nimport format from \"date-fns/format\";\r\nimport addYears from \"date-fns/addYears\";\r\nimport getYear from \"date-fns/getYear\";\r\nimport setYear from \"date-fns/setYear\";\r\nimport getDaysInYear from \"date-fns/getDaysInYear\";\r\nimport setDayOfYear from \"date-fns/setDayOfYear\";\r\n\r\nexport interface YearsViewProps {\r\n  viewDate: Date;\r\n  setViewDate: any;\r\n  selectedDate: Date | undefined;\r\n  setSelectedDate: any;\r\n  formatOptions: any;\r\n  setViewMode: any;\r\n  isValidDate: any;\r\n}\r\n\r\nfunction YearsView(props: YearsViewProps) {\r\n  const {\r\n    viewDate = new Date(),\r\n    setViewDate,\r\n    selectedDate,\r\n    setSelectedDate,\r\n    formatOptions,\r\n    setViewMode,\r\n    isValidDate\r\n  } = props;\r\n\r\n  const startYear = Math.floor(getYear(viewDate) / 10) * 10;\r\n\r\n  return (\r\n    <div className=\"rdtYears\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th\r\n              className=\"rdtPrev\"\r\n              onClick={() => setViewDate(addYears(viewDate, -10))}\r\n            >\r\n              <span>‹</span>\r\n            </th>\r\n            <th\r\n              className=\"rdtSwitch\"\r\n              onClick={() => setViewMode(\"years\")}\r\n              colSpan={2}\r\n            >\r\n              {startYear}-{startYear + 9}\r\n            </th>\r\n            <th\r\n              className=\"rdtNext\"\r\n              onClick={() => setViewDate(addYears(viewDate, 10))}\r\n            >\r\n              <span>›</span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n      <table>\r\n        <tbody>\r\n          {[0, 1, 2].map(rowNum => {\r\n            // Use 4 columns per row\r\n            const rowStartYear = startYear - 1 + rowNum * 4;\r\n\r\n            return (\r\n              <tr key={rowStartYear}>\r\n                {[0, 1, 2, 3].map(y => {\r\n                  const year = y + rowStartYear;\r\n                  const currentYear = setYear(viewDate, year);\r\n\r\n                  const daysInYear = Array.from(\r\n                    { length: getDaysInYear(viewDate) },\r\n                    (e, i) => setDayOfYear(currentYear, i + 1)\r\n                  );\r\n\r\n                  const isDisabled = daysInYear.every(\r\n                    d => typeof isValidDate === \"function\" && !isValidDate(d)\r\n                  );\r\n\r\n                  return (\r\n                    <td\r\n                      key={year}\r\n                      className={cc([\r\n                        \"rdtYear\",\r\n                        {\r\n                          rdtDisabled: isDisabled,\r\n                          rdtActive:\r\n                            selectedDate && getYear(selectedDate) === year\r\n                        }\r\n                      ])}\r\n                      onClick={() => {\r\n                        if (!isDisabled) {\r\n                          setSelectedDate(setYear(viewDate, year));\r\n                        }\r\n                      }}\r\n                    >\r\n                      {format(currentYear, \"yyyy\", formatOptions)}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default YearsView;\r\n","import * as React from \"react\";\r\n\r\nimport TimeView, { TimeViewProps } from \"./TimeView\";\r\nimport DaysView, { DaysViewProps } from \"./DaysView\";\r\nimport MonthsView, { MonthsViewProps } from \"./MonthsView\";\r\nimport YearsView, { YearsViewProps } from \"./YearsView\";\r\nimport { ViewMode } from \"./.\";\r\n\r\ninterface CalendarContainerProps {\r\n  viewMode: ViewMode | undefined;\r\n}\r\n\r\nfunction CalendarContainer(\r\n  props: CalendarContainerProps &\r\n    TimeViewProps &\r\n    DaysViewProps &\r\n    MonthsViewProps &\r\n    YearsViewProps\r\n) {\r\n  const { viewMode, ...rest } = props;\r\n\r\n  switch (viewMode) {\r\n    case \"time\":\r\n      return <TimeView {...rest} />;\r\n\r\n    case \"days\":\r\n      return <DaysView {...rest} />;\r\n\r\n    case \"months\":\r\n      return <MonthsView {...rest} />;\r\n\r\n    case \"years\":\r\n      return <YearsView {...rest} />;\r\n  }\r\n\r\n  throw new Error(\"Unsupported view mode.\");\r\n}\r\n\r\nexport default CalendarContainer;\r\n","import * as React from \"react\";\r\nimport cc from \"classcat\";\r\nimport Popover from \"@reach/popover\";\r\nimport useOnClickOutside from \"use-onclickoutside\";\r\n\r\nimport format from \"date-fns/format\";\r\nimport rawParse from \"date-fns/parse\";\r\nimport isEqual from \"date-fns/isEqual\";\r\nimport toDate from \"date-fns/toDate\";\r\nimport isDateValid from \"date-fns/isValid\";\r\nimport startOfDay from \"date-fns/startOfDay\";\r\n\r\nimport CalendarContainer from \"./CalendarContainer\";\r\n\r\nconst { useRef, useState, useEffect, useCallback } = React;\r\n\r\nfunction tryGetAsTime(date: any) {\r\n  const asDate = toDate(date);\r\n  if (asDate && isDateValid(asDate)) {\r\n    return asDate.getTime();\r\n  }\r\n\r\n  return date;\r\n}\r\n\r\nfunction useDefaultStateWithOverride<Type>(\r\n  defaultValue: Type,\r\n  maybeDate = true\r\n) {\r\n  const [override, setOverride] = useState<Type | undefined>(undefined);\r\n  const value = override || defaultValue;\r\n\r\n  // Clear the override if the default changes\r\n  const changeVal = maybeDate ? tryGetAsTime(defaultValue) : defaultValue;\r\n  useEffect(() => {\r\n    setOverride(undefined);\r\n  }, [changeVal]);\r\n\r\n  return [value, setOverride] as const;\r\n}\r\n\r\nfunction parse(\r\n  date: Date | string | number | undefined,\r\n  fullFormat: string,\r\n  formatOptions: any\r\n): Date | undefined {\r\n  if (typeof date === \"string\") {\r\n    const asDate = rawParse(date, fullFormat, new Date(), formatOptions);\r\n    if (isDateValid(asDate)) {\r\n      const formatted = format(asDate, fullFormat, formatOptions);\r\n      if (date === formatted) {\r\n        return asDate;\r\n      }\r\n    }\r\n  } else if (date) {\r\n    const asDate = toDate(date);\r\n    if (isDateValid(asDate)) {\r\n      return asDate;\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nexport interface TimeConstraint {\r\n  min: number;\r\n  max: number;\r\n  step: number;\r\n}\r\n\r\nexport interface TimeConstraints {\r\n  hours?: TimeConstraint;\r\n  minutes?: TimeConstraint;\r\n  seconds?: TimeConstraint;\r\n  milliseconds?: TimeConstraint;\r\n}\r\n\r\nexport type ViewMode = \"days\" | \"months\" | \"years\" | \"time\";\r\n\r\ninterface NextViewModes {\r\n  days: ViewMode;\r\n  months: ViewMode;\r\n  years: ViewMode;\r\n}\r\n\r\nconst nextViewModes: NextViewModes = {\r\n  days: \"days\",\r\n  months: \"days\",\r\n  years: \"months\"\r\n};\r\n\r\nfunction getViewMode(\r\n  dateFormat: string | false,\r\n  timeFormat: string | false\r\n): ViewMode | undefined {\r\n  if (typeof dateFormat === \"string\" && dateFormat) {\r\n    if (dateFormat.match(/[d]/)) {\r\n      return \"days\";\r\n    } else if (dateFormat.indexOf(\"L\") !== -1) {\r\n      return \"months\";\r\n    } else if (dateFormat.indexOf(\"y\") !== -1) {\r\n      return \"years\";\r\n    }\r\n  }\r\n\r\n  if (typeof timeFormat === \"string\" && timeFormat) {\r\n    return \"time\";\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nexport type DateTypeMode = \"utc-ms-timestamp\" | \"input-format\" | \"Date\";\r\n\r\ninterface DateTimeProps {\r\n  isValidDate?: (date: Date) => boolean;\r\n\r\n  dateTypeMode?: DateTypeMode;\r\n  value?: string | number | Date;\r\n  onChange?: (newValue: undefined | string | number | Date) => void;\r\n  onFocus?: () => void;\r\n  onBlur?: (newValue: undefined | string | number | Date) => void;\r\n\r\n  dateFormat?: string | boolean;\r\n  timeFormat?: string | boolean;\r\n\r\n  locale?: any;\r\n}\r\n\r\nfunction DateTime(\r\n  props: DateTimeProps &\r\n    React.DetailedHTMLProps<\r\n      React.InputHTMLAttributes<HTMLInputElement>,\r\n      HTMLInputElement\r\n    >\r\n) {\r\n  const {\r\n    isValidDate,\r\n    dateTypeMode: rawDateTypeMode,\r\n    value,\r\n    onChange: rawOnChange,\r\n    onBlur,\r\n    onFocus,\r\n    dateFormat: rawDateFormat = true,\r\n    timeFormat: rawTimeFormat = true,\r\n    locale,\r\n    ...rest\r\n  } = props as DateTimeProps;\r\n\r\n  //\r\n  // Formats\r\n  //\r\n  const dateFormat = rawDateFormat === true ? \"LL/dd/yyyy\" : rawDateFormat;\r\n  const timeFormat = rawTimeFormat === true ? \"h:mm a\" : rawTimeFormat;\r\n  const fullFormat =\r\n    dateFormat && timeFormat\r\n      ? `${dateFormat} ${timeFormat}`\r\n      : dateFormat || timeFormat || \"\";\r\n\r\n  const formatOptions = {\r\n    locale\r\n  };\r\n\r\n  const valueAsDate = parse(value, fullFormat, formatOptions);\r\n  const dateTypeMode: DateTypeMode =\r\n    typeof rawDateTypeMode === \"string\"\r\n      ? rawDateTypeMode.toLowerCase() === \"utc-ms-timestamp\"\r\n        ? \"utc-ms-timestamp\"\r\n        : rawDateTypeMode.toLowerCase() === \"input-format\"\r\n        ? \"input-format\"\r\n        : \"Date\"\r\n      : value && typeof value === \"number\"\r\n      ? \"utc-ms-timestamp\"\r\n      : \"Date\";\r\n\r\n  const getChangedValue = useCallback(\r\n    (newValue: undefined | string | Date) => {\r\n      if (typeof newValue === \"string\") {\r\n        return newValue;\r\n      }\r\n\r\n      if (!newValue) {\r\n        return newValue;\r\n      }\r\n\r\n      switch (dateTypeMode) {\r\n        case \"utc-ms-timestamp\":\r\n          return newValue.getTime();\r\n\r\n        case \"input-format\":\r\n          return format(newValue, fullFormat, formatOptions);\r\n      }\r\n\r\n      return newValue;\r\n    },\r\n    [dateTypeMode, formatOptions, fullFormat]\r\n  );\r\n\r\n  //\r\n  // On Change\r\n  // string -> string\r\n  // falsy -> raw onChange\r\n  // Date -> if numeric, number (ms)\r\n  // Date -> if not numeric, Date\r\n  //\r\n  const onChange = useCallback(\r\n    (newValue: string | Date | undefined): void => {\r\n      if (typeof rawOnChange !== \"function\") {\r\n        return;\r\n      }\r\n\r\n      const changedValue = getChangedValue(newValue);\r\n\r\n      //\r\n      // Suppress change event when the value didn't change!\r\n      //\r\n      if (\r\n        value instanceof Date &&\r\n        changedValue instanceof Date &&\r\n        isEqual(value, changedValue)\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      if (value === changedValue) {\r\n        return;\r\n      }\r\n\r\n      rawOnChange(changedValue);\r\n    },\r\n    [getChangedValue, rawOnChange, value]\r\n  );\r\n\r\n  //\r\n  // ViewDate\r\n  //\r\n  const [viewDate, setViewDate] = useDefaultStateWithOverride(\r\n    valueAsDate || startOfDay(new Date())\r\n  );\r\n\r\n  //\r\n  // ViewMode\r\n  //\r\n  const defaultViewMode = getViewMode(dateFormat, timeFormat);\r\n  const [viewMode, setViewMode] = useDefaultStateWithOverride(\r\n    defaultViewMode,\r\n    false\r\n  );\r\n\r\n  //\r\n  // ViewTimestamp\r\n  //\r\n  const [viewTimestamp, setViewTimestamp] = useDefaultStateWithOverride(\r\n    valueAsDate || viewDate\r\n  );\r\n\r\n  //\r\n  // IsOpen\r\n  //\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  function open() {\r\n    if (viewMode) {\r\n      setIsOpen(true);\r\n\r\n      if (typeof onFocus === \"function\") {\r\n        onFocus();\r\n      }\r\n    }\r\n  }\r\n\r\n  function closeWith(newValue: undefined | string | Date) {\r\n    setIsOpen(false);\r\n\r\n    if (typeof onBlur === \"function\") {\r\n      const changedValue = getChangedValue(newValue);\r\n      onBlur(changedValue as any);\r\n    }\r\n  }\r\n\r\n  function close() {\r\n    return closeWith(valueAsDate);\r\n  }\r\n\r\n  //\r\n  // SetSelectedDate\r\n  //\r\n  function setSelectedDate(newDate: Date, tryClose = true) {\r\n    const asDate = toDate(newDate);\r\n    setViewDate(asDate);\r\n    setViewTimestamp(asDate);\r\n\r\n    // Time switches value but stays open\r\n    if (viewMode === \"time\") {\r\n      onChange(newDate);\r\n    }\r\n    // When view mode is the default, switch and try to close\r\n    else if (viewMode === defaultViewMode) {\r\n      onChange(newDate);\r\n\r\n      if (tryClose) {\r\n        closeWith(newDate);\r\n      }\r\n    }\r\n    // When view mode is not the default, switch to the next view mode\r\n    else {\r\n      const newViewMode: ViewMode | undefined = viewMode\r\n        ? nextViewModes[viewMode]\r\n        : undefined;\r\n      setViewMode(newViewMode);\r\n    }\r\n  }\r\n\r\n  //\r\n  // Trigger change when important props change\r\n  //\r\n  useEffect(() => {\r\n    if (valueAsDate) {\r\n      setSelectedDate(valueAsDate);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dateTypeMode, fullFormat]);\r\n\r\n  function onInputChange(e: React.FormEvent<HTMLInputElement>) {\r\n    const { value: newValue } = e.target as HTMLInputElement;\r\n\r\n    const newValueAsDate = parse(newValue, fullFormat, formatOptions);\r\n    if (newValueAsDate) {\r\n      setSelectedDate(newValueAsDate, false);\r\n    } else {\r\n      onChange(newValue);\r\n    }\r\n  }\r\n\r\n  function onInputKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\r\n    if (isOpen) {\r\n      switch (e.which) {\r\n        // Enter key\r\n        case 13:\r\n        // Escape key\r\n        case 27:\r\n        // Tab key\r\n        case 9:\r\n          close();\r\n          break;\r\n      }\r\n    } else {\r\n      switch (e.which) {\r\n        // Down arrow\r\n        case 40:\r\n          open();\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  const inputRef = useRef(null);\r\n  const contentRef = useRef(null);\r\n\r\n  useOnClickOutside(contentRef, close);\r\n\r\n  const valueStr: string =\r\n    valueAsDate && fullFormat\r\n      ? format(valueAsDate, fullFormat, formatOptions)\r\n      : typeof value === \"string\"\r\n      ? value\r\n      : \"\";\r\n\r\n  //\r\n  // Input Props\r\n  //\r\n  const finalInputProps = {\r\n    ...rest,\r\n    type: \"text\",\r\n    onClick: open,\r\n    onFocus: open,\r\n    onChange: onInputChange,\r\n    onKeyDown: onInputKeyDown,\r\n    value: valueStr\r\n  };\r\n\r\n  //\r\n  // Calendar props\r\n  //\r\n  const calendarProps = {\r\n    dateFormat,\r\n    timeFormat,\r\n    viewDate,\r\n    setViewDate,\r\n    selectedDate: valueAsDate,\r\n    setSelectedDate,\r\n    viewTimestamp,\r\n    setViewTimestamp,\r\n    formatOptions,\r\n    viewMode,\r\n    setViewMode,\r\n    isValidDate\r\n  };\r\n\r\n  return (\r\n    <div className={cc([\"rdt\", { rdtOpen: isOpen }])}>\r\n      <input ref={inputRef} key=\"i\" {...finalInputProps} />\r\n      {isOpen && (\r\n        <Popover targetRef={inputRef}>\r\n          <div ref={contentRef} className=\"rdtPicker\">\r\n            <CalendarContainer {...calendarProps} />\r\n          </div>\r\n        </Popover>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DateTime;\r\n"],"names":["allCounters","defaultTimeConstraints","hours","min","max","step","minutes","seconds","milliseconds","TimePart","props","showPrefix","onUp","onDown","value","undefined","React","className","onMouseDown","getStepSize","type","timeConstraints","config","change","op","timestamp","mult","addHours","addMinutes","addSeconds","addMilliseconds","getFormatted","timeFormat","formatOptions","fmt","has","f","val","indexOf","hasHours","toLowerCase","hasMinutes","hasSeconds","hasMilliseconds","hasDayPart","typeFormat","format","toggleDayPart","setSelectedDate","getHours","newHours","setHours","timer","increaseTimer","mouseUpListener","onStartClicking","readonly","viewTimestamp","origViewTimestamp","Date","setViewTimestamp","setTimeout","setInterval","clearTimeout","clearInterval","document","body","removeEventListener","addEventListener","TimeView","dateFormat","setViewMode","numCounters","colSpan","onClick","map","key","DaysView","viewDate","setViewDate","selectedDate","isValidDate","sunday","startOfWeek","prevMonth","addMonths","daysSincePrevMonthLastWeekStart","differenceInDays","endOfMonth","prevMonthLastWeekStart","addDays","colNum","rowNum","rowStartDay","d","i","workingDate","isDisabled","getDate","cc","rdtOld","isBefore","startOfMonth","rdtNew","rdtActive","isSameDay","rdtToday","rdtDisabled","trim","MonthsView","addYears","rowStartMonth","m","month","currentMonth","setMonth","daysInMonths","Array","from","length","getDaysInMonth","e","setDate","every","monthDate","isSameMonth","YearsView","startYear","Math","floor","getYear","rowStartYear","y","year","currentYear","setYear","daysInYear","getDaysInYear","setDayOfYear","CalendarContainer","viewMode","rest","Error","useRef","useState","useEffect","useCallback","tryGetAsTime","date","asDate","toDate","isDateValid","getTime","useDefaultStateWithOverride","defaultValue","maybeDate","override","setOverride","changeVal","parse","fullFormat","rawParse","formatted","nextViewModes","days","months","years","getViewMode","match","DateTime","rawDateTypeMode","dateTypeMode","rawOnChange","onChange","onBlur","onFocus","rawDateFormat","rawTimeFormat","locale","valueAsDate","getChangedValue","newValue","changedValue","isEqual","startOfDay","defaultViewMode","isOpen","setIsOpen","open","closeWith","close","newDate","tryClose","newViewMode","onInputChange","target","newValueAsDate","onInputKeyDown","which","inputRef","contentRef","useOnClickOutside","valueStr","finalInputProps","onKeyDown","calendarProps","rdtOpen","ref","Popover","targetRef"],"mappings":"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"}