version: '2.1'
services:
  mongo:
    hostname: mongo
    image: mongo:4.2
    container_name: mongo
    ports:
      - '127.0.0.1:27017:27017'
    networks:
      - erxes-net
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo --quiet) -eq 1
      interval: 2s
      timeout: 2s

      retries: 200
    command: ['--replSet', 'rs0', '--bind_ip_all']
    volumes:
      - ./4data/db:/4data/db

  # erxes-api:
  #   container_name: 'erxes-api'
  #   build:
  #     dockerfile: ./Dockerfile.dev
  #     context: ./erxes-api
  #   tty: true
  #   volumes:
  #     - /erxes-api/node_modules
  #     - /erxes-api/.git
  #     - ./erxes-api/:/erxes-api
  #   env_file: ./erxes-api/.env
  #   depends_on:
  #     - 'mongo'
  #   ports:
  #     - '3300:3300'
  #   networks:
  #     - erxes-net

  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.8.0'
    container_name: 'elasticsearch'
    restart: unless-stopped
    environment:
      - discovery.type=single-node
    ports:
      - '127.0.0.1:9200:9200'
    networks:
      - erxes-net
    volumes:
      - ./elasticsearchData:/usr/share/elasticsearch/data

  kibana:
    image: 'docker.elastic.co/kibana/kibana:7.8.0'
    container_name: 'kibana'
    ports:
      - '127.0.0.1:5601:5601'
    networks:
      - erxes-net

  elksyncer:
    container_name: 'elksyncer'
    build:
      dockerfile: ./Dockerfile
      context: ./erxes/elkSyncer
    env_file: ./erxes/elkSyncer/.env
    depends_on:
      - 'mongo'
      - 'elasticsearch'
    volumes:
      - ./erxes/elkSyncer:/elkSyncer
    tty: true
    command: ['bash']
    networks:
      - erxes-net

  # erxes-elksyncer:
  #   image: erxes/erxes-elksyncer:develop
  #   container_name: erxes-elksyncer
  #   restart: unless-stopped
  #   environment:
  #     ELASTICSEARCH_URL: http://elasticsearch:9200
  #     MONGO_URL: 'mongodb://mongo:27017/erxes'
  #   networks:
  #     - erxes-net

networks:
  erxes-net:
    driver: bridge