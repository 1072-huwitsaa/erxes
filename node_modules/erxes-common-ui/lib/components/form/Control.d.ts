import React from 'react';
declare type Props = {
    children?: React.ReactNode;
    id?: string;
    onChange?: (e: React.FormEvent<HTMLElement>) => void;
    onClick?: (e: React.MouseEvent) => void;
    onKeyPress?: (e: React.KeyboardEvent) => void;
    defaultValue?: any;
    value?: any;
    defaultChecked?: boolean;
    checked?: boolean;
    placeholder?: string;
    type?: string;
    name?: string;
    options?: any[];
    required?: boolean;
    disabled?: boolean;
    round?: boolean;
    autoFocus?: boolean;
    autoComplete?: string;
    onFocus?: (e: React.FormEvent<HTMLElement>) => void;
    componentClass?: string;
    min?: number;
    max?: number;
    rows?: number;
    inline?: boolean;
    className?: string;
    errors?: any;
    registerChild?: (child: any) => void;
    onBlur?: (e: React.FormEvent<HTMLElement>) => void;
    maxHeight?: number;
    maxLength?: number;
};
declare class FormControl extends React.Component<Props> {
    static defaultProps: {
        componentClass: string;
        required: boolean;
        defaultChecked: boolean;
        disabled: boolean;
    };
    componentDidMount(): void;
    render(): JSX.Element | JSX.Element[];
}
export default FormControl;
//# sourceMappingURL=Control.d.ts.map